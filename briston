/*============================================================================================================
										    ____  ____  ___________________  _   __
										   / __ )/ __ \/  _/ ___/_  __/ __ \/ | / /
										  / __  / /_/ // / \__ \ / / / / / /  |/ /
										 / /_/ / _, _// / ___/ // / / /_/ / /|  /
										/_____/_/ |_/___//____//_/  \____/_/ |_/

	Te rog un lucru,sa ai bunul simnt sa lasi aceste nume aici,indiferent cui dai GM-ul,gandeste-te ca am muncit foarte mult la el
 					si fara noi nu te-ai fi bucurat de el.Acest mesaj il vezi doar tu pentru ca este un cometariu.
					   Mr.Zeth(script) si Lightman(idei) au facut acest GM din suflet si au depus efort nespus,
							 nu uita sa te gandesti ca te joci pe munca lor,nu-ti bate joc!
												
												Distractie placuta!
==============================================================================================================*/
#include <a_samp>
//#include <AttachEx>
#include <a_mysql>
#include <saveaccounts>
#include <zcmd>
#include <sscanf2>
#include <OnPlayerPause>
#include <vehiclesnames>
#include <GetVehicleColor>
#include <OPA>
#include <foreach>
#include <YSF>
#include <pandoras>
#include <MapAndreas>
#define MAX_SLOTS 1000
#define MAX_SNOW_OBJECTS    8
//#include <audio>
#define C_BUG_TIME 5
#define DIALOG_FRIENDS 36
#define MAX_AIM_TICKS 3
#pragma unused JackpotCasino
#pragma unused JackpotChina
#pragma unused JackpotFourDragon
// Gamemode
#define TEAM_AZTECAS_COLOR 0x01FCFFC8


#define mysql_host "93.119.26.250"
#define mysql_user "zp_hid10069"
#define mysql_password "eFbrD4wsuu8DNbdX"
#define mysql_database "zp_hid10069"


#define PRESSED(%0) \
	(newkeys & (%0) && !(oldkeys & (%0)))

new CivMalePeds[103][1] = {
{0},{1},{2},{3},{4},{5},{6},{7},
{8},{15},{16},{19},{21},{22},{23},{24},
{25},{26},{27},{28},{32},{33},{34},{35},
{36},{37},{42},{43},{44},{46},{47},{49},
{50},{51},{52},{62},{66},{67},{68},{70},
{72},{73},{78},{79},{82},{83},{84},{94},
{95},{96},{99},{100},{101},{119},{121},{125},
{128},{132},{133},{134},{145},{146},{137},{144},
{156},{161},{162},{180},{181},{182},{183},{184},
{188},{189},{200},{202},{203},{204},{206},{209},
{210},{212},{213},{217},{221},{222},{230},{234},
{235},{236},{239},{241},{242},{247},{248},{254},
{258},{261},{262},{268},{291},{297},{299}
};
//forward UpdatePlayerPos(playerid);
//forward PreUpdatePlayerPos(playerid);
//forward Musics(playerid);
forward OnPlayerVirtualWorldChange(playerid, newvirtualworld, oldvirtualworld);forward UsingLargeDildo(playerid);forward IsAtTheStadion(playerid);
forward RotateWheel();forward IsAtCandySprunk(playerid);forward CountDowned();forward ChatTextedMinus(playerid);forward ShowDecoder(playerid);
forward HideDecoder(playerid);forward GetDigits(number);forward DecodePassword(playerid,vehicleid);forward Lotto();forward TurfTimerminu();
forward SendJobMessage(job, color, string[]);forward GetMoveDirectionFromKeys(ud, lr);forward MoveCamera(playerid);forward EndPaintBall();
forward repairkeys(playerid);forward CancelFlyMode(playerid);forward UsingPurpleDildo(playerid);forward UsingSmallDildo(playerid);forward dimstart(playerid);
forward UsingBlackDildo(playerid);forward ResetDildo(playerid);forward IsPlayerInArea(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy);
forward GetNextCameraPosition(move_mode, Float:CPs[3], Float:FV[3], &Float:X, &Float:Y, &Float:Z);forward FlyMode(playerid);forward PayDay();
forward CuffedPlayer(playerid);forward PauseTime(playerid);forward UpdateBizzText(bizid);forward IsAMafia(playerid);forward HouseGate(playerid);
forward TazedRemove(playerid);forward Portihq(playerid);forward OnVehicleSpeedUpdate(playerid);forward SetAlreadyRadar(playerid);forward MoneyTimer();
forward Actiunea(playerid);forward LoadFS();forward RestartTimer();forward freze(playerid);forward SyncUp();forward Smoke(playerid);forward AfkKicked();
forward CheckSlots(playerid);forward IsAExamCar(carid);forward RespawnCars();forward destroyFlare(playerid);forward startone(playerid);
forward OOCNews(color,string[]);forward BroadCast(color,string[]);forward EncodeVehicle(vehicleid);forward IsACop(playerid);forward AdminsBroadCast(color, string[],level);forward IsADiesel(carid);
forward HelpersBroadCast(color, string[]);forward ReportTimer(playerid);forward SosTimer(playerid);forward SendDepartamentMessage(color, string[]);
forward FactionsBroadCast(faction, color, string[]);forward RadioBroadCast(faction, color, string[]);forward WhenAccountCheck(playerid, password[]);
forward OnPlayerRegister(playerid, password[]);forward OnPlayerLogin(playerid, password[]);forward WhenPlayerLogin(playerid);forward startonex(playerid);
forward OtherTimers();forward ShowStats(playerid, targetid);forward KickPublic(playerid);forward ProxDetectorPlayer(Float:radi, playerid, targetid);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);forward HackLog(string[]);forward factionloguri(string[]);
forward AllCommandLog(string[]); forward JobLog(string[]); forward MySQLConnect();forward Spectator(playerid);forward UsePdA(playerid);
forward StartingTheVehicle(playerid);forward IsAnNavyCar(carid);forward IsAnLevelCar(carid);forward IsAnHelperCar(carid);forward IsACopCar(carid);
forward IsANewsCar(carid);forward IsANewsCar(carid);forward IsAnAdminCar(carid);forward IsARentableCarLS(carid);forward IsARentableCarLV(carid);
forward IsARentableCarSF(carid);forward IsARentableAir(carid);forward IsAKartCar(carid);forward IsAnAmbulance(carid);forward IsAnDerbyCar(carid);
forward IsASevileCar(carid);forward IsACrlCar(carid);forward IsABallasCar(carid);forward IsABratvaCar(carid);forward IsAParlamentCar(carid);
forward IsAnTaxiCar(carid);forward IsAGovernmentCar(carid);forward IsATriadsCar(carid);forward IsARifaCar(carid);forward IsAnPresident(carid);
forward IsAnNewsCar(carid);forward IsAHitCar(carid);forward IsAnCiaCar(carid);forward IsAnFbiCar(carid);forward IsNgCar(carid);forward IsAPlane(carid);
forward IsABoat(carid);forward OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat);forward CheckGas();forward CancelAnim(playerid);
forward DealStanceAnim(playerid);forward LoginQuit(string[]);forward IsABike(carid);forward SetPlayerUnjail();forward SetplayerBackWeapons(playerid);
forward km_counter(vehicleid);forward RandomChatMessage();forward kiked(playerid);forward RandomWeather();forward Fillup(playerid);forward PrintSBizInfo(playerid,targetid);
forward KickWithMessage(playerid, color, message[]);forward PlayerPlayMusic(playerid);forward StopMusic();forward svetstart(playerid);
forward Float:GetDistanceBetweenPoints(Float:x21,Float:y21,Float:z21,Float:x22,Float:y22,Float:z22);forward LoadHouseGate();forward PrintBizInfo(playerid,targetid);
forward PowerBar();forward CanJumpPlayer(playerid);forward HidesInfo(playerid);forward Cade(playerid);forward DestroyPapers(playerid);forward IsAPaperCar(carid);
forward MoveGrasBack(GrassId);forward MoveSweepBack();forward IsAPizzaCar(carid);forward CallElevators(playerid, floorid);forward AdminLog(string[]);    // You too.
forward ShowElevatorsDialog(playerid);forward Elevators_Initialize();forward Elevators_Destroy();forward Elevators_OpenDoors();forward Elevators_CloseDoors();
forward Floors_OpenDoors(floorid);forward Floors_CloseDoors(floorid);forward Elevator_MoveToFloors(floorid);forward Elevators_Boost(floorid);
forward Elevators_TurnToIdle();forward ReadNextFloorInsQueue();forward RemoveFirstQueuesFloor();forward AddFloorTosQueue(floorid);forward PaydayLog(string[]);
forward IsFloorInsQueue(floorid);forward ResetElevatorsQueue();forward DidPlayerSRequestElevator(playerid);forward Float:GetElevatorZCoordSForFloor(floorid);
forward Float:GetDoorsZCoordsForFloor(floorid);forward CallElevator(playerid, floorid);forward ShowElevatorDialog(playerid);forward Elevator_Initialize();
forward Elevator_Destroy();forward Elevator_OpenDoors();forward Elevator_CloseDoors();forward Floor_OpenDoors(floorid);forward Floor_CloseDoors(floorid);
forward Elevator_MoveToFloor(floorid);forward Elevator_Boost(floorid);forward Elevator_TurnToIdle();forward ReadNextFloorInQueue();
forward RemoveFirstQueueFloor();forward AddFloorToQueue(floorid);forward IsFloorInQueue(floorid);forward ResetElevatorQueue();forward DidPlayerRequestElevator(playerid);
forward Float:GetElevatorZCoordForFloor(floorid);forward Float:GetDoorsZCoordForFloor(floorid);forward frezePlane(playerid);forward TacPlayer(playerid);
forward GetPlayerDistanceToPoint(playerid,Float:x,Float:y);forward DrugEffectGone(playerid); forward DeletePizza(id);

// Money
// Login
static armedbody_pTick[MAX_PLAYERS];
enum noclipenum
{
	cameramode,
	flyobject,
	mode,
	lrold,
	udold,
	lastmove,
	Float:accelmul
}
enum TelePosEnum
{
   Float:tX,
   Float:tY
};


new Float:TelegondolaPositii[22][7] =
{
	{-2628.5190,	-2567.1509,		3.9251,		4.0,	0.00000,	 0.00000,	90.0000}, // jos
    {-2632.3071,	-2531.1753,		31.2590,	8.0,	0.00000,	 0.00000,	90.0000},
    {-2636.5498, 	-2418.1416, 	31.1116, 	8.0,	0.00000,	 0.00000,	90.0000},
    {-2635.8540, 	-2303.7793, 	31.1116, 	8.0,	0.00000,	 0.00000,	90.0000},
    {-2635.2156, 	-2225.2461, 	31.1116, 	8.0,	0.00000,	 0.00000,	90.0000},
    {-2565.9692, 	-2085.4419, 	148.101, 	8.0,	0.00000,	 0.00000,	60.0000},//urca
    {-2487.1965, 	-1933.6085, 	321.273,	8.0,	0.00000,	 0.00000,	60.0000},
    {-2440.1958, 	-1837.3865, 	442.930,	8.0,	0.00000,	 0.00000,	60.0000},
    {-2388.7959, 	-1734.9443, 	495.054,	8.0,	0.00000,	 0.00000,	60.0000},
    {-2354.8542, 	-1668.6501, 	509.576,	8.0,	0.00000,	 0.00000,	90.0000},
    {-2354.9790, 	-1636.7830, 	484.432,	4.0,	0.00000,	 0.00000,	90.0000}, // sus pe m
    {-2354.9790, 	-1628.7830, 	484.432,	0.2,	0.00000,	 0.00000,	90.0000}, // sus pe m
    {-2347.4185, 	-1667.4948, 	509.576,	8.0,	0.00000,	 0.00000,	90.0000},
    {-2381.0515, 	-1735.0094, 	495.054,	8.0,	0.00000,	 0.00000,	90.0000},
    {-2432.6907, 	-1837.9680, 	442.930,	8.0,	0.00000,	 0.00000,	60.0000},
    {-2558.2688, 	-2085.6208, 	148.101,	8.0,	0.00000,	 0.00000,	60.0000},
    {-2627.2371, 	-2224.5845, 	31.1116, 	8.0,	0.00000,	 0.00000,	90.0000},
    {-2628.1282, 	-2303.6682, 	31.1116, 	8.0,	0.00000,	 0.00000,	90.0000},
    {-2628.6846, 	-2417.4622, 	31.1116, 	8.0,	0.00000,	 0.00000,	90.0000},
    {-2624.7708, 	-2530.4343, 	31.2590, 	8.0,	0.00000,	 0.00000,	90.0000},
    {-2628.5190, 	-2550.1509, 	3.92516,  	4.0,	0.00000,	 0.00000,	90.0000}, // telegondola jos
    {-2628.5190, 	-2540.1509, 	3.92516,  	0.2,	0.00000,	 0.00000,	90.0000}
};

new Float:TelegondolaPositii2[22][7] =
{
    {-2354.9790, 	-1636.7830, 	484.432,	4.0,	0.00000,	 0.00000,	90.0000}, // sus pe m
    {-2354.9790, 	-1628.7830, 	484.432,	0.2,	0.00000,	 0.00000,	90.0000}, // sus pe m
    {-2347.4185, 	-1667.4948, 	509.576,	8.0,	0.00000,	 0.00000,	90.0000},
    {-2381.0515, 	-1735.0094, 	495.054,	8.0,	0.00000,	 0.00000,	90.0000},
    {-2432.6907, 	-1837.9680, 	442.930,	8.0,	0.00000,	 0.00000,	60.0000},
    {-2558.2688, 	-2085.6208, 	148.101,	8.0,	0.00000,	 0.00000,	60.0000},
    {-2627.2371, 	-2224.5845, 	31.1116, 	8.0,	0.00000,	 0.00000,	90.0000},
    {-2628.1282, 	-2303.6682, 	31.1116, 	8.0,	0.00000,	 0.00000,	90.0000},
    {-2628.6846, 	-2417.4622, 	31.1116, 	8.0,	0.00000,	 0.00000,	90.0000},
    {-2624.7708, 	-2530.4343, 	31.2590, 	8.0,	0.00000,	 0.00000,	90.0000},
    {-2628.5190, 	-2550.1509, 	3.92516,  	4.0,	0.00000,	 0.00000,	90.0000},// telegondola jos
    {-2628.5190, 	-2540.1509, 	3.92516,  	0.2,	0.00000,	 0.00000,	90.0000},
   	{-2628.5190,	-2567.1509,		3.9251,		4.0,	0.00000,	 0.00000,	90.0000}, // jos
    {-2632.3071,	-2531.1753,		31.2590,	8.0,	0.00000,	 0.00000,	90.0000},
    {-2636.5498, 	-2418.1416, 	31.1116, 	8.0,	0.00000,	 0.00000,	90.0000},
    {-2635.8540, 	-2303.7793, 	31.1116, 	8.0,	0.00000,	 0.00000,	90.0000},
    {-2635.2156, 	-2225.2461, 	31.1116, 	8.0,	0.00000,	 0.00000,	90.0000},
    {-2565.9692, 	-2085.4419, 	148.101, 	8.0,	0.00000,	 0.00000,	60.0000},//urca
    {-2487.1965, 	-1933.6085, 	321.273,	8.0,	0.00000,	 0.00000,	60.0000},
    {-2440.1958, 	-1837.3865, 	442.930,	8.0,	0.00000,	 0.00000,	60.0000},
    {-2388.7959, 	-1734.9443, 	495.054,	8.0,	0.00000,	 0.00000,	60.0000},
    {-2354.8542, 	-1668.6501, 	509.576,	8.0,	0.00000,	 0.00000,	90.0000}
};
static Float:FloorZOffsets[21] =
{
    0.0,		// 0.0,
    8.5479,		// 8.5479,
    13.99945,   // 8.5479 + (5.45155 * 1.0),
    19.45100,   // 8.5479 + (5.45155 * 2.0),
    24.90255,   // 8.5479 + (5.45155 * 3.0),
    30.35410,   // 8.5479 + (5.45155 * 4.0),
    35.80565,   // 8.5479 + (5.45155 * 5.0),
    41.25720,   // 8.5479 + (5.45155 * 6.0),
    46.70875,   // 8.5479 + (5.45155 * 7.0),
    52.16030,   // 8.5479 + (5.45155 * 8.0),
    57.61185,   // 8.5479 + (5.45155 * 9.0),
    63.06340,   // 8.5479 + (5.45155 * 10.0),
    68.51495,   // 8.5479 + (5.45155 * 11.0),
    73.96650,   // 8.5479 + (5.45155 * 12.0),
    79.41805,   // 8.5479 + (5.45155 * 13.0),
    84.86960,   // 8.5479 + (5.45155 * 14.0),
    90.32115,   // 8.5479 + (5.45155 * 15.0),
    95.77270,   // 8.5479 + (5.45155 * 16.0),
    101.22425,  // 8.5479 + (5.45155 * 17.0),
    106.67580,	// 8.5479 + (5.45155 * 18.0),
    112.12735	// 8.5479 + (5.45155 * 19.0)
};
static FloorNames[21][] =
{
	"Subsol",
	"Etajul 1",
	"Etajul 2",
	"Etajul 3",
	"Etajul 4",
	"Etajul 5",
	"Etajul 6",
	"Etajul 7",
	"Etajul 8",
	"Etajul 9",
	"Etajul 10",
	"Etajul 11",
	"Etajul 12",
	"Etajul 13",
	"Etajul 14",
	"Etajul 15",
	"Etajul 16",
	"Etajul 17\tNews Reporters",
	"Etajul 18",
	"Etajul 19",
	"Mansarda"
};

static FloorsNames[2][] =
{
	"Ground Floor",
	"ZomboTech Lab"
};
// Elevator floor Z heights
static Float:FloorsZOffsets[2] =
{
    0.0,		// Ground Floor
    -21.628007	// ZomboTech Lab   -21.598007
};

new Float:PirateShipRoots[24][7] =
{
	{-791.34479,	624.8326, 	17.4598,	5.50	, 0.00000 	, 0.00000, 	-103.0330},
	{-712.47538, 	522.5392, 	17.4598,   	5.50 	, 0.00000	, 0.00000, 	-144.7799},
	{-783.28574, 	396.9321, 	17.4598,   	5.50	, 0.00000	, 0.00000, 	-223.2599},
	{-916.76825, 	467.8975, 	17.4598,   	5.50   	, 0.00000	, 0.00000, 	-312.8999},
	{-1190.0140,	719.6693, 	17.4598,   	10.5 	, 0.00000	, 0.00000, 	-312.8999},
	{-1287.4982,	880.0099, 	17.4598,   	20.5 	, 0.00000	, 0.00000, 	-327.9596},
	{-1417.1251, 	1182.695, 	17.4598,   	20.5	, 0.00000	, 0.00000,	-334.7994},
	{-1425.4744, 	1312.795, 	17.4598,   	20.5	, 0.00000	, 0.00000,	-355.0793},
	{-1526.2635, 	1481.493, 	17.4598,   	20.5	, 0.00000	, 0.00000,	-307.0793},
	{-1680.2710, 	1583.776, 	17.4598,  	15.5	, 0.00000	, 0.00000,	-294.4194},
	{-1879.0975, 	1621.289, 	17.4598,  	10.5	, 0.00000	, 0.00000,	-251.7595},
	{-1986.0753, 	1512.606, 	17.4598,   	6.50	, 0.00000	, 0.00000,	-220.0195},
	{-2086.5623, 	1451.728, 	17.4598,   	6.50	, 0.00000	, 0.00000,	-269.1592},
	{-2086.3623, 	1451.728, 	17.4598,   	0.05	, 0.00000	, 0.00000,	-269.1592},
	{-2163.5561, 	1546.301, 	17.4598,   	5.05	, 0.00000	, 0.00000,	-318.6391},
	{-2136.4043, 	1612.745, 	17.4598,   	4.50	, 0.00000	, 0.00000,	-409.0791},
	{-1991.6716, 	1653.908, 	17.4598,   	10.5	, 0.00000	, 0.00000,	-438.4792},
	{-1991.6716, 	1653.908, 	17.4598,   	12.5	, 0.00000	, 0.00000,	-438.4792},
	{-1803.2935, 	1627.147, 	17.4598,   	15.5	, 0.00000	, 0.00000,	-462.7191},
	{-1482.0150, 	1395.666,	17.4598,   	20.5	, 0.00000	, 0.00000, 	-493.1388},
	{-1282.5256, 	953.5878, 	17.4598,   	24.5	, 0.00000	, 0.00000, 	-516.9586},
	{-1112.6005, 	653.9943, 	17.4598,	20.5	, 0.00000	, 0.00000, 	-506.9378},
	{-791.34479,	624.8326, 	17.0598,	15.5	, 0.00000 	, 0.00000, 	-103.0330},
	{-791.34479,	617.8326, 	17.0598,	0.5		, 0.00000 	, 0.00000, 	-103.0330}
};
new Float:gFerrisOrigin[3] = {389.7734, -2028.5000, 22.1094};
new Float:gFerrisCageOffsets[10][3] = {
{0.0699, 0.0600, -11.7500},
{-6.9100, -0.0899, -9.5000},
{11.1600, 0.0000, -3.6300},
{-11.1600, -0.0399, 3.6499},
{-6.9100, -0.0899, 9.4799},
{0.0699, 0.0600, 11.7500},
{6.9599, 0.0100, -9.5000},
{-11.1600, -0.0399, -3.6300},
{11.1600, 0.0000, 3.6499},
{7.0399, -0.0200, 9.3600}
};


Text:CreateBox(Float:Xy,Float:Yy,Float:Widthy,Float:Heighty,color)
{
        new Text[500];
        for(new i=floatround(Yy); i < floatround(Yy+Heighty);i++)
        {
                strcat(Text,"~n~_");
        }
    	new Text:RetSprite;
        RetSprite = TextDrawCreate(Xy, Yy, Text); // Text is txdfile:texture
        TextDrawFont(RetSprite, 0); // Font ID 4 is the sprite draw font
        TextDrawColor(RetSprite,0xFFFFFFFF);
        TextDrawTextSize(RetSprite,Widthy+Xy,Heighty+Yy); // Text size is the Width:Height
        TextDrawUseBox(RetSprite,1);
        TextDrawBoxColor(RetSprite,color);
        TextDrawLetterSize(RetSprite,0.0001,0.1158);
        return RetSprite;
}

Text:CreateSprite(Float:Xxxxx,Float:Yxxxx,Name[],Float:Widthxxx,Float:Heightxxx)
{
        new Text:RetSprite;
        RetSprite = TextDrawCreate(Xxxxx, Yxxxx, Name); // Text is txdfile:texture
        TextDrawFont(RetSprite, 4); // Font ID 4 is the sprite draw font
        TextDrawColor(RetSprite,0xFFFFFFFF);
        TextDrawTextSize(RetSprite,Widthxxx,Heightxxx); // Text size is the Width:Height
        return RetSprite;
}

enum E_PLAYER_DATA
{TotalFriends}

new bool:_OAB_PlayerPlays[MAX_PLAYERS],
	_OAB_TICKS[MAX_PLAYERS],
	_OAB_CURRENT_TD_SLOT_1[MAX_PLAYERS],
	_OAB_CURRENT_TD_SLOT_2[MAX_PLAYERS],
	_OAB_CURRENT_TD_SLOT_3[MAX_PLAYERS],
	Text:_OAB_TD_SLOT_1[MAX_PLAYERS],
	Text:_OAB_TD_SLOT_2[MAX_PLAYERS],
	Text:_OAB_TD_SLOT_3[MAX_PLAYERS];

stock const
Float:BallSpawn[3] = {2706.9944, -1802.1829, 422.8372},
Float:Corners[4][3] = {
	{2677.1453, -1748.0548, 422.8372},
	{2736.6797, -1747.9595, 422.8372},
	{2736.7180, -1856.2570, 422.8372},
	{2677.3398, -1856.5066, 422.8372}
};
new Songs[7][1] = {
{1187},
{1185},
{1183},
{1097},
{1076},
{1068},
{1062}
};
new SELLCAR1[] = { 1000, 1124, 1245, 1349, 1475, 1574, 1636, 1762, 1895, 1946, 2000 };
new SELLCAR2[] = { 2099, 2135, 2255, 2378, 2457, 2563, 2614, 2721, 2878, 2988, 3000 };
new SELLCAR3[] = { 3058, 3175, 3212, 3377, 3454, 3555, 3678, 3751, 3865, 3964, 4000 };
new SELLCAR4[] = { 4077, 4123, 4275, 4378, 4422, 4565, 4613, 4752, 4897, 4911, 5000 };
new STD1[] = {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3};
new STD2[] = {0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3};
new STD3[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3};
new STD4[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 3};

new gFerrisWheel;					new gFerrisCages[10];				new gWheelTransAlternate = 0;  	new PizzaObj[61];                   new PlaneObj[241];
new Text3D:Camera[16];				new RepairCar[MAX_PLAYERS];			new Camerepick[16];             new levelexp = 2;           		new Cigarretes[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];		new RepairOffer[MAX_PLAYERS];		new Tele[MAX_PLAYERS];          new levelcost = 13000;      		new Foc1[MAX_PLAYERS],Foc2[MAX_PLAYERS];
new FindTime[MAX_PLAYERS];			new FindTimePoints[MAX_PLAYERS];	new graffity[MAX_PLAYERS];      new gRegistred[MAX_PLAYERS];        new Float:InteriorPosx[MAX_PLAYERS];
new FlyModeA[MAX_PLAYERS];			new InFactionSafe[MAX_PLAYERS];		new InRing = 0;					new lemne[MAX_VEHICLES];			new lemns[MAX_VEHICLES];			
new UsedFind[MAX_PLAYERS];			new MOVE_SPEED[MAX_PLAYERS];		new capacitate[MAX_VEHICLES];	new Float:InteriorPosy[MAX_PLAYERS];new noclipdata[MAX_PLAYERS][noclipenum];
new PColor[MAX_PLAYERS];			new object[MAX_PLAYERS];			new start[MAX_PLAYERS];         new Float:InteriorPosz[MAX_PLAYERS];new Gps[MAX_PLAYERS];
new	spark[MAX_PLAYERS];				new dim[MAX_PLAYERS];				new ChosenSkin[MAX_PLAYERS];    new repairkey[MAX_PLAYERS];			new PlayerSavedSkinPas[MAX_PLAYERS];
new Connect[MAX_PLAYERS];			new FactionOffer[MAX_PLAYERS];		new Eventposs;                  new SexTimer[MAX_PLAYERS];      	new Hamburgers[MAX_PLAYERS];
new Eventteleport[MAX_PLAYERS];		new CountTimer;						new CountdownSeconds = 0;       new ObiectSwep[9];        		    new ObiectSwepOVer[9];
/*===================================PORTI=========================================================   */
new pdgate3;
new pdgate133;						new pdgate16;						new poartajail1;				new poartajail2;	new pdgate1;
//=====================================carcode=======================================================================================
new securitate[18] = 4;				new RefillOffer[MAX_PLAYERS];		new RefillPrice[MAX_PLAYERS];	new Condom[MAX_PLAYERS];
new taxisign1;						new taxisign2;						new taxisign3;					new SexPrice[MAX_PLAYERS];	new taxisign4;
new Text3D:SBizzLabel[MAX_SBIZ];	new PickupSbiz[MAX_SBIZ];			new atmicon[MAX_ATMS];			new SexOffer[MAX_PLAYERS];
new safepickup[20]; 				new Fails[MAX_PLAYERS];				new sbizzicon[MAX_SBIZ];		new Pickupbiz[MAX_BIZ]; new Text:Textdraw53[MAX_PLAYERS];
//=======================================================================================================================================================
new Text3D:BizzLabel[MAX_BIZ];		new bizzicon[MAX_BIZ];				new PlayerCuffed[MAX_PLAYERS];	new PlayerCuffs[MAX_PLAYERS];
new CP[MAX_PLAYERS];				new aprobat[MAX_PLAYERS];			new WantedLeft[MAX_PLAYERS];	new freeze[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];		new plantata[MAX_PLAYERS];			new CreatedCars[MAX_VEHICLES];	new SeatBelt[MAX_PLAYERS];
new PayTimer[MAX_PLAYERS];			new OnDuty[MAX_PLAYERS];			new TakingLeeson[MAX_PLAYERS];	new Text3D:DutyLabel[MAX_PLAYERS];
new TakingLesson[MAX_PLAYERS];		new HousePickup[MAX_HOUSES];		new HousePickup1[MAX_HOUSES];	new HouseRequested[MAX_PLAYERS];
new warned[MAX_PLAYERS];			new Tazer[MAX_PLAYERS];				new Mobile[MAX_PLAYERS];		new CellTime[MAX_PLAYERS];
new EnteredHouse[MAX_PLAYERS];		new Houses[MAX_PLAYERS];			new Efraction[MAX_PLAYERS];		new Tazed[MAX_PLAYERS];
new House[MAX_PLAYERS];				new Text3D:HouseLabel[MAX_HOUSES];	new HouseIcon[MAX_HOUSES];		new hack[MAX_PLAYERS];
new Text3D:vehiclet[MAX_VEHICLES];	new undercover[MAX_PLAYERS];		new gLogged[MAX_PLAYERS];		new BigEar[MAX_PLAYERS];
new bomb[100];						new RegistrationStep[MAX_PLAYERS];	new Text:Time2;                 new Float:TelePosGps[MAX_PLAYERS][TelePosEnum];
new Text:Date;  					new Text:NameText[MAX_PLAYERS];		new Text:Textdraw45;			new Cash[MAX_PLAYERS];
new TutorialTime[MAX_PLAYERS];		new ReportTime[MAX_PLAYERS];		new SosTime[MAX_PLAYERS];		new SpectatedID[MAX_PLAYERS];
new query[728];						new STDPlayer[MAX_PLAYERS];			new HireCar[MAX_PLAYERS];		new Music[MAX_PLAYERS];
new FirstSpawn[MAX_PLAYERS];		new Float:SpecPosx[MAX_PLAYERS];	new	Float:SpecPosy[MAX_PLAYERS];new Float:SpecPosz[MAX_PLAYERS];
new Codel[MAX_PLAYERS];				new interiorplayer[MAX_PLAYERS];	new	passwords[MAX_PLAYERS];		new virtualworld[MAX_PLAYERS];
new FrenodeMano[MAX_VEHICLES] = 0;	new bomba[MAX_VEHICLES] = 0;		new gWhisper[MAX_PLAYERS];		new Float:VehFrenoPOS[MAX_VEHICLES][7];
new VehiclePass[MAX_VEHICLES] = 0;	new VehicleAlarm[MAX_VEHICLES]= 0; 	new Text:td_fuel[MAX_VEHICLES]; new VehicleEngine[MAX_VEHICLES]= 0;
new VehicleLights[MAX_VEHICLES]= 0;	new VehicleBonnet[MAX_VEHICLES]= 0; new soss[MAX_PLAYERS];			new VehicleBoot[MAX_VEHICLES]= 0;
new reports[MAX_PLAYERS]; 			new brake[MAX_VEHICLES] = 0;		new instart[MAX_PLAYERS];		new VehicleObjective[MAX_VEHICLES]= 0;
new TicketMoney[MAX_PLAYERS];       new TicketOffer[MAX_PLAYERS];       new Refueling[MAX_PLAYERS];     new Float:VehComprobar[MAX_VEHICLES][5];
new engine,lights,alarm,doors;		new bonnet, boot, objective;        new TesterDuty[MAX_PLAYERS];    new AdminDuty[MAX_PLAYERS];
new gGas[MAX_VEHICLES];				new switched[MAX_VEHICLES];			new GasCar[MAX_VEHICLES]; 		new Text:Textdraw40[MAX_PLAYERS];
//====================================================================Textdrawodo==============================================================
new Text:Textdraw70[MAX_PLAYERS];	new Text:Textdraw71[MAX_PLAYERS];	new Text:sState[MAX_PLAYERS];	new Text:Textdraw69[MAX_PLAYERS];
new Text:heights[MAX_PLAYERS];		new Text:Healthveh[MAX_PLAYERS];	new Text:Gpscar[MAX_VEHICLES];	new Text:Textdraw72[MAX_PLAYERS];
new Text:TextDrawVeh[MAX_PLAYERS];	new Text:Textdraw160[MAX_PLAYERS];	new Text:Modelcar[MAX_PLAYERS];	new Text:Textdraw39[MAX_PLAYERS];
//==================
new Text3D:gasoo;					new Text3D:gasoo1;					new Text3D:gasoo2;				new Text3D:gasoo3;				new Text3D:gasoo4;	new Text3D:gasoo5;
new Text3D:xommerr;					new Text3D:xommerr1;				new Text3D:xommerr2;			new Text3D:xommerr3;			new Text3D:xommerr4;new Text3D:xommerr5;
new Text3D:goingg;					new Text3D:goingg1;					new Text3D:goingg2;				new Text3D:goingg3;				new Text3D:goingg4;	new gaso =   100000;
new going =  100000;				new Injourney[MAX_PLAYERS];			new xommer = 100000;    		new DildoTimerReset;			new BizActor[40]; new Actor[20];
new ActorPlayers[MAX_PLAYERS];      new UsedDildo[MAX_PLAYERS];         new Text:TextdrawIntro1;		new Text:TextdrawIntro2;		new Text:TextdrawIntro3; new LookAt[MAX_PLAYERS];
new Text:TextTotalAcc;				new Text:TextNewAcc;				new Text:TextBannedAcc;			new Text:TextMostAcc;   		new Text:TextdrawIntro4;new Text:BlindFold;
new AnimTime;						new Decoding[MAX_PLAYERS];			new Digits = 1;					new DecoderTimer;       		new Masked[MAX_PLAYERS];
new Text:Textdraw65;				new Text:Textdraw66;				new Text:Textdraw67;			new Text:Textdraw68;    		new DecodeTimeW[MAX_PLAYERS];
new Folded[MAX_PLAYERS];            new Tied[MAX_PLAYERS];				new noooc = 1;					new closen = 0;         		new pNewbTimer[MAX_PLAYERS];
new gNewb[MAX_PLAYERS];             new gOoc[MAX_PLAYERS];              new TogLC[MAX_PLAYERS]; 		new gNews[MAX_PLAYERS];			new Pickupbiz2[MAX_BIZ];
new VehLocked[MAX_VEHICLES];        new PlayerLocked[MAX_PLAYERS];      new WarF;						new LastCar[MAX_PLAYERS];		new Text:Textdraw47[MAX_PLAYERS];
new Warallowed = 1;					new WarZone=999; 					new WarStarted;					new WarF1;              		new WarPoints[MAX_GANGZONES];
new WarScore2;						new turftimercount; 				new WarScore1;					new turftimer = 0; 				new Gangzone[MAX_GANGZONES];
new Text:Textwarevent;				new cage[MAX_PLAYERS],				cage2[MAX_PLAYERS], 			cage3[MAX_PLAYERS], 			cage4[MAX_PLAYERS], caged[MAX_PLAYERS];
new OwnableCarOffer[MAX_PLAYERS];	new OwnableCarID[MAX_PLAYERS];		new Classes[MAX_PLAYERS];		new AlreadyRadar[MAX_PLAYERS];	new OwnableCarPrice[MAX_PLAYERS];
new timerul[15];                    new CheatTelesAllowed = 0;          new Restartsecond = -1;			new ChatTexted[MAX_PLAYERS];    new ServerRestarting = 0;
new PlayerVirtualWorld[MAX_PLAYERS];new WantLawyer[MAX_PLAYERS];		new CallLawyer[MAX_PLAYERS];	new JailPrice[MAX_PLAYERS];		new NewPlayerVirtualWorld[MAX_PLAYERS];
new ApprovedLawyer[MAX_PLAYERS];    new CanFreeLawyer[MAX_PLAYERS];		new TransportDuty[MAX_PLAYERS];	new TransportValue[MAX_PLAYERS];new TaxiDrivers = 0;
new TransportMoney[MAX_PLAYERS];	new TransportTime[MAX_PLAYERS];		new TransportCost[MAX_PLAYERS];	new TaxiCall = 999;             new TransportDriver[MAX_PLAYERS];
new TaxiCallTime[MAX_PLAYERS];      new TaxiAccepted[MAX_PLAYERS];		new GotHit[MAX_PLAYERS];		new GoChase[MAX_PLAYERS];       new GetChased[MAX_PLAYERS];
new EditingObjectId[MAX_PLAYERS];   new AdTimer[MAX_PLAYERS];			new LiveOffer[MAX_PLAYERS];		new TalkingLive[MAX_PLAYERS];	new OnJob[MAX_PLAYERS];
new CanUsePd[MAX_PLAYERS];      	new NeedBackUp[MAX_PLAYERS];		new GazdePanou,OaspetiPanou;	new Text:TextdrawInfoBall;		new Text:TextdrawInfoBox;
new CanJump[MAX_PLAYERS];			new TeamBall[MAX_PLAYERS];			new BikeMeter[MAX_VEHICLES];	new CutGrassOVer[30];			new Float:TeleportDest[MAX_PLAYERS][3];
new TeleportDests[MAX_PLAYERS][2];  new InMeniuIphone[MAX_PLAYERS];		new attas[MAX_VEHICLES];		new objecta[MAX_VEHICLES]; 		new PhoneMeniu[MAX_PLAYERS];	
new Float:FlyPosx[MAX_PLAYERS][3];  new Oaspeti;                        new menustyle[MAX_PLAYERS]; 	new SevileActor[10];			new BallasActor[10];
new	Ball = -1;						new Goal = 0;						new	pLastTick[MAX_PLAYERS];		new BallHolder = -1;			new Text:PowerTD[2];
new DivorceOffer[MAX_PLAYERS];		new MarriageCeremoney[MAX_PLAYERS];	new ProposeOffer[MAX_PLAYERS];	new ProposedTo[MAX_PLAYERS];	new GotProposedBy[MAX_PLAYERS];
new MarryWitness[MAX_PLAYERS];		new MarryWitnessOffer[MAX_PLAYERS]; new TimerPaper[MAX_PLAYERS];    new SmokeCRopDust[MAX_PLAYERS];	new SmokeCropDuster[4][MAX_PLAYERS];
new GolfBall = -1;                  new InPlane[MAX_PLAYERS];           new CrateBoat[3][MAX_PLAYERS];  new BodyTimer[MAX_PLAYERS];		new GuardOffer[MAX_PLAYERS];
new GuardPrice[MAX_PLAYERS];        new CutGrass[30];                   new ZiarNumber;				 	new Float:x1[MAX_VEHICLES];		new Float:VehicleKM[MAX_VEHICLES];
new LastTouch = 999;				new Float:y1[MAX_VEHICLES];	        new Float:z1[MAX_VEHICLES];		new Float:x2[MAX_VEHICLES];     new Float:y2[MAX_VEHICLES];
new Float:z2[MAX_VEHICLES]; 	    new timerkm[MAX_VEHICLES];			new TimerH[MAX_PLAYERS]; 		new randomjackpot; 				new Float:PlayerPosX[MAX_PLAYERS];
new ObjecPlayersMAX[MAX_PLAYERS];  	new Jackpot;						new PlayerBoxing[MAX_PLAYERS]; 	new	BoxOffer[MAX_PLAYERS];		new Float:OldPlayerPosZ[MAX_PLAYERS];
new BoxDelay = 0;					new Boxer1 = 999;					new Boxer2 = 999;				new TBoxer = 999;				new BoxWaitTime[MAX_PLAYERS];
new RoundStarted = 0;               new P_CBUG_TICKS[MAX_PLAYERS];      new TccPlayerCar[MAX_PLAYERS];  new TccSmoke[MAX_PLAYERS];      new	Float:PlayerPosY[MAX_PLAYERS];
new VehicleOnJob[MAX_VEHICLES];     new Obj_sElevator;					new  Obj_sElevatorDoors[2];		new Obj_FloorsDoors[2][2];		new Float:OldPlayerPosX[MAX_PLAYERS];
new Text3D:Labels_Elevator;			new Text3D:Labels_Floors[2];        new NumberPizza[MAX_PLAYERS];   new ElevatorBoostTimers;        new	Float:PlayerPosZ[MAX_PLAYERS];
new ElevatorsState;					new	ElevatorsFloor;					new ElevatorQueues[2];			new	FloorRequestedBys[2];		new Float:OldPlayerPosY[MAX_PLAYERS];
new Obj_Elevator;					new Obj_ElevatorDoors[2];			new Obj_FloorDoors[21][2];      new PhoneOnCharge[MAX_PLAYERS]; new SlotCounter[MAX_PLAYERS];
new Text3D:Label_Elevator;			new Text3D:Label_Floors[21];        new PizzaOfPlayer[MAX_PLAYERS]; new pcamera[MAX_PLAYERS];		new Float:gCurrentTargetYAngle = 0.0;
new ElevatorState,ElevatorFloor;  	new PlayerLitter[MAX_PLAYERS];		new Gazde; 						new ReceiverID[MAX_PLAYERS];	new PlayerReservor[MAX_PLAYERS];
new ElevatorQueue[21];				new FloorRequestedBy[21];			new ElevatorBoostTimer;			new vehview[MAX_PLAYERS];		new firstpersona[MAX_PLAYERS];
new Text:Digit1[6];					new Text:Digit2[6];					new Text:Digit3[6];				new Slots[MAX_PLAYERS][3];		new Gambling[MAX_PLAYERS];
new SlotTimer[MAX_PLAYERS];			new Bet[MAX_PLAYERS];				new Balance[MAX_PLAYERS];		new Text:Box;                   new PaintBallPlaying[MAX_PLAYERS];
new Barrer[32];                     new blueteamp;                      new redteamp;                   new PaintScore[MAX_PLAYERS];    new PaintballWinnerKills = 0;
new PaintballWinner = 999;          new Parcare[MAX_PLAYERS][13];       new ParcareIn[MAX_PLAYERS];     new CreatedCarsOn[50];          new ServerVeh;
new Attemping[MAX_PLAYERS];			new BoatPirateObject;				new barcaobject1;				new	barcaobject2;				new barcaobject3;
new barcaobject4;					new barcaobject5;					new barcaobject6;				new barcaobject7;				new ruta = 0;
new ruta2 = 0;						new telegondola1;					new PoolBall[16];				new PlayerOnTable;				new FirstBall;
new BallType[MAX_PLAYERS];			new PlayerBalls[MAX_PLAYERS];		new PlayerRound=999;			new BallsOnTable;				new Gamble[2];
new PlayerCameraTac[MAX_PLAYERS];	new Taced[MAX_PLAYERS];				new PlayerTac[MAX_PLAYERS];		new FirstMove[MAX_PLAYERS];		new CanMove[MAX_PLAYERS];
new InTargeted[MAX_PLAYERS];		new Clothings[MAX_PLAYERS];			new ruta3 = 0;					new telegondola2;				new takingselfie[MAX_PLAYERS];
new Float:Degree[MAX_PLAYERS];		new Float:lX[MAX_PLAYERS];			new Float:lY[MAX_PLAYERS];		new Float:lZ[MAX_PLAYERS];		new StartInscriere=0;
new StartVoting=0;					new Participant[100][30];			new PlayerSledTime[MAX_PLAYERS];new PlayerSledID[MAX_PLAYERS];	new Text:TextAddcoin;
new wall1;							new wall2;							new wall3;						new wall4; 						new Text:TextDealcoin;
new SelectCharID[MAX_PLAYERS];		new SelectCharPlace[MAX_PLAYERS];	new BallOnTables;				new DrugTimer[MAX_PLAYERS];		new PlayerDrunkTime[MAX_PLAYERS];
new PlayerDrunk[MAX_PLAYERS];		new Vestiar[MAX_PLAYERS];			new DrugOffer[MAX_PLAYERS];		new DrugPrice[MAX_PLAYERS];		new DrugGram[MAX_PLAYERS];
new exitjail;						new Menu:myMenu;					new enterjail;					const Float: Radius = 1.4;		const Float: Speeed  = 1.25;
const Float: Height = 1.0;			new casino[MAX_PLAYERS];			new ticket[MAX_PLAYERS];		new PlayerFr[MAX_PLAYERS][100];	new FriendsData[MAX_PLAYERS][E_PLAYER_DATA];
new flare[MAX_PLAYERS][16];			new bool:snowOn[MAX_SLOTS char];	new updateTimer[MAX_SLOTS char]; new snowObject[MAX_SLOTS][MAX_SNOW_OBJECTS];


forward UpdateSnow(playerid);
public UpdateSnow(playerid)
{
	if(!snowOn{playerid}) return 0;
    new Float:pPos[3];
    GetPlayerPos(playerid, pPos[0], pPos[1], pPos[2]);
    for(new i = 0; i < MAX_SNOW_OBJECTS; i++) SetDynamicObjectPos(snowObject[playerid][i], pPos[0] + random(25), pPos[1] + random(25), pPos[2] - 5 + random(10));
    return 1;
}

stock CreateSnow(playerid)
{
	if(snowOn{playerid}) return 0;
    new Float:pPos[3];
    GetPlayerPos(playerid, pPos[0], pPos[1], pPos[2]);
    for(new i = 0; i < MAX_SNOW_OBJECTS; i++) snowObject[playerid][i] = CreateDynamicObject(18864, pPos[0] + random(25), pPos[1] + random (25), pPos[2] - 5 + random(10), random(280), random(280), 0, -1, -1, playerid);
    snowOn{playerid} = true;
    updateTimer{playerid} = SetTimerEx("UpdateSnow", 700, true, "i", playerid);
    return 1;
}

stock DeleteSnow(playerid)
{
	if(!snowOn{playerid}) return 0;
    for(new i = 0; i < MAX_SNOW_OBJECTS; i++) DestroyDynamicObject(snowObject[playerid][i]);
    KillTimer(updateTimer{playerid});
    snowOn{playerid} = false;
    return 1;
}

/*forward rot();
public rot()
{
	new Float:rotx, Float:roty, Float:rotz;
	GetObjectRot(bcallCarusel, rotx, roty, rotz);
	new Float:Xxx, Float:Yyy,Float:Zzz, Float:Speed= 4.0000;
	GetObjectPos(bcallCarusel,Xxx,Yyy,Zzz);
	MoveObject(bcallCarusel, Xxx , Yyy , Zzz , Speed , rotx , roty , rotz + 0.35);
	moving = 1;
	return 1;
}*/
GetPlayers()
{
	new player = 0;
	for (new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i))
 		player++;
	}
	return player;
}
//------------------------------------------------------------------------------
public DeletePizza(id)
{
	SetObjectPos(PizzaObj[id], 0,0,-1003);
	PHY_DeleteObject(PizzaObj[id]);
    return 1;
}
public DrugEffectGone(playerid)
{
   	SetPlayerWeather(playerid, 0);
   	GameTextForPlayer(playerid, "~w~Efectul drogului~p~s-a dus", 3000, 1);
   	ClearAnimations(playerid);
	return 1;
}
forward liberty2(playerid);
public liberty2(playerid)
{
    if(PlayerInfo[playerid][pPremiumAccount] != 0)
	{
		SetPlayerPos(playerid,366.4901,158.6410,1008.3828);
		SetPlayerInterior(playerid, 3);
    	GameTextForPlayer(playerid, "No Tax!!", 5000,4);
    	SetPlayerVirtualWorld(playerid,0);
      	SendClientMessage(playerid,0x04FBFBC8, "Ai ajuns in Los Santos!");
	}
	else
	{
		SetPlayerPos(playerid,366.4901,158.6410,1008.3828);
    	SetPlayerInterior(playerid, 3);
    	GivePlayerCash(playerid, -6000);
      	SetPlayerVirtualWorld(playerid,0);
    	GameTextForPlayer(playerid, "-6.000$!", 5000,4);
     	SendClientMessage(playerid,0x04FBFBC8, "Ai ajuns in Los Santos!");
	}
}
forward  liberty(playerid);
public liberty(playerid)
{
	if(PlayerInfo[playerid][pPremiumAccount] != 0)
	{
		SetPlayerPos(playerid,-777.4677, 505.3211, 1376.9059);
    	SetPlayerInterior(playerid, 1);
    	GameTextForPlayer(playerid, "No Tax!!", 5000,4);
    	SetPlayerVirtualWorld(playerid,0);
      	SendClientMessage(playerid,0x04FBFBC8, "Ai ajuns in Liberty City {E6FF00}Distractie Placuta!");
	}
	else
	{
		SetPlayerPos(playerid,-777.4677, 505.3211, 1376.9059);
    	SetPlayerInterior(playerid, 1);
    	GivePlayerCash(playerid, -6000);
    	SetPlayerVirtualWorld(playerid,0);
    	GameTextForPlayer(playerid, "-6.000$!", 5000,4);
    	SendClientMessage(playerid,0x04FBFBC8, "Ai ajuns in Liberty City {E6FF00}Distractie Placuta!");
	}
}
public Cade(playerid)
{
	if(GetVehicleSpeed(GetPlayerVehicleID(playerid))<90) return 1;
    if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 593) return 1;
	new Float:ang,Float:fY,Float:fX,Float:fZ,randommaerial=random(6);
	GetXYOfPlayer(playerid,fX,fY,fZ,1.5,180);
	if(!IsPlayerInAnyVehicle(playerid))	GetPlayerFacingAngle(playerid, ang);
	else GetVehicleZAngle(GetPlayerVehicleID(playerid),ang);

	if(ZiarNumber>=240)
	ZiarNumber=-1;
	ZiarNumber++;

	SetObjectPos(PlaneObj[ZiarNumber], fX,fY,fZ);
	SetObjectRot(PlaneObj[ZiarNumber],-90.0000, 0.0, ang + 90.0);
	if(randommaerial==0) SetObjectMaterial(PlaneObj[ZiarNumber], 0, 3119, "cs_ry_props", "GB_magazine01", 0xFFFFFFFF);
	if(randommaerial==1)SetObjectMaterial(PlaneObj[ZiarNumber], 0, 3119, "cs_ry_props", "GB_magazine04", 0xFFFFFFFF);
	if(randommaerial==2)SetObjectMaterial(PlaneObj[ZiarNumber], 0, 3119, "cs_ry_props", "GB_magazine07", 0xFFFFFFFF);
	if(randommaerial==3)SetObjectMaterial(PlaneObj[ZiarNumber], 0, 13012, "sw_apartflat5", "papercuts", 0xFFFFFFFF);
	if(randommaerial==4)SetObjectMaterial(PlaneObj[ZiarNumber], 0, 8842, "vgse24hr", "sexsign1_256", 0xFFFFFFFF);
	if(randommaerial==5)SetObjectMaterial(PlaneObj[ZiarNumber], 0, 8954, "vgsespras", "gangsign4_LAe", 0xFFFFFFFF);
    PHY_InitObject(PlaneObj[ZiarNumber],3003);
	PHY_SetObjectVelocity(PlaneObj[ZiarNumber] , 2 , 2, -4.0);
	PHY_ToggleObjectPlayerColls(PlaneObj[ZiarNumber], 1, 0.5);
	PHY_SetObjectFriction(PlaneObj[ZiarNumber] , 90); // This will stop the object when it touchs the ground.
	PHY_SetObjectGravity(PlaneObj[ZiarNumber] , 50);
	PHY_UseColAndreas(PlaneObj[ZiarNumber],3);
	SetTimerEx("DestroyPapers",120000,false,"d",ZiarNumber);
	InPlane[playerid]++;
	return 1;
}
public DestroyPapers(playerid)
{
	PHY_DeleteObject(PlaneObj[playerid]);
	SetObjectPos(PlaneObj[playerid],0,0,-5);
	return 1;
}

public SetAlreadyRadar(playerid)
{
 	AlreadyRadar[playerid] = 0;
	return 1;
}
public HidesInfo(playerid)
{
	TextDrawHideForPlayer(playerid, TextdrawInfoBall);
	TextDrawHideForPlayer(playerid, TextdrawInfoBox);
	return 1;
}
public CanJumpPlayer(playerid)
{
	CanJump[playerid] = 1;
	return 1;
}
public PowerBar()
{
	new tick = GetTickCount(),dif;
	foreach(Player, i)
	{
	 	if(IsPlayerAtPool(i) || IsAtTheStadion(i))
	 	{
		    if(pLastTick[i] == -1)
		    {
		        PlayerTextDrawHide(i, pPowerTD[i]);
				TextDrawHideForPlayer(i, PowerTD[0]);
				TextDrawHideForPlayer(i, PowerTD[1]);
				pLastTick[i] = 0;
		    }
		    else if(pLastTick[i])
		    {
				dif = tick - pLastTick[i];
				if(dif > 2000)
				{
	 		    	pLastTick[i] = -1;    continue;
	  			}
	 			else if(dif > 1000)
			 	{
				 	dif = 2000 - dif;
				}

			    PlayerTextDrawTextSize(i, pPowerTD[i], 507.0 + ((84.0 * dif)/1000.0), 0.0);
				PlayerTextDrawShow(i, pPowerTD[i]);
				TextDrawShowForPlayer(i, PowerTD[0]);
				TextDrawShowForPlayer(i, PowerTD[1]);
		    }
    	}
	}
	return 1;
}
public IsAtTheStadion(playerid)
{
 	if(IsPlayerConnected(playerid))
	{
	    if(GetPlayerVirtualWorld(playerid) == 3)
   		{
   		    if(TeamBall[playerid] != 0)
   		    {
   		    	if(GetPlayerInterior(playerid) == 0)
   		    	{
   		    	    new Float:x, Float:y, Float:z;
				    GetPlayerPos(playerid, x, y, z);
   		    	    if(IsPlayerInRangeOfPoint(playerid, 300, 2706.0, -1802.0, 423))
       				{
					   if(z > 420 && z < 430)
					   return 1;
   		    		}
   		    	}
    		}
	    }
	}
	return 0;
}
public OnVehicleSpeedUpdate(playerid)
{
	new string[256];
    SetTimerEx("OnVehicleSpeedUpdate", 400, false, "i", playerid);
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
	new veh = GetPlayerVehicleID(playerid);
	if(IsPlayerConnected(playerid))
	{
		if(GetVehicleModel(veh) == 481 || GetVehicleModel(veh) == 509 || GetVehicleModel(veh) == 510) return 1;
		if(IsPlayerInAnyVehicle(playerid))
		{
			new vehicleid;
			vehicleid = GetPlayerVehicleID(playerid);
			if(vehicleid != 0)
			{
				if(GetVehicleSpeed(GetPlayerVehicleID(playerid)) > 10 && PlayerInfo[playerid][pRadar] >= 1)
				{
					PlayerInfo[playerid][pRadar] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Ai miscat masina, radarul s-a dezactivat automat.");
				}
				if(IsACop(playerid)) return 1;
		        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
		        if(GetVehicleSpeed(GetPlayerVehicleID(playerid)) < 40) return 1;
				foreach(Player,i)
				{
				    if(IsACop(i) && ProxDetectorPlayer(30.0, playerid, i) && PlayerInfo[i][pRadar] >= 1 && AlreadyRadar[playerid] != 1)
				    {
    			        AlreadyRadar[playerid] = 1;
				        SetTimerEx("SetAlreadyRadar", 5000, 0, "i", playerid);
				        format(string, sizeof(string), "[RADAR]: Ai fost prins de radarul lui %s cu viteza de %d/h",PlayerName(i),GetVehicleSpeed(GetPlayerVehicleID(playerid)));
						SendClientMessage(playerid,COLOR_YELLOW,string);


						if(RowedPDMenu[i] == 6)
						{
						    format(string, sizeof(string), "[RADAR]: %s a fost prins cu viteza de %d/h",PlayerName(playerid),GetVehicleSpeed(GetPlayerVehicleID(playerid)));
							TextDrawSetString(PDOption[playerid],string);
							TextDrawShowForPlayer(i,PDOption[playerid]);
							break;
			   			}
	   			        format(string, sizeof(string), "[RADAR]: %s a fost prins pe radar cu viteza de %d/h",PlayerName(playerid),GetVehicleSpeed(GetPlayerVehicleID(playerid)));
						SendClientMessage(i,COLOR_YELLOW,string);
						break;
				   	}
				}
   			}
		}
	}
	return 1;
}
/*

public OnVehicleSpeedUpdate(playerid)
{
	new string[256];
    SetTimerEx("OnVehicleSpeedUpdate", 400, false, "i", playerid);
	if(!IsPlayerConnected(playerid)) return 1;
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
 	new vehicleid = GetPlayerVehicleID(playerid);
	if(vehicleid == 0) return 1;
	if(!IsACopCar(vehicleid)) return 1;

	if(GetVehicleSpeed(GetPlayerVehicleID(playerid)) > 10 && PlayerInfo[playerid][pRadar] >= 1)
	{
		PlayerInfo[playerid][pRadar] = 0;
		SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Radar: {FFFFFF}Pentru ca ai miscat masina, radarul s-a dezactivat automat.");
	}
	if(IsACop(playerid)) return 1;
	foreach(Player,i)
	{
		if(IsACop(i) && ProxDetectorPlayer(20.0, playerid, i) && PlayerInfo[i][pRadar] >= 1)
		{
			if(GetVehicleSpeed(GetPlayerVehicleID(playerid) > 30))
			{
				if(AlreadyRadar[playerid] != 0) return 1;
	  			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
				AlreadyRadar[playerid] = 1;
				SetTimerEx("SetAlreadyRadar", 7000, 0, "i", playerid);
				format(string, sizeof(string), "[RADAR]: Ai fost prins de radarul lui %s cu viteza de %d/h",PlayerName(i),GetVehicleSpeed(GetPlayerVehicleID(playerid)));
				SendClientMessage(playerid,COLOR_YELLOW,string);


			   	format(string, sizeof(string), "[RADAR]: %s a fost prins pe radar cu viteza de %d/h",PlayerName(i),GetVehicleSpeed(GetPlayerVehicleID(playerid)));
				SendClientMessage(i,COLOR_YELLOW,string);

	   			return 1;
		   	}
		}
	}
	return 1;
}
*/
public TurfTimerminu()
{
	if(turftimer > 0)
    turftimer --;
}

public IsPlayerInArea(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy)
{
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    if (x > minx && x < maxx && y > miny && y < maxy) return 1;
    return 0;
}
public ShowDecoder(playerid)
{
	TextDrawShowForPlayer(playerid, Textdraw65);
	TextDrawShowForPlayer(playerid, Textdraw66);
	TextDrawShowForPlayer(playerid, Textdraw67);
	TextDrawShowForPlayer(playerid, Textdraw68);
	return 1;
}

public HideDecoder(playerid)
{
	TextDrawHideForPlayer(playerid, Textdraw65);
	TextDrawHideForPlayer(playerid, Textdraw66);
	TextDrawHideForPlayer(playerid, Textdraw67);
	TextDrawHideForPlayer(playerid, Textdraw68);
	return 1;
}
public GetDigits(number)
{
	if(number >= 1 && number <= 9)
    return 1;
	else if(number >= 10 && number <= 99)
    return 2;
	else if(number >= 100 && number <= 999)
    return 3;
	else if(number >= 1000 && number <= 9999)
    return 4;
	else if(number >= 10000 && number <= 99999)
    return 5;
	else if(number >= 100000 && number <= 999999)
    return 6;
	else if(number >= 1000000 && number <= 9999999)
    return 7;
	else if(number >= 10000000 && number <= 99999999)
    return 8;
	else if(number >= 100000000 && number <= 999999999)
	return 9;
	else if(number >= 1000000000 && number <= 9999999999)
    return 10;
	else if(number >= 10000000000 && number <= 99999999999)
    return 11;
	else if(number >= 100000000000 && number <= 999999999999)
    return 12;
	else
    return 0;
}

public DecodePassword(playerid, vehicleid)
{
    new string[128], sendername[24],pass[64],decodecode;
    GetPlayerName(playerid, sendername, sizeof(sendername));
	if(!IsPlayerConnected(playerid)) return KillTimer(DecoderTimer);
	if(!IsPlayerInVehicle(playerid, vehicleid))
	{
		KillTimer(DecoderTimer);
		decodecode = 0;
		Decoding[playerid] = 0;
		return 1;
	}
	if(OwnedVeh(GetPlayerVehicleID(playerid)))
	Digits = GetDigits(vInfo[OwnedVeh(GetPlayerVehicleID(playerid))][vCarCode]);
	else
	Digits = GetDigits(VehiclePass[GetPlayerVehicleID(playerid)]);
 	if(Digits == 1)
	{
	    format(pass, sizeof(pass),"%d",random(9));
  		decodecode = strval(pass);
	    format(string, sizeof(string),"00000000000%d",decodecode);
	}
	else if(Digits == 2)
	{
	    format(pass, sizeof(pass),"%d%d",random(9),random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"0000000000%d",decodecode);
	}
	else if(Digits == 3)
	{
	    format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"000000000%d",decodecode);
	}
	else if(Digits == 4)
	{
	    format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"00000000%d",decodecode);
	}
	else if(Digits == 5)
	{
	    format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"0000000%d",decodecode);
	}
	else if(Digits == 6)
	{
	    format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"000000%d",decodecode);
	}
	else if(Digits == 7)
	{
	    format(pass, sizeof(pass),"%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"00000%d",decodecode);
	}
	else if(Digits == 8)
	{
	    format(pass, sizeof(pass),"%d%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"0000%d",decodecode);
	}
	else if(Digits == 9)
	{
	    format(pass, sizeof(pass),"%d%d%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"000%d",decodecode);
	}
	else if(Digits == 10)
	{
	    format(pass, sizeof(pass),"%d%d%d%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"00%d",decodecode);
	}
	TextDrawSetString(Textdraw68,string);
	if(OwnedVeh(GetPlayerVehicleID(playerid)))
	{
	    if(decodecode == vInfo[OwnedVeh(GetPlayerVehicleID(playerid))][vCarCode])
	    {
		    if(Masked[playerid] == 1)
 			format(string, sizeof(string),"* Necunoscut foloseste decodorul si incearca sa sparga codul masinii");
		    else
			format(string, sizeof(string), "* %s foloseste decodorul si incearca sa sparga codul masinii", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		    KillTimer(DecoderTimer);
		    HideDecoder(playerid);
			SetTimerEx("ShowDecoder",1000,false,"i",playerid);
			SetTimerEx("HideDecoder",2000,false,"i",playerid);
			SetTimerEx("ShowDecoder",3000,false,"i",playerid);
			SetTimerEx("HideDecoder",8000,false,"i",playerid);
			format(string, sizeof(string),"Codul este, %d, retine-l vei avea nevoie de el!. /Carcode <codul>",decodecode);
			SendClientMessage(playerid, COLOR_NICERED, string);
		}
	}
	else
	{
		if(decodecode == VehiclePass[GetPlayerVehicleID(playerid)])
	    {
		    if(Masked[playerid] == 1)
 			format(string, sizeof(string), "* Necunoscut foloseste decodorul si incearca sa sparga codul masinii");
			else
			format(string, sizeof(string), "* %s foloseste decodorul si incearca sa sparga codul masinii", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		    KillTimer(DecoderTimer);
			HideDecoder(playerid);
			SetTimerEx("ShowDecoder",1000,false,"i",playerid);
			SetTimerEx("HideDecoder",2000,false,"i",playerid);
			SetTimerEx("ShowDecoder",3000,false,"i",playerid);
			SetTimerEx("HideDecoder",8000,false,"i",playerid);
			format(string, sizeof(string),"Codul este, %d, retine-l vei avea nevoie de el!. /Carcode <codul>",decodecode);
			SendClientMessage(playerid, COLOR_NICERED, string);
		}
	}
	return 1;
}


public Smoke(playerid)
{
	ClearAnimations(playerid);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
	return 1;
}

public UsingPurpleDildo(playerid)
{
	new Float:Health;
	GetPlayerHealth(playerid, Health);
	if(Health > 70) SetPlayerHealth(playerid, 100);
	else SetPlayerHealth(playerid, Health+30);
	UsedDildo[playerid] = 1;
    TogglePlayerControllable(playerid, 1);
    GameTextForPlayer(playerid, "~p~Oh Yee~h~aaaa~h~ahhhh",6000,5);
	SendClientMessage(playerid, COLOR_GREY, "* Ai avut un orgasm si ai pus deoparte dildoul");
	DildoTimerReset = SetTimerEx("ResetDildo",600000,false, "i",playerid);
	return 1;
}

public UsingSmallDildo(playerid)
{
	new Float:Health;
	GetPlayerHealth(playerid, Health);
	if(Health > 90) SetPlayerHealth(playerid, 100);
	else SetPlayerHealth(playerid, Health+10);
	UsedDildo[playerid] = 1;
    TogglePlayerControllable(playerid, 1);
    GameTextForPlayer(playerid, "~p~Oh Yee~h~aaaa~h~ahhhh",6000,5);
	SendClientMessage(playerid, COLOR_GREY, "* Ai avut un orgasm si ai pus deoparte dildoul");
	DildoTimerReset = SetTimerEx("ResetDildo",600000,false, "i",playerid);
	return 1;
}

public UsingLargeDildo(playerid)
{
	new Float:Health;
	GetPlayerHealth(playerid, Health);
	if(Health > 75) SetPlayerHealth(playerid, 100);
	else SetPlayerHealth(playerid, Health+25);
	UsedDildo[playerid] = 1;
    TogglePlayerControllable(playerid, 1);
    GameTextForPlayer(playerid, "~p~Oh Yee~h~aaaa~h~ahhhh",6000,5);
	SendClientMessage(playerid, COLOR_GREY, "* Ai avut un orgasm si ai pus deoparte dildoul");
	DildoTimerReset = SetTimerEx("ResetDildo",600000,false, "i",playerid);
	return 1;
}

public UsingBlackDildo(playerid)
{
	new Float:Health;
	GetPlayerHealth(playerid, Health);
	if(Health > 83) SetPlayerHealth(playerid, 100);
	else SetPlayerHealth(playerid, Health+17);
	UsedDildo[playerid] = 1;
    TogglePlayerControllable(playerid, 1);
    GameTextForPlayer(playerid, "~p~Oh Yee~h~aaaa~h~ahhhh",6000,5);
	SendClientMessage(playerid, COLOR_GREY, "* Ai avut un orgasm si ai pus deoparte dildoul");
	DildoTimerReset = SetTimerEx("ResetDildo",600000,false, "i",playerid);
	return 1;
}
public ResetDildo(playerid)
{
	if(PlayerInfo[playerid][pSex] == 1)
	SendClientMessage(playerid, COLOR_GREY, "* Anusul tau nu mai este asa rosu si nu te mai doare, poti folosi iar Dildoul");
	else if (PlayerInfo[playerid][pSex] == 2)
	SendClientMessage(playerid, COLOR_GREY, "* Vaginul tau nu mai este asa rosu si larg, poti folosi iar Dildoul");
	UsedDildo[playerid] = 0;
	return 1;
}
public Lotto()
{
    new rand = random(80);
    if(rand < 77)
	rand += 3;
    new JackpotFallen = 0;
	new string[256];
	format(string, sizeof(string), "{A6BA72}Loteria:{E9E7DB}Numarul castigator este: {A6BA72}%d!", rand);
    OOCNews(COLOR_WHITE, string);
	foreach(Player,i)
	{
  		if(gLogged[i] != 0)
  		{
  		    if(PlayerInfo[i][pLotto] != 0)
		    {
		    	if(PlayerInfo[i][pLotto] == rand)
		    	{
		    	    JackpotFallen = 1;
					format(string, sizeof(string), "{A6BA72}Loteria:{E9E7DB} %s a avut numarul castigator %d si a primit suma de $%d!", PlayerName(i),PlayerInfo[i][pLotto], Jackpot);
					OOCNews(COLOR_WHITE, string);
					format(string, sizeof(string), "*	Ai castigat $%d cu tichetul de loterie!", Jackpot);
					SendClientMessage(i, COLOR_YELLOW, string);
					GivePlayerCash(i, Jackpot);
		    	}
		    	else SendClientMessage(i, COLOR_LIGHTBLUE, "Nu ai avut bilet norocos");
			}
			PlayerInfo[i][pLotto] = 0;
			Update(i,pLottox);
		}
	}
	if(JackpotFallen)
	{
	    new rands = random(125000);
		rands += 15789;
	    Jackpot = rands;
	    format(string, sizeof(string), "{A6BA72}Loteria:{E9E7DB} Noul jackpot incepe de la $%d.", Jackpot);
		OOCNews(COLOR_WHITE, string);
	}
	else
	{
	    new rands = random(15000);
		rands += 2158;
	    Jackpot += rands;
	    format(string, sizeof(string), "{A6BA72}Loteria: {E9E7DB} Vechiul jackpot a crescut la $%d.", Jackpot);
		OOCNews(COLOR_WHITE, string);
	}
	return 1;
}

public repairkeys(playerid)
{
	repairkey[playerid] = 0;
	return 1;
}


public IsAtCandySprunk(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 2, -2420.219, 984.578, 44.297)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2420.180, 985.945, 44.297)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2225.203, -1153.422, 1025.906)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2576.703, -1284.430, 1061.094)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2155.906, 1606.773, 1000.055)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2209.906, 1607.195, 1000.055)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2222.203, 1606.773, 1000.055)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 495.969, -24.320, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 501.828, -1.430, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 373.828, -178.141, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 330.680, 178.500, 1020.070)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 331.922, 178.500, 1020.070)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 350.906, 206.086, 1008.477)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 361.563, 158.617, 1008.477)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 371.594, 178.453, 1020.070)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 374.891, 188.977, 1008.477)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2155.844, 1607.875, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2202.453, 1617.008, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2209.242, 1621.211, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2222.367, 1602.641, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 500.563, -1.367, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 379.039, -178.883, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2480.86,-1959.27,12.9609)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1634.11,-2237.53,12.8906)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2139.52,-1161.48,23.3594)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2153.23,-1016.15,62.2344)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1350.12,493.859,10.5859)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2229.19,286.414,34.7031)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1659.46,1722.86,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2647.7,1129.66,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2845.73,1295.05,10.7891)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1398.84,2222.61,10.4219)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1455.12,2591.66,55.2344)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -76.0312,1227.99,19.125)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 662.43,-552.164,15.7109)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -253.742,2599.76,62.2422)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2271.73,-76.4609,25.9609)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1789.21,-1369.27,15.1641)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1729.79,-1943.05,12.9453)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2060.12,-1897.64,12.9297)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1928.73,-1772.45,12.9453)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2325.98,-1645.13,14.2109)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2352.18,-1357.16,23.7734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1154.73,-1460.89,15.1562)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1350.12,492.289,10.5859)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2118.97,-423.648,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2118.62,-422.414,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2097.27,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2092.09,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2063.27,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2005.65,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2034.46,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2068.56,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2039.85,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2011.14,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1980.79,142.664,27.0703)) return 1;
 	else if(IsPlayerInRangeOfPoint(playerid, 2, 2319.99,2532.85,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1520.15,1055.27,10.00)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2503.14,1243.7,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2085.77,2071.36,10.4531)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -862.828,1536.61,21.9844)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -14.7031,1175.36,18.9531)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -253.742,2597.95,62.2422)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 201.016,-107.617,0.898438)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1277.84,372.516,18.9531)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2580.7917,-1475.5614,-48.8995)) return 1;///
	else if(IsPlayerInRangeOfPoint(playerid, 2, 3050.2822,-1115.9280,13.2429)) return 1;///
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1544.2753,-1666.2375,801.0859)) return 1;///
	else return 0;
}
UpdateWheelTarget()
{
    gCurrentTargetYAngle += 36.0; // There are 10 carts, so 360 / 10
    if(gCurrentTargetYAngle >= 360.0) {
		gCurrentTargetYAngle = 0.0;
    }
	if(gWheelTransAlternate) gWheelTransAlternate = 0;
	else gWheelTransAlternate = 1;
}

//-------------------------------------------------

public RotateWheel()
{
    UpdateWheelTarget();

    new Float:fModifyWheelZPos = 0.0;
    if(gWheelTransAlternate) fModifyWheelZPos = 0.05;

    MoveObject( gFerrisWheel, gFerrisOrigin[0], gFerrisOrigin[1], gFerrisOrigin[2]+fModifyWheelZPos,
				0.01, 0.0, gCurrentTargetYAngle, 90.0 );
}
public UpdateBizzText(bizid)
{
	new string[512];
	if(BizzInfo[bizid][bOwned] == 0) format(string, sizeof(string), "{00BC00}De Vanzare!\nNume: {F6F6F6}%s\n{00BC00}Detinator: {F6F6F6}-\n{00BC00}Pret: {F6F6F6}$%d\n{00BC00}Level: {F6F6F6}%d\n{00BC00}ID-ul afacerii: {F6F6F6}%d", BizzInfo[bizid][bMessage], BizzInfo[bizid][bBuyPrice], BizzInfo[bizid][bLevelNeeded], bizid);
    if(BizzInfo[bizid][bOwned] == 1) format(string, sizeof(string), "{00BC00}Nume: {F6F6F6}%s\n{00BC00}Detinator: {F6F6F6}%s\n{00BC00}Extortion: {F6F6F6}%s\n{00BC00}Intrare: {F6F6F6}$%d\n{00BC00}ID-ul afacerii: {F6F6F6}%d", BizzInfo[bizid][bMessage], BizzInfo[bizid][bOwner], BizzInfo[bizid][bExtortion], BizzInfo[bizid][bEntranceCost], bizid);
	UpdateDynamic3DTextLabelText(BizzLabel[bizid], COLOR_WHITE, string);
	return 1;
}

public svetstart(playerid)
{
	new Float:simx, Float:simy, Float:simz;
	GetDynamicObjectPos(object[playerid], simx, simy, simz);
	DestroyDynamicObject(object[playerid]);
	object[playerid] = CreateDynamicObject(354, simx, simy, simz+2, 0, 0, 0);
	SetTimerEx("destroyFlare",15000,0,"d",playerid);
}

public dimstart(playerid)
{
	new Float:dimx, Float:dimy, Float:dimz;
	GetDynamicObjectPos(object[playerid], dimx, dimy, dimz);
	DestroyDynamicObject(object[playerid]);
	object[playerid] = CreateDynamicObject(18715, dimx, dimy, dimz+2, 0, 0, 0);
	SetTimerEx("destroyFlare",500,0,"d",playerid);
	new Float:X, Float:Y, Float:Z; GetDynamicObjectPos(object[playerid], X, Y, Z);
	PlaySoundForPlayersInRange(1141, 20.0, X, Y, Z);
}
SetplayerRank(playerid)
{
    if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
	{
	    if(OnDuty[playerid]==1)
	    {
			if(PlayerInfo[playerid][pRank] == 1)
	 	    RemovePlayerAttachedObject(playerid, 8);
		 	else if(PlayerInfo[playerid][pRank] == 2)
		 	{
		 	    RemovePlayerAttachedObject(playerid, 8);
		    	SetPlayerAttachedObject(playerid, 8, 19783, 1, 0.16, -0.116, 0.0, 90.0, 188.0, -90.0, 1, 1, 1);
		 	}
		 	else if(PlayerInfo[playerid][pRank] == 3)
		 	{
		 	    RemovePlayerAttachedObject(playerid, 8);
		    	SetPlayerAttachedObject(playerid, 8, 19784, 1, 0.16, -0.116, 0.0, 90.0, 188.0, -90.0, 1, 1, 1);
		 	}
		 	else if(PlayerInfo[playerid][pRank] == 4)
		 	{
		 	    RemovePlayerAttachedObject(playerid, 8);
		    	SetPlayerAttachedObject(playerid, 8, 19781, 1, 0.16, -0.116, 0.0, 90.0, 188.0, -90.0, 1, 1, 1);
		 	}
		 	else if(PlayerInfo[playerid][pRank] == 5)
		 	{
		 	    RemovePlayerAttachedObject(playerid, 8);
		    	SetPlayerAttachedObject(playerid, 8, 19782, 1, 0.16, -0.116, 0.0, 90.0, 188.0, -90.0, 1, 1, 1);
		 	}
		 	else if(PlayerInfo[playerid][pRank] == 6)
		 	{
		 	    RemovePlayerAttachedObject(playerid, 8);
		    	SetPlayerAttachedObject(playerid, 8, 19778, 1, 0.16, -0.116, 0.0, 90.0, 188.0, -90.0, 1, 1, 1);
		 	}
		 	else if(PlayerInfo[playerid][pRank] == 7)
		 	{
		 	    RemovePlayerAttachedObject(playerid, 8);
		    	SetPlayerAttachedObject(playerid, 8, 19779, 1, 0.16, -0.116, 0.0, 90.0, 188.0, -90.0, 1, 1, 1);
		 	}
		 	else if(PlayerInfo[playerid][pRank] == 8)//co leader
		 	{
		 	    RemovePlayerAttachedObject(playerid, 8);
		    	SetPlayerAttachedObject(playerid, 8, 19780, 1, 0.16, -0.116, 0.0, 90.0, 188.0, -90.0, 1, 1, 1);
		 	}
		 	else if(PlayerInfo[playerid][pRank] == 9)//leader
		 	{
		 	    RemovePlayerAttachedObject(playerid, 8);
		    	SetPlayerAttachedObject(playerid, 8, 19785, 1, 0.16, -0.116, 0.0, 90.0, 188.0, -90.0, 1, 1, 1);
		 	}
	 	}
	 	else RemovePlayerAttachedObject(playerid, 1);
	}
	else RemovePlayerAttachedObject(playerid, 1);
 	return 1;
}
public GetMoveDirectionFromKeys(ud, lr)
{
	new direction = 0;

    if(lr < 0)
	{
		if(ud < 0) 		direction = MOVE_FORWARD_LEFT; 	// Up & Left key pressed
		else if(ud > 0) direction = MOVE_BACK_LEFT; 	// Back & Left key pressed
		else            direction = MOVE_LEFT;          // Left key pressed
	}
	else if(lr > 0) 	// Right pressed
	{
		if(ud < 0)      direction = MOVE_FORWARD_RIGHT;  // Up & Right key pressed
		else if(ud > 0) direction = MOVE_BACK_RIGHT;     // Back & Right key pressed
		else			direction = MOVE_RIGHT;          // Right key pressed
	}
	else if(ud < 0) 	direction = MOVE_FORWARD; 	// Up key pressed
	else if(ud > 0) 	direction = MOVE_BACK;		// Down key pressed

	return direction;
}
stock PlaySoundForPlayersInRange(soundid, Float:range, Float:x, Float:y, Float:z)
{
	for(new i; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i,range,x,y,z))
		PlayerPlaySound(i, soundid, x, y, z);
	}
}
public MoveCamera(playerid)
{
	new Float:FV[3], Float:CPs[3];
	GetPlayerCameraPos(playerid, CPs[0], CPs[1], CPs[2]);          // 	Cameras position in space
    GetPlayerCameraFrontVector(playerid, FV[0], FV[1], FV[2]);  //  Where the camera is looking at

	// Increases the acceleration multiplier the longer the key is held
	if(noclipdata[playerid][accelmul] <= 1) noclipdata[playerid][accelmul] += ACCEL_RATE;

	// Determine the speed to move the camera based on the acceleration multiplier
	new Float:speed = MOVE_SPEED[playerid] * noclipdata[playerid][accelmul];

	// Calculate the cameras next position based on their current position and the direction their camera is facing
	new Float:X, Float:Y, Float:Z;
	GetNextCameraPosition(noclipdata[playerid][mode], CPs, FV, X, Y, Z);
	MoveDynamicObject(noclipdata[playerid][flyobject], X, Y, Z, speed);

	// Store the last time the camera was moved as now
	noclipdata[playerid][lastmove] = GetTickCount();
	return 1;
}
public GetNextCameraPosition(move_mode, Float:CPs[3], Float:FV[3], &Float:X, &Float:Y, &Float:Z)
{
    // Calculate the cameras next position based on their current position and the direction their camera is facing
    #define OFFSET_X (FV[0]*6000.0)
	#define OFFSET_Y (FV[1]*6000.0)
	#define OFFSET_Z (FV[2]*6000.0)
	switch(move_mode)
	{
		case MOVE_FORWARD:
		{
			X = CPs[0]+OFFSET_X;
			Y = CPs[1]+OFFSET_Y;
			Z = CPs[2]+OFFSET_Z;
		}
		case MOVE_BACK:
		{
			X = CP[0]-OFFSET_X;
			Y = CP[1]-OFFSET_Y;
			Z = CP[2]-OFFSET_Z;
		}
		case MOVE_LEFT:
		{
			X = CPs[0]-OFFSET_Y;
			Y = CPs[1]+OFFSET_X;
			Z = CPs[2];
		}
		case MOVE_RIGHT:
		{
			X = CPs[0]+OFFSET_Y;
			Y = CPs[1]-OFFSET_X;
			Z = CPs[2];
		}
		case MOVE_BACK_LEFT:
		{
			X = CPs[0]+(-OFFSET_X - OFFSET_Y);
 			Y = CPs[1]+(-OFFSET_Y + OFFSET_X);
		 	Z = CPs[2]-OFFSET_Z;
		}
		case MOVE_BACK_RIGHT:
		{
			X = CPs[0]+(-OFFSET_X + OFFSET_Y);
 			Y = CPs[1]+(-OFFSET_Y - OFFSET_X);
		 	Z = CPs[2]-OFFSET_Z;
		}
		case MOVE_FORWARD_LEFT:
		{
			X = CPs[0]+(OFFSET_X  - OFFSET_Y);
			Y = CPs[1]+(OFFSET_Y  + OFFSET_X);
			Z = CPs[2]+OFFSET_Z;
		}
		case MOVE_FORWARD_RIGHT:
		{
			X = CPs[0]+(OFFSET_X  + OFFSET_Y);
			Y = CPs[1]+(OFFSET_Y  - OFFSET_X);
			Z = CPs[2]+OFFSET_Z;
		}
	}
}
//--------------------------------------------------

public CancelFlyMode(playerid)
{
    FlyModeA[playerid] = 0;
	CancelEdit(playerid);
	TogglePlayerSpectating(playerid, false);

	DestroyDynamicObject( noclipdata[playerid][flyobject]);
	noclipdata[playerid][cameramode] = CAMERA_MODE_NONE;
	return 1;
}

//--------------------------------------------------

public FlyMode(playerid)
{
	// Create an invisible object for the players camera to be attached to
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	noclipdata[playerid][flyobject] = CreateDynamicObject(19300, X, Y, Z, 0.0, 0.0, 0.0, -1, -1, -1, 50000000, 18000000);

	// Place the player in spectating mode so objects will be streamed based on camera location
	TogglePlayerSpectating(playerid, true);
	// Attach the players camera to the created object
	AttachCameraToDynamicObject(playerid,noclipdata[playerid][flyobject]);

	FlyModeA[playerid] = 1;
	noclipdata[playerid][cameramode] = CAMERA_MODE_FLY;
	return 1;
}

//--------------------------------------------------

public startone(playerid)
{
	new Float:objx, Float:objy, Float:objz;
	GetDynamicObjectPos(object[playerid], objx, objy, objz);
	MoveDynamicObject(object[playerid], objx, objy, objz+13,10);
	spark[playerid] = CreateDynamicObject(18718, objx, objy, objz, 0, 0, 0);
	dim[playerid] = CreateDynamicObject(18715, objx, objy, objz, 0, 0, 0);
	AttachDynamicObjectToObject(spark[playerid],object[playerid],0,0,-1,0,0,0,0);
	AttachDynamicObjectToObject(dim[playerid],object[playerid],0,0,0,0,0,0,0);
	SetTimerEx("startonex",1200,0,"d",playerid);
}

public startonex(playerid)
{
	new Float:oobjx, Float:oobjy, Float:oobjz;
	GetDynamicObjectPos(object[playerid], oobjx, oobjy, oobjz);
	CreateExplosion(oobjx, oobjy, oobjz, 0, 5);
	DestroyDynamicObject(object[playerid]);
	DestroyDynamicObject(spark[playerid]);
	DestroyDynamicObject(dim[playerid]);
	start[playerid] = 0;
}

public destroyFlare(playerid)
{
	DestroyDynamicObject(object[playerid]);
	start[playerid] = 0;
}

public PayDay()
{
	new string[228];
	new account;
	new checks;
	new electax;
	new count;
	new Housess;
	//drugtime = 1;
	new ghour, gminute, gsecond;
	gettime(ghour, gminute, gsecond);
	SetWorldTime(ghour);
	foreach(Player,i)
	{
	    if(gLogged[i] == 1)
	    {
		    if(PlayerInfo[i][pPayDay] >= 15)
			{
			    if(PlayerInfo[i][pJob1] == 27 || PlayerInfo[i][pJob2] == 27)	SendClientMessage(i, COLOR_WHITE, "* Recolta de droguri e gata!");
		 	    if(GetPlayerCash(i) < 0)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "Nu ti-ai platit datoriile, ai fost bagat in inchisoare.");
				    GameTextForPlayer(i, "~r~Ai fost prins!", 2000, 1);
				    SetPlayerInterior(i, 0);
					SetPlayerPos(i,1564.4834, -1671.7292, 12.4190);
					SetPlayerVirtualWorld(i, 0);
		    		PlayerInfo[i][pJail] = 1;
			        Update(i, pJailx);
			        TogglePlayerControllable(i, 0);
		        	SetTimerEx("SetControllable", 1000, 0, "i", i);
			        ResetPlayerWeapons(i);
					PlayerInfo[i][pWanted] = 0;
					Update(i,pWantedx);
					PlayerInfo[i][pJailTime] = 240;
					Update(i, pJailTimex);
					format(string, sizeof(string), "Esti in inchisoare pentru %d secunde.   Cautiune: -", PlayerInfo[i][pJailTime]);
					SendClientMessage(i, COLOR_WHITE, string);
				}
		  		account = PlayerInfo[i][pAccount];
				for(new h = 0; h < MAX_HOUSES; h++)
				if(strmatch(HouseInfo[h][hOwner], PlayerName(i))) count ++;
 				if(PlayerInfo[i][pPremiumAccount] != 0)
				PlayerInfo[i][pRespect]++;
				PlayerInfo[i][pRespect]++;
				Update(i, pRespectx);
				Housess = count;
				electax = Housess * SBizzInfo[4][sbEntrace];
				if(PlayerInfo[i][pPremiumAccount] != 0)
				checks = PlayerInfo[i][pAccount] / 5;
				else
				checks = PlayerInfo[i][pAccount] / 15;
				if(checks > 2500000 && PlayerInfo[i][pPremiumAccount] ==0) checks = 2000000;
				if(checks > 5000000 && PlayerInfo[i][pPremiumAccount] > 0) checks = 5000000;
				PlayerPlayMusic(i);
				PlayerInfo[i][pAccount] = account+checks;
				Update(i,pAccountx);
				new countn;
				for(new n=0; n<Total_Gang_Created; n++)
				if(GangInfo[n][zOwner] == PlayerInfo[i][pLeader] && GangInfo[n][zOwner] != 0) countn++;
				new hrent = HouseInfo[PlayerInfo[i][pHouse]][hPrivacy];
				if(PlayerInfo[i][pHouse] == 255) hrent = 0;
				HouseInfo[PlayerInfo[i][pHouse]][hStorage] += hrent;
				PlayerInfo[i][pCar1] = 0;		PlayerInfo[i][pCar2] = 0;		PlayerInfo[i][pCar3] = 0;		PlayerInfo[i][pCar4] = 0;
				PlayerInfo[i][pCar5] = 0;		PlayerInfo[i][pCar6] = 0;		PlayerInfo[i][pCar7] = 0;		PlayerInfo[i][pCar8] = 0;

				for(new v=0; v<MAX_VEHICLES; v++)
		      	{
		       	   	if(OwnedVeh(v) != 0)
				   	{
					   	if(strmatch(vInfo[OwnedVeh(v)][vOwner], PlayerName(i)))
				        {
		                	if(PlayerInfo[i][pCar1] == 0) { PlayerInfo[i][pCar1] = v; continue; }
				            else if(PlayerInfo[i][pCar2] == 0) { PlayerInfo[i][pCar2] = v; continue; }
				            else if(PlayerInfo[i][pCar3] == 0) { PlayerInfo[i][pCar3] = v; continue; }
				            else if(PlayerInfo[i][pCar4] == 0) { PlayerInfo[i][pCar4] = v; continue; }
				            else if(PlayerInfo[i][pCar5] == 0) { PlayerInfo[i][pCar5] = v; continue; }
				            else if(PlayerInfo[i][pCar6] == 0) { PlayerInfo[i][pCar6] = v; continue; }
				            else if(PlayerInfo[i][pCar7] == 0) { PlayerInfo[i][pCar7] = v; continue; }
				            else if(PlayerInfo[i][pCar8] == 0) { PlayerInfo[i][pCar8] = v; continue; }
							if(strmatch(vInfo[OwnedVeh(v)][vOwner], PlayerName(i)))
		      				{
					        	if(vInfo[OwnedVeh(v)][vVariabila] >= 20000)
					            {
					            	vInfo[OwnedVeh(v)][vVariabila] -= 10000;
				   					vUpdate(OwnedVeh(v), vVariabilax);
								}
								else if(vInfo[OwnedVeh(v)][vVariabila] < 20000 && vInfo[OwnedVeh(v)][vVariabila] > 0)
					            {
					            	vInfo[OwnedVeh(v)][vVariabila] = 0;
				   					vUpdate(OwnedVeh(v), vVariabilax);
								}
								else if(vInfo[OwnedVeh(v)][vVariabila] == 0)
					            {
					            	vInfo[OwnedVeh(v)][vVariabila] = 0;
				   					vUpdate(OwnedVeh(v), vVariabilax);
								}
								PlayerInfo[i][pLeasing] = vInfo[OwnedVeh(v)][vVariabila];//LEASING
								Update(i, pLeasingx);
		    				}
		        		}
					}
				}
		  		new finalpay = checks - hrent; //-  - TaxValue;
				PlayerInfo[i][pAccount] += finalpay;
		 		format(string, sizeof(string), "|______ SALARIU %s ______|",PlayerName(i));
				SendClientMessage(i, CRISTIAN, string);
				PaydayLog(string);

				format(string, sizeof(string), "»  Salariu: $%s  Chirie: -$%s", FormatNumber(checks), FormatNumber(hrent)); //FormatNumber());
				SendClientMessage(i, COLOR_WHITE, string);
				PaydayLog(string);

				format(string, sizeof(string), "»  Banca: $%s Taxa: $%s", FormatNumber(account), FormatNumber(account/1000));
				SendClientMessage(i, COLOR_WHITE, string);
				PaydayLog(string);

				if(PlayerInfo[i][pPremiumAccount] > 0) format(string, sizeof(string), "»  Dobanda Bancara: 0.1 (Maxim $ 5.000.000)");
				if(PlayerInfo[i][pPremiumAccount] < 1) format(string, sizeof(string), "»  Dobanda Bancara: 0.05 (Maxim $ 2.000.000)");
				SendClientMessage(i, COLOR_GRAD2, string);
				PaydayLog(string);

				format(string, sizeof(string), "»  Dobanda: $%s", FormatNumber(checks));
				SendClientMessage(i, COLOR_GRAD3, string);
				PaydayLog(string);

				format(string, sizeof(string), "»  Factura E.: $%s -%d Chiriasi", FormatNumber(electax), Houses);
				SendClientMessage(i, COLOR_GRAD3, string);
				PaydayLog(string);

				SBizzInfo[4][sbTill] += electax;
				sbUpdate(4,sbTillx);
				if(PlayerInfo[i][pLeasing] > 20000)
				{
					format(string, sizeof(string), "» Leasing: $10000 Mai aveti: %d de achizitionat",PlayerInfo[i][pLeasing]);
					SendClientMessage(i,COLOR_GRAD3,string);
					PaydayLog(string);
				}
				else if(PlayerInfo[i][pLeasing] < 20000 && PlayerInfo[i][pLeasing] > 0)
				{
					format(string, sizeof(string), "» Leasing: Ati achizitionat leasingul",PlayerInfo[i][pLeasing]);
					SendClientMessage(i,COLOR_GRAD3,string);
					PaydayLog(string);
				}

				format(string, sizeof(string), "»  Teritorii Detinute: %d Bani primiti: %d", countn, countn * 3000);
				if(PlayerInfo[i][pLeader] > 0)
				{
					SendClientMessage(i, COLOR_WHITE, string);
					PaydayLog(string);
				}

				format(string, sizeof(string), "»  Balanta Noua: $%s", FormatNumber(PlayerInfo[i][pAccount]));
				SendClientMessage(i, COLOR_GRAD5, string);
				PaydayLog(string);

				SendClientMessage(i, CRISTIAN, "|_____________________|");
				PaydayLog("|_____________________|");
				format(string,sizeof(string),"%s\n",CurrentTimeStamps());
				PaydayLog(string);
				SendClientMessage(i, COLOR_GRAD5, "Toate Masinile vor fi respawnate in 10 secunde!");
				SendClientMessage(i, COLOR_GRAD5, "{FFFFFF} Am pornit extragerea lotto, in 20 de secudne vom alege numarul castigator");
		   		if(PlayerInfo[i][pPunish] > 0)
				{
		    		PlayerInfo[i][pPunish] -= 1;
		            Update(i, pPunishx);
			 	}
				countn = 0;
				format(string, sizeof(string), "~y~Pay Day!");
				GameTextForPlayer(i, string, 5000, 1);
				PlayerInfo[i][pPayDay] = 0;
				Update(i,pPayDayx);
			}
			else
			{
			    SendClientMessage(i,-1,"Nu ai jucat suficient pentru a obtine payday");
				format(string,sizeof(string),"%s nu a jucat suficient\n",PlayerName(i));
				PaydayLog(string);
			}
		}
		else
		{
		    SendClientMessage(i,-1,"Nu esti logat,nu ai primit PayDay");
			format(string,sizeof(string),"%s nu a fost logat\n",PlayerName(i));
			PaydayLog(string);
		}
	}
	SetTimer("RespawnCars", 10000, 0);
 	SetTimer("Lotto", 20000, 0);
	return 1;
}



public Actiunea(playerid)
{
    MoveDynamicObject(pdgate3,1582.29700, -1638.15210, 13.91440,4);
	MoveDynamicObject(pdgate133, 1562.2676, -1686.7802, 15.0872,8);
	MoveDynamicObject(pdgate16,1564.57373, -1679.95715, 15.24650,8);
	MoveDynamicObject(pdgate1, 1590.0000, -1637.97522, 14.85870,3);
    MoveDynamicObject(poartajail1, 210.95593, 1730.09216, 24.53791, 5);
    MoveDynamicObject(poartajail2, 199.66290, 1729.86401, 15.18318, 5);
 	return 1;
}

public IsAExamCar(carid)
{
	for(new i = 0; i < sizeof(dmwcar); i++)
	{
		if(carid == dmwcar[i])	return 1;
	}
	return 0;
}
/*
public PauseTime(playerid)
{
//	new string[155];
    if(IsPlayerPaused(playerid))
    {
    	afktime[playerid] ++;
	 //   format(string, sizeof(string), "Afk De %d:%d minute",afktime[playerid]/60,afktime[playerid]-afktime[playerid]/60*60);
   //    	Update3DTextLabelText(afklabel[playerid], COLOR_WHITE, string);
		SetTimerEx("PauseTime", 1000, false, "i", playerid);
	}
	return 1;
}

public AfkKicked()
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
	    if(afktime[i]/60 > 10)
	    {
            new string[145];
			format(string, sizeof(string), "%s[%d] a primit kick motiv: afk mai mult de 10 minute",PlayerName(i),i);
	        SendClientMessageToAll(-1,"kick pentru ca ai stat mai mult de 10 minute afk");
			Kick(i);
	    }
	}
}
*/
public OnPlayerPause(playerid)
{
//    afklabel[playerid] = Create3DTextLabel("afk",COLOR_WHITE,0,0,0,50,-1,1);
//	Attach3DTextLabelToPlayer(afklabel[playerid], playerid, 0,0,0);
	//SetTimerEx("PauseTime", 1000, false, "i", playerid);
	PlayerInfo[playerid][pOnline] = 2;
	Update(playerid,pOnlinex);
	return 1;
}


public SyncUp()
{
	new string[255];
	new tmphour,tmpminute,tmpsecond;
    gettime(tmphour,tmpminute,tmpsecond);
    if(tmphour == 5 || tmphour == 11 || tmphour == 17 || tmphour == 23)
    {
     	if(tmpminute == 45)
		{
		    mysql_format(handle, query, 500, "UPDATE `players` SET `Coin` = 0");
			mysql_tquery(handle, query);
		    foreach(Player,i)
		    {
		        if(PlayerInfo[i][pOnline] > 0)
		        {
		            if(PlayerInfo[i][pCoin] > 0)
		            {
		            	PlayerInfo[i][pCoin] = 0;
		            	Update(i,pCoinx);
		        	}
		        }
		    }
		}
	}
	if(tmphour == 0 && tmpminute == 0)
	{
		for(new v=0; v<MAX_VEHICLES; v++)
		{
		    if(OwnedVeh(v))
		    {
    	    	vInfo[OwnedVeh(v)][vOre] ++;
				vUpdate(OwnedVeh(v),vOrex);
			}
		}

		mysql_format(handle, query, 500, "UPDATE `players` SET `Tutorial` = 1 WHERE `Tutorial` > 0");
		mysql_tquery(handle, query);
	    foreach(Player,i)
	    {
	        if(PlayerInfo[i][pTutorial] > 0)
	        {
	            PlayerInfo[i][pTutorial] = 0;
	            Update(i,pTutorialx);
            }
	    }
		    
				
		mysql_format(handle, query, 500, "UPDATE `players` SET `Banned` = `Banned`-1 WHERE `Banned` > 0");
		mysql_tquery(handle, query);
	}
    if(tmpminute == 0)
	{
		PayDay();
		mysql_format(handle, query, 500, "UPDATE `gangzone` SET `Hour` = `Hour`-1 WHERE `Hour` > 0");
		mysql_tquery(handle, query);
		foreach(Player,i)
		if(PlayerInfo[i][pPunish]>0)
		{
			PlayerInfo[i][pPunish]--;
			Update(i,pPunishx);
		}
	}
    if(WarStarted >= 1 && WarStarted <= 10) WarStarted++;
    if(WarStarted > 2)
    {
        new WarWon = 0, GangColor, ftext[64], ftext1[64];
		if(WarPoints[WarF] > WarPoints[WarF1]) WarWon = WarF;
        if(WarPoints[WarF] < WarPoints[WarF1]) WarWon = WarF1;

	    if(WarPoints[WarF] == WarPoints[WarF1])
	    {
	        WarWon = GangInfo[WarZone][zOwner];
	        GangInfo[WarZone][zOwner] = WarWon;
			zUpdate(WarZone,zOwnerx);
	        GangZoneStopFlashForAll(Gangzone[WarZone]);
	        foreach(Player,i)
			{
			    if(PlayerInfo[i][pAchievement7] == 1)
        		GangZoneShowForPlayer(i, Gangzone[WarZone],GetTeamZoneColor(GangInfo[WarZone][zOwner]));
      		}
            WarStarted = 0;
			format(string, sizeof(string), "Nimeni nu a castigat Razboiul, scorul a fost egal. Teritoriul se intoarce la proprietar");
			SendClientMessageToAll(COLOR_LIGHTBLUE, string);
			KillTimer(turftimercount);
			TextDrawHideForAll(Textwarevent);
	        return 1;
	    }
        if(WarF == 5) strmid(ftext, "{BF4D40}[Rifa Gang]", 0, 64, 64);
        if(WarF == 6) strmid(ftext, "{00E6FF}[Triads]", 0, 64, 64);
	    if(WarF == 16) strmid(ftext,"{F2AD0D}[Corleone Famigla]", 0, 64, 64);
	 	if(WarF == 13) strmid(ftext,"{D02FB0}[Russian Bratva]", 0, 64, 64);
		if(WarF == 14) strmid(ftext,"{B300FF}[Ballas Gang]", 0, 64, 64);
	 	if(WarF == 15) strmid(ftext,"{FF8000}[Sevile Gang]", 0, 64, 64);
	 	if(WarF1 == 5) strmid(ftext1, "{BF4D40}[Rifa Gang]", 0, 64, 64);
        if(WarF1 == 6) strmid(ftext1, "{00E6FF}[Triads]", 0, 64, 64);
	    if(WarF1 == 16) strmid(ftext1,"{F2AD0D}[Corleone Famigla]", 0, 64, 64);
	 	if(WarF1 == 13) strmid(ftext1,"{D02FB0}[Russian Bratva]", 0, 64, 64);
		if(WarF1 == 14) strmid(ftext1,"{B300FF}[Ballas Gang]", 0, 64, 64);
	 	if(WarF1 == 15) strmid(ftext1,"{FF8000}[Sevile Gang]", 0, 64, 64);
		KillTimer(turftimercount);
		TextDrawHideForAll(Textwarevent);
        if(WarWon == 5) GangColor = color_5;
		else if(WarWon == 6) GangColor = color_6;
		else if(WarWon == 16) GangColor = color_16;
		else if(WarWon == 13) GangColor = color_13;
		else if(WarWon == 14) GangColor = color_14;
		else if(WarWon == 15) GangColor = color_15;

        GangInfo[WarZone][zOwner] = WarWon;
		zUpdate(WarZone,zOwnerx);
		GangZoneHideForAll(Gangzone[WarZone]);
		GangZoneStopFlashForAll(Gangzone[WarZone]);
		GangZoneShowForAll(Gangzone[WarZone], GangColor);

        format(string, sizeof(string), "{1169EE}["#SERVERNAME"] {FFFFFF}Razboiul s-a sfarsit! Scor Final: %s %d - %d %s", ftext, WarPoints[WarF], WarPoints[WarF1], ftext1);
		SendClientMessageToAll(COLOR_LIGHTBLUE, string);
  		WarStarted = 0;
		GangInfo[WarZone][zHour] = 3;
		zUpdate(WarZone,zHourx);
		WarZone = 999;
		WarStarted = 0;
		WarF = 0;
		WarF1 = 0;
		for(new w = 0; w <MAX_GANGZONES; w++)
       	WarPoints[w] = 0;
	}
	foreach(Player,i)
	{
	    if(gLogged[i] != 0)
	    {
		    PlayerInfo[i][pPayDay] ++;
		    Update(i,pPayDayx);
		    if(GetPlayerWantedLevel(i)> 0)
			{
			    WantedLeft[i] ++;
				if(WantedLeft[i] >= 20)
				{
		   			SetPlayerWantedLevel(i, GetPlayerWantedLevel(i) - 1);
		   			SendClientMessage(i, COLOR_YELLOW, "Wantedul tau a scazut");
		    		WantedLeft[i] = 0;
				}
	   		}
		}
	}
	return 1;
}
public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat)
{
	if(FrenodeMano[vehicleid] == 1)
    {
	    GetVehiclePos(playerid, VehComprobar[vehicleid][0], VehComprobar[vehicleid][1], VehComprobar[vehicleid][2]);
        if(VehComprobar[vehicleid][0] == VehFrenoPOS[vehicleid][0] || VehComprobar[vehicleid][1] == VehFrenoPOS[vehicleid][1] || VehComprobar[vehicleid][2] == VehFrenoPOS[vehicleid][2]|| VehComprobar[vehicleid][3] == VehFrenoPOS[vehicleid][3]) return 1;
        SetVehiclePos(vehicleid, VehFrenoPOS[vehicleid][0], VehFrenoPOS[vehicleid][1], VehFrenoPOS[vehicleid][2]);
        SetVehicleZAngle(vehicleid, VehFrenoPOS[vehicleid][3]);
    }
	return 1;
}

public LoadFS()
{
    SendRconCommand("loadfs Harta");
	return 1;
}
public RestartTimer()
{
    if(Restartsecond > -1)
    {
        new string[144];
        if(Restartsecond == 4)
   		format(string, sizeof(string),"~b~RESTART IN: %d",Restartsecond-1);
        else if(Restartsecond == 3)
   		format(string, sizeof(string),"~y~RESTART IN: %d",Restartsecond-1);
        else if(Restartsecond == 2)
   		format(string, sizeof(string),"~r~RESTART IN: %d",Restartsecond-1);
        else if(Restartsecond <= 1)
        {
			GameTextForAll("~n~~n~~n~~p~SERVERUL SE RESTARTEAZA~n~~b~SE FACE UPDATE~n~~n~~n~~n~~w~LOADING...", 15000, 3);
			PlaySoundForAll(1057);
		}
		else
   		format(string, sizeof(string),"~w~RESTART IN: ~w~%d",Restartsecond-1);
        if(Restartsecond > 1)
		GameTextForAll(string, 700, 4);
        if(Restartsecond > 0)
		PlaySoundForAll(1056);
        Restartsecond--;
   	}
	return 1;
}
public RandomWeather()
{
    KillTimer(timerul[7]);
    new weather = random(19);
	if(weather == 1)
	{
	    SetWeather(1);
		SendClientMessageToAll(COLOR_LIGHTBLUE,"[Weather News]: Este o vreme insorita, Perfect pentru inotat!");
		timerul[7] = SetTimer("RandomWeather", 1200000,false);//20 min
	}
	else if(weather == 2)
	{
	    SetWeather(2);
		SendClientMessageToAll(COLOR_LIGHTBLUE,"[Weather News]: Este o vreme caniculara, Perfect pentru a sta acasa!");
		timerul[7] = SetTimer("RandomWeather", 900000,false);//15 min
	}
	else if(weather == 3)
	{
	    SetWeather(3);
		SendClientMessageToAll(COLOR_LIGHTBLUE,"[Weather News]: Este o vreme insorita, Perfect pentru condus!");
		timerul[7] = SetTimer("RandomWeather", 1200000,false);//20 min
	}
	else if(weather == 4)
	{
     	SetWeather(4);
		SendClientMessageToAll(COLOR_LIGHTBLUE,"[Weather News]: Este o vreme insorita, perfect pentru o plimbare!");
		timerul[7] = SetTimer("RandomWeather", 600000,false);//10 min
	}
	else if(weather == 5)
	{
	    SetWeather(5);
		SendClientMessageToAll(COLOR_LIGHTBLUE,"[Weather News]: Este o vreme inorata, aveti grija pe la ploaie!");
		timerul[7] = SetTimer("RandomWeather", 720000,false);//12 min
	}
	else if(weather == 6)
	{
	    SetWeather(6);
		SendClientMessageToAll(COLOR_LIGHTBLUE,"[Weather News]: Este o vreme cu ceata, aveti grija pe strada!");
		timerul[7] = SetTimer("RandomWeather", 600000,false);//10 min
	}
	else if(weather == 7)
	{
	    SetWeather(7);
		SendClientMessageToAll(COLOR_LIGHTBLUE,"[Weather News]: Este o vreme inorita cu sanse de ceata, nu parasiti orasul!");
		timerul[7] = SetTimer("RandomWeather", 1200000,false);//20 min
	}
	else if(weather == 8)
	{
	    SetWeather(8);
		SendClientMessageToAll(COLOR_LIGHTBLUE,"[Weather News]: Este o vreme furtunoasa, ramaneti in case!");
		timerul[7] = SetTimer("RandomWeather", 360000,false);//6 min
	}
	else if(weather == 9)
	{
	    SetWeather(9);
		SendClientMessageToAll(COLOR_LIGHTBLUE,"[Weather News]: Este o vreme cetoasa, aeroportul ar trebui sa aiba grija!");
		timerul[7] = SetTimer("RandomWeather", 300000,false);//5 min
	}
	else if(weather == 10)
	{
	    SetWeather(10);
		SendClientMessageToAll(COLOR_LIGHTBLUE,"[Weather News]: Este o vreme frumoasa , puteti iesi pentru o plimbare!");
		timerul[7] = SetTimer("RandomWeather", 1320000,false);//22 min
	}
	else if(weather == 11)
	{
	    SetWeather(11);
		SendClientMessageToAll(COLOR_LIGHTBLUE,"[Weather News]: Este o vreme senina , mergeti la o plimbare!");
		SetTimer("RandomWeather", 960000,false);//16 min
	}
	else if(weather == 12)
	{
	    SetWeather(12);
		SendClientMessageToAll(COLOR_LIGHTBLUE,"[Weather News]: Este o vreme foarte inorata, aveti grija la ploaie!");
		timerul[7] = SetTimer("RandomWeather", 420000,false);//7 min
	}
	else if(weather == 13)
	{
	    SetWeather(13);
		SendClientMessageToAll(COLOR_LIGHTBLUE,"[Weather News]: Este o vreme buna pentru iesit pe afara!");
		timerul[7] = SetTimer("RandomWeather", 1080000,false);//18 min
	}
	else if(weather == 14)
	{
	    SetWeather(14);
		SendClientMessageToAll(COLOR_LIGHTBLUE,"[Weather News]: Este o vreme frumoasa, perfect pentru Jogging!");
		timerul[7] = SetTimer("RandomWeather", 1200000,false);//20 min
	}
	else if(weather == 15)
	{
	    SetWeather(15);
		SendClientMessageToAll(COLOR_LIGHTBLUE,"[Weather News]: Este o vreme inorata, aveti grija!");
		timerul[7] = SetTimer("RandomWeather", 480000,false);//8 min
	}
	else if(weather == 17)
	{
	    SetWeather(17);
		SendClientMessageToAll(COLOR_LIGHTBLUE,"[Weather News]: Este o vreme insorita , nu luati prea multe haine!");
		timerul[7] = SetTimer("RandomWeather", 720000,false);//12 min
	}
	else if(weather == 18)
	{
	    SetWeather(37);
		SendClientMessageToAll(COLOR_LIGHTBLUE,"[Weather News]: Este o vreme schimbatoare afara, bucurati-va de aerul curat!");
		timerul[7] = SetTimer("RandomWeather", 720000,false);//12 min
	}
	else timerul[7] = SetTimer("RandomWeather", 1000,false);//
	return 1;
}
public RandomChatMessage()
{
	OOCNews(0xFFFFFFFF, RandomChatMessages[random(sizeof(RandomChatMessages))]);
	new string[155];
	foreach(Player,i)
	{
	    if(PlayerDrunk[i] > 0)
		{
			PlayerDrunk[i] = 0;
			PlayerDrunkTime[i] = 0;
			GameTextForPlayer(i, "~p~Nu mai esti~n~~w~Beat", 3500, 1);
		}
		if(PlayerInfo[i][pIphone] == 1 && PhoneOnCharge[i] == 0)
		{
		    PlayerInfo[i][pBaterie] -= 1;
 			Update(i, pBateriex);
		    if(PlayerInfo[i][pBaterie] == 15)
           	format(string, sizeof(string), "~r~!ATENTIE!~n~~w~Mai aveti 15%% baterie~n~Conectati telefonul la o priza~n~Sau urcati inr-o masina~n~Si scrieti /charge");
    	    if(PlayerInfo[i][pBaterie] == 3)
           	format(string, sizeof(string), "~r~!ATENTIE!~n~~w~Mai aveti 3%% baterie~n~Conectati telefonul la o priza~n~Sau urcati inr-o masina~n~Si scrieti /charge");
  	        if(PlayerInfo[i][pBaterie] == 1)
		  	format(string, sizeof(string), "~r~!ATENTIE!~n~~w~Telefonul Dumneavoastra s-a inchis");
			GameTextForPlayer(i, string, 7000, 5);
  		}
	}
	return 1;
}
public OOCNews(color,string[])
{
	foreach(Player,i)
	{
		if(gNews[i] == 0)
		SendClientMessage(i, color, string);
	}
	return 1;
}
public EncodeVehicle(vehicleid)
{
    new pass[64];
    if(OwnedVeh(vehicleid))
	VehiclePass[vehicleid] = vInfo[OwnedVeh(vehicleid)][vCarCode];
	else if(IsACopCar(vehicleid))
	{
		if(securitate[1] == 0)
 		VehiclePass[vehicleid] =0;
 		else if(securitate[1] == 3)
		{
	    	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[1] == 4)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
  		}
		else if(securitate[1] == 5)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[1] == 6)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsAnFbiCar(vehicleid))
	{
	    if(securitate[2] == 0)
 		VehiclePass[vehicleid] =0;
 		else if(securitate[2] == 3)
		{
	    	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[2] == 4)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[2] == 5)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[2] == 6)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsNgCar(vehicleid))
	{
     	if(securitate[3] == 0)
		VehiclePass[vehicleid] =0;
		else if(securitate[3] == 3)
		{
	    	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[3] == 4)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[3] == 5)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[3] == 6)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsAnPresident(vehicleid))
	{
	    if(securitate[4] == 0)
		VehiclePass[vehicleid] =0;
		else if(securitate[4] == 3)
		{
	    	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[4] == 4)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[4] == 5)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[4] == 6)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsARifaCar(vehicleid))
	{
        if(securitate[5] == 0)
		VehiclePass[vehicleid] =0;
		else if(securitate[5] == 3)
		{
	    	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[4] == 4)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[4] == 5)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[4] == 6)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsATriadsCar(vehicleid))
	{
        if(securitate[6] == 0)
		VehiclePass[vehicleid] =0;
		else if(securitate[6] == 3)
		{
	    	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[6] == 4)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[6] == 5)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[6] == 6)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsAGovernmentCar(vehicleid))
	{
        if(securitate[7] == 0)
		VehiclePass[vehicleid] =0;
 		else if(securitate[7] == 3)
		{
	    	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[7] == 4)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[7] == 5)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[7] == 6)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsAHitCar(vehicleid))
	{
	    if(securitate[8] == 0)
		VehiclePass[vehicleid] =0;
		else if(securitate[8] == 3)
		{
	    	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[8] == 4)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[8] == 5)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[8] == 6)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsANewsCar(vehicleid))
	{
	    if(securitate[9] == 0)
		VehiclePass[vehicleid] =0;
 		else if(securitate[9] == 3)
		{
	    	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[9] == 4)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[9] == 5)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[9] == 6)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsAnTaxiCar(vehicleid))
	{
        if(securitate[10] == 0)
		VehiclePass[vehicleid] =0;
 		else if(securitate[10] == 3)
		{
	    	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[10] == 4)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[10] == 5)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[10] == 6)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsAnNavyCar(vehicleid))
	{
        if(securitate[11] == 0)
		VehiclePass[vehicleid] =0;
 		else if(securitate[11] == 3)
		{
	    	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[11] == 4)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[11] == 5)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[11] == 6)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsAParlamentCar(vehicleid))
	{
	    if(securitate[12] == 0)
		VehiclePass[vehicleid] =0;
		else if(securitate[12] == 3)
		{
	    	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[12] == 4)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[12] == 5)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[12] == 6)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsABratvaCar(vehicleid))
	{
        if(securitate[13] == 0)
		VehiclePass[vehicleid] =0;
		else if(securitate[13] == 3)
		{
	    	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[13] == 4)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[13] == 5)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[13] == 6)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsABallasCar(vehicleid))
	{
        if(securitate[14] == 0)
		VehiclePass[vehicleid] =0;
		else if(securitate[14] == 3)
		{
	    	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[14] == 4)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[14] == 5)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[14] == 6)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsACrlCar(vehicleid))
	{
        if(securitate[16] == 0)
		VehiclePass[vehicleid] =0;
		else if(securitate[16] == 3)
		{
	    	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[16] == 4)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[16] == 5)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[16] == 6)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsASevileCar(vehicleid))
	{
        if(securitate[15] == 0)
		VehiclePass[vehicleid] =0;
		else if(securitate[15] == 3)
		{
	    	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[15] == 4)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[15] == 5)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[15] == 6)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsAnCiaCar(vehicleid))
	{
	    if(securitate[17] == 0)
		VehiclePass[vehicleid] =0;
		else if(securitate[17] == 3)
		{
	    	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[17] == 4)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[17] == 5)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(securitate[17] == 6)
		{
	    	format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else
	VehiclePass[vehicleid] = 0;
	return 1;
}
public SendJobMessage(job, color, string[])
{
	foreach(Player,i)
	{
		if(PlayerInfo[i][pJob2] == job || PlayerInfo[i][pJob1] == job)
  		SendClientMessage(i, color, string);
	}
}
public SendDepartamentMessage(color, string[])
{
	foreach(Player,i)
	{
    	if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pMember] == 2 ||  PlayerInfo[i][pLeader] == 2 ||
		PlayerInfo[i][pMember] == 4 ||  PlayerInfo[i][pLeader] == 4 || PlayerInfo[i][pMember] == 7 ||  PlayerInfo[i][pLeader] == 7 ||
		PlayerInfo[i][pMember] == 12 ||  PlayerInfo[i][pLeader] == 12 || PlayerInfo[i][pLeader] == 3 ||	PlayerInfo[i][pMember] == 3 ||
		PlayerInfo[i][pLeader] == 17 || PlayerInfo[i][pMember] == 17 || PlayerInfo[i][pLeader] == 11 || PlayerInfo[i][pMember] == 11 ||
		PlayerInfo[i][pJob1] == 10 || PlayerInfo[i][pJob2] == 10)
		{
			SendClientMessage(i, color, string);
		}
 	}
}
public IsAMafia(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member==5 || member==6 || member== 16 || member==13 || member == 14 || member == 15)
		{
			return 1;
		}
		else if(leader==5 || leader==6 || leader== 16 || leader==13 || leader == 14 || leader == 15)
		{
			return 1;
		}
	}
	return 0;
}
public IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==1 || member==2 || member==3 || member==11 || member==17)
		{
		    return 1;
		}
		else if(leader==1 || leader==2 || leader==3 || leader==11 || leader==17)
		{
		    return 1;
		}
	}
	return 0;
}

public km_counter(vehicleid)
{//inlocuim valorile noi cu cele vechi
	x1[vehicleid] = x2[vehicleid];
    y1[vehicleid] = y2[vehicleid];
    z1[vehicleid] = z2[vehicleid];
    //stocam noile valori
    GetVehiclePos(vehicleid, x2[vehicleid], y2[vehicleid], z2[vehicleid]);
    //calculam distanta dintre cele doua punce vehciul punct si cel nou
    x1[vehicleid] -= x2[vehicleid];
    y1[vehicleid] -= y2[vehicleid];
    z1[vehicleid] -= z2[vehicleid];
    //acum il transformam in kilometrii(deoarece distanta este in metrii) impartind la 1000.0
    VehicleKM[vehicleid] += floatsqroot((x1[vehicleid]*x1[vehicleid])+(y1[vehicleid]*y1[vehicleid])+(z1[vehicleid]*z1[vehicleid])) / 1000.0;
}
public IsAPlane(carid)
{
	new modelid = GetVehicleModel(carid);
	if(modelid == 460 || modelid == 464 || modelid == 476 || modelid == 511 || modelid == 512 || modelid == 513 || modelid == 519 || modelid == 520 || modelid == 553 || modelid == 577 || modelid == 592 || modelid == 593)
	{
		return 1;
	}
	return 0;
}
public IsABoat(carid)
{
  	new modelid = GetVehicleModel(carid);
	if(modelid == 472 || modelid == 473 || modelid == 493 || modelid == 595 || modelid == 484 || modelid == 430 || modelid == 453 || modelid == 452 || modelid == 446 || modelid == 454)
	{
		return 1;
	}
	return 0;
}
public IsABike(carid)
{
    new modelid = GetVehicleModel(carid);
	if(modelid == 509 || modelid == 481 || modelid == 510)
	{
		return 1;
	}
	return 0;
}
LoadBarrer()
{
	Barrer[0] = CreateDynamicObject(1225, -1132.35779, 1056.78369, 1345.72986,   0.00000, 0.00000, 0.00000);
	Barrer[1] = CreateDynamicObject(1225, -1132.45923, 1058.67493, 1345.72986,   0.00000, 0.00000, 0.00000);
 	Barrer[2] = CreateDynamicObject(1225, -1129.27551, 1056.70825, 1345.72986,   0.00000, 0.00000, 0.00000);
	Barrer[3] = CreateDynamicObject(1225, -1129.48364, 1058.78601, 1345.72986,   0.00000, 0.00000, 0.00000);
	Barrer[4] = CreateDynamicObject(1225, -1131.01819, 1057.77197, 1345.72986,   0.00000, 0.00000, 0.00000);
	Barrer[5] = CreateDynamicObject(1225, -972.71875, 1062.02869, 1345.05701,   0.00000, 0.00000, 0.00000);
	Barrer[6] = CreateDynamicObject(1225, -972.54120, 1059.94971, 1345.05701,   0.00000, 0.00000, 0.00000);
	Barrer[7] = CreateDynamicObject(1225, -976.14075, 1059.89929, 1345.05701,   0.00000, 0.00000, 0.00000);
	Barrer[8] = CreateDynamicObject(1225, -976.38049, 1062.27783, 1345.05701,   0.00000, 0.00000, 0.00000);
	Barrer[9] = CreateDynamicObject(1225, -974.57098, 1061.13208, 1345.05701,   0.00000, 0.00000, 0.00000);
	Barrer[10] = CreateDynamicObject(1225, -980.64343, 1087.21265, 1344.26807,   0.00000, 0.00000, 0.00000);
	Barrer[11] = CreateDynamicObject(1225, -972.92914, 1077.16553, 1344.26807,   0.00000, 0.00000, 0.00000);
	Barrer[12] = CreateDynamicObject(1225, -976.68091, 1029.98596, 1348.07959,   0.00000, 0.00000, 0.00000);
	Barrer[13] = CreateDynamicObject(1225, -975.09601, 1040.68701, 1351.81641,   0.00000, 0.00000, 0.00000);
	Barrer[14] = CreateDynamicObject(1225, -974.06598, 1024.03015, 1354.37732,   0.00000, 0.00000, 0.00000);
	Barrer[15] = CreateDynamicObject(1225, -1129.67432, 1089.18701, 1348.80688,   0.00000, 0.00000, 0.00000);
	Barrer[16] = CreateDynamicObject(1225, -1129.17102, 1095.58142, 1354.40698,   0.00000, 0.00000, 0.00000);
	Barrer[17] = CreateDynamicObject(1225, -1131.54456, 1079.19592, 1352.53015,   0.00000, 0.00000, 0.00000);
	Barrer[18] = CreateDynamicObject(1225, -1131.80920, 1041.87024, 1345.11755,   0.00000, 0.00000, 0.00000);
	Barrer[19] = CreateDynamicObject(1225, -1125.06311, 1031.59534, 1345.11755,   0.00000, 0.00000, 0.00000);
	Barrer[20] = CreateDynamicObject(1225, -1013.70410, 1077.79492, 1342.72754,   0.00000, 0.00000, 0.00000);
	Barrer[21] = CreateDynamicObject(1225, -1018.01672, 1035.18079, 1341.70129,   0.00000, 0.00000, 0.00000);
	Barrer[22] = CreateDynamicObject(1225, -1041.25000, 1042.70276, 1341.43701,   0.00000, 0.00000, 0.00000);
	Barrer[23] = CreateDynamicObject(1225, -1039.05994, 1087.72937, 1342.40784,   0.00000, 0.00000, 0.00000);
	Barrer[24] = CreateDynamicObject(1225, -1040.80798, 1075.43665, 1347.20459,   0.00000, 0.00000, 0.00000);
	Barrer[25] = CreateDynamicObject(1225, -1041.93115, 1062.41541, 1345.54761,   0.00000, 0.00000, 0.00000);
	Barrer[26] = CreateDynamicObject(1225, -1089.49207, 1039.19934, 1342.71313,   0.00000, 0.00000, 0.00000);
	Barrer[27] = CreateDynamicObject(1225, -1071.28857, 1092.78491, 1342.31018,   0.00000, 0.00000, 0.00000);
	Barrer[28] = CreateDynamicObject(1225, -1065.01721, 1075.11816, 1341.30151,   0.00000, 0.00000, 0.00000);
	Barrer[29] = CreateDynamicObject(1225, -1066.30872, 1052.39990, 1343.24207,   0.00000, 0.00000, 0.00000);
	Barrer[30] = CreateDynamicObject(1225, -1063.39648, 1037.02332, 1346.16089,   0.00000, 0.00000, 0.00000);
	Barrer[31] = CreateDynamicObject(1225, -1054.42908, 1079.56824, 1342.49878,   0.00000, 0.00000, 0.00000);
	return 1;
}
DestroyBarrer()
{
    for(new b;b<sizeof(Barrer);b++)
	DestroyDynamicObject(Barrer[b]);
	return 1;
}
public CheckGas()
{
	DealStanceAnim(0);
	ApplyActorAnimation(Actor[0], "DEALER","DEALER_IDLE", 4.0, 1, 1, 1, 1, -1);//bm
	ApplyActorAnimation(Actor[1], "STRIP", "strip_A", 4.0, 1, 1, 1, 1, -1);//strip
	ApplyActorAnimation(Actor[2], "STRIP", "strip_G", 4.0, 1, 1, 1, 1, -1);//strip
	ApplyActorAnimation(Actor[3], "STRIP", "strip_F", 4.0, 1, 1, 1, 1, -1);//strip
	ApplyActorAnimation(Actor[4], "STRIP", "strip_E", 4.0, 1, 1, 1, 1, -1);//strip
	ApplyActorAnimation(Actor[5], "STRIP", "strip_D", 4.0, 1, 1, 1, 1, -1);//strip
	ApplyActorAnimation(Actor[6], "DEALER","DEALER_IDLE", 4.0, 1, 1, 1, 1, -1);//salvamar
	ApplyActorAnimation(Actor[7], "DEALER","DEALER_IDLE", 4.0, 1, 1, 1, 1, -1);//salvamar
	ApplyActorAnimation(Actor[8], "DEALER","DEALER_IDLE", 4.0, 1, 1, 1, 1, -1);//box spa
	ApplyActorAnimation(Actor[9], "DEALER","DEALER_IDLE", 4.0, 1, 1, 1, 1, -1);//gym spa
	DestroyBarrer();
	LoadBarrer();
	foreach(Player,i)
	{
	    if(gLogged[i] != 0)
	    {
	        CheckSlots(i);
		 	if(PlayerInfo[i][pWanted]!=GetPlayerWantedLevel(i))
		 	{
     			PlayerInfo[i][pWanted] = GetPlayerWantedLevel(i);
     			Update(i, pWantedx);
			}
			if(PlayerInfo[i][pWanted]>8||GetPlayerWantedLevel(i)>8)
	        {
     			PlayerInfo[i][pWanted] = 8;
     			SetPlayerWantedLevel(i,8);
     			Update(i, pWantedx);
			}

	     	SetPlayerScore(i, PlayerInfo[i][pLevel]);
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
				new vehiclegas = GetPlayerVehicleID(i);
				if(VehicleEngine[vehiclegas] != 0)
			 	{
				 	if(GetVehicleSpeed(vehiclegas) > 20 && switched[vehiclegas] == 0 && gGas[vehiclegas] >= 1)
				    {
						if(gGas[vehiclegas] <= 10) PlayerPlaySound(i, 1085, 0.0, 0.0, 0.0);
						if(IsAPlane(vehiclegas) || IsABoat(vehiclegas) || IsABike(vehiclegas) || IsAPlane(vehiclegas))
    					gGas[vehiclegas]++;
    					if(GetVehicleSpeed(vehiclegas) > 200)
						gGas[vehiclegas]--;
						gGas[vehiclegas]--;
   					}
    				else if(GetVehicleSpeed(vehiclegas) > 20 && switched[vehiclegas] == 1 && GasCar[vehiclegas] >= 1)// && vInfo[OwnedVeh(vehiclegas)][vTowed] == 1)
				    {
        	            if(GasCar[vehiclegas] <= 10) PlayerPlaySound(i, 1085, 0.0, 0.0, 0.0);
						if(GetVehicleSpeed(vehiclegas) > 200)
   						GasCar[vehiclegas]--;
   						GasCar[vehiclegas]--;
        	 		}
       			}
   			}
		}
	}
	return 1;
}
public IsADiesel(carid)
{
    new carids = GetVehicleModel(carid);
 	if(carids == 400 || carids == 403 || carids == 404 || carids == 407 || carids == 408 || carids == 414 || carids == 416 ||
	   carids == 423 || carids == 427 || carids == 428 || carids == 431 || carids == 433 || carids == 437 || carids == 442 ||
	   carids == 443 || carids == 444 || carids == 455 || carids == 456 || carids == 459 || carids == 470 || carids == 475 ||
	   carids == 479 || carids == 482 || carids == 483 || carids == 486 || carids == 489 || carids == 490 || carids == 495 ||
	   carids == 498 || carids == 499 || carids == 505 || carids == 508 || carids == 514 || carids == 515 || carids == 524 ||
	   carids == 544 || carids == 552 || carids == 554 || carids == 556 || carids == 557 || carids == 578 || carids == 579 ||
	   carids == 599 || carids == 609 || carids == 413)  return 1;
	return 0;
}
public IsAnFbiCar(carid)
{
	for(new i = 0; i < sizeof(fbicar); i++)
	{
		if(carid == fbicar[i])	return 1;
	}
	return 0;
}

public IsNgCar(carid)
{
	for(new i = 0; i < sizeof(armycar); i++)
	{
	    if(carid == armycar[i]) return 1;
	}
	return 0;
}

public IsAnCiaCar(carid)
{
	for(new i = 0; i < sizeof(ciacar); i++)
	{
		if(carid == ciacar[i])	return 1;
	}
	return 0;
}

public IsAnNavyCar(carid)
{
	for(new i = 0; i < sizeof(navycar); i++)
	{
		if(carid == navycar[i])	return 1;
	}
	return 0;
}

public IsAHitCar(carid)
{
	for(new i = 0; i < sizeof(hitmencar); i++)
	{
	    if(carid == hitmencar[i]) return 1;
	}
	return 0;
}

public IsAnPresident(carid)
{
	for(new i = 0; i < sizeof(presidentcar); i++)
	{
		if(carid == presidentcar[i])	return 1;
	}
	return 0;
}

public IsARifaCar(carid)
{
	for(new i = 0; i < sizeof(rifacar); i++)
	{
		if(carid == rifacar[i])	return 1;
	}
	return 0;
}

public IsATriadsCar(carid)
{
	for(new i = 0; i < sizeof(triadscar); i++)
	{
		if(carid == triadscar[i])	return 1;
	}
	return 0;
}

public IsAGovernmentCar(carid)
{
	for(new i = 0; i < sizeof(governcar); i ++)
	{
		if(carid == governcar[i]) return 1;
	}
	return 0;
}

public IsAParlamentCar(carid)
{
	for(new i = 0; i < sizeof(parlamentcar); i++)
	{
		if(carid == parlamentcar[i])	return 1;
	}
	return 0;
}

public IsABratvaCar(carid)
{
	for(new i = 0; i < sizeof(bratvacar); i++)
	{
		if(carid == bratvacar[i])	return 1;
	}
	return 0;
}

public IsABallasCar(carid)
{
	for(new i = 0; i < sizeof(ballascar); i++)
	{
		if(carid == ballascar[i])	return 1;
	}
	return 0;
}

public IsASevileCar(carid)
{
    for(new i = 0; i < sizeof(sevilecar); i++)
	{
		if(carid == sevilecar[i])	return 1;
	}
	return 0;
}

public IsACrlCar(carid)
{
	for(new i = 0; i < sizeof(crlcar); i++)
	{
		if(carid == crlcar[i])	return 1;
	}
	return 0;
}
public IsAnLevelCar(carid)
{
	for(new i = 0; i < sizeof(levelcar); i++)
	{
		if(carid == levelcar[i])	return 1;
	}
	return 0;
}

public IsAnDerbyCar(carid)
{
	for(new i = 0; i < sizeof(derbycar); i++)
	{
		if(carid == derbycar[i])	return 1;
	}
	return 0;
}

public IsAnHelperCar(carid)
{
	for(new i = 0; i < sizeof(helpercar); i++)
	{
		if(carid == helpercar[i])	return 1;
	}
	return 0;
}
public IsAnAmbulance(carid)
{
 	for(new i = 0; i < sizeof(ambulance); i++)
	{
		if(carid == ambulance[i])	return 1;
	}
	return 0;
}

public IsAKartCar(carid)
{
 	for(new i = 0; i < sizeof(kartcar); i++)
	{
		if(carid == kartcar[i])	return 1;
	}
	return 0;
}

public IsARentableCarLV(carid)
{
	for(new i = 0; i < sizeof(rentlv); i++)
	{
		if(carid == rentlv[i])	return 1;
	}
	return 0;
}

public IsARentableCarSF(carid)
{
	for(new i = 0; i < sizeof(rentsf); i++)
	{
		if(carid == rentsf[i])	return 1;
	}
	return 0;
}

public IsARentableAir(carid)
{
	for(new i = 0; i < sizeof(rentvehair); i++)
	{
	    if(carid == rentvehair[i]) return 1;
	}
	return 0;
}

public IsARentableCarLS(carid)
{
	for(new i = 0; i < sizeof(rentls); i++)
	{
		if(carid == rentls[i])	return 1;
	}
	return 0;
}



public IsAPaperCar(carid)
{
	for(new i = 0; i < sizeof(PaperBoyPlane); i++)
	{
		if(carid == PaperBoyPlane[i])	return 1;
	}
	return 0;
}

public IsAPizzaCar(carid)
{
	for(new i = 0; i < sizeof(PizzaBoy); i++)
	{
		if(carid == PizzaBoy[i])	return 1;
	}
	return 0;
}


public IsACopCar(carid)
{
	for(new i = 0; i < sizeof(copcar); i++)
	{
		if(carid == copcar[i])	return 1;
	}
	return 0;
}

public IsAnAdminCar(carid)
{
	for(new i = 0; i < sizeof(admincar); i++)
	{
	    if(carid == admincar[i]) return 1;
	}
	return 0;
}

public IsANewsCar(carid)
{
	for(new i = 0; i < sizeof(newscar); i++)
	{
		if(carid == newscar[i])	return 1;
	}
	return 0;
}

public IsAnTaxiCar(carid)
{
	for(new i = 0; i < sizeof(taxicar); i++)
	{
		if(carid == taxicar[i])	return 1;
	}
	return 0;
}
#define MAX_ROADBLOCKS 35

enum rInfo
{
	sMod,
    sCreated,
    Float:sXx,
    Float:sYy,
    Float:sZz,
    sObject,
};
new Roadblocks[MAX_ROADBLOCKS][rInfo];
enum hqLocks
{
	triadslock,
	bratvalock,
	ballaslock,
	sevillelock,
	rifalock,
	crllock,
	hitlock,
};
new hqlock[hqLocks];
#define MAX_ZONE_NAME 38
 enum SAZONE_MAIN
{
		SAZONE_NAME[38],
		Float:SAZONE_AREA[6]
};
#define WIN_MULTIPLIER_GLOBAL 2.0
#define MIN_Bet 5
#define MAX_Bet 50
#define Bet_STEP 5
#define G_STATE_NOT_GAMBLING    0
#define G_STATE_READY           1
#define G_STATE_GAMBLING        2
#define G_STATE_DISPLAY         3 // Currently displaying the message
#define G_STATE_PLAY_AGAIN      4 // Not used
#define DISPLAY_TIME 750 // Time to display the messages
#define GAMBLE_TIMER 100 // Decrease this if too fast

static const gSAZones[][SAZONE_MAIN] = {  // Majority of names and area coordinates adopted from Mabako's 'Zones Script' v0.3
	//	NAME                            AREA (Xmin,Ymin,Zmin,Xmax,Ymax,Zmax)
	{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Section",          {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield Section",          {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield Section",          {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Section",          {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemical",         {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemical",         {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"Castillo del Diablo",         {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"Castillo del Diablo",         {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"Castillo del Diablo",         {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"KACC Military Fuels",         {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"LS International",            {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"LS International",            {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"LS International",            {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"LS International",            {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"LS International",            {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"LS International",            {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery Section",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery Section",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
	{"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
	{"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
	{"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
	{"Mulholland Section",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
	{"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
	{"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
	{"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
	{"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
	{"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
	{"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
	{"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
	{"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
	{"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
	{"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
	{"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
	{"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
	{"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
	{"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
	{"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
	{"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
	{"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
	{"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
	{"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Ind. Estate",        {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
	{"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
	{"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
	{"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
	{"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
	{"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
	{"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
	{"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
	{"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
	{"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
	{"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
	{"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
	{"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada Section",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
	{"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"Four Dragons Casino",         {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
	// Main Zones
	{"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};
main()
{
	printf(" ");
	printf(" ");
}
#pragma unused WarScore1
#pragma unused WarScore2
public OnGameModeInit()
{
	MySQLConnect();
	mysql_log(LOG_DEBUG | LOG_ERROR | LOG_WARNING,LOG_TYPE_HTML);
	//===========================gamemodefunction=======================================
//    ConnectNPC("Jhony","ValetJob");
    CA_Init();
	SetNameTagDrawDistance(50.0);
    ManualVehicleEngineAndLights();
    EnableStuntBonusForAll(0);
	DisableInteriorEnterExits();
	AllowInteriorWeapons(1);
	UsePlayerPedAnims();
    ShowPlayerMarkers(2);
    SetNameTagDrawDistance(80.0);
    EnableStuntBonusForAll(0);
    UsePlayerPedAnims();
    ResetElevatorQueue();
	Elevator_Initialize();
	Streamer_SetVisibleItems( STREAMER_TYPE_OBJECT, 100000000000 );
	CreateDynamicObject(19593, -1951.687500, 660.023986, 89.507797, 0, 0, 0);
	CreateDynamicObject(19594, -1951.687500, 660.023986, 29.507797, 0, 0, 0);
	ResetElevatorsQueue();
	Elevators_Initialize();
    ServerRestarting = 0;
	mysql_format(handle, query, 500, "UPDATE `players` SET `Online` = 0 WHERE `Online` > 0");
	mysql_tquery(handle, query);
	mysql_format(handle, query, 500, "UPDATE `players` SET `Variabila` = 0 WHERE `Variabila` > 0");
	mysql_tquery(handle, query);
	WarScore1 = 0;
	WarScore2 = 0;
	randomjackpot = random(125000);
	randomjackpot += 15789;
	Jackpot = randomjackpot;
	WarF = 0;
	WarZone = 999;
	WarStarted = 0;
	for(new i=0;i<30;i++)
    CutGrassOVer[i] = 0;
	LoadSnowCar();
	telegondola1 = CreateDynamicObject(5837,TelegondolaPositii[ruta2][0],	TelegondolaPositii[ruta2][1],	TelegondolaPositii[ruta2][2],	TelegondolaPositii[ruta2][3],	TelegondolaPositii[ruta2][4],TelegondolaPositii[ruta2][5]);
	MoveDynamicObject(telegondola1,	TelegondolaPositii[ruta2][0],	TelegondolaPositii[ruta2][1],	TelegondolaPositii[ruta2][2],	TelegondolaPositii[ruta2][3],	TelegondolaPositii[ruta2][4],TelegondolaPositii[ruta2][5],TelegondolaPositii[ruta2][6]);
    telegondola2 = CreateDynamicObject(5837,TelegondolaPositii2[ruta3][0],	TelegondolaPositii2[ruta3][1],	TelegondolaPositii2[ruta3][2],	TelegondolaPositii2[ruta3][3],	TelegondolaPositii2[ruta3][4],TelegondolaPositii2[ruta3][5]);
	MoveDynamicObject(telegondola2,	TelegondolaPositii2[ruta3][0],	TelegondolaPositii2[ruta3][1],	TelegondolaPositii2[ruta3][2],	TelegondolaPositii2[ruta3][3],	TelegondolaPositii2[ruta3][4],TelegondolaPositii2[ruta3][5],TelegondolaPositii2[ruta3][6]);

	LoadBarrer();
	CreateDynamicObject(19945, -1140.51379, 1018.74023, 1336.43835,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19945, -1139.52783, 1103.29724, 1336.43835,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19947, -965.28119, 1101.54663, 1332.44946,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19947, -965.03223, 1014.72430, 1332.44946,   0.00000, 0.00000, 0.00000);


	myMenu= CreateMenu("Vestiar Menu", 1, 50.0, 180.0, 200.0, 200.0);
    AddMenuItem(myMenu, 0, "skin 1");
    AddMenuItem(myMenu, 0, "Skin 2");
    AddMenuItem(myMenu, 0, "skin 3");
    AddMenuItem(myMenu, 0, "Co-Leader Skin");
    AddMenuItem(myMenu, 0, "Lider Skin");
    AddMenuItem(myMenu, 0, "Deagle");
    AddMenuItem(myMenu, 0, "Health+Armour");
    AddMenuItem(myMenu, 0, "Mele Weapons");
    AddMenuItem(myMenu, 0, "[Exit]");

    new Float:Yss = 350.0;
	Box = CreateBox(194.0,Yss-217,3*64.0 + 3*20,84,0x00000077);

    CreateDynamicObject(2325, 2240.73950, 1606.14221, 1018.67651,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2325, 2241.49951, 1606.14221, 1018.67651,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2325, 2239.97949, 1606.14221, 1018.67651,   0.00000, 0.00000, 180.00000);
		// Cherries (x25)
    Digit1[0] = CreateSprite(214.0,Yss-200,"LD_SLOT:cherry",64,64);
    Digit2[0] = CreateSprite(288.0,Yss-200,"LD_SLOT:cherry",64,64);
    Digit3[0] = CreateSprite(362.0,Yss-200,"LD_SLOT:cherry",64,64);
    // grapes (x100)
    Digit1[1] = CreateSprite(214.0,Yss-200,"LD_SLOT:grapes",64,64);
    Digit2[1] = CreateSprite(288.0,Yss-200,"LD_SLOT:grapes",64,64);
    Digit3[1] = CreateSprite(362.0,Yss-200,"LD_SLOT:grapes",64,64);
    // 69's (x250)
    Digit1[2] = CreateSprite(214.0,Yss-200,"LD_SLOT:r_69",64,64);
    Digit2[2] = CreateSprite(288.0,Yss-200,"LD_SLOT:r_69",64,64);
    Digit3[2] = CreateSprite(362.0,Yss-200,"LD_SLOT:r_69",64,64);
    // bells (x500)
    Digit1[3] = CreateSprite(214.0,Yss-200,"LD_SLOT:bell",64,64);
    Digit2[3] = CreateSprite(288.0,Yss-200,"LD_SLOT:bell",64,64);
    Digit3[3] = CreateSprite(362.0,Yss-200,"LD_SLOT:bell",64,64);
    // Bars [1 bar] (x1000)
    Digit1[4] = CreateSprite(214.0,Yss-200,"LD_SLOT:bar1_o",64,64);
    Digit2[4] = CreateSprite(288.0,Yss-200,"LD_SLOT:bar1_o",64,64);
    Digit3[4] = CreateSprite(362.0,Yss-200,"LD_SLOT:bar1_o",64,64);
    // Bars [2 bar] (x2000)
    Digit1[5] = CreateSprite(214.0,Yss-200,"LD_SLOT:bar2_o",64,64);
    Digit2[5] = CreateSprite(288.0,Yss-200,"LD_SLOT:bar2_o",64,64);
    Digit3[5] = CreateSprite(362.0,Yss-200,"LD_SLOT:bar2_o",64,64);

   	TextAddcoin = TextDrawCreate(235.0000,297.0000, "ld_poke:addcoin");//addcoin
	TextDrawFont(TextAddcoin, 4); //
	TextDrawColor(Textdraw45, 629657343);
	TextDrawLetterSize(TextAddcoin, 1.0, 1.0); //
	TextDrawTextSize(TextAddcoin, 53.0, 24.0); //
	TextDrawSetSelectable(TextAddcoin, 1);

	TextDealcoin = TextDrawCreate(352.0000,297.0000, "ld_poke:deal");//deal
	TextDrawFont(TextDealcoin, 4); //
	TextDrawLetterSize(TextDealcoin, 1.0, 1.0); //
	TextDrawColor(Textdraw45, 629657343);
	TextDrawTextSize(TextDealcoin, 53.0, 24.0); //
	TextDrawSetSelectable(TextDealcoin, 1);

	PowerTD[0] = TextDrawCreate(511.000000, 396.000000, "~n~~n~");
	TextDrawBackgroundColor(PowerTD[0], 255);
	TextDrawFont(PowerTD[0], 1);
	TextDrawLetterSize(PowerTD[0], 0.590000, 0.039999);
	TextDrawColor(PowerTD[0], -1);
	TextDrawSetOutline(PowerTD[0], 0);
	TextDrawSetProportional(PowerTD[0], 1);
	TextDrawSetShadow(PowerTD[0], 1);
	TextDrawUseBox(PowerTD[0], 1);
	TextDrawBoxColor(PowerTD[0], 255);
	TextDrawTextSize(PowerTD[0], 592.000000, -10.000000);




  	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2221.27295, 1603.89893, 1006.08521, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2217.48950, 1603.98547, 1006.08521, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2269.37378, 1606.39050, 1006.08521, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2273.47998, 1606.43494, 1006.25323, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2254.89307, 1609.97205, 1006.13031, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2254.96875, 1613.70630, 1006.13031, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2255.05859, 1617.66125, 1006.13031, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2218.81299, 1592.50952, 1006.10236, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2218.78735, 1588.12451, 1006.10236, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2218.58862, 1614.31604, 1006.08521, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2218.66846, 1618.70825, 1006.08521, 6, 0);
   	Create3DTextLabel("[VESTIAR BARBATI]\n [USE] /vestiarb",COLOR_GRAD4,-2087.2097,-1432.7455,1.1139, 10, 4);//spa
	CreateDynamicPickup(1275, 1,-2087.2097,-1432.7455,1.1139, 4);/////spa
	Create3DTextLabel("[VESTIAR FEMEI]\n [USE] /vestiarf",COLOR_GRAD4,-2082.5615,-1433.5244,1.1139, 10, 4);//spa
	CreateDynamicPickup(1275, 1,-2082.5615,-1433.5244,1.1139, 4);/////spa

    FirstCreateSet();

	wall1 = PHY_CreateWall(509.627 - 0.038, -85.780, 510.598 + 0.038, -85.780);
	wall2 = PHY_CreateWall(510.598 + 0.038, -85.780, 510.598 + 0.038, -83.907);
	wall3 = PHY_CreateWall(510.598 + 0.038, -83.907, 509.627 - 0.038, -83.907);
	wall4 = PHY_CreateWall(509.627 - 0.038, -83.907, 509.627 - 0.038, -85.780);


    SevileActor[0] = CreateActor(105,2728.9124,-1738.4569,424.3867,180.1374); // skinactor sevile
	SevileActor[1] = CreateActor(106,2730.0759,-1738.2798,424.3867,176.4818); // skinactor sevile
	SevileActor[2] = CreateActor(269,2725.9521,-1738.3157,424.3867,181.7041); // skinactor sevile
	SevileActor[3] = CreateActor(271,2715.2864,-1738.1909,424.3867,179.6152); // skinactor sevile
	SevileActor[4] = CreateActor(270,2728.6992,-1736.2101,424.3867,180.6597); // skinactor sevile
	SevileActor[5] = CreateActor(105,2699.2446,-1738.2122,424.3867,175.9597); // skinactor sevile
	SevileActor[6] = CreateActor(106,2697.2939,-1738.5253,424.3867,178.0486); // skinactor sevile
	SevileActor[7] = CreateActor(105,2685.7559,-1738.4775,424.3867,181.7042); // skinactor sevile
	SevileActor[8] = CreateActor(271,2687.6646,-1738.1998,424.3867,181.7042); // skinactor sevile
	SevileActor[9] = CreateActor(269,2684.2295,-1737.2006,424.3867,200.2670); // skinactor sevile

	BallasActor[0] = CreateActor(103,2680.5183,-1866.6733,424.4120,359.2614); // ballas
	BallasActor[1] = CreateActor(25,2686.7910,-1865.9899,424.4120,358.2169); // ballas
	BallasActor[2] = CreateActor(25,2729.1697,-1866.6487,424.4120,0.8280); // ballas
	BallasActor[3] = CreateActor(102,2725.0139,-1866.2852,424.4120,0.3058); // ballas
	BallasActor[4] = CreateActor(102,2698.6230,-1865.5341,424.4120,359.7836); // ballas
	BallasActor[5] = CreateActor(296,2720.8269,-1866.7928,424.4120,358.2169); // ballas
	BallasActor[6] = CreateActor(296,2690.6353,-1867.3909,424.4120,348.2946); // ballas
	BallasActor[7] = CreateActor(25,2727.7976,-1866.2634,424.4120,14.9282); // ballas
	BallasActor[8] = CreateActor(24,2685.0093,-1868.7914,424.4120,342.0280); // ballas
	BallasActor[9] = CreateActor(24,2695.7761,-1865.6960,424.4120,-14.9283); // ballas

    Actor[0] = CreateActor(29,285.0801, -109.5138, 1001.5587,-90);// bm
    Actor[1] = CreateActor(87, 1214.33118, -4.28170, 1001.35608, 103.94001);//strip
	Actor[2] = CreateActor(244, 1218.44861, -4.62075, 1001.34869, 0.00000);//strip
	Actor[3] = CreateActor(257,	1208.0991, -6.4135, 1001.3499, 90.00000);//strip
	Actor[4] = CreateActor(246,	1221.3308, 8.3750, 1001.3457, 45.00000);//strip
	Actor[5] = CreateActor(256,	1222.8723, -11.2904, 1001.3613, 90.00000);//strip
	Actor[6] = CreateActor(97,-2062.74683,-1406.14038,1.31290,90.00000);//slvamar barbat
	Actor[7] = CreateActor(251,-2139.5925, -1411.3523, 2.5543,0.00000);//slvamar femeie
	Actor[8] = CreateActor(204,-2133.9658, -1423.2421, 1.1684,180.00000);//GYM taichi
	Actor[9] = CreateActor(80,-2115.2449, -1432.5779, 1.1684,0.00000);//GYM box

	BizActor[0] = CreateActor(179,316.2484, -133.4155, 999.6547,90);//gunshopls
	BizActor[1]	= CreateActor(295,295.4740, -82.9131, 1001.5927,0); //gunshoplv
	BizActor[2] = CreateActor(303,312.4612, -168.1296, 999.5712,0);//armoypd
	BizActor[3] = CreateActor(191,296.2558, -40.1841, 1001.5289,0.0); // gunshopsf
	BizActor[4] = CreateActor(19,-2094.1882, -1421.2804, 1.2482,180.0); // chilliadspa
	BizActor[5] = CreateActor(211,-28.04, -187.03, 1003.55,0);// 24/7
	BizActor[6] = CreateActor(211,-28.04, -187.03, 1003.55,0);// 24/7
	BizActor[7] = CreateActor(211,-28.04, -187.03, 1003.55,0);// 24/7
	BizActor[8] = CreateActor(211,-28.04, -187.03, 1003.55,0);// 24/7
	BizActor[9] = CreateActor(211,-28.04, -187.03, 1003.55,0);//24/7
	BizActor[10] = CreateActor(211,-28.04, -187.03, 1003.55,0);// 24/7
	BizActor[11] = CreateActor(211,-28.04, -187.03, 1003.55,0);// 24/7
	BizActor[12] = CreateActor(263,-103.8920,-24.4651,1000.7188,0);// sshop
	BizActor[13] = CreateActor(263,-103.8920,-24.4651,1000.7188,0);// sshop
	BizActor[19] = CreateActor(211,-28.04, -187.03, 1003.55,0);// 24/7
	BizActor[20] = CreateActor(211,-28.04, -187.03, 1003.55,0);// 24/7
	BizActor[21] = CreateActor(211,-28.04, -187.03, 1003.55,0);// 24/7
	BizActor[22] = CreateActor(211,-28.04, -187.03, 1003.55,0);// 24/7
	BizActor[23] = CreateActor(211,-28.04, -187.03, 1003.55,0);// 24/7
	BizActor[24] = CreateActor(211,-28.04, -187.03, 1003.55,0);// 24/7
	BizActor[25] = CreateActor(211,-28.04, -187.03, 1003.55,0);// 24/7
	BizActor[17] = CreateActor(205,377.4403, -65.7479, 1001.5262,180);// burger shoot
	BizActor[26] = CreateActor(205,377.4403, -65.7479, 1001.5262,180);// burger shoot
	BizActor[27] = CreateActor(205,377.4403, -65.7479, 1001.5262,180);// burger shoot
	BizActor[16] = CreateActor(205,377.4403, -65.7479, 1001.5262,180);// burger shoot
	BizActor[14] = CreateActor(167,370.3293, -4.4941, 1001.8838,180);// cluckin bell
	BizActor[29] = CreateActor(167,370.3293, -4.4941, 1001.8838,180);// cluckin bell
	BizActor[15] = CreateActor(167,370.3293, -4.4941, 1001.8838,180);// cluckin bell
	BizActor[18] = CreateActor(155,375.75037, -116.85709, 1001.49591,   180.00000);// pizza
	BizActor[28] = CreateActor(155,375.75037, -116.85709, 1001.49591,   180.00000);// pizza

	SetActorVirtualWorld(BizActor[1], 1);
	SetActorVirtualWorld(BizActor[2], 2);
	SetActorVirtualWorld(BizActor[3], 3);
	SetActorVirtualWorld(BizActor[4], 4);
	SetActorVirtualWorld(BizActor[5], 5);
	SetActorVirtualWorld(BizActor[6], 6);
	SetActorVirtualWorld(BizActor[7], 7);
	SetActorVirtualWorld(BizActor[8], 8);
	SetActorVirtualWorld(BizActor[9], 9);
	SetActorVirtualWorld(BizActor[10], 10);
	SetActorVirtualWorld(BizActor[11], 11);
	SetActorVirtualWorld(BizActor[12], 12);
	SetActorVirtualWorld(BizActor[13], 13);
	SetActorVirtualWorld(BizActor[14], 14);
	SetActorVirtualWorld(BizActor[15], 15);
	SetActorVirtualWorld(BizActor[16], 16);
	SetActorVirtualWorld(BizActor[17], 17);
	SetActorVirtualWorld(BizActor[18], 18);//
	SetActorVirtualWorld(BizActor[19], 19);
	SetActorVirtualWorld(BizActor[20], 20);
	SetActorVirtualWorld(BizActor[21], 21);
	SetActorVirtualWorld(BizActor[22], 22);
	SetActorVirtualWorld(BizActor[23], 23);
	SetActorVirtualWorld(BizActor[24], 24);
	SetActorVirtualWorld(BizActor[25], 25);
	SetActorVirtualWorld(BizActor[26], 26);
	SetActorVirtualWorld(BizActor[27], 27);
	SetActorVirtualWorld(BizActor[28], 28);//
	SetActorVirtualWorld(BizActor[29], 29);//
	SetActorVirtualWorld(Actor[9], 4);
	SetActorVirtualWorld(Actor[8], 4);
	SetActorVirtualWorld(Actor[7], 4);
	SetActorVirtualWorld(Actor[6], 4);

	SetActorVirtualWorld(SevileActor[0], 3);
	SetActorVirtualWorld(SevileActor[1], 3);
	SetActorVirtualWorld(SevileActor[2], 3);
	SetActorVirtualWorld(SevileActor[3], 3);
	SetActorVirtualWorld(SevileActor[4], 3);
	SetActorVirtualWorld(SevileActor[5], 3);
	SetActorVirtualWorld(SevileActor[6], 3);
	SetActorVirtualWorld(SevileActor[7], 3);
	SetActorVirtualWorld(SevileActor[8], 3);
	SetActorVirtualWorld(SevileActor[9], 3);

	SetActorVirtualWorld(BallasActor[0], 3);
	SetActorVirtualWorld(BallasActor[1], 3);
	SetActorVirtualWorld(BallasActor[2], 3);
	SetActorVirtualWorld(BallasActor[3], 3);
	SetActorVirtualWorld(BallasActor[4], 3);
	SetActorVirtualWorld(BallasActor[5], 3);
	SetActorVirtualWorld(BallasActor[6], 3);
	SetActorVirtualWorld(BallasActor[7], 3);
	SetActorVirtualWorld(BallasActor[8], 3);
	SetActorVirtualWorld(BallasActor[9], 3);


	for(new obj;obj<60;obj++)
		PizzaObj[obj] = CreateObject(1582,  0,0,-1003, 		0.0, 0.0, 0.0);
	for(new obj;obj<240;obj++)
		PlaneObj[obj] = CreateObject(19326, 0,0,-6, 		-90.0, 0.0, 0.0);

	ZiarNumber=0;
	BoatPirateObject = CreateObject(8493, PirateShipRoots[ruta][0],	PirateShipRoots[ruta][1],	PirateShipRoots[ruta][2],	PirateShipRoots[ruta][3],	PirateShipRoots[ruta][4],	PirateShipRoots[ruta][5]);
	MoveObject(BoatPirateObject,	PirateShipRoots[ruta][0],	PirateShipRoots[ruta][1],	PirateShipRoots[ruta][2],	PirateShipRoots[ruta][3],	PirateShipRoots[ruta][4],	PirateShipRoots[ruta][5],	PirateShipRoots[ruta][6]);
    barcaobject1 = CreateObject(8981, -0.54804, -6.21756, -1210.37930,   0.00000, 0.00000, 0.00000);
	barcaobject2 = CreateObject(9159, 0.02200, -0.05730, -1110.00290,   0.00000, 0.00000, 0.00000);
	barcaobject3 = CreateObject(3524, 4.19007, -15.20608, -1219.74040,   0.00000, 0.00000, 90.00000);
	barcaobject4 = CreateObject(3524, 4.04011, -5.62107, -1129.74040,   0.00000, 0.00000, 90.00000);
	barcaobject5 = CreateObject(3524, -4.94835, -5.53118, -1129.74040,   0.00000, 0.00000, -90.00000);
	barcaobject6 = CreateObject(3524, -5.12716, -15.19081, -1129.74040,   0.00000, 0.00000, -90.00000);
	barcaobject7 = CreateObject(1567, -1.31470, -30.30780, -1111.28720,   0.00000, 0.00000, 0.00000);
	AttachObjectToObject(barcaobject1, BoatPirateObject, -0.54804, -6.21756, -11110.37930,   0.00000, 0.00000, 0.00000,1);
	AttachObjectToObject(barcaobject2, BoatPirateObject, 0.02200, -0.05730, -0.00290,   0.00000, 0.00000, 0.00000,1);
	AttachObjectToObject(barcaobject3, BoatPirateObject, 4.19007, -15.20608, -9.74040,   0.00000, 0.00000, 90.00000,1);
	AttachObjectToObject(barcaobject4, BoatPirateObject, 4.04011, -5.62107, -9.74040,   0.00000, 0.00000, 90.00000,1);
	AttachObjectToObject(barcaobject5, BoatPirateObject, -4.94835, -5.53118, -9.74040,   0.00000, 0.00000, -90.00000,1);
	AttachObjectToObject(barcaobject6, BoatPirateObject, -5.12716, -15.19081, -9.74040,   0.00000, 0.00000, -90.00000,1);
	AttachObjectToObject(barcaobject7, BoatPirateObject, -1.31470, -30.30780, -11.28720,   0.00000, 0.00000, 0.00000,1);

	gFerrisWheel = CreateObject( 18877, gFerrisOrigin[0], gFerrisOrigin[1], gFerrisOrigin[2],	 0.0, 0.0, 90.0);
	for(new x;x<10;x++)
	{
        gFerrisCages[x] = CreateObject( 18879, gFerrisOrigin[0], gFerrisOrigin[1], gFerrisOrigin[2],	 0.0, 0.0, 90.0 );
        AttachObjectToObject( gFerrisCages[x], gFerrisWheel, gFerrisCageOffsets[x][0],gFerrisCageOffsets[x][1],gFerrisCageOffsets[x][2],0.0, 0.0, 90.0,0);
	}
	//======================================================================================
    CreateDynamicMapIcon( 2071.7239,-1793.9116,13.5469, 7 ,-1, 0, 0, -1, 250.0);//haircut ls
	CreateDynamicMapIcon( 2229.9011,-1721.2582,13.5613, 54, -1, 0, 0, -1, 250.0);	// Gym
	CreateDynamicMapIcon( 396.2429, -2074.728, 7.835938, 25, -1, 0, 0, -1, 250.0);  // Fishing School
	CreateDynamicMapIcon( 2410.1682,-1220.7765,25.2978, 38, -1, 0, 0, -1, 250.0);	// Pig Pen
    CreateDynamicMapIcon( 1831.4663,-1683.2169,13.2197, 48, -1, 0, 0, -1, 250.0);	// Alhambra
    CreateDynamicMapIcon( -2491.9268,-38.8020,25.7656, 39, -1, 0, 0, -1, 250.0);//blow sf
    CreateDynamicMapIcon( 2101.2866,2122.0024,10.8203, 39, -1, 0, 0, -1, 250.0);//blow lv
    CreateDynamicMapIcon( 949.4485, -987.6353, 38.6875, 39, -1, 0, 0, -1, 250.0);//blow ls
    CreateDynamicMapIcon( 2269.6860, -74.3654, 26.7291, 40, -1, 0, 0, -1, 250.0);//gpllll
    CreateDynamicMapIcon( -2766.0881, 377.2993, 5.3197, 16, -1, 0, 0, -1, 250.0);//parlament
    CreateDynamicMapIcon( -688.1172, 939.1797, 11.1250, 56, -1, 0, 0, -1, 250.0);//presedinte
    CreateDynamicMapIcon( 2387.7188, 2472.6563, 20.5938, 19, -1, 0, 0, -1, 250.0);//guvern
    CreateDynamicMapIcon( 2251.2500, 2490.9141, 11.8984, 30, -1, 0, 0, -1, 250.0);//lvpd
    CreateDynamicMapIcon( 2970.3301, -1095.6821, 13.9453, 30, -1, 0, 0, -1, 250.0);//pentagonm
    CreateDynamicMapIcon( -1680.2109, 704.8516, 27.2031, 30, -1, 0, 0, -1, 250.0);//sfpd
    CreateDynamicMapIcon( -1472.2574, 389.8896, 29.0276, 5, -1, 0, 0, -1, 250.0);//sfpd
    CreateDynamicMapIcon( -1970.0509, 188.8895, 26.2647, 55, -1, 0, 0, -1, 250.0);//taxi30
    CreateDynamicMapIcon( 127.77, 1837.8895, 17.2647, 30, -1, 0, 0, -1, 250.0);//ng30
    CreateDynamicMapIcon( 1612.324, -2330.167, 13.5469, 38, -1, 0, 0, -1, 250.0);  // Spawn Point
	CreateDynamicMapIcon( 1219.2052, -1812.0229, 16.5590, 55, -1, 0, 0, -1, 250.0);  // Driving School
	CreateDynamicMapIcon( 396.2429, -2074.728, 7.835938, 9, -1, 0, 0, -1, 250.0);  // Fishing School
    CreateDynamicMapIcon( 1528.779, -1678.113, 5.890625, 30, -1, 0, 0, -1, 250.0);  // Police Station
    CreateDynamicMapIcon( 1462.5778,-1013.2362,26.8438, 52, -1, 0, 0, -1, 250.0);  // Bankls
    CreateDynamicMapIcon( 1178.03, -1323.41, 14.10, 22, -1, 0, 0, -1, 250.0);  // Hospital
    CreateDynamicMapIcon( 1480.9323,-1767.7324,18.7958, 56, -1, 0, 0, -1, 250.0);	// CITY HALL
    CreateDynamicMapIcon( 2468.4919,-2092.9902,13.5469, 51, -1, 0, 0, -1, 250.0);	// Truck Place
	CreateDynamicMapIcon( 1771.0416, -2049.3328, 12.4985,27, -1, 0, 0, -1, 250.0);	// Mechanic Place
	CreateDynamicMapIcon( 1788.7747,-1294.7137,13.5037, 44, -1, 0, 0, -1, 250.0);	// A.B.C News Place
	CreateDynamicMapIcon( -1421.7410,-287.9273,14.1484, 5, -1, 0, 0, -1, 250.0); // SF Airport
	CreateDynamicMapIcon( 1675.3717,1447.8632,10.7876, 5, -1, 0, 0, -1, 250.0); // LV Airport
	CreateDynamicMapIcon( 1685.9310,-2239.2971,-2.7028, 5, -1, 0, 0, -1, 250.0); // LS Airport
    CreateDynamicMapIcon( 1885.9063, 2333.6094, 9.8203, 61, -1, 0, 0, -1, 250.0);//rifa
    CreateDynamicMapIcon( 2495.2026,-1691.0842,14.7656, 62, -1, 0, 0, -1, 250.0);//sevile
    CreateDynamicMapIcon( -2655.1250, -15.4219, 23.8125, 59, -1, 0, 0, -1, 250.0);//balas
    CreateDynamicMapIcon( 691.5782,-1276.0001,13.5607, 16, -1, 0, 0, -1, 250.0);////corleone
    CreateDynamicMapIcon( -2488.6260,127.9428,25.8672, 43, -1, 0, 0, -1, 250.0);//triads
    CreateDynamicMapIcon( 1493.9297, 751.0156, 20.9141, 25, -1, 0, 0, -1, 250.0);//bratva
    CreateDynamicMapIcon( -2624.4858,1412.6831,7.0938, 37, -1, 0, 0, -1, 250.0);//hitmnan
    CreateDynamicMapIcon( 994.69067, -1209.74976, 16.93007, 2, -1, 0, 0, -1, 250.0);//gaso ls
    CreateDynamicMapIcon( -1581.8571, 947.7975, 7.2569, 2, -1, 0, 0, -1, 250.0);//going sf
    CreateDynamicMapIcon( 1706.6471, 950.0693, 10.8007, 2, -1, 0, 0, -1, 250.0);//xomer lv
    CreateDynamicMapIcon( 2506.6675,2121.0513,10.8400, 7 , -1, 0, 0, -1, 250.0);//haircut lv
    CreateDynamicMapIcon( -2571.0171,246.4084,10.2293 , 7 , -1, 0, 0, -1, 250.0);//haircut sf
    CreateDynamicMapIcon( 1957.3135, -2183.6738, 13.5547, 55, -1, 0, 0, -1, 250.0);//flysvhool
    CreateDynamicMapIcon( 2195.9551,1676.9640,12.3672, 52, -1, 0, 0, -1, 250.0);  // Bank lv
    CreateDynamicMapIcon(-1749.1891,867.5759,25.0859, 52, -1, 0, 0, -1, 250.0);  // Bank sf
    CreateDynamicMapIcon(1099.2592,-1632.8492,13.6130, 25, -1, 0, 0, -1, 250.0);  // lotto sf
    CreateDynamicMapIcon( 1398.4382, -1881.2725, 13.550, 49, -1, 0, 0, -1, 250.0);  // lotto sf
	CreateDynamicMapIcon( 2244.3318,-1665.1820,15.4766, 45,-1,0,0,-1,250.0);//clothes
	CreateDynamicMapIcon( 1457.3949,-1138.0740,23.9931,45,-1,0,0,-1,250.0);//clothes
	CreateDynamicMapIcon( 499.6341,-1359.9327,16.3138,45,-1,0,0,-1,250.0);//clothes
	CreateDynamicMapIcon( 461.3676,-1500.9510,31.0589,45,-1,0,0,-1,250.0);//clothes
	CreateDynamicMapIcon( 1099.1587,-1605.2975,13.6078,45,-1,0,0,-1,250.0);//clothes
      //===================================================================================
    Create3DTextLabel("I.T.\nShop\n/buy",COLOR_GRAD4, 1359.7999,-1783.4731,13.639, 10, 0);
	CreateDynamicObject(2886, 2515.80127, 2468.06763, 11.58360,   0.00000, 0.00000, 90.00000);
	CreateDynamicPickup(1239, 1, 	-2334.3909,-1646.5145,483.7031, 0);//chialiad

	poartajail1 = CreateDynamicObject(10841, 210.95593, 1730.09216, 24.53791,   0.00000, 0.00000, 89.28000);//jailng
    poartajail2 = CreateDynamicObject(18981, 199.66290, 1729.86401, 15.18318,   0.00000, 0.00000, -0.90000);//jailng
	pdgate3 = CreateDynamicObject(977, 1582.29700, -1638.15210, 13.91440,   0.00000, 0.00000, 12.18000);//garaj
	pdgate1 = CreateDynamicObject(980, 1590.0000, -1637.97522, 14.85870,   0.00000, 0.00000, 0.00000);//garaj
	pdgate16 = CreateDynamicObject(991, 1564.57373, -1679.95715, 15.24650,   0.00000, 90.00000, 90.00000);//od
	pdgate133 = CreateDynamicObject(980, 1562.26758, -1686.78015, 15.08720,   90.00000, 0.00000, -90.00000);//do

    CreateDynamicObject( 18878, gFerrisOrigin[0], gFerrisOrigin[1], gFerrisOrigin[2],   0.0, 0.0, 90.0 );
    
	CutGrass[0] = CreateDynamicObject(826, 1879.81409, -1172.92957, 23.60150,   0.00000, 0.00000, 0.00000);
	CutGrass[1] = CreateDynamicObject(826, 1891.08325, -1157.38806, 23.10676,   0.00000, 0.00000, 0.00000);
	CutGrass[2] = CreateDynamicObject(826, 1882.53479, -1161.50623, 23.10676,   0.00000, 0.00000, 0.00000);
	CutGrass[3] = CreateDynamicObject(826, 1892.77649, -1167.32703, 23.10676,   0.00000, 0.00000, 0.00000);
	CutGrass[4] = CreateDynamicObject(826, 1902.27087, -1158.57556, 23.10676,   0.00000, 0.00000, 0.00000);
	CutGrass[5] = CreateDynamicObject(826, 1914.73242, -1154.19641, 23.10680,   10.00000, 0.00000, 0.00000);
	CutGrass[6] = CreateDynamicObject(826, 1925.06165, -1152.73181, 23.10680,   10.00000, 0.00000, 0.00000);
	CutGrass[7] = CreateDynamicObject(826, 1936.67126, -1150.06274, 22.06580,   0.00000, 0.00000, 0.00000);
	CutGrass[8] = CreateDynamicObject(826, 1906.56555, -1175.39954, 23.24680,   20.00000, 0.00000, 0.00000);
	CutGrass[9] = CreateDynamicObject(826, 1904.19250, -1185.13708, 22.67265,   20.00000, 0.00000, 0.00000);
	CutGrass[10] = CreateDynamicObject(826, 1886.19141, -1181.37207, 22.67265,   20.00000, 0.00000, -52.86000);
	CutGrass[11] = CreateDynamicObject(826, 1873.32703, -1190.43335, 22.12026,   20.00000, 0.00000, -52.86000);
	CutGrass[12] = CreateDynamicObject(826, 1883.82007, -1190.08069, 21.67150,   0.00000, 0.00000, -72.17990);
	CutGrass[13] = CreateDynamicObject(826, 1880.01611, -1202.01160, 20.22682,   20.00000, 0.00000, -52.86000);
	CutGrass[14] = CreateDynamicObject(826, 1867.89099, -1198.04712, 22.02620,   20.00000, 0.00000, -52.86000);
	CutGrass[15] = CreateDynamicObject(826, 1918.27368, -1177.42761, 21.73525,   20.00000, 0.00000, -34.32000);
	CutGrass[16] = CreateDynamicObject(826, 1916.44189, -1187.62805, 21.51814,   20.00000, 0.00000, -34.38001);
	CutGrass[17] = CreateDynamicObject(826, 1897.08948, -1200.68958, 19.52097,   20.00000, 0.00000, -27.24000);
	CutGrass[18] = CreateDynamicObject(826, 1873.28149, -1212.00928, 18.90710,   20.00000, 0.00000, -52.86000);
	CutGrass[19] = CreateDynamicObject(826, 1877.67444, -1223.74866, 15.74204,   20.00000, 0.00000, -52.86000);
	CutGrass[20] = CreateDynamicObject(826, 1895.63794, -1218.79773, 16.79213,   0.00000, 0.00000, 0.00000);
	CutGrass[21] = CreateDynamicObject(826, 1908.32349, -1229.65259, 17.11759,   20.00000, 0.00000, -52.86000);
	CutGrass[22] = CreateDynamicObject(826, 1912.68469, -1217.44849, 18.52810,   20.00000, 0.00000, -52.86000);
	CutGrass[23] = CreateDynamicObject(826, 1889.86414, -1243.08289, 14.29863,   10.00000, 0.00000, -52.86000);
	CutGrass[24] = CreateDynamicObject(826, 1920.01465, -1227.19214, 17.75135,   20.00000, 0.00000, -52.86000);
	CutGrass[25] = CreateDynamicObject(826, 1924.35974, -1209.04163, 19.51991,   20.00000, 0.00000, -52.86000);
	CutGrass[26] = CreateDynamicObject(826, 1917.79382, -1245.69312, 15.71753,   20.00000, 0.00000, -52.86000);
	CutGrass[27] = CreateDynamicObject(826, 1932.69800, -1182.60388, 20.21963,   20.00000, 0.00000, -34.38001);
	CutGrass[28] = CreateDynamicObject(826, 1930.19373, -1244.62061, 17.65750,   0.00000, -10.00000, 0.00000);
	CutGrass[29] = CreateDynamicObject(826, 1939.31995, -1231.45850, 18.17555,   20.00000, 0.00000, -52.86000);

    ObiectSwep[0] = CreateDynamicObject(2672, 1588.2683, -1874.8688, 12.6786,   0.00000, 0.00000, 0.00000);
   	ObiectSwep[1] = CreateDynamicObject(2671, 1406.0505, -1873.0901, 12.5186,   0.00000, 0.00000, 0.00000);
	ObiectSwep[2] = CreateDynamicObject(2670, 1389.4584, -1768.7015, 12.5186,   0.00000, 0.00000, 0.00000);
	ObiectSwep[3] = CreateDynamicObject(2673, 1454.4020, -1732.2371, 12.5186,   0.00000, 0.00000, 0.00000);
	ObiectSwep[4] = CreateDynamicObject(2674, 1688.8116, -1732.8749, 12.5186,   0.00000, 0.00000, 0.00000);
	ObiectSwep[5] = CreateDynamicObject(2675, 1666.0861, -1870.6160, 12.5186,   0.00000, 0.00000, 0.00000);
	ObiectSwep[6] = CreateDynamicObject(2676, 1689.4070, -1794.2860, 12.5186,   0.00000, 0.00000, 0.00000);
	ObiectSwep[7] = CreateDynamicObject(2677, 1688.8116, -1732.8749, 12.6786,   0.00000, 0.00000, 0.00000);
    MoveSweepDown();
	    //=======================================PICKUP===================================================
	Create3DTextLabel("Lyberty City Plane \n Use /lc",COLOR_GRAD4,-777.3915,504.9686,1376.5896, 10, 0);//
	CreateDynamicPickup(1248, 1, -777.3915,504.9686,1376.5896, 0);/////gm
	Create3DTextLabel("Lyberty City Plane \n Use /lc",COLOR_GRAD4,366.4901,158.6410,1008.3828, 10, 0);//
	CreateDynamicPickup(1248, 1,366.4901,158.6410,1008.3828, 0);/////gm
    CreateDynamicPickup( 1581, 1,1173.7932,-1361.1276,13.9779); ///afaralsspitaljos
	Create3DTextLabel("Los Santos\nHospital\n\nApasa [F]",COLOR_GRAD4,1173.7932,-1361.1276,13.9779, 7, -1);//
	CreateDynamicPickup( 1581, 1,1169.0155,-1343.2283,26.6365); ///afaralsspitalsus
	Create3DTextLabel("Los Santos\nHospital\n\nApasa [F]",COLOR_GRAD4,1169.0155,-1343.2283,26.6365, 7, -1);//
	CreateDynamicPickup(19524,1,1473.9146,-1641.8745,13.3600,-1);//gift
	Create3DTextLabel("Parcul PayPoint\n\n\n/mygift\npentru a lua cadoul!",COLOR_GRAD4,1473.9146,-1641.8745,13.360,10.0,0);//
	blueteamp = CreateDynamicPickup(1239, 1,-978.2239, 1053.1096, 1344.0459, 4);/////blue team
	redteamp = CreateDynamicPickup(1239, 1,-1128.5309, 1066.1880, 1344.7362, 4);/////red team
	CreateDynamicPickup(1239,1,	207.6130, -100.9292, 1005.3320,-1);//binco clothes
	CreateDynamicPickup(1239,1,	161.3307, -83.3789, 1001.8509,-1);//zip clothes
	CreateDynamicPickup(1239,1,	204.3878, -159.4471, 1000.5186,-1);//Didier sachs
	CreateDynamicPickup(1239,1, 207.1010, -129.2605, 1003.5063,-1);//Prolaps
	CreateDynamicPickup(1239,1,  206.3504, -8.0950, 1001.1480,-1);//victim
	CreateDynamicPickup(1275,1,2244.3318,-1665.1820,15.4766,-1);//
	CreateDynamicPickup(1275,1,1457.3949,-1138.0740,23.9931,-1);//
	CreateDynamicPickup(1275,1,499.6341,-1359.9327,16.3138,-1);//
	CreateDynamicPickup(1275,1,461.3676,-1500.9510,31.0589,-1);//
	CreateDynamicPickup(1275,1,1099.1587,-1605.2975,13.6078,-1);//
	Create3DTextLabel("Binco\n/clothes\nPentru a cumpara haine",COLOR_GRAD4,207.6130, -100.9292, 1005.3320,10.0,0);//
	Create3DTextLabel("Zip\n/clothes\nPentru a cumpara haine",COLOR_GRAD4,161.3307, -83.3789, 1001.8509,10.0,0);//
	Create3DTextLabel("Didier Sachs\n/clothes\nPentru a cumpara haine",COLOR_GRAD4,204.3878, -159.4471, 1000.5186,10.0,0);//
	Create3DTextLabel("Prolaps\n/clothes\nPentru a cumpara haine",COLOR_GRAD4,207.1010, -129.2605, 1003.5063,10.0,0);//
	Create3DTextLabel("Victim\n/clothes\nPentru a cumpara haine",COLOR_GRAD4,206.3504, -8.0950, 1001.1480,10.0,0);//victim/////////
    Create3DTextLabel("Stand Hotdog \nScrie /hotdog to eat \n Pret: $25",COLOR_GRAD4,1466.1, -858.3, 55.2,10.0,0);//
	Create3DTextLabel("Stand Hotdog \nScrie /hotdog to eat \n Pret: $25",COLOR_GRAD4,2764.4, -2398.3, 13.6,10.0,0);//
    Create3DTextLabel("Stand Hotdog \nScrie /hotdog to eat \n Pret: $25",COLOR_GRAD4,1000.2, -1850.3, 12.8,10.0,0);//
    Create3DTextLabel("Stand Hotdog \nScrie /hotdog to eat \n Pret: $25",COLOR_GRAD4,1435.2, -2292.2, 13.5,10.0,0);//
    Create3DTextLabel("Stand Hotdog \nScrie /hotdog to eat \n Pret: $25",COLOR_GRAD4,388.9, -2072.9, 7.8,10.0,0);//
    Create3DTextLabel("Stand Hotdog \nScrie /hotdog to eat \n Pret: $25",COLOR_GRAD4,1544.7, -1681.8, 13.6,10.0,0);//
    Create3DTextLabel("Stand Hotdog \nScrie /hotdog to eat \n Pret: $25",COLOR_GRAD4,-2315.9680,-1625.1486,483.7068,10.0,0);//
    Create3DTextLabel("Stand Hotdog \nScrie /hotdog to eat \n Pret: $25",COLOR_GRAD4,-2319.7969,-1614.3176,483.7608,10.0,0);//
    Create3DTextLabel("Stand Hotdog \nScrie /hotdog to eat \n Pret: $25",COLOR_GRAD4,-2239.6484,-1713.2061,480.8380,10.0,0);
    Create3DTextLabel("Stand Hotdog \nScrie /hotdog to eat \n Pret: $25",COLOR_GRAD4,-2675.4116,-2435.8391,4.4041,10.0,0);//
    Create3DTextLabel("Stand Hotdog \nScrie /hotdog to eat \n Pret: $25",COLOR_GRAD4,-2701.1233,-2448.4922,3.7961,10.0,0);//
    Create3DTextLabel("Stand Hotdog \nScrie /hotdog to eat \n Pret: $25",COLOR_GRAD4,-2723.2813,-2462.9678,2.9339,10.0,0);//
    Create3DTextLabel("Stand Hotdog \nScrie /hotdog to eat \n Pret: $25",COLOR_GRAD4,-2745.7490,-2479.4299,4.3459,10.0,0);//
    Create3DTextLabel("Stand Hotdog \nScrie /hotdog to eat \n Pret: $25",COLOR_GRAD4,-2769.4736,-2494.4043,4.0801,10.0,0);//
    //icecream 3DText
    Create3DTextLabel("Stand Inghetata \nScrie /icecream to eat icecream \n Pret: $15",COLOR_GRAD4,999.7, -925.3, 42.2,10.0,0);//
    Create3DTextLabel("Stand Inghetata \nScrie /icecream to eat icecream \n Pret: $15",COLOR_GRAD4,1525.1, -1026.1, 23.9,10.0,0);//
    Create3DTextLabel("Stand Inghetata \nScrie /icecream to eat icecream \n Pret: $15",COLOR_GRAD4,617.5, -1349.8, 13.6,10.0,0);//
    Create3DTextLabel("Stand Inghetata \nScrie /icecream to eat icecream \n Pret: $15",COLOR_GRAD4,388.2, -1522.2, 32.3,10.0,0);//
    Create3DTextLabel("Stand Inghetata \nScrie /icecream to eat icecream \n Pret: $15",COLOR_GRAD4,1467.1, -1748.4, 15.4,10.0,0);//
   	Create3DTextLabel("Bar \nScrie /drink pentru a bea ceva",COLOR_GRAD4,1639.2485,-1458.2992,13.5623,10.0,0);// /drink-bar-commerce
   	Create3DTextLabel("[N.G.] Lockers \n /duty \n /equip",COLOR_GRAD4, 256.0440,200.9768,1042.1980, 4, 0);
	Create3DTextLabel("[F.B.I.] Lockers \n /duty \n /equip ",COLOR_GRAD4, 2592.3906,-1478.9690,-48.9141, 4, 0);
	Create3DTextLabel("[C.I.A.] Lockers \n /duty \n /equip",COLOR_GRAD4, 1524.3292,-1668.4550,801.085, 4, 0);
	Create3DTextLabel("[P.D.] Lockers \n /duty \n /equip",COLOR_GRAD4, 1571.0186,-1675.9940,12.3498, 4, 0);//pdvestiar
	CreateDynamicPickup(1239, 1, 2592.3906,-1478.9690,-48.9141, -1);//fbivestiar
	CreateDynamicPickup(1239, 1, 1524.3292,-1668.4550,801.085, -1);//ciiar
	CreateDynamicPickup(1239, 1, 256.0440,200.9768,1042.1980, -1);//ngvestiar
	CreateDynamicPickup(1239, 1, 1571.0186,-1675.9940,12.3498, 0);//pdvestiar
	CreateDynamicPickup(1277, 1, 1417.7604,-1661.8816,13.5469, 0);//parcare spa
    Create3DTextLabel("/enter\npentru a intra iesi din parcare",COLOR_GRAD4, 1417.7604,-1661.8816,13.5469,  20, 0);//cabin
    Create3DTextLabel("/vestiar\n pentru a accesa vestiarul",COLOR_GRAD4,	-780.3086,496.1252,1371.7490,  20, 0);//cabin
	CreateDynamicPickup( 	1275, 1,-780.3086,496.1252,1371.7490,  0);//cabin
	Create3DTextLabel("/vestiar\n pentru a accesa vestiarul",COLOR_GRAD4,		439.0473,-12.3510,1000.7344,  20, 0);//cabin
	CreateDynamicPickup( 	1275, 1,	439.0473,-12.3510,1000.7344,  0);//cabin
	Create3DTextLabel("/vestiar\n pentru a accesa vestiarul",COLOR_GRAD4,	754.0857,-26.6147,1000.5905,  20, 0);//cabin
	CreateDynamicPickup( 	1275, 1,754.0857,-26.6147,1000.5905,  0);//cabin
	Create3DTextLabel("/vestiar\n pentru a accesa vestiarul",COLOR_GRAD4,940.8465,-18.9934,1000.9297,  20, 0);//cabin
	CreateDynamicPickup( 	1275, 1,940.8465,-18.9934,1000.9297,  0);//cabin
	Create3DTextLabel("/vestiar\n pentru a accesa vestiarul",COLOR_GRAD4,947.6393,-44.0573,1001.1166,  20, 0);//cabin
	CreateDynamicPickup( 	1275, 1,947.6393,-44.0573,1001.1166,  0);//cabin
	Create3DTextLabel("/vestiar\n pentru a accesa vestiarul",COLOR_GRAD4,451.2389,-57.6298,999.6982,  20, 0);//cabin
   	Create3DTextLabel("/opendoor || /od \n The Pentagon members only",COLOR_GRAD4, 2577.0415,-1484.8925,-48.8995, 4, 0);//
	CreateDynamicPickup(1239, 1, 2577.0415,-1484.8925,-48.8995, 0);//
	Create3DTextLabel("/opendoor || /od \n The Pentagon members only",COLOR_GRAD4, 1541.0975,-1681.8267,801.0859, 4, 0);//
	CreateDynamicPickup(1239, 1, 1541.0975,-1681.8267,801.0859, 0);//
    Create3DTextLabel("[F.B.I.]\n /track \n pentru a asculta telefoanele \n persoanelor suspecte",COLOR_GRAD4, 2569.5544,-1507.6165,-48.9141, 4, 0);//
	CreateDynamicPickup(1239, 1, 2569.5544,-1507.6165,-48.9141, 0);//
	CreateDynamicPickup(1247, 1, -2091.9785,-1411.5203,-10.3071, 0);//drinks spa
	Create3DTextLabel("BAR\n/drinks",COLOR_GRAD4, -2091.9785,-1411.5203,-10.3071,5, 0);//
    CreateDynamicPickup(1239, 2, 323.0342,1118.5804,1083.8828); //Getting Drugs for DrugDealers
	Create3DTextLabel("Drugs Dealer",COLOR_GRAD4, 323.0342,1118.5804,1083.882,5, 0);//
	CreateDynamicPickup(1598, 1,2727.9675,-1828.3961,11.8438);//fot
    CreateDynamicPickup(1318,1,1566.6206,-1688.3115,16.1974);// armorypd
	Create3DTextLabel("[L.S.P.D.]\nScrie /sur sau /surrender\nsa te predai",COLOR_GRAD4,1566.6206,-1688.3115,16.1974,5, 0);//
    Create3DTextLabel("FotBal Stadium\nFolositi /play",COLOR_GRAD4, 2727.9675, -1828.3961,11.8438, 15,0);
    CreateDynamicPickup(348,1,312.7974, -165.8667, 999.5712);// armorypd
	CreateDynamicPickup(348,1,313.9924, -133.7461, 999.6024);// gunshopls
	CreateDynamicPickup(348,1,295.5337, -80.7477, 1001.5927);// gunshoplv
	CreateDynamicPickup(348,1,296.3840, -38.3256, 1001.5289);//gunshop ls
	Create3DTextLabel("[GunShop] SF\n/BuyGun",COLOR_GRAD4,296.3840, -38.3256, 1001.5289,15, 3);//
	Create3DTextLabel("[GunShop] LV\n/BuyGun",COLOR_GRAD4,295.5337, -80.7477, 1001.5927,15, 1);//
	Create3DTextLabel("[GunShop] PD\n/BuyGun",COLOR_GRAD4,312.7974, -165.8667, 999.5712,15, 2);//
	Create3DTextLabel("[GunShop] LS\n/BuyGun",COLOR_GRAD4,313.9924, -133.7461, 999.6024,15, 0);//
	Create3DTextLabel("National Guard jail",COLOR_BLUE,90.7327,1779.6219,17.6406,40.0,0);
    exitjail = CreateDynamicPickup(1318,1,186.8226,1855.6823,1000.0598);
   	Create3DTextLabel("National Guard jail",COLOR_BLUE,186.8226,1855.6823,1000.0598,10.0,0);
    enterjail = CreateDynamicPickup(1318,1,90.7327,1779.6219,17.6406);
	CreateDynamicPickup(19524,1,2409.7483, -1488.1619, 22.8242);//burger
	CreateDynamicPickup(19524,1,2388.5828, -1895.9841, 13.4249);//burger
	CreateDynamicPickup(19524,1,802.5576, -1629.3566, 13.2584);//burger
	CreateDynamicPickup(19524,1,1212.1125, -906.1799, 42.9226);//burger
	CreateDynamicPickup(19524,1,-2349.5579, -153.0708, 35.3600);//burger
	CreateDynamicPickup(19524,1,1859.6418, 2083.1672, 10.8777);//burger
	Create3DTextLabel("[HitMan HQ]\n/order",COLOR_GRAD4,  2556.3662,-1303.6514,1060.9844, 10, 0);//hitmanmuuuuuuuuuuuuuuuu
	CreateDynamicPickup(1247, 1, 2556.3662,-1303.6514,1060.984);//hitman
	Create3DTextLabel("Burger\nFolositi /eat",COLOR_GRAD4,1859.6418, 2083.1672, 10.8777,15, 0);//lv
	Create3DTextLabel("Burger\nFolositi /eat",COLOR_GRAD4,-2349.5579, -153.0708, 35.3600,15, 0);//sf
	Create3DTextLabel("Burger\nFolositi /eat",COLOR_GRAD4,1212.1125, -906.1799, 42.9226, 15, 0);//los santos banca
	Create3DTextLabel("Burger\nFolositi /eat",COLOR_GRAD4,802.5576, -1629.3566, 13.2584, 15, 0);//los santos plaja
	Create3DTextLabel("Burger\nFolositi /eat",COLOR_GRAD4,2388.5828, -1895.9841, 13.4249, 15, 0);//sevile
	Create3DTextLabel("Burger\nFolositi /eat",COLOR_GRAD4,2409.7483, -1488.1619, 23.8242, 15, 0);//cluckin bell
    CreateDynamicPickup(1318, 1, -2571.5249,246.5816,10.4419); //hairsfout
	CreateDynamicPickup(1239, 1, 421.7139,-77.9500,1001.804); ///hairsf
	Create3DTextLabel("Frizerie\n/hair",-1,421.7139,-77.9500,1001.8047 ,5.0,0);//hair
	CreateDynamicPickup(1239, 1, 414.2273,-19.0768,1001.8047); ///hairlv
	Create3DTextLabel("Frizerie\n/hair",-1,414.2273,-19.0768,1001.8047 ,5.0,0);//hair
	CreateDynamicPickup(1318, 1, 2506.6946,2121.0513,10.8400); //hairlvout
	CreateDynamicPickup(1318, 1, 2071.7239,-1793.9116,13.5469); //hairlsout
	CreateDynamicPickup(1239, 1, 362.0605,173.7425,1008.3828,0); /// city hall LS
	Create3DTextLabel("JobPoint\n/takejob",0x0080FFC8, 362.0605,173.7425,1008.3828, 6, 0);
	CreateDynamicPickup(1239, 1, 1398.4382, -1881.2725, 13.550,0); /// city hall LS
	Create3DTextLabel("Casino Caligulas",COLOR_GRAD4,	1275.2297, -1665.3538, 20.9244, 6, 0);
	CreateDynamicPickup(1239, 1,1275.2297, -1665.3538, 20.9244); ///hairls
	Create3DTextLabel("Pool Game",COLOR_GRAD4,1398.4382, -1881.2725, 13.550, 6, 0);
	Create3DTextLabel("Frizerie\n/hair",-1,414.4816,-52.5718,1001.8984 ,5.0,0);//hairls
	CreateDynamicPickup(1239, 1, 414.4816,-52.5718,1001.898); ///hairls
    Create3DTextLabel("Shop LV\n/fireworks",-1,-201.6124,-7.2066,1002.2734  ,5.0,0);//hairls
	CreateDynamicPickup(1239, 1,-201.6124,-7.2066,1002.2734 ); ///blowlv
	Create3DTextLabel("Shop LS\n/fireworks",-1,-202.0053,-42.0859,1002.2734  ,5.0,0);//hairls
	CreateDynamicPickup(1239, 1,-202.0053,-42.0859,1002.2734 ); ///blowls
    Create3DTextLabel("Shop SF\n/fireworks",-1,-202.0316,-25.0623,1002.2734  ,5.0,0);//hairls
	CreateDynamicPickup(1239, 1,-202.0316,-25.0623,1002.2734 ); ///blowsf
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2221.27295, 1603.89893, 1006.08521, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2217.48950, 1603.98547, 1006.08521, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2269.37378, 1606.39050, 1006.08521, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2273.47998, 1606.43494, 1006.25323, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2254.89307, 1609.97205, 1006.13031, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2254.96875, 1613.70630, 1006.13031, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2255.05859, 1617.66125, 1006.13031, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2218.81299, 1592.50952, 1006.10236, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2218.78735, 1588.12451, 1006.10236, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2218.58862, 1614.31604, 1006.08521, 6, 0);
	Create3DTextLabel("{CCCCCC}Caligula's Casino\nScrie /gamble",0x0080FFC8, 2218.66846, 1618.70825, 1006.08521, 6, 0);
    CreateDynamicPickup(1239, 1, -104.1861,-22.3115,1000.7188); // sshop
	CreateDynamic3DTextLabel("/buy",COLOR_GRAD4, 375.8652, -119.0789, 1001.4959, 10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1);//
    CreateDynamicPickup(1239, 1,  375.8652, -119.0789, 1001.4959); // pizza
	CreateDynamic3DTextLabel("/buy",COLOR_GRAD4,-104.1861,-22.3115,1000.7188, 10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1);//
    CreateDynamicPickup(1239, 1, 370.1183, -6.2263, 1001.8813); // cluckin'bell
	CreateDynamic3DTextLabel("/buy",COLOR_GRAD4, 370.1183, -6.2263, 1001.8813, 10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1);//
    CreateDynamicPickup(1239, 1,  -29.1628,-184.8674,1003.5469); // 24//7
	CreateDynamic3DTextLabel("/buy",COLOR_GRAD4,-29.1628,-184.8674,1003.5469, 10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1);//
    CreateDynamicPickup(1239, 1, 377.0229,-67.8145,1001.515); // burger
	CreateDynamic3DTextLabel("/buy",COLOR_GRAD4,377.0229,-67.8145,1001.515, 10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1);//
	Create3DTextLabel("[RECEPTIE]\n [USE] /buyticket",COLOR_GRAD4,-2094.2874,-1423.5042,1.1139, 10, 4);//spa
	CreateDynamicPickup(1239, 1,-2094.2874,-1423.5042,1.1139, 4);//spawreceptie
	Create3DTextLabel ("/opengate", 0xFFFFFFC8, 2515.80127, 2468.06763, 11.58360, 16, 0);//pdel.evator
   	CreateDynamicPickup(2886,1,1582.4136,-1676.9941,5.8945); //pdel.evator
	CreateDynamicPickup(2886,1,1571.5381,-1668.1748,16.1974);//pdele.vator
	CreateDynamicPickup(2886,1,1571.5780,-1668.1753,12.3498);//pdele.vator
	CreateDynamicPickup(2886,1,1571.5780,-1668.1753,19.7344);//pdel.evator
	CreateDynamicPickup(2886,1,1571.5780,-1668.1753,23.3572);//pdele.vator
	Create3DTextLabel ("/elevator ", 0xFFFFFFC8, 1571.5381,-1668.1748,16.1974, 6, 0);//pdelev.ator
	Create3DTextLabel ("/elevator ", 0xFFFFFFC8, 1571.5780,-1668.1753,23.3572, 6, 0);//pdel.evator
	Create3DTextLabel ("/elevator ", 0xFFFFFFC8, 1571.5780,-1668.1753,12.3498, 6, 0);//pde.levator
	Create3DTextLabel ("/elevator ", 0xFFFFFFC8, 1571.5780,-1668.1753,19.7344, 6, 0);//pdele.vator
	Create3DTextLabel ("/elevator ", 0xFFFFFFC8, 1582.4136,-1676.9941,5.8945, 6, 0);//pdel.evator
    CreateDynamic3DTextLabel("[Elevator]\n[USAGE]/up /down /middle",COLOR_GRAD4,2155.5527, 1597.9889, 1000.0646, 10, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);//
	CreateDynamic3DTextLabel("[Elevator]\n[USAGE]/up /down /middle",COLOR_GRAD4,2410.7310, 2449.3787, 69.4804, 10, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);//
	CreateDynamic3DTextLabel("[Elevator]\n[USAGE]/up /down /middle",COLOR_GRAD4,2516.9236, 2447.6218, 11.1549, 10, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);//
	CreateDynamicPickup(19132, 1, 2516.9236, 2447.6218, 11.1549);
	CreateDynamicPickup(19132, 1, 2410.7310, 2449.3787, 69.4804);
	CreateDynamicPickup(19132, 1, 2155.5527, 1597.9889, 1000.0646);
   	CreateDynamic3DTextLabel("[PayPoint]\n[USAGE]/shop",COLOR_GRAD4,822.7485, -0.3381, 1004.1155, 10, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,3);//shop
	CreateDynamic3DTextLabel("[PayPoint]\n[USAGE]/shop",COLOR_GRAD4,822.5518, 1.9134, 1004.1155, 10, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,3);//shop
	CreateDynamic3DTextLabel("[PayPoint]\n[USAGE]/shop",COLOR_GRAD4,822.4779, 4.1611, 1004.1155, 10, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,3);//shop
	CreateDynamic3DTextLabel("[PayPoint]\n[USAGE]/shop",COLOR_GRAD4,822.5056, 6.4230, 1004.1155, 10, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,3);//shop
	CreateDynamic3DTextLabel("Loterie \nScrie /lotto pentru a lua un bilet",COLOR_GRAD4,822.7485, -0.3381, 1004.1155, 10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,5);// /LOTTO-LOTERIE
	CreateDynamic3DTextLabel("Loterie \nScrie /lotto pentru a lua un bilet",COLOR_GRAD4,822.5518, 1.9134, 1004.1155, 10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,5);// /LOTTO-LOTERIE
	CreateDynamic3DTextLabel("Loterie \nScrie /lotto pentru a lua un bilet",COLOR_GRAD4,822.4779, 4.1611, 1004.1155, 10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,5);// /LOTTO-LOTERIE
	CreateDynamic3DTextLabel("Loterie \nScrie /lotto pentru a lua un bilet",COLOR_GRAD4,822.5056, 6.4230, 1004.1155, 10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,5);// /LOTTO-LOTERIE
	CreateDynamicPickup(1239, 1, 822.2867,-0.3089,1004.1797); // LOTTO-LOTERIE
	CreateDynamicPickup(1239, 1, 822.1691,1.8918,1004.1797); // LOTTO-LOTERIE
	CreateDynamicPickup(1239, 1, 822.1740,4.2276,1004.1797); // LOTTO-LOTERIE
	CreateDynamic3DTextLabel("BlackMarket\n/bm pentru a cumpara",COLOR_GRAD4,	287.70,-109.44,1001.52, 10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,-1,-1);// /LOTTO-LOTERIE
	CreateDynamicPickup(1239, 1, 	287.70,-109.44,1001.52); // bm
	CreateDynamicPickup(1239, 1, 822.1622,6.4807,1004.1797); // LOTTO-LOTERIE//Float:drawdistance, INVALID_PLAYER_ID, attachedvehicle = INVALID_VEHICLE_ID, testlos = 0, worldid = -1, interiorid = -1, playerid = -1, Float:streamdistance = 100.0
    CreateDynamicPickup(1276, 1,1099.2592,-1632.8492,13.6130 );// lotto
    CreateDynamicPickup(1276, 1,1413.0479,-1700.4274,13.5395 ); // paypoint
  	CreateDynamic3DTextLabel("PayPoint\nShop",COLOR_GRAD4,  1413.0479,-1700.4274,13.5395 , 10.0);//paypoint
	CreateDynamic3DTextLabel("Loterie",COLOR_GRAD4,1099.2592,-1632.8492,13.6130 ,10);// lotto
    CreateDynamic3DTextLabel("/exam pentru\n a da pentru permis",COLOR_GRAD4,  1219.0480, -1812.2429, 16.6041, 10.0);//dmw
    CreateDynamicPickup(1239, 1, 1219.0480, -1812.2429, 16.6041,0);//dmw
	CreateDynamic3DTextLabel("/exam pentru\n a da pentru permisul de zbor",COLOR_GRAD4,  1957.1649,-2183.6143,13.5469, 10);//fly
	CreateDynamicPickup(1239, 1, 1957.1649,-2183.6143,13.5469, 0);//fly
	CreateDynamic3DTextLabel("/exam pentru\n a da pentru permisul de barca",COLOR_GRAD4, 436.4564,-1900.2853,2.8703, 10);//dmw
    CreateDynamicPickup(1239, 1, 436.4564,-1900.2853,2.8703, 0);//boat
	CreateDynamic3DTextLabel("/buylicenses pentru\n pentru a cumpara licenta de pescuit",COLOR_GRAD4, 523.6387,-1812.9382,6.571, 10);//dmw
    CreateDynamicPickup(1239, 1, 523.6387,-1812.9382,6.571, 0);//fish
 	CreateDynamic3DTextLabel("/buylicenses pentru\n pentru a cumpara permis de port arma",COLOR_GRAD4, 1567.7362,-1674.7607,16.1974, 10);//dmw
    CreateDynamicPickup(1239, 1,1567.7362,-1674.7607,16.1974, 0);//gun
    CreateDynamic3DTextLabel("Black Market \n Press [F]",COLOR_GRAD4,1488.6949,-1721.7136,8.2067, 4);//bm
    CreateDynamicPickup(1254, 1, 1488.6949,-1721.7136,8.206);//bm
    CreateDynamicPickup(1274, 1, -1749.3287,868.2448,25.0859,0);//
	CreateDynamicPickup(1274, 1, 2196.0256,1677.0201,12.3672,0);//
	CreateDynamicPickup(1274, 1, 1459.1333,-1012.2750,26.6393 ,0);//
	CreateDynamic3DTextLabel("[Los Santos Bank] \n Press [F] to enter the Place.",COLOR_GRAD4, 1459.1333,-1012.2750,26.6393, 20);//banca
	CreateDynamic3DTextLabel("[Las Venturas Bank] \n Press [F] to enter the Place.",COLOR_GRAD4,  2196.0256,1677.0201,12.3672,20);//banca
	CreateDynamic3DTextLabel("[San Fierro Bank] \n Press [F] to enter the Place.",COLOR_GRAD4,  -1749.3287,868.2448,25.0859,20);//banca
	SetTimer("OnTimeStampPast", 3600000*6, false);
	CreateDynamic3DTextLabel("{FFFFFF}Primarie \n Press [F]",COLOR_GRAD4, 1481.0463,-1770.3093,18.7958, 4);//11
	CreateDynamicPickup(1314, 1,1481.0463,-1770.3093,18.7958, 0);/////primarie
    CreateDynamic3DTextLabel("{1A6BE6}[L.S.P.D. HQ] \n Press [F]",COLOR_GRAD4,1554.6825,-1675.6519,16.195, 4);//11
	CreateDynamicPickup(1247, 1,1554.6825,-1675.6519,16.195, 0);/////1
	CreateDynamic3DTextLabel("{113EEE}[F.B.I. HQ] \n Press [F]",COLOR_GRAD4,3011.0144,-1074.2980,13.2429, 4);//11
	CreateDynamicPickup(1247, 1,3011.0144,-1074.2980,13.2429, 0);/////2
	CreateDynamic3DTextLabel("{0909F7}[National Guard HQ] \n Press [F]",COLOR_GRAD4,268.7066,2089.9446,17.7029, 4);//11
	CreateDynamicPickup(1247, 1,268.7066,2089.9446,17.7029, 0);/////3
	CreateDynamic3DTextLabel("{444444}[Agentia Prezidentiala HQ] \n Press [F]",COLOR_GRAD4, -684.5866,939.4669,13.6328, 4);//11
	CreateDynamicPickup(1314, 1,-684.5866,939.4669,13.6328, 0);/////4
	CreateDynamic3DTextLabel("{BF4D40}[Rifa Gang HQ]\n{FFFFFF}Press [f]",COLOR_GRAD4,1879.1912,2339.6003,10.9799, 15);//
	CreateDynamicPickup(1314, 1,1879.1912,2339.6003,10.9799, 0);/////5
	CreateDynamic3DTextLabel("{00E6FF}[Triads HQ]\n{FFFFFF}Press [f]",COLOR_GRAD4,-2463.1746,132.1019,35.1719, 15);//
	CreateDynamicPickup(1314, 1,-2463.1746,132.1019,35.1719, 0);/////6
	CreateDynamic3DTextLabel("{444444}[Guvern HQ]\n{FFFFFF}Press [f]",COLOR_GRAD4,2388.2673,2466.0652,10.8203, 15);//
	CreateDynamicPickup(1314, 1,2388.2673,2466.0652,10.8203, 0);/////7
	CreateDynamic3DTextLabel("{CCFF00}[Taxi Company HQ]\n{FFFFFF}Press [f]",COLOR_GRAD4,-1968.7484,162.3382,27.6875, 15);//
	CreateDynamicPickup(1314, 1,-1968.7484,162.3382,27.6875, 0);/////10
	CreateDynamic3DTextLabel("{0909F7}[Navy Seal HQ ]\n {FFFFFF}Press [F]",COLOR_GRAD4,-1526.1971,414.5504,7.1875, 4);//portavion
	CreateDynamicPickup(1247, 1, -1526.1971,414.5504,7.1875, 0);/////11
	CreateDynamic3DTextLabel("{444444}[Parlament HQ]\n{FFFFFF}Press [f]",COLOR_GRAD4,-2765.1843,375.7612,6.3435, 15);//
	CreateDynamicPickup(1314, 1,-2765.1843,375.7612,6.3435, 0);/////12
	CreateDynamic3DTextLabel("{D02FB0}[Russian Bratva HQ]\n{FFFFFF}Press [f]",COLOR_GRAD4,1455.1392,751.0779,11.0234, 15);//
	CreateDynamicPickup(1314, 1,1455.1392,751.0779,11.0234, 0);/////13
	CreateDynamic3DTextLabel("{FF8000}[Sevile Gang]\n{FFFFFF}Press [f]",COLOR_GRAD4,2495.3350,-1690.8126,14.7656, 15);//
	CreateDynamicPickup(1314, 1,2495.3350,-1690.8126,14.7656, 0);/////14
	CreateDynamic3DTextLabel("{B300FF}[Ballas Gang HQ]\n{FFFFFF}Press [f]",COLOR_GRAD4,-2664.9268,-2.0601,6.1328, 15);//
	CreateDynamicPickup(1314, 1,-2664.9268,-2.0601,6.1328, 0);/////15
	CreateDynamic3DTextLabel("{F2AD0D}[Corleone Famigla HQ]\n{FFFFFF}Press [f]",COLOR_GRAD4,690.9525,-1275.9707,13.5603, 15);//
	CreateDynamicPickup(1314, 1,690.9525,-1275.9707,13.5603, 0);/////16
	CreateDynamic3DTextLabel("{113EEE}[C.I.A. HQ] \n Press [F]",COLOR_GRAD4, 3011.1418,-1115.4055,13.2429, 4);//11
	CreateDynamicPickup(1247, 1,3011.1418,-1115.4055,13.2429, 0);/////17
	new string[155];
	format(string, sizeof(string), " Gaso Station \n %d Litri \n /fill <litri> \n Pret per litru: %d",gaso,5);//SBizzInfo[3][sbEntrace]);
	gasoo = CreateDynamic3DTextLabel(string,0x008080FF,658.3221,-565.8550,16.0630,30.0);
    gasoo1 = CreateDynamic3DTextLabel(string,0x008080FF,-82.4185,-1174.8540,1.8298,30.0);
    gasoo2 = CreateDynamic3DTextLabel(string,0x008080FF,-1676.3669,411.8149,6.9068,30.0);
    gasoo3 = CreateDynamic3DTextLabel(string,0x008080FF,-1324.8502,2684.8120,49.783,30.0);
    gasoo4 = CreateDynamic3DTextLabel(string,0x008080FF,2115.5447,926.6559,10.5668,30.0);
    gasoo5 = CreateDynamic3DTextLabel(string,0x008080FF,2638.3337,1105.4701,10.5559,30.0);
	//
	format(string, sizeof(string), " Xommer Station \n %d Litri \n /fill <litri> \n Pret per litru: %d",xommer,5);//,SBizzInfo[15][sbEntrace]);
    xommerr = CreateDynamic3DTextLabel(string,0x008080FF,1006.1612,-939.0581,41.9067,30.0);
    xommerr1 = CreateDynamic3DTextLabel(string,0x008080FF,-2407.4907,977.6917,45.0239,30.0);
    xommerr2 = CreateDynamic3DTextLabel(string,0x008080FF,-1606.2218,-2714.0056,48.2661,30.0);
    xommerr3 = CreateDynamic3DTextLabel(string,0x008080FF,2202.3484,2473.7263,10.5630,30.0);
    xommerr4 = CreateDynamic3DTextLabel(string,0x008080FF,609.9616,1697.2865,6.7201,30.0);
    xommerr5 = CreateDynamic3DTextLabel(string,0x008080FF,617.3918,1687.2714,6.7177,30.0);
    //
	format(string, sizeof(string), " Going Station \n %d Litri \n /fill <litri> \n Pret per litru: %d",going,5);//,SBizzInfo[14][sbEntrace]);
    goingg = CreateDynamic3DTextLabel(string,0x008080FF,1944.3397,-1771.5894,13.1224,30);
    goingg1 = CreateDynamic3DTextLabel(string,0x008080FF, -2027.7162,150.0180,27.4295 ,30);
    goingg2 = CreateDynamic3DTextLabel(string,0x008080FF, 1597.1356,2196.5364,10.5538  ,30);
    goingg3 = CreateDynamic3DTextLabel(string,0x008080FF,-1479.9526,1867.0510,32.3627  ,30);
    goingg4 = CreateDynamic3DTextLabel(string,0x008080FF, 1359.0516,474.3736,19.9037 ,30);
	//=========================obiecte============================
	taxisign1 = CreateDynamicObject(19308, 0.00170, -0.17540, 122110.91590,   0.00000, 0.00000, 0.00000);
	taxisign2 = CreateDynamicObject(19308, 0.00170, -0.17540, 112310.91590,   0.00000, 0.00000, 0.00000);
	taxisign3 = CreateDynamicObject(19310, -0.03540, -0.21560, 221320.91430,   0.00000, 0.00000, 0.00000);
	taxisign4 = CreateDynamicObject(19308, 0.06080, -0.57490, 1111.32640,   0.00000, 0.00000, 90.00000);

	GazdePanou   = CreateDynamicObject(19464, 2716.28271, -1876.1673, 454.3950,   0.00000, -20.00000, -90.00000);
	OaspetiPanou = CreateDynamicObject(19464, 2705.52783, -1876.1673, 454.3958,   0.00000, -20.00000, -90.00000);
    format(string,12,"Gazde\n%d",Gazde);
  	SetDynamicObjectMaterialText(GazdePanou,0,string,OBJECT_MATERIAL_SIZE_256x256,"Arial", 75, 1, 0xFFFFFFFF,1, 1);
 	format(string,12,"Oaspeti\n%d",Oaspeti);
 	SetDynamicObjectMaterialText(OaspetiPanou,0,string,OBJECT_MATERIAL_SIZE_256x256,"Arial", 75, 1, 0xFFFFFFFF,1, 1);

 	new objectid1 = CreateDynamicObject(7930, -2095.8227, -115.9427, 37.5816, 0.0, 0.0, 180.0); //create the object
   	SetDynamicObjectMaterialText(objectid1,0,"{000000}Categoria\nFamilie",OBJECT_MATERIAL_SIZE_256x128,"Arial", 42, 0, 0xFFFFFFFF,0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
	new objectid2 = CreateDynamicObject(7930, -2095.8227, -138.9427, 37.5816, 0.0, 0.0, 180.0); //create the object
	SetDynamicObjectMaterialText(objectid2,0,"{000000}Categoria\nLowRiders",OBJECT_MATERIAL_SIZE_256x128,"Arial", 42, 0, 0xFFFFFFFF,0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
    new objectid3 = CreateDynamicObject(7930, -2095.8227, -165.9427, 37.5816, 0.0, 0.0, 180.0); //create the object
	SetDynamicObjectMaterialText(objectid3,0,"{000000}Categoria\nDouă usi",OBJECT_MATERIAL_SIZE_256x128,"Arial", 42, 0, 0xFFFFFFFF,0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);																																	
    new objectid4 = CreateDynamicObject(7930, -2095.8227, -191.9427, 37.5816, 0.0, 0.0, 180.0); //create the object
  	SetDynamicObjectMaterialText(objectid4,0,"{000000}Categoria\nDube",OBJECT_MATERIAL_SIZE_256x128,"Arial", 42, 0, 0xFFFFFFFF,0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
    new objectid5 = CreateDynamicObject(7930, -2078.8227, -103.3640, 37.5816, 0.0, 0.0, 90.0); //create the object
  	SetDynamicObjectMaterialText(objectid5,0,"{000000}Categoria\nMasini de epoca",OBJECT_MATERIAL_SIZE_256x128,"Arial", 42, 0, 0xFFFFFFFF,0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
    new objectid6 = CreateDynamicObject(7930, -2011.7740, -127.3240, 37.5816, 0.0, 0.0, 00.0); //create the object
  	SetDynamicObjectMaterialText(objectid6,0,"{000000}Categoria\nMuscle Car",OBJECT_MATERIAL_SIZE_256x128,"Arial", 42, 0, 0xFFFFFFFF,0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
    new objectid7 = CreateDynamicObject(7930, -2011.7740, -152.3240, 37.5816, 0.0, 0.0, 0.0); //create the object
	SetDynamicObjectMaterialText(objectid7,0,"{000000}Categoria\nSuv Car",OBJECT_MATERIAL_SIZE_256x128,"Arial", 42, 0, 0xFFFFFFFF,0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
    new objectid8 = CreateDynamicObject(7930, -2057.9539, -142.9018, 37.5816, 0.0, 0.0, 0.0); //create the object
    SetDynamicObjectMaterialText(objectid8,0,"{000000}Categoria\nSaloons Car",OBJECT_MATERIAL_SIZE_256x128,"Arial", 42, 0, 0xFFFFFFFF,0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
    new objectid9 = CreateDynamicObject(7930, -2057.1995, -143.5098, 37.5816, 0.0, 0.0, 180.0); //create the object
 	SetDynamicObjectMaterialText(objectid9,0,"{000000}Categoria\nSport's Car",OBJECT_MATERIAL_SIZE_256x128,"Arial", 42, 0, 0xFFFFFFFF,0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);

 	//========================================================Cars==================================
	//==============================================================================================
	LoadAllVehicles();
	LoadStuff();
	//================Gamemode and Map text===================================================
	format(string, sizeof(string), "RPG Romania- %s", SCRIPT_VERSION);
	SetGameModeText(string);
	//==============================================timere===================================
	SetTimer("RotateWheel",3*1000,0);
	timerul[0] = SetTimer("Spectator", 2000, true);
	timerul[1] = SetTimer("MoneyTimer", 1000, true);
	timerul[2] = SetTimer("CheckGas", 15000, true);
 	timerul[3] = SetTimer("SetPlayerUnjail", 1000, true);
	timerul[4] = SetTimer("OtherTimers", 1000, true);
	timerul[5] = SetTimer("SyncUp", 60000, true);
	timerul[6] = SetTimer("RandomChatMessage",350000,true);
	timerul[7] = SetTimer("RandomWeather",1000,false);
	timerul[8] = SetTimer("LoadFS",8000,false);
	//timerul[9] = SetTimer("RestartTimer",1000,false); //restarting
	//timerul[10]  liber
	timerul[11] = SetTimer("PowerBar", 25, true);
	timerul[12] = SetTimer("PropOnPlayerUpdate", 100, true);
	timerul[13] = SetTimer("Spectator", 4000, true);
//	timerul[14] = SetTimer("EndPaintBall", 300000, false);
	//======================================TEXTDRAWS=======================================

	PowerTD[1] = TextDrawCreate(512.000000, 397.000000, "~n~~n~");
	TextDrawBackgroundColor(PowerTD[1], 255);
	TextDrawFont(PowerTD[1], 1);
	TextDrawLetterSize(PowerTD[1], 0.500000, -0.099999);
	TextDrawColor(PowerTD[1], -1);
	TextDrawSetOutline(PowerTD[1], 0);
	TextDrawSetProportional(PowerTD[1], 1);
	TextDrawSetShadow(PowerTD[1], 1);
	TextDrawUseBox(PowerTD[1], 1);
	TextDrawBoxColor(PowerTD[1], 252645375);
	TextDrawTextSize(PowerTD[1], 591.000000, 0.000000);

	TextdrawInfoBox = TextDrawCreate(177.000000, 166.000000, "usebox");
	TextDrawLetterSize(TextdrawInfoBox, 0.000000, 8.598610);
	TextDrawTextSize(TextdrawInfoBox, 6.000000, 0.000000);
	TextDrawAlignment(TextdrawInfoBox, 1);
	TextDrawColor(TextdrawInfoBox, 0);
	TextDrawUseBox(TextdrawInfoBox, true);
	TextDrawBoxColor(TextdrawInfoBox, 102);
	TextDrawSetShadow(TextdrawInfoBox, 0);
	TextDrawSetOutline(TextdrawInfoBox, 0);
	TextDrawFont(TextdrawInfoBox, 0);

	TextdrawInfoBall = TextDrawCreate(14.500000, 166.250000, " ");//info
	TextDrawLetterSize(TextdrawInfoBall, 0.284000, 1.429375);
	TextDrawAlignment(TextdrawInfoBall, 1);
	TextDrawColor(TextdrawInfoBall, -1);
	TextDrawSetShadow(TextdrawInfoBall, 0);
	TextDrawSetOutline(TextdrawInfoBall, 1);
	TextDrawBackgroundColor(TextdrawInfoBall, 51);
	TextDrawFont(TextdrawInfoBall, 1);
	TextDrawSetProportional(TextdrawInfoBall, 1);

 	Textwarevent = TextDrawCreate(20.000000,280.000000, " "); //war si event
	TextDrawAlignment(Textwarevent, 1);
	TextDrawBackgroundColor(Textwarevent, 255);
	TextDrawFont(Textwarevent, 1);
	TextDrawLetterSize(Textwarevent, 0.280000, 0.899999);
	TextDrawColor(Textwarevent, -1);
	TextDrawSetOutline(Textwarevent, 1);
	TextDrawSetProportional(Textwarevent, 1);

	BlindFold = TextDrawCreate(704.000000, -56.250000, "usebox");
	TextDrawLetterSize(BlindFold, 0.000000, 57.266666);
	TextDrawTextSize(BlindFold, -47.000000, 0.000000);
	TextDrawAlignment(BlindFold, 1);
	TextDrawColor(BlindFold, -16776961);
	TextDrawUseBox(BlindFold, true);
	TextDrawBoxColor(BlindFold, 255);
	TextDrawSetShadow(BlindFold, 0);
	TextDrawSetOutline(BlindFold, 0);
	TextDrawBackgroundColor(BlindFold, -16776961);
	TextDrawFont(BlindFold, 0);

	Textdraw65 = TextDrawCreate(320.000000, 172.000000, "~n~~n~~n~~n~~n~~n~~n~~n~");
	TextDrawAlignment(Textdraw65, 2);
	TextDrawBackgroundColor(Textdraw65, 255);
	TextDrawFont(Textdraw65, 1);
	TextDrawLetterSize(Textdraw65, 0.500000, 1.000000);
	TextDrawColor(Textdraw65, -1);
	TextDrawSetOutline(Textdraw65, 0);
	TextDrawSetProportional(Textdraw65, 1);
	TextDrawSetShadow(Textdraw65, 1);
	TextDrawUseBox(Textdraw65, 1);
	TextDrawBoxColor(Textdraw65, 85);
	TextDrawTextSize(Textdraw65, 230.000000, -270.000000);

	Textdraw66 = TextDrawCreate(320.000000, 185.000000, "~n~~n~~n~~n~~n~");
	TextDrawAlignment(Textdraw66, 2);
	TextDrawBackgroundColor(Textdraw66, 255);
	TextDrawFont(Textdraw66, 1);
	TextDrawLetterSize(Textdraw66, 0.500000, 1.000000);
	TextDrawColor(Textdraw66, -1);
	TextDrawSetOutline(Textdraw66, 0);
	TextDrawSetProportional(Textdraw66, 1);
	TextDrawSetShadow(Textdraw66, 1);
	TextDrawUseBox(Textdraw66, 1);
	TextDrawBoxColor(Textdraw66, 187);
	TextDrawTextSize(Textdraw66, 230.000000, -240.000000);

	Textdraw67 = TextDrawCreate(253.000000, 169.000000, "D E C O D E R");
	TextDrawBackgroundColor(Textdraw67, 255);
	TextDrawFont(Textdraw67, 1);
	TextDrawLetterSize(Textdraw67, 0.539999, 1.400000);
	TextDrawColor(Textdraw67, -1442840321);
	TextDrawSetOutline(Textdraw67, 0);
	TextDrawSetProportional(Textdraw67, 1);
	TextDrawSetShadow(Textdraw67, 0);

	Textdraw68 = TextDrawCreate(321.000000, 191.000000, "000000000001");
	TextDrawAlignment(Textdraw68, 2);
	TextDrawBackgroundColor(Textdraw68, 255);
	TextDrawFont(Textdraw68, 2);
	TextDrawLetterSize(Textdraw68, 0.700000, 3.000000);
	TextDrawColor(Textdraw68, -16776961);
	TextDrawSetOutline(Textdraw68, 0);
	TextDrawSetProportional(Textdraw68, 1);
	TextDrawSetShadow(Textdraw68, 0);

	Date = TextDrawCreate(547.000000,11.000000,"--");
	TextDrawFont(Date,3);
	TextDrawLetterSize(Date,0.399999,1.600000);
    TextDrawColor(Date,0xffffffff);
    Time2 = TextDrawCreate(547.000000,28.000000,"--");
    TextDrawFont(Time2,3);
    TextDrawLetterSize(Time2,0.399999,1.600000);
    TextDrawColor(Time2,0xffffffff);

    format(string,sizeof(string), "rpg."#SERVERNAME".ro  V: %s",SCRIPT_VERSION);
 	Textdraw45 = TextDrawCreate(504.000000, 433.000000, string); // version
	TextDrawBackgroundColor(Textdraw45, 255);
	TextDrawFont(Textdraw45, 2);
	TextDrawLetterSize(Textdraw45, 0.190000, 0.999999);
	TextDrawColor(Textdraw45, 629657343);
	TextDrawSetOutline(Textdraw45, 1);
	TextDrawSetProportional(Textdraw45, 1);

    TextdrawIntro1 = TextDrawCreate(650.500000, -10.312500, "usebox");
	TextDrawLetterSize(TextdrawIntro1, 0.000000, 12.815289);
	TextDrawTextSize(TextdrawIntro1, -16.500000, 0.000000);
	TextDrawAlignment(TextdrawIntro1, 1);
	TextDrawColor(TextdrawIntro1, 0);
	TextDrawUseBox(TextdrawIntro1, true);
	TextDrawBoxColor(TextdrawIntro1, 102);
	TextDrawSetShadow(TextdrawIntro1, 0);
	TextDrawSetOutline(TextdrawIntro1, 0);
	TextDrawFont(TextdrawIntro1, 0);

    TextdrawIntro2 = TextDrawCreate(646.500000, 337.062500, "usebox");
	TextDrawLetterSize(TextdrawIntro2, 0.000000, 14.609723);
	TextDrawTextSize(TextdrawIntro2, -9.000000, 0.000000);
	TextDrawAlignment(TextdrawIntro2, 1);
	TextDrawColor(TextdrawIntro2, 0);
	TextDrawUseBox(TextdrawIntro2, true);
	TextDrawBoxColor(TextdrawIntro2, 102);
	TextDrawSetShadow(TextdrawIntro2, 0);
	TextDrawSetOutline(TextdrawIntro2, 0);
	TextDrawFont(TextdrawIntro2, 0);

	TextdrawIntro3 = TextDrawCreate(666.500000, 425.000000, "usebox");
	TextDrawLetterSize(TextdrawIntro3, 0.000000, 2.461111);
	TextDrawTextSize(TextdrawIntro3, -23.000000, 0.000000);
	TextDrawAlignment(TextdrawIntro3, 1);
	TextDrawColor(TextdrawIntro3, -1);
	TextDrawUseBox(TextdrawIntro3, true);
	TextDrawBoxColor(TextdrawIntro3, 255);
	TextDrawSetShadow(TextdrawIntro3, 0);
	TextDrawSetOutline(TextdrawIntro3, 0);
	TextDrawBackgroundColor(TextdrawIntro3, 16777215);
	TextDrawFont(TextdrawIntro3, 0);

	TextdrawIntro4 = TextDrawCreate(334.000000, 27.562500, ""#SERVERNAME" Romania");
	TextDrawLetterSize(TextdrawIntro4, 1.482499, 4.821877);
	TextDrawTextSize(TextdrawIntro4, 305.000000, 374.062500);
	TextDrawAlignment(TextdrawIntro4, 2);
	TextDrawColor(TextdrawIntro4, 16777160);
	TextDrawSetShadow(TextdrawIntro4, 0);
	TextDrawSetOutline(TextdrawIntro4, 2);
	TextDrawBackgroundColor(TextdrawIntro4, 255);
	TextDrawFont(TextdrawIntro4, 3);
	TextDrawSetProportional(TextdrawIntro4, 1);

	TextTotalAcc = TextDrawCreate(10.000000, 424.375000, " ");//TotalAccounts:~g~~h~1123
	TextDrawLetterSize(TextTotalAcc, 0.378500, 2.334999);
	TextDrawAlignment(TextTotalAcc, 1);
	TextDrawColor(TextTotalAcc, -1);
	TextDrawSetShadow(TextTotalAcc, 0);
	TextDrawSetOutline(TextTotalAcc, 1);
	TextDrawBackgroundColor(TextTotalAcc, 51);
	TextDrawFont(TextTotalAcc, 1);
	TextDrawSetProportional(TextTotalAcc, 1);

	TextNewAcc = TextDrawCreate(160.000000, 424.375000, " ");//NewAccount:~y~~h~Mister21
	TextDrawLetterSize(TextNewAcc, 0.378500, 2.334999);
	TextDrawAlignment(TextNewAcc, 1);
	TextDrawColor(TextNewAcc, -1);
	TextDrawSetShadow(TextNewAcc, 0);
	TextDrawSetOutline(TextNewAcc, 1);
	TextDrawBackgroundColor(TextNewAcc, 51);
	TextDrawFont(TextNewAcc, 1);
	TextDrawSetProportional(TextNewAcc, 1);

	TextBannedAcc = TextDrawCreate(407.000000, 425.687500, " ");//Banned:~r~~h~1231
	TextDrawLetterSize(TextBannedAcc, 0.378500, 2.334999);
	TextDrawAlignment(TextBannedAcc, 1);
	TextDrawColor(TextBannedAcc, -1);
	TextDrawSetShadow(TextBannedAcc, 0);
	TextDrawSetOutline(TextBannedAcc, 1);
	TextDrawBackgroundColor(TextBannedAcc, 51);
	TextDrawFont(TextBannedAcc, 1);
	TextDrawSetProportional(TextBannedAcc, 1);

	TextMostAcc = TextDrawCreate(582.000000, 426.562500, " ");//MostOnline:~b~~h~~h~1000
	TextDrawLetterSize(TextMostAcc,  0.378500, 2.334999);
	TextDrawAlignment(TextMostAcc, 2);
	TextDrawColor(TextMostAcc, -1);
	TextDrawSetShadow(TextMostAcc, 0);
	TextDrawSetOutline(TextMostAcc, 1);
	TextDrawBackgroundColor(TextMostAcc, 51);
	TextDrawFont(TextMostAcc, 1);
	TextDrawSetProportional(TextMostAcc, 1);///


//==============================pd==========================
    PDBackGround = TextDrawCreate(437.500000, 142.433364, "usebox");
	TextDrawLetterSize(PDBackGround, 0.000000, 21.785184);
	TextDrawTextSize(PDBackGround, 189.500000, 0.000000);
	TextDrawAlignment(PDBackGround, 1);
	TextDrawColor(PDBackGround, 7167);
	TextDrawUseBox(PDBackGround, true);
	TextDrawBoxColor(PDBackGround, 8703);
	TextDrawSetShadow(PDBackGround, 0);
	TextDrawSetOutline(PDBackGround, 0);
	TextDrawBackgroundColor(PDBackGround, 7167);
	TextDrawFont(PDBackGround, 1);

	PDMainMenu = TextDrawCreate(226.000000, 179.200012, "MAIN MENU");
	TextDrawLetterSize(PDMainMenu, 0.366000, 1.669999);
	TextDrawAlignment(PDMainMenu, 1);
	TextDrawColor(PDMainMenu, -5963521);
	TextDrawSetShadow(PDMainMenu, 0);
	TextDrawSetOutline(PDMainMenu, 1);
	TextDrawBackgroundColor(PDMainMenu, 51);
	TextDrawFont(PDMainMenu, 1);
	TextDrawSetProportional(PDMainMenu, 1);

	PDSsapd = TextDrawCreate(288.500000, 140.933441, "SAN ANDREAS POLICE DEPARTAMENT.");
	TextDrawLetterSize(PDSsapd, 0.213998, 2.183333);
	TextDrawAlignment(PDSsapd, 1);
	TextDrawColor(PDSsapd, -1);
	TextDrawSetShadow(PDSsapd, 0);
	TextDrawSetOutline(PDSsapd, 0);
	TextDrawBackgroundColor(PDSsapd, 51);
	TextDrawFont(PDSsapd, 1);
	TextDrawSetProportional(PDSsapd, 1);

	PDProtect = TextDrawCreate(354.500000, 160.066635, "PROTECTING SAN ANDREAS");
	TextDrawLetterSize(PDProtect, 0.166500, 1.590666);
	TextDrawAlignment(PDProtect, 1);
	TextDrawColor(PDProtect, 13434824);
	TextDrawSetShadow(PDProtect, 0);
	TextDrawSetOutline(PDProtect, 1);
	TextDrawBackgroundColor(PDProtect, 51);
	TextDrawFont(PDProtect, 1);
	TextDrawSetProportional(PDProtect, 1);

	PDLineUp = TextDrawCreate(438.000000, 176.966674, "usebox");
	TextDrawLetterSize(PDLineUp, 0.075999, -0.151778);
	TextDrawTextSize(PDLineUp, 189.500000, 0.000000);
	TextDrawAlignment(PDLineUp, 1);
	TextDrawColor(PDLineUp, 0);
	TextDrawUseBox(PDLineUp, true);
	TextDrawBoxColor(PDLineUp, -5963521);
	TextDrawSetShadow(PDLineUp, 0);
	TextDrawSetOutline(PDLineUp, 0);
	TextDrawFont(PDLineUp, 0);

	PDLineDown = TextDrawCreate(437.500000, 313.699890, "usebox");
	TextDrawLetterSize(PDLineDown, 0.005500, -0.133629);
	TextDrawTextSize(PDLineDown, 189.500000, -2.333333);
	TextDrawAlignment(PDLineDown, 1);
	TextDrawColor(PDLineDown, 0);
	TextDrawUseBox(PDLineDown, true);
	TextDrawBoxColor(PDLineDown, -5963521);
	TextDrawSetShadow(PDLineDown, 0);
	TextDrawSetOutline(PDLineDown, 0);
	TextDrawFont(PDLineDown, 0);


	PDRowStar1 = TextDrawCreate(205.000000, 213.937500, "]");
	TextDrawLetterSize(PDRowStar1, 0.422500, 1.512498);
	TextDrawAlignment(PDRowStar1, 1);
	TextDrawColor(PDRowStar1, -1);
	TextDrawSetShadow(PDRowStar1, 0);
	TextDrawSetOutline(PDRowStar1, 1);
	TextDrawBackgroundColor(PDRowStar1, 51);
	TextDrawFont(PDRowStar1, 2);
	TextDrawSetProportional(PDRowStar1, 1);

	PDRowStar2 = TextDrawCreate(205.000000, 231.000000, "]");
	TextDrawLetterSize(PDRowStar2, 0.422500, 1.512498);
	TextDrawAlignment(PDRowStar2, 1);
	TextDrawColor(PDRowStar2, -1);
	TextDrawSetShadow(PDRowStar2, 0);
	TextDrawSetOutline(PDRowStar2, 1);
	TextDrawBackgroundColor(PDRowStar2, 51);
	TextDrawFont(PDRowStar2, 2);
	TextDrawSetProportional(PDRowStar2, 1);

	PDRowStar3 = TextDrawCreate(205.500000, 247.625000, "]");
	TextDrawLetterSize(PDRowStar3, 0.422500, 1.512498);
	TextDrawAlignment(PDRowStar3, 1);
	TextDrawColor(PDRowStar3, -1);
	TextDrawSetShadow(PDRowStar3, 0);
	TextDrawSetOutline(PDRowStar3, 1);
	TextDrawBackgroundColor(PDRowStar3, 51);
	TextDrawFont(PDRowStar3, 2);
	TextDrawSetProportional(PDRowStar3, 1);

	PDRowStar4 = TextDrawCreate(206.500000, 265.125000, "]");
	TextDrawLetterSize(PDRowStar4, 0.422500, 1.512498);
	TextDrawAlignment(PDRowStar4, 1);
	TextDrawColor(PDRowStar4, -1);
	TextDrawSetShadow(PDRowStar4, 0);
	TextDrawSetOutline(PDRowStar4, 1);
	TextDrawBackgroundColor(PDRowStar4, 51);
	TextDrawFont(PDRowStar4, 0);
	TextDrawSetProportional(PDRowStar4, 1);

	PDRowStar5 = TextDrawCreate(207.000000, 283.937500, "]");
	TextDrawLetterSize(PDRowStar5, 0.422500, 1.512498);
	TextDrawAlignment(PDRowStar5, 1);
	TextDrawColor(PDRowStar5, -1);
	TextDrawSetShadow(PDRowStar5, 0);
	TextDrawSetOutline(PDRowStar5, 1);
	TextDrawBackgroundColor(PDRowStar5, 51);
	TextDrawFont(PDRowStar5, 2);
	TextDrawSetProportional(PDRowStar5, 1);

	for(new i = 0;i<MAX_PLAYERS;i++)
	{
	    PDOption[i] = TextDrawCreate(234.500000, 192.733352, " ");//Selecteaza o optiune
		TextDrawLetterSize(PDOption[i], 0.165497, 1.445999);
		TextDrawAlignment(PDOption[i], 1);
		TextDrawColor(PDOption[i], -1);
		TextDrawSetShadow(PDOption[i], 0);
		TextDrawSetOutline(PDOption[i], 1);
		TextDrawBackgroundColor(PDOption[i], 51);
		TextDrawFont(PDOption[i], 1);
		TextDrawSetProportional(PDOption[i], 1);

    	BetText[i]=TextDrawCreate(195.0,Yss+58-200," ");
	    TextDrawFont(BetText[i],2);
	    TextDrawLetterSize(BetText[i],0.35,0.8);
	    TextDrawSetShadow(BetText[i],0);
	    TextDrawSetOutline(BetText[i],1);

	    _OAB_TD_SLOT_1[i] = TextDrawCreate(274,300,"LD_SLOT:r_69");
	    _OAB_TD_SLOT_2[i] = TextDrawCreate(200,300,"LD_SLOT:r_69");
	    _OAB_TD_SLOT_3[i] = TextDrawCreate(348,300,"LD_SLOT:r_69");

	    Textdraw47[i] = TextDrawCreate(95.000000, 321.000000, " "); //teritoriu
		TextDrawAlignment(Textdraw47[i], 2);
		TextDrawBackgroundColor(Textdraw47[i], 255);
		TextDrawFont(Textdraw47[i], 1);
		TextDrawLetterSize(Textdraw47[i], 0.20000, 0.699999);
		TextDrawColor(Textdraw47[i], -1);
		TextDrawSetOutline(Textdraw47[i], 1);
		TextDrawSetProportional(Textdraw47[i], 1);

    	Textdraw53[i] = TextDrawCreate(320.000000, 341.000000, " "); // GPS
		TextDrawAlignment(Textdraw53[i], 2);
		TextDrawBackgroundColor(Textdraw53[i], 255);
		TextDrawFont(Textdraw53[i], 2);
		TextDrawLetterSize(Textdraw53[i], 0.400000, 1.500000);
		TextDrawColor(Textdraw53[i], -1);
		TextDrawSetOutline(Textdraw53[i], 1);
		TextDrawSetProportional(Textdraw53[i], 1);

    	td_fuel[i] = TextDrawCreate(576.000000,400.000000," ");// gas
	    TextDrawBackgroundColor(td_fuel[i], 255);
   	 	TextDrawFont(td_fuel[i], 1);
    	TextDrawLetterSize(td_fuel[i], 0.299999,1.000000);
		TextDrawColor(td_fuel[i], 0xFFFFFFFF);
		TextDrawSetOutline(td_fuel[i], 1);
		TextDrawSetProportional(td_fuel[i], 1);

        Textdraw160[i] = TextDrawCreate(466.000000,330.500000, " "); // radio
		TextDrawBackgroundColor(Textdraw160[i], 255);
		TextDrawFont(Textdraw160[i], 1);
		TextDrawLetterSize(Textdraw160[i], 0.299999,1.000000);
		TextDrawColor(Textdraw160[i], 0xFFFFFFFF);
		TextDrawSetOutline(Textdraw160[i], 1);
		TextDrawSetProportional(Textdraw160[i], 1);
		TextDrawSetShadow(Textdraw160[i],1);
		TextDrawUseBox(Textdraw160[i],1);
		TextDrawBoxColor(Textdraw160[i],0x00000033);

        Textdraw69[i] = TextDrawCreate(466.000000,380.000000, " "); // odo
		TextDrawBackgroundColor(Textdraw69[i], 255);
		TextDrawFont(Textdraw69[i], 1);
		TextDrawLetterSize(Textdraw69[i], 0.299999,1.000000);
		TextDrawColor(Textdraw69[i], 0xFFFFFFFF);
		TextDrawSetOutline(Textdraw69[i], 1);
		TextDrawSetProportional(Textdraw69[i], 1);

	    Textdraw40[i] = TextDrawCreate(466.000000,400.000000, " "); // fuel
		TextDrawBackgroundColor(Textdraw40[i], 255);
		TextDrawFont(Textdraw40[i], 1);
		TextDrawLetterSize(Textdraw40[i], 0.299999,1.000000);
		TextDrawColor(Textdraw40[i], 0xFFFFFFFF);
		TextDrawSetOutline(Textdraw40[i], 1);
		TextDrawSetProportional(Textdraw40[i], 1);

	    TextDrawVeh[i] = TextDrawCreate(562.777526, 325.333435, "_");
		TextDrawFont(TextDrawVeh[i], TEXT_DRAW_FONT_MODEL_PREVIEW);
		TextDrawTextSize(TextDrawVeh[i], 78.559295, 80.916648);
		TextDrawUseBox(TextDrawVeh[i], 0);
		TextDrawBackgroundColor(TextDrawVeh[i], 0x00000000);
  		//TextDrawBoxColor(TextDrawVeh[i], 0xFFFFFFAA );
		TextDrawSetPreviewRot(TextDrawVeh[i], 0.000000, 0.000000, 320.000000, 1.000000);
	//	TextDrawSetPreviewVehCol(TextDrawVeh[i], 1, 1);


	   	sState[i] = TextDrawCreate(550.000000,390.000000, "~r~R N D");
		TextDrawBackgroundColor(sState[i], 255);
		TextDrawFont(sState[i], 1);
		TextDrawLetterSize(sState[i], 0.299999,1.000000);
		TextDrawColor(sState[i], -1);
		TextDrawSetOutline(sState[i], 0);
		TextDrawSetProportional(sState[i], 1);
		TextDrawSetShadow(sState[i], 1);

		Healthveh[i] = TextDrawCreate(466.000000,350.000000, " "); // Health
		TextDrawBackgroundColor(Healthveh[i], 255);
		TextDrawFont(Healthveh[i], 1);
		TextDrawLetterSize(Healthveh[i], 0.299999,1.000000);
		TextDrawColor(Healthveh[i], 0xFFFFFFFF);
		TextDrawSetOutline(Healthveh[i], 1);
		TextDrawSetProportional(Healthveh[i], 1);

		heights[i] = TextDrawCreate(466.000000,360.000000, " "); // height
		TextDrawBackgroundColor(heights[i], 255);
		TextDrawFont(heights[i], 1);
		TextDrawLetterSize(heights[i], 0.299999,1.000000);
		TextDrawColor(heights[i], 0xFFFFFFFF);
		TextDrawSetOutline(heights[i], 1);
		TextDrawSetProportional(heights[i], 1);

	    Gpscar[i] = TextDrawCreate(466.000000,370.000000, " "); // gps
		TextDrawBackgroundColor(Gpscar[i], 255);
		TextDrawFont(Gpscar[i], 1);
		TextDrawLetterSize(Gpscar[i], 0.299999,1.000000);
		TextDrawColor(Gpscar[i], 0xFFFFFFFF);
		TextDrawSetOutline(Gpscar[i], 1);
		TextDrawSetProportional(Gpscar[i], 1);

	    Textdraw39[i] = TextDrawCreate(466.000000,390.000000, " "); // speedo
		TextDrawBackgroundColor(Textdraw39[i], 255);
		TextDrawFont(Textdraw39[i], 1);
		TextDrawLetterSize(Textdraw39[i], 0.299999,1.000000);
		TextDrawColor(Textdraw39[i], 0xFFFFFFFF);
		TextDrawSetOutline(Textdraw39[i], 1);
		TextDrawSetProportional(Textdraw39[i], 1);

		Modelcar[i] = TextDrawCreate(466.000000,340.000000, " "); // modelcar
		TextDrawBackgroundColor(Modelcar[i], 255);
		TextDrawFont(Modelcar[i], 1);
		TextDrawLetterSize(Modelcar[i], 0.299999,1.000000);
		TextDrawColor(Modelcar[i], 0xFFFFFFFF);
		TextDrawSetOutline(Modelcar[i], 1);
		TextDrawSetProportional(Modelcar[i], 1);

	    Textdraw70[i] = TextDrawCreate(466.000000,410.000000, " "); // brake
		TextDrawBackgroundColor(Textdraw70[i], 255);
		TextDrawFont(Textdraw70[i], 1);
		TextDrawLetterSize(Textdraw70[i], 0.299999,1.000000);
		TextDrawColor(Textdraw70[i], 0xFFFFFFFF);
		TextDrawSetOutline(Textdraw70[i], 1);
		TextDrawSetProportional(Textdraw70[i], 1);

		Textdraw71[i] = TextDrawCreate(516.000000,410.000000, " "); // lights
		TextDrawBackgroundColor(Textdraw71[i], 255);
		TextDrawFont(Textdraw71[i], 1);
		TextDrawLetterSize(Textdraw71[i], 0.299999,1.000000);
		TextDrawColor(Textdraw71[i], 0xFFFFFFFF);
		TextDrawSetOutline(Textdraw71[i], 1);
		TextDrawSetProportional(Textdraw71[i], 1);

		Textdraw72[i] = TextDrawCreate(566.000000,410.000000, " "); // lock
		TextDrawBackgroundColor(Textdraw72[i], 255);
		TextDrawFont(Textdraw72[i], 1);
		TextDrawLetterSize(Textdraw72[i], 0.299999,1.000000);
		TextDrawColor(Textdraw72[i], 0xFFFFFFFF);
		TextDrawSetOutline(Textdraw72[i], 1);
		TextDrawSetProportional(Textdraw72[i], 1);


		NameText[i] = TextDrawCreate(60.000000, 426.000000, " "); // Numele
		TextDrawBackgroundColor(NameText[i], 255);
		TextDrawFont(NameText[i], 2);
		TextDrawLetterSize(NameText[i], 0.260000, 1.499999);
		TextDrawColor(NameText[i], 629657343);
		TextDrawSetOutline(NameText[i], 1);
		TextDrawSetProportional(NameText[i], 1);
	}

	//======================================TEXTDRAWS=======================================
	LoadPHouses();
	LoadDealerShip();
	LoadCreatedCars();
	LoadPVehicles();
	LoadsBiz();
	LoadBiz();
	ATMLoad();
	LoadFactionSafe();
	LoadGangs();
	LoadFactionSpawn();
	LoadRoom();
	LoadHouseGate();
	CreateBall();
	CreateGolfBall();
	securitate[0] = 3;
	securitate[1] = 3;
	securitate[2] = 3;
	securitate[3] = 3;
	securitate[4] = 3;
	securitate[5] = 3;
	securitate[6] = 3;
	securitate[7] = 3;
	securitate[8] = 3;
	securitate[9] = 3;
	securitate[10] = 3;
	securitate[11] = 3;
	securitate[12] = 3;
	securitate[13] = 3;
	securitate[14] = 3;
	securitate[15] = 3;
	securitate[16] = 3;
	securitate[17] = 3;
	//===========================================phy==============================
	PHY_CreateArea(2669.03, -1864.08, 2745.12, -1740.54, _, _, 424.5);
	// Goal
	PHY_CreateWall(2711.87, -1857.30, 2711.87, -1862.75, 0.5, _, 425.87);
	PHY_CreateWall(2711.87, -1862.75, 2701.92, -1862.75, 0.5, _, 425.87);
	PHY_CreateWall(2701.92, -1862.75, 2701.92, -1857.30, 0.5, _, 425.87);
	// Crossbar
	PHY_CreateWall(2701.92, -1857.30, 2711.87, -1857.30, _, 425.87 - 0.1, 425.87 + 0.1);
	// Pole
	PHY_CreateCylinder(2711.87, -1857.30, 0.3, _, _, 425.87);
	PHY_CreateCylinder(2701.92, -1857.30, 0.3, _, _, 425.87);
	// Goal
    PHY_CreateWall(2701.92, -1747.10, 2701.92, -1741.60, 0.5, _, 425.87);
	PHY_CreateWall(2701.92, -1741.60, 2711.89, -1741.60, 0.5, _, 425.87);
	PHY_CreateWall(2711.89, -1741.60, 2711.89, -1747.10, 0.5, _, 425.87);
	// Crossbar
	PHY_CreateWall(2711.89, -1747.10, 2701.92, -1747.10, _, 425.87 - 0.1, 425.87 + 0.1);
	// Pole
	PHY_CreateCylinder(2701.92, -1747.10, 0.3, _, _, 425.87);
	PHY_CreateCylinder(2711.89, -1747.10, 0.3, _, _, 425.87);

	//===================================allveh===============allvehs=====================
	for(new v=1; v<MAX_VEHICLES; v++)
	{
	    EncodeVehicle(v);
	    gGas[v] = 100;
	    GasCar[v] = 100;
		SetVehicleToRespawn(v);
		VehLocked[v] = 0;
    }
    //===================================================================================
	print("=============================================================");
	printf("		OnGameModeInit Loaded %d Pickups", CountDynamicPickups());
	print("=============================================================\n");
	print("=============================================================");
	printf("		OnGameModeInit Loaded %d Text's", CountDynamic3DTextLabels());
	print("=============================================================\n\n");
	print("=============================================================");
	printf("		"#SERVERNAME" Rp-Rpg GameMode 3 Version %s",SCRIPT_VERSION);
	print("=============================================================\n");
	return 1;
}

public OnGameModeExit()
{
    KillTimer(timerul[0]);
    KillTimer(timerul[1]);
    KillTimer(timerul[2]);
    KillTimer(timerul[3]);
    KillTimer(timerul[4]);
    KillTimer(timerul[5]);
    KillTimer(timerul[6]);
    KillTimer(timerul[7]);
    KillTimer(timerul[8]);
    KillTimer(timerul[9]);
    KillTimer(timerul[10]);
    KillTimer(timerul[11]);
    KillTimer(timerul[12]);
    KillTimer(timerul[13]);
    KillTimer(timerul[14]);
	for(new g;g<MAX_GANGZONES;g++)
	GangZoneDestroy(g);
	for(new p;p<=CountDynamicPickups();p++)
	DestroyDynamicPickup(p);
	for(new d;d<=CountDynamicObjects();d++)
	DestroyDynamicObject(d);
    mysql_close();
	SendRconCommand("gmx");
	foreach(Player,i)
	if(snowOn{i})
 	{
    	for(new j = 0; j < MAX_SNOW_OBJECTS; j++) DestroyDynamicObject(snowObject[i][j]);
        KillTimer(updateTimer{i});
  	}
	return 1;
}



public MySQLConnect()
{
	handle = mysql_connect(mysql_host, mysql_user, mysql_database, mysql_password);

	if(handle && mysql_errno(handle) == 0)
	{
		printf("[MYSQL]: Connection to database (%s) was established!", mysql_database);
	}
	else
	{
		printf("[MYSQL]: Connection to database (%s) failed!", mysql_database);
		SendRconCommand("exit");
	}

	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	SetPlayerPos(playerid, 1382.2604, -1622.6512, 14.2860);
 	if(PlayerInfo[playerid][pTutorial] == 0)
	{
    	mysql_format(handle, query, sizeof(query), "SELECT * FROM `players` WHERE `username` = '%e'", PlayerName(playerid));
		mysql_tquery(handle, query, "WhenAccountCheck", "i", playerid);
    }
	return 1;
}

/*public Musics(playerid)
{
	Audio_Play(playerid, IntroMusic);
	return 1;
}*/
public OnPlayerConnect(playerid)
{
	new string[145]; TicketMoney[playerid] = 0;
    PlayerPlaySound(playerid, 1187, 0.0, 0.0, 0.0);
	SetPlayerColor(playerid, COLOR_GRAD); 					Tele[playerid] = 0;				PayTimer[playerid] = 0;
	noclipdata[playerid][accelmul] = 0.0;   				passwords[playerid] = 0;    	RegistrationStep[playerid] = 0;
	noclipdata[playerid][lastmove] = 0;						gRegistred[playerid] = 0;		TutorialTime[playerid] = 0;
	noclipdata[playerid][udold] = 0;						Refueling[playerid] = 0;		ChosenSkin[playerid] = 0;
	noclipdata[playerid][lrold]	= 0;						gLogged[playerid] = 0;			plantata[playerid] = 999;
	TogglePlayerSpectating(playerid, 0);					FactionOffer[playerid] = 999;	noclipdata[playerid][mode] = 0;
    PlayerInfo[playerid][pRegistred] = 0;					SosTime[playerid] = 0;			FlyModeA[playerid] = 0;
    PlayerInfo[playerid][pTutorial] = 0;					MOVE_SPEED[playerid] = 100;		STDPlayer[playerid] = 0;
	Houses[playerid] = 0;    								FirstSpawn[playerid] = 1;	    instart[playerid] = 0;
	TesterDuty[playerid] = 0;							    PhoneOnline[playerid] = 1;	    Condom[playerid] = 0;
    Gps[playerid] = 0;             							Music[playerid] = 0;    		repairkey[playerid] = 0;
    Hamburgers[playerid] = 0;       						Cigarretes[playerid] = 0;       Tele[playerid] = 1;
	DecodeTimeW[playerid] = 0;							    LookAt[playerid] = 999;			gNewb[playerid] = 1;
    gWhisper[playerid] = 1;        							gOoc[playerid] = 1;				TogLC[playerid] = 1;
	gNews[playerid] = 0;          							PlayerLocked[playerid] = 0;     start[playerid] = 0;
	SpectatedID[playerid] = 999;                            FindTime[playerid] = 999;       Masked[playerid] = 0;
    Connect[playerid] = 0;                                  SelectCharPlace[playerid] = 0;  PaintBallPlaying[playerid] = 0;
    PaintScore[playerid] = 0;                               Attemping[playerid] = 0;
  	new ghour, gminute, gsecond;
	gettime(ghour, gminute, gsecond);
	SetPlayerTime(playerid, ghour, gminute); // Noon;

 	if(GetPlayers() > RecordPlayers)
 	{
 	    new strong[300];
  		format(strong,sizeof(strong), "Noul Record de playeri online este acum de %d. Stabilit azi %s",GetPlayers(),CurrentTimeStamps());
 	//	SendClientMessageToAll(-1,strong);
 		RecordPlayers = GetPlayers();
		LoginQuit(strong);
 		sUpdate(0,RecordPlayersx);
	}
	if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(PlayerName(playerid)) || FindIP(PlayerName(playerid)))
	{
	    format(string, sizeof(string), "%s[%d] a facut reclama prin nume: %s. IP: %s",PlayerName(playerid),playerid, PlayerName(playerid),PlayerIP(playerid));
	    AdminsBroadCast(COLOR_RED,string,1);
	    SCM(playerid,-1,string);
	    HackLog(string);
	    SetTimerEx("kiked", 100, false, "i", playerid);
		return 1;
	}
    format(string,sizeof(string), "MostOnline:~b~~h~~h~ %d",RecordPlayers);
    TextDrawSetString(TextMostAcc, string);
	//===============================================================
	new Cache:result3 = mysql_query(handle, "SELECT NULL FROM `banslog`");
    format(string,sizeof(string), "Banned:~r~~h~ %d",cache_num_rows());
    TextDrawSetString(TextBannedAcc, string);
	cache_delete(result3);
	//===============================================================
	new dest[128];
	new Cache:result1 = mysql_query(handle, "SELECT `username` FROM `players` ORDER BY `ID` DESC LIMIT 1");
	cache_get_field_content(0, "username", temp); format(dest, 128, temp);
	cache_delete(result1);
    format(string,sizeof(string), "NewAccount:~y~~h~%s",dest);
    TextDrawSetString(TextNewAcc, string);
	//===============================================================
	new Cache:result = mysql_query(handle, "SELECT NULL FROM `players`");
    format(string,sizeof(string), "TotalAccounts:~g~~h~ %d",cache_num_rows());
	cache_delete(result);
    TextDrawSetString(TextTotalAcc, string);
	//===============================================================
	TextDrawShowForPlayer(playerid, TextMostAcc);
	TextDrawShowForPlayer(playerid, TextBannedAcc);
	TextDrawShowForPlayer(playerid, TextNewAcc);
	TextDrawShowForPlayer(playerid, TextTotalAcc);
	TextDrawShowForPlayer(playerid, TextdrawIntro1);
	TextDrawShowForPlayer(playerid, TextdrawIntro2);
	TextDrawShowForPlayer(playerid, TextdrawIntro3);
	TextDrawShowForPlayer(playerid, TextdrawIntro4);
//	PlayAudioStreamForPlayer(playerid,"http://bbq.to/"#SERVERNAME"Intro_8047.mp3");
	//===============================================================
    mysql_format(handle, query, sizeof(query), "SELECT * FROM `players` WHERE `username` = '%s'", PlayerName(playerid));
	new Cache:result2 = mysql_query(handle,query);
	if(cache_num_rows() > 0)
	{
		cache_get_field_content(0, "Banned", temp), PlayerInfo[playerid][pBanned] = strval(temp);
    	if(PlayerInfo[playerid][pBanned] != 0)
		{
		    format(string,sizeof(string),"* %s (%d) a intrat pe cont banat si a primit kick IP: %s", PlayerName(playerid), playerid,PlayerIP(playerid));
		    AdminsBroadCast(-1, string,2);
		    new fftext[20];
            if(PlayerInfo[playerid][pBanned] == -999)
            {
            	fftext = "Permanent";
				format(string,sizeof(string),"Durata banului: %s",fftext);
			}
			else if(PlayerInfo[playerid][pBanned] == 1)
            format(string,sizeof(string),"Durata banului: o zi");
            else
			format(string,sizeof(string),"Durata banului: %d zile",PlayerInfo[playerid][pBanned]);
 		    SendClientMessage(playerid,COLOR_RED,"========================================CONT BANAT======================================");
			SendClientMessage(playerid,0x1196EEC8,"Acest nume este banat pe server, pana acum nu ai primit unban.");
		    SendClientMessage(playerid,0x1196EEC8,string);
			SendClientMessage(playerid,0x1196EEC8,"Daca ai fost neindreptatit poti face cerere de unban pe forum: www."#SERVERNAME".ro");
			SendClientMessage(playerid,0x1196EEC8,"Daca banul a fost corect nu te obosi sa faci cerere");
			SendClientMessage(playerid,COLOR_RED,"=======================================BAN INFORMATION===================================");
   			SetTimerEx("kiked", 100, false, "i", playerid);
  			cache_delete(result2);
	        return 1;
		}
 	}
 	foreach(Player,i)
	{
		if(playerid != i && gLogged[i] ==1)
		{
			if(PlayerInfo[i][pAdmin] > 6)
			{
			    format(string,sizeof(string),"* %s (%d) se conecteaza IP: %s", PlayerName(playerid), playerid,PlayerIP(playerid));
				SendClientMessage(i,COLOR_GREEN,string);
			}
			else if(PlayerInfo[i][pAdmin] < 7)
			{
  				format(string,sizeof(string),"* %s (%d) se conecteaza", PlayerName(playerid), playerid);
				SendClientMessage(i,COLOR_GREEN,string);
			}
		}
	}
	format(string,sizeof(string),"* %s (%d) se conecteaza IP: %s - %s", PlayerName(playerid), playerid,PlayerIP(playerid),CurrentTimeStamps());
	LoginQuit(string);
	if(ServerRestarting!=4)
	{
	    PDRow1[playerid] = CreatePlayerTextDraw(playerid,225.000000, 212.974975, "View Wanted");//View Wanted
		PlayerTextDrawLetterSize(playerid,PDRow1[playerid], 0.317499, 1.653957);
		PlayerTextDrawAlignment(playerid,PDRow1[playerid], 1);
		PlayerTextDrawColor(playerid,PDRow1[playerid], 11796424);
		PlayerTextDrawSetShadow(playerid,PDRow1[playerid], 0);
		PlayerTextDrawSetOutline(playerid,PDRow1[playerid], 1);
		PlayerTextDrawBackgroundColor(playerid,PDRow1[playerid], 51);
		PlayerTextDrawFont(playerid,PDRow1[playerid], 1);
		PlayerTextDrawSetProportional(playerid,PDRow1[playerid], 1);

		PDRow2[playerid] = CreatePlayerTextDraw(playerid,226.000000, 229.658447, "View Jailed");//View Jailed
		PlayerTextDrawLetterSize(playerid,PDRow2[playerid], 0.317499, 1.653957);
		PlayerTextDrawAlignment(playerid,PDRow2[playerid], 1);
		PlayerTextDrawColor(playerid,PDRow2[playerid], 11796424);
		PlayerTextDrawSetShadow(playerid,PDRow2[playerid], 0);
		PlayerTextDrawSetOutline(playerid,PDRow2[playerid], 1);
		PlayerTextDrawBackgroundColor(playerid,PDRow2[playerid], 51);
		PlayerTextDrawFont(playerid,PDRow2[playerid], 1);
		PlayerTextDrawSetProportional(playerid,PDRow2[playerid], 1);

		PDRow3[playerid] = CreatePlayerTextDraw(playerid,227.000000, 246.808395, "Police Radar");//Police Radar
		PlayerTextDrawLetterSize(playerid,PDRow3[playerid], 0.317499, 1.653957);
		PlayerTextDrawAlignment(playerid,PDRow3[playerid], 1);
		PlayerTextDrawColor(playerid,PDRow3[playerid], 11796424);
		PlayerTextDrawSetShadow(playerid,PDRow3[playerid], 0);
		PlayerTextDrawSetOutline(playerid,PDRow3[playerid], 1);
		PlayerTextDrawBackgroundColor(playerid,PDRow3[playerid], 51);
		PlayerTextDrawFont(playerid,PDRow3[playerid], 1);
		PlayerTextDrawSetProportional(playerid,PDRow3[playerid], 1);

		PDRow4[playerid] = CreatePlayerTextDraw(playerid,226.000000, 264.512542, "Police Megaphone");//Police Megaphone
		PlayerTextDrawLetterSize(playerid,PDRow4[playerid], 0.317499, 1.653957);
		PlayerTextDrawAlignment(playerid,PDRow4[playerid], 1);
		PlayerTextDrawColor(playerid,PDRow4[playerid], 11796424);
		PlayerTextDrawSetShadow(playerid,PDRow4[playerid], 0);
		PlayerTextDrawSetOutline(playerid,PDRow4[playerid], 1);
		PlayerTextDrawBackgroundColor(playerid,PDRow4[playerid], 51);
		PlayerTextDrawFont(playerid,PDRow4[playerid], 1);
		PlayerTextDrawSetProportional(playerid,PDRow4[playerid], 1);

		PDRow5[playerid] = CreatePlayerTextDraw(playerid,226.000000, 282.654144, "Call police backup");//Call police backup
		PlayerTextDrawLetterSize(playerid,PDRow5[playerid], 0.317499, 1.653957);
		PlayerTextDrawAlignment(playerid,PDRow5[playerid], 1);
		PlayerTextDrawColor(playerid,PDRow5[playerid], 11796424);
		PlayerTextDrawSetShadow(playerid,PDRow5[playerid], 0);
		PlayerTextDrawSetOutline(playerid,PDRow5[playerid], 1);
		PlayerTextDrawBackgroundColor(playerid,PDRow5[playerid], 51);
		PlayerTextDrawFont(playerid,PDRow5[playerid], 1);
		PlayerTextDrawSetProportional(playerid,PDRow5[playerid], 1);

		pPowerTD[playerid] = CreatePlayerTextDraw(playerid, 512.000000, 397.000000, "~n~~n~");
		PlayerTextDrawBackgroundColor(playerid, pPowerTD[playerid], 255);
		PlayerTextDrawFont(playerid, pPowerTD[playerid], 1);
		PlayerTextDrawLetterSize(playerid, pPowerTD[playerid], 0.500000, -0.099999);
		PlayerTextDrawColor(playerid, pPowerTD[playerid], -1);
		PlayerTextDrawSetOutline(playerid, pPowerTD[playerid], 0);
		PlayerTextDrawSetProportional(playerid, pPowerTD[playerid], 1);
		PlayerTextDrawSetShadow(playerid, pPowerTD[playerid], 1);
		PlayerTextDrawUseBox(playerid, pPowerTD[playerid], 1);
		PlayerTextDrawBoxColor(playerid, pPowerTD[playerid], -1359019777);
		PlayerTextDrawTextSize(playerid, pPowerTD[playerid], 507.000000, 0.000000);

		//================================ iphone server =====================================================================

		Textdsraws0[playerid] = CreatePlayerTextDraw(playerid, 506.002532, 215.666656, "ld_pool:ball");//era 214
        PlayerTextDrawLetterSize(playerid,Textdsraws0[playerid], 0.000000, 0.000000);
        PlayerTextDrawTextSize(playerid,Textdsraws0[playerid], 16.398239, 17.500000);
        PlayerTextDrawAlignment(playerid,Textdsraws0[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws0[playerid], 255);
        PlayerTextDrawSetShadow(playerid,Textdsraws0[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws0[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws0[playerid], 4);

        Textdsraws1[playerid] = CreatePlayerTextDraw(playerid, 594.225000, 215.666656, "ld_pool:ball");//era 594
        PlayerTextDrawLetterSize(playerid,Textdsraws1[playerid], 0.000000, 0.000000);
        PlayerTextDrawTextSize(playerid,Textdsraws1[playerid], 16.398239, 17.500000);
        PlayerTextDrawAlignment(playerid,Textdsraws1[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws1[playerid], 255);
        PlayerTextDrawSetShadow(playerid,Textdsraws1[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws1[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws1[playerid], 4);

        Textdsraws2[playerid] = CreatePlayerTextDraw(playerid, 594.300000, 392.00000, "ld_pool:ball");//era 392
        PlayerTextDrawLetterSize(playerid,Textdsraws2[playerid], 0.000000, 0.000000);
        PlayerTextDrawTextSize(playerid,Textdsraws2[playerid], 16.398239, 17.500000);
        PlayerTextDrawAlignment(playerid,Textdsraws2[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws2[playerid], 255);
        PlayerTextDrawSetShadow(playerid,Textdsraws2[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws2[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws2[playerid], 4);

        Textdsraws3[playerid] = CreatePlayerTextDraw(playerid, 506.191528, 392.00000, "ld_pool:ball");//392.666900
        PlayerTextDrawLetterSize(playerid,Textdsraws3[playerid], 0.000000, 0.000000);
        PlayerTextDrawTextSize(playerid,Textdsraws3[playerid], 16.398239, 17.500000);
        PlayerTextDrawAlignment(playerid,Textdsraws3[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws3[playerid], 255);
        PlayerTextDrawSetShadow(playerid,Textdsraws3[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws3[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws3[playerid], 4);

        Textdsraws4[playerid] = CreatePlayerTextDraw(playerid, 609.672058, 220.250000, "usebox");
        PlayerTextDrawLetterSize(playerid,Textdsraws4[playerid], 0.000000, 20.618520);
        PlayerTextDrawTextSize(playerid,Textdsraws4[playerid], 506.814056, 0.000000);
        PlayerTextDrawAlignment(playerid,Textdsraws4[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws4[playerid], 255);
        PlayerTextDrawUseBox(playerid,Textdsraws4[playerid], true);
        PlayerTextDrawBoxColor(playerid,Textdsraws4[playerid], 255);
        PlayerTextDrawSetShadow(playerid,Textdsraws4[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws4[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws4[playerid], 0);

        Textdsraws5[playerid] = CreatePlayerTextDraw(playerid, 594.679382, 229.000000, "usebox");
        PlayerTextDrawLetterSize(playerid,Textdsraws5[playerid], 0.000000, 18.998146);
        PlayerTextDrawTextSize(playerid,Textdsraws5[playerid], 608.483154, 0.000000);

        PlayerTextDrawAlignment(playerid,Textdsraws5[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws5[playerid], 0);
        PlayerTextDrawUseBox(playerid,Textdsraws5[playerid], true);
        PlayerTextDrawBoxColor(playerid,Textdsraws5[playerid], 255);
        PlayerTextDrawSetShadow(playerid,Textdsraws5[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws5[playerid], 0);
        PlayerTextDrawBackgroundColor(playerid,Textdsraws5[playerid], 255);
        PlayerTextDrawFont(playerid,Textdsraws5[playerid], 0);

        Textdsraws6[playerid] = CreatePlayerTextDraw(playerid, 602.644409, 217.333343, "usebox");
        PlayerTextDrawLetterSize(playerid,Textdsraws6[playerid], 0.000000, 3.500370);
        PlayerTextDrawTextSize(playerid,Textdsraws6[playerid], 511.967773, 0.000000);
        PlayerTextDrawAlignment(playerid,Textdsraws6[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws6[playerid], 0);
        PlayerTextDrawUseBox(playerid,Textdsraws6[playerid], true);
        PlayerTextDrawBoxColor(playerid,Textdsraws6[playerid], 255);
        PlayerTextDrawSetShadow(playerid,Textdsraws6[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws6[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws6[playerid], 0);

        Textdsraws7[playerid] = CreatePlayerTextDraw(playerid, 514.093688, 224.916656, "usebox");
        PlayerTextDrawLetterSize(playerid,Textdsraws7[playerid], 0.000000, 19.192594);
        PlayerTextDrawTextSize(playerid,Textdsraws7[playerid], 504.471435, 0.000000);
        PlayerTextDrawAlignment(playerid,Textdsraws7[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws7[playerid], 0);
        PlayerTextDrawUseBox(playerid,Textdsraws7[playerid], true);
        PlayerTextDrawBoxColor(playerid,Textdsraws7[playerid], 255);
        PlayerTextDrawSetShadow(playerid,Textdsraws7[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws7[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws7[playerid], 0);

        Textdsraws8[playerid] = CreatePlayerTextDraw(playerid, 605.923889, 404.000000, "usebox");
        PlayerTextDrawLetterSize(playerid,Textdsraws8[playerid], 0.000000, 0.396297);
        PlayerTextDrawTextSize(playerid,Textdsraws8[playerid], 510.562194, 0.000000);
        PlayerTextDrawAlignment(playerid,Textdsraws8[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws8[playerid], 0);
        PlayerTextDrawUseBox(playerid,Textdsraws8[playerid], true);
        PlayerTextDrawBoxColor(playerid,Textdsraws8[playerid], 255);
        PlayerTextDrawSetShadow(playerid,Textdsraws8[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws8[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws8[playerid], 0);

        Textdsraws9[playerid] = CreatePlayerTextDraw(playerid, 607.329528, 240.666702, "usebox");
        PlayerTextDrawLetterSize(playerid,Textdsraws9[playerid], 0.000000, 15.940918);
        PlayerTextDrawTextSize(playerid,Textdsraws9[playerid], 509.156585, 0.000000);
        PlayerTextDrawAlignment(playerid,Textdsraws9[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws9[playerid], 0);
        PlayerTextDrawUseBox(playerid,Textdsraws9[playerid], true);
        PlayerTextDrawBoxColor(playerid,Textdsraws9[playerid], -1);
        PlayerTextDrawSetShadow(playerid,Textdsraws9[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws9[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws9[playerid], 0);


        Textdsraws2229[playerid] = CreatePlayerTextDraw(playerid, 607.329528, 240.666702, "usebox");//bacground fundal
        PlayerTextDrawLetterSize(playerid,Textdsraws2229[playerid], 0.000000, 15.940918);
        PlayerTextDrawTextSize(playerid,Textdsraws2229[playerid], 509.156585, 0.000000);
        PlayerTextDrawAlignment(playerid,Textdsraws2229[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws2229[playerid], 0);
        PlayerTextDrawUseBox(playerid,Textdsraws2229[playerid], true);
   		PlayerTextDrawBoxColor(playerid,Textdsraws2229[playerid], 0x629D97C8);
        PlayerTextDrawSetShadow(playerid,Textdsraws2229[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws2229[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws2229[playerid], 0);

        Textdsraws2228[playerid] = CreatePlayerTextDraw(playerid, 607.329528, 240.666702, "usebox");//bacground fundal strins
        PlayerTextDrawLetterSize(playerid,Textdsraws2228[playerid], 0.000000, 15.940918);
        PlayerTextDrawTextSize(playerid,Textdsraws2228[playerid], 509.156585, 0.000000);
        PlayerTextDrawAlignment(playerid,Textdsraws2228[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws2228[playerid], 0);
        PlayerTextDrawUseBox(playerid,Textdsraws2228[playerid], true);
   	    PlayerTextDrawBoxColor(playerid,Textdsraws2228[playerid], 0x111111C8);
        PlayerTextDrawSetShadow(playerid,Textdsraws2228[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws2228[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws2228[playerid], 0);

        Textdsraws10[playerid] = CreatePlayerTextDraw(playerid, 550.729614, 385.583221, "O");//buton
        PlayerTextDrawLetterSize(playerid,Textdsraws10[playerid], 0.524026, 2.066666);
        PlayerTextDrawAlignment(playerid,Textdsraws10[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws10[playerid], -1);
        PlayerTextDrawSetShadow(playerid,Textdsraws10[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws10[playerid], 1);
        PlayerTextDrawBackgroundColor(playerid,Textdsraws10[playerid], 51);
        PlayerTextDrawFont(playerid,Textdsraws10[playerid], 2);
        PlayerTextDrawSetProportional(playerid,Textdsraws10[playerid], 1);
        PlayerTextDrawSetSelectable(playerid,Textdsraws10[playerid], true);



        Textdsraws11[playerid] = CreatePlayerTextDraw(playerid, 607.797973, 240.083328, "usebox");
        PlayerTextDrawLetterSize(playerid,Textdsraws11[playerid], 0.000000, 4.414813);
        PlayerTextDrawTextSize(playerid,Textdsraws11[playerid], 509.156646, 0.000000);
        PlayerTextDrawAlignment(playerid,Textdsraws11[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws11[playerid], 0);
        PlayerTextDrawUseBox(playerid,Textdsraws11[playerid], true);
        PlayerTextDrawBoxColor(playerid,Textdsraws11[playerid], 102);
        PlayerTextDrawSetShadow(playerid,Textdsraws11[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws11[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws11[playerid], 0);

        Textdsraws12[playerid] = CreatePlayerTextDraw(playerid, 607.329467, 240.083328, "usebox");
        PlayerTextDrawLetterSize(playerid,Textdsraws12[playerid], 0.000000, 0.266665);
        PlayerTextDrawTextSize(playerid,Textdsraws12[playerid], 508.688140, 0.000000);
        PlayerTextDrawAlignment(playerid,Textdsraws12[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws12[playerid], 0);
        PlayerTextDrawUseBox(playerid,Textdsraws12[playerid], true);
        PlayerTextDrawBoxColor(playerid,Textdsraws12[playerid], 102);
        PlayerTextDrawSetShadow(playerid,Textdsraws12[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws12[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws12[playerid], 0);

        Textdsraws13[playerid] = CreatePlayerTextDraw(playerid, 608.329467, 239.916671, "usebox");
        PlayerTextDrawLetterSize(playerid,Textdsraws13[playerid], 0.000000, 0.266665);
        PlayerTextDrawTextSize(playerid,Textdsraws13[playerid], 508.688140, 0.000000);
        PlayerTextDrawAlignment(playerid,Textdsraws13[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws13[playerid], 0);
        PlayerTextDrawUseBox(playerid,Textdsraws13[playerid], true);
        PlayerTextDrawBoxColor(playerid,Textdsraws13[playerid], 102);
        PlayerTextDrawSetShadow(playerid,Textdsraws13[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws13[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws13[playerid], 0);

        Textdsraws14[playerid] = CreatePlayerTextDraw(playerid, 609.329467, 239.750015, "usebox");
        PlayerTextDrawLetterSize(playerid,Textdsraws14[playerid], 0.000000, 0.266665);
        PlayerTextDrawTextSize(playerid,Textdsraws14[playerid], 508.688140, 0.000000);
        PlayerTextDrawAlignment(playerid,Textdsraws14[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws14[playerid], 0);
        PlayerTextDrawUseBox(playerid,Textdsraws14[playerid], true);
        PlayerTextDrawBoxColor(playerid,Textdsraws14[playerid], 102);
        PlayerTextDrawSetShadow(playerid,Textdsraws14[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws14[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws14[playerid], 0);

        Textdsraws15[playerid] = CreatePlayerTextDraw(playerid, 512.093872, 236.833312, "ĄĄĄĄ");//semnal
        PlayerTextDrawLetterSize(playerid,Textdsraws15[playerid], 0.153420, 0.917496);
        PlayerTextDrawAlignment(playerid,Textdsraws15[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws15[playerid], -1);
        PlayerTextDrawSetShadow(playerid,Textdsraws15[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws15[playerid], 1);
        PlayerTextDrawBackgroundColor(playerid,Textdsraws15[playerid], 51);
        PlayerTextDrawFont(playerid,Textdsraws15[playerid], 1);
        PlayerTextDrawSetProportional(playerid,Textdsraws15[playerid], 1);

        Textdsraws16[playerid] = CreatePlayerTextDraw(playerid, 583.372192, 237.250000, " ");
        PlayerTextDrawLetterSize(playerid,Textdsraws16[playerid], 0.130934, 0.800831);
        PlayerTextDrawAlignment(playerid,Textdsraws16[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws16[playerid], -1);
        PlayerTextDrawSetShadow(playerid,Textdsraws16[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws16[playerid], 1);
        PlayerTextDrawBackgroundColor(playerid,Textdsraws16[playerid], 51);
        PlayerTextDrawFont(playerid,Textdsraws16[playerid], 1);
        PlayerTextDrawSetProportional(playerid,Textdsraws16[playerid], 1);

        Textdsraws17[playerid] = CreatePlayerTextDraw(playerid, 605.455322, 241.250000, "usebox");
        PlayerTextDrawLetterSize(playerid,Textdsraws17[playerid], 0.000000, 0.007406);
        PlayerTextDrawTextSize(playerid,Textdsraws17[playerid], 593.021972, 0.000000);
        PlayerTextDrawAlignment(playerid,Textdsraws17[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws17[playerid], -1);
        PlayerTextDrawUseBox(playerid,Textdsraws17[playerid], true);
        PlayerTextDrawBoxColor(playerid,Textdsraws17[playerid], -1);
        PlayerTextDrawSetShadow(playerid,Textdsraws17[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws17[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws17[playerid], 0);

        Textdsraws18[playerid] = CreatePlayerTextDraw(playerid, 601.707153, 240.083328, "usebox");
        PlayerTextDrawLetterSize(playerid,Textdsraws18[playerid], 0.000000, 0.266665);
        PlayerTextDrawTextSize(playerid,Textdsraws18[playerid], 592.084960, 0.000000);
        PlayerTextDrawAlignment(playerid,Textdsraws18[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws18[playerid], 0);
        PlayerTextDrawUseBox(playerid,Textdsraws18[playerid], true);
        PlayerTextDrawBoxColor(playerid,Textdsraws18[playerid], 102);
        PlayerTextDrawSetShadow(playerid,Textdsraws18[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws18[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws18[playerid], 0);

        Textdsraws19[playerid] = CreatePlayerTextDraw(playerid, 541.141906, 247.916610, "00:00");//ora
        PlayerTextDrawLetterSize(playerid,Textdsraws19[playerid], 0.546513, 2.661668);
        PlayerTextDrawAlignment(playerid,Textdsraws19[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws19[playerid], -1);
        PlayerTextDrawSetShadow(playerid,Textdsraws19[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws19[playerid], 1);
        PlayerTextDrawBackgroundColor(playerid,Textdsraws19[playerid], 51);
        PlayerTextDrawFont(playerid,Textdsraws19[playerid], 1);
        PlayerTextDrawSetProportional(playerid,Textdsraws19[playerid], 1);

        Textdsraws20[playerid] = CreatePlayerTextDraw(playerid, 533.645812, 272.416564, "00/MON/2000");//data
        PlayerTextDrawLetterSize(playerid,Textdsraws20[playerid], 0.173114, 0.766665);
        PlayerTextDrawAlignment(playerid,Textdsraws20[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws20[playerid], -1);
        PlayerTextDrawSetShadow(playerid,Textdsraws20[playerid], 1);
        PlayerTextDrawSetOutline(playerid,Textdsraws20[playerid], 0);
        PlayerTextDrawBackgroundColor(playerid,Textdsraws20[playerid], 51);
        PlayerTextDrawFont(playerid,Textdsraws20[playerid], 1);
        PlayerTextDrawUseBox(playerid,Textdsraws20[playerid], false);
        PlayerTextDrawBoxColor(playerid,Textdsraws20[playerid], 102);
        PlayerTextDrawSetProportional(playerid,Textdsraws20[playerid], 1);

        Textdsraws20000[playerid] = CreatePlayerTextDraw(playerid, 513.645812, 232.416564, "");//data
        PlayerTextDrawLetterSize(playerid,Textdsraws20000[playerid], 0.143114, 0.736665);
        PlayerTextDrawAlignment(playerid,Textdsraws20000[playerid], 0);
        PlayerTextDrawColor(playerid,Textdsraws20000[playerid], -1);
        PlayerTextDrawSetShadow(playerid,Textdsraws20000[playerid], 1);
        PlayerTextDrawSetOutline(playerid,Textdsraws20000[playerid], 0);
        PlayerTextDrawBackgroundColor(playerid,Textdsraws20000[playerid], 51);
        PlayerTextDrawFont(playerid,Textdsraws20000[playerid], 1);
        PlayerTextDrawSetProportional(playerid,Textdsraws20000[playerid], 0);

        Textdsraws21[playerid] = CreatePlayerTextDraw(playerid, 511.282562, 389.416687, "usebox");
        PlayerTextDrawLetterSize(playerid,Textdsraws21[playerid], 0.000000, -4.075930);
        PlayerTextDrawTextSize(playerid,Textdsraws21[playerid], 606.609069, 0.000000);
        PlayerTextDrawAlignment(playerid,Textdsraws21[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws21[playerid], 0);
        PlayerTextDrawUseBox(playerid,Textdsraws21[playerid], true);
        PlayerTextDrawBoxColor(playerid,Textdsraws21[playerid], 102);
        PlayerTextDrawSetShadow(playerid,Textdsraws21[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws21[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws21[playerid], 0);

        Textdsraws22[playerid] = CreatePlayerTextDraw(playerid, 589.525634, 364.916687, "usebox");
        PlayerTextDrawLetterSize(playerid,Textdsraws22[playerid], 0.000000, 1.562958);
        PlayerTextDrawTextSize(playerid,Textdsraws22[playerid], 511.499267, 0.000000);
        PlayerTextDrawAlignment(playerid,Textdsraws22[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws22[playerid], 0);
        PlayerTextDrawUseBox(playerid,Textdsraws22[playerid], true);
        PlayerTextDrawBoxColor(playerid,Textdsraws22[playerid], 102);
        PlayerTextDrawSetShadow(playerid,Textdsraws22[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws22[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws22[playerid], 0);

        Textdsraws23[playerid] = CreatePlayerTextDraw(playerid, 605.049621, 364.749969, "usebox");
        PlayerTextDrawLetterSize(playerid,Textdsraws23[playerid], 0.000000, 1.562958);
        PlayerTextDrawTextSize(playerid,Textdsraws23[playerid], 587.868103, 0.000000);
        PlayerTextDrawAlignment(playerid,Textdsraws23[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws23[playerid], 0);
        PlayerTextDrawUseBox(playerid,Textdsraws23[playerid], true);
        PlayerTextDrawBoxColor(playerid,Textdsraws23[playerid], 102);
        PlayerTextDrawSetShadow(playerid,Textdsraws23[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws23[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws23[playerid], 0);

        Textdsraws24[playerid] = CreatePlayerTextDraw(playerid, 590.336730, 366.333343, "Camera");
        PlayerTextDrawLetterSize(playerid,Textdsraws24[playerid], 0.087364, 1.349166);
        PlayerTextDrawAlignment(playerid,Textdsraws24[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws24[playerid], -1);
        PlayerTextDrawSetShadow(playerid,Textdsraws24[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws24[playerid], 1);
        PlayerTextDrawBackgroundColor(playerid,Textdsraws24[playerid], 51);
        PlayerTextDrawFont(playerid,Textdsraws24[playerid], 1);
        PlayerTextDrawSetProportional(playerid,Textdsraws24[playerid], 1);
//        PlayerTextDrawSetSelectable(playerid,Textdsraws24[playerid], true);

        Textdsraws25[playerid] = CreatePlayerTextDraw(playerid, 548.295593, 366.083312, "usebox");
        PlayerTextDrawLetterSize(playerid,Textdsraws25[playerid], 0.000000, 1.303707);
        PlayerTextDrawTextSize(playerid,Textdsraws25[playerid], 513.373352, 0.000000);
        PlayerTextDrawAlignment(playerid,Textdsraws25[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws25[playerid], 0);
        PlayerTextDrawUseBox(playerid,Textdsraws25[playerid], true);
        PlayerTextDrawBoxColor(playerid,Textdsraws25[playerid], -2139062017);
        PlayerTextDrawSetShadow(playerid,Textdsraws25[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws25[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws25[playerid], 0);

        Textdsraws26[playerid] = CreatePlayerTextDraw(playerid, 516.310485, 366.916687, "  Press Home");
        PlayerTextDrawLetterSize(playerid,Textdsraws26[playerid], 0.106573, 1.057499);
        PlayerTextDrawAlignment(playerid,Textdsraws26[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws26[playerid], -1);
        PlayerTextDrawSetShadow(playerid,Textdsraws26[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws26[playerid], 1);
        PlayerTextDrawBackgroundColor(playerid,Textdsraws26[playerid], 51);
        PlayerTextDrawFont(playerid,Textdsraws26[playerid], 1);
        PlayerTextDrawSetProportional(playerid,Textdsraws26[playerid], 1);
     //   PlayerTextDrawSetSelectable(playerid,Textdsraws26[playerid], true);


        Textdsraws27[playerid] = CreatePlayerTextDraw(playerid, 571.253295, 233.666671, "ld_pool:ball");
        PlayerTextDrawLetterSize(playerid,Textdsraws27[playerid], 0.000000, -0.122221);
        PlayerTextDrawTextSize(playerid,Textdsraws27[playerid], 548.043884, 0.000000);
        PlayerTextDrawAlignment(playerid,Textdsraws27[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws27[playerid], 0);
        PlayerTextDrawUseBox(playerid,Textdsraws27[playerid], true);
        PlayerTextDrawBoxColor(playerid,Textdsraws27[playerid], -1);
        PlayerTextDrawSetShadow(playerid,Textdsraws27[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws27[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws27[playerid], 0);

        Textdsraws28[playerid] = CreatePlayerTextDraw(playerid, 541.610473, 231.583358, "ld_pool:ball");// "ld_pool:ball"
        PlayerTextDrawLetterSize(playerid,Textdsraws28[playerid], 0.000000, 0.000000);
        PlayerTextDrawTextSize(playerid,Textdsraws28[playerid], 4.216690, 4.666666);
        PlayerTextDrawAlignment(playerid,Textdsraws28[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws28[playerid], -1);
        PlayerTextDrawSetShadow(playerid,Textdsraws28[playerid], 0);
        PlayerTextDrawSetOutline(playerid,Textdsraws28[playerid], 0);
        PlayerTextDrawFont(playerid,Textdsraws28[playerid], 4);



//=============================== coloana jos meniu  ===========================================
        Textdsraws10233[playerid] = CreatePlayerTextDraw(playerid,545.729614, 360.000000, "hud:radar_savegame");//cel mai de sus coloanastanga// conatcte
		PlayerTextDrawFont(playerid,Textdsraws10233[playerid], 4); // contacte
		PlayerTextDrawTextSize(playerid,Textdsraws10233[playerid], 25.0, 25.0); //
		PlayerTextDrawSetSelectable(playerid,Textdsraws10233[playerid], true);

		Textdsraws10223[playerid] = CreatePlayerTextDraw(playerid,514.729614, 360.000000, "hud:radar_gangg");//telefon
		PlayerTextDrawFont(playerid,Textdsraws10223[playerid], 4); //
		PlayerTextDrawTextSize(playerid,Textdsraws10223[playerid], 25.0, 25.0); //
		PlayerTextDrawSetSelectable(playerid,Textdsraws10223[playerid], true);

		Textdsraws10224[playerid] = CreatePlayerTextDraw(playerid,574.729614, 360.000000, "hud:radar_gangy");//mesaje
		PlayerTextDrawFont(playerid,Textdsraws10224[playerid], 4); //
		PlayerTextDrawTextSize(playerid,Textdsraws10224[playerid], 25.0, 25.0); //
		PlayerTextDrawSetSelectable(playerid,Textdsraws10224[playerid], true);


//=============================== coloana dreapta ===========================================
		Textdsraws10225[playerid] = CreatePlayerTextDraw(playerid,574.729614, 310.000000, "ld_otb2:butnb");//jos coloanadreapta
		PlayerTextDrawFont(playerid,Textdsraws10225[playerid], 4); // informatii
		PlayerTextDrawTextSize(playerid,Textdsraws10225[playerid], 25.0, 25.0); //
		PlayerTextDrawSetSelectable(playerid,Textdsraws10225[playerid], true);

		Textdsraws10226[playerid] = CreatePlayerTextDraw(playerid,574.729614, 280.000000, "ld_beat:cross");//mijloc coloanadreapta
		PlayerTextDrawFont(playerid,Textdsraws10226[playerid], 4); //  inchide phone
		PlayerTextDrawTextSize(playerid,Textdsraws10226[playerid], 25.0, 25.0); //
		PlayerTextDrawSetSelectable(playerid,Textdsraws10226[playerid], true);


		Textdsraws10227[playerid] = CreatePlayerTextDraw(playerid,574.729614, 250.000000, "hud:radar_light");//cel mai de sus coloanadreapta
		PlayerTextDrawFont(playerid,Textdsraws10227[playerid], 4); // galerie
		PlayerTextDrawTextSize(playerid,Textdsraws10227[playerid], 25.0, 25.0); //
		PlayerTextDrawSetSelectable(playerid,Textdsraws10227[playerid], true);


//=============================== coloana stanga ===========================================
        Textdsraws10228[playerid] = CreatePlayerTextDraw(playerid,514.729614, 310.000000, "ld_chat:thumbup");//jos coloanastanga
		PlayerTextDrawFont(playerid,Textdsraws10228[playerid], 4); // factiuni
		PlayerTextDrawTextSize(playerid,Textdsraws10228[playerid], 25.0, 25.0); //
		PlayerTextDrawSetSelectable(playerid,Textdsraws10228[playerid], true);

		Textdsraws10229[playerid] = CreatePlayerTextDraw(playerid,514.729614, 280.000000, "hud:radar_waypoint");//mijloc coloanastanga
		PlayerTextDrawFont(playerid,Textdsraws10229[playerid], 4); // statuas
		PlayerTextDrawTextSize(playerid,Textdsraws10229[playerid], 25.0, 25.0); //
		PlayerTextDrawSetSelectable(playerid,Textdsraws10229[playerid], true);


		Textdsraws10230[playerid] = CreatePlayerTextDraw(playerid,514.729614, 250.000000, "hud:radar_crash1");//cel mai de sus coloanastanga
		PlayerTextDrawFont(playerid,Textdsraws10230[playerid], 4); // radio
		PlayerTextDrawTextSize(playerid,Textdsraws10230[playerid], 25.0, 25.0); //
		PlayerTextDrawSetSelectable(playerid,Textdsraws10230[playerid], true);

//=============================== coloana mijloc ===========================================
        Textdsraws10231[playerid] = CreatePlayerTextDraw(playerid,545.729614, 310.000000, "ld_shtr:pa");//jos coloanastanga
		PlayerTextDrawFont(playerid,Textdsraws10231[playerid], 4); // locations
		PlayerTextDrawTextSize(playerid,Textdsraws10231[playerid], 25.0, 25.0); //
		PlayerTextDrawSetSelectable(playerid,Textdsraws10231[playerid], true);

		Textdsraws10232[playerid] = CreatePlayerTextDraw(playerid,545.729614, 280.000000, "ld_grav:timer");//mijloc coloanastanga
		PlayerTextDrawFont(playerid,Textdsraws10232[playerid], 4); // ceasul
		PlayerTextDrawTextSize(playerid,Textdsraws10232[playerid], 25.0, 25.0); //
		PlayerTextDrawSetSelectable(playerid,Textdsraws10232[playerid], true);

		Textdsraws10222[playerid] = CreatePlayerTextDraw(playerid,545.729614, 250.000000, "ld_beat:circle");//camera jos
		PlayerTextDrawFont(playerid,Textdsraws10222[playerid], 4); //
		PlayerTextDrawTextSize(playerid,Textdsraws10222[playerid], 25.0, 25.0); //
		PlayerTextDrawSetSelectable(playerid,Textdsraws10222[playerid], true);

        Textdsraws16666666[playerid] = CreatePlayerTextDraw(playerid, 514.729614, 265.000000, "~n~ Radio         Camera      Galerie ~n~~n~~n~~n~ Status          Ceas        On/Off ~n~~n~~n~~n~ Factions       Locations   Informatii");
        PlayerTextDrawLetterSize(playerid,Textdsraws16666666[playerid], 0.130934, 0.800831);
        PlayerTextDrawAlignment(playerid,Textdsraws16666666[playerid], 1);
        PlayerTextDrawColor(playerid,Textdsraws16666666[playerid], -1);
        PlayerTextDrawSetShadow(playerid,Textdsraws16666666[playerid], 0);
		PlayerTextDrawSetOutline(playerid,Textdsraws16666666[playerid], 1);
		PlayerTextDrawBackgroundColor(playerid,Textdsraws16666666[playerid], 51);
    	PlayerTextDrawFont(playerid,Textdsraws16666666[playerid], 1);
		PlayerTextDrawSetProportional(playerid,Textdsraws16666666[playerid], 1);

	//	new ay = 6;
	//	new ax = 68;

		Galaxy3Gallery = CreatePlayerTextDraw(playerid,512.000000, 345.000000, "loadsuk:loadsc4");//
		PlayerTextDrawAlignment(playerid,Galaxy3Gallery, 2);
		PlayerTextDrawBackgroundColor(playerid,Galaxy3Gallery, 255);
		PlayerTextDrawFont(playerid,Galaxy3Gallery, 4);
		PlayerTextDrawLetterSize(playerid,Galaxy3Gallery, 0.500000, 1.000000);
		PlayerTextDrawColor(playerid,Galaxy3Gallery, -1);
		PlayerTextDrawSetOutline(playerid,Galaxy3Gallery, 0);
		PlayerTextDrawSetProportional(playerid,Galaxy3Gallery, 1);
		PlayerTextDrawSetShadow(playerid,Galaxy3Gallery, 1);
		PlayerTextDrawUseBox(playerid,Galaxy3Gallery, 1);
		PlayerTextDrawBoxColor(playerid,Galaxy3Gallery, 255);
		PlayerTextDrawTextSize(playerid,Galaxy3Gallery, 46.000000, 39.000000);
		PlayerTextDrawSetSelectable(playerid,Galaxy3Gallery, 1);

		Galaxy3Gallery2 = CreatePlayerTextDraw(playerid,512.000000, 303.000000, "loadsuk:loadsc5");//393
		PlayerTextDrawAlignment(playerid,Galaxy3Gallery2, 2);
		PlayerTextDrawBackgroundColor(playerid,Galaxy3Gallery2, 255);
		PlayerTextDrawFont(playerid,Galaxy3Gallery2, 4);
		PlayerTextDrawLetterSize(playerid,Galaxy3Gallery2, 0.500000, 1.000000);
		PlayerTextDrawColor(playerid,Galaxy3Gallery2, -1);
		PlayerTextDrawSetOutline(playerid,Galaxy3Gallery2, 0);
		PlayerTextDrawSetProportional(playerid,Galaxy3Gallery2, 1);
		PlayerTextDrawSetShadow(playerid,Galaxy3Gallery2, 1);
		PlayerTextDrawUseBox(playerid,Galaxy3Gallery2, 1);
		PlayerTextDrawBoxColor(playerid,Galaxy3Gallery2, 255);
		PlayerTextDrawTextSize(playerid,Galaxy3Gallery2, 46.000000, 39.000000);
		PlayerTextDrawSetSelectable(playerid,Galaxy3Gallery2, 1);

		Galaxy3Gallery3 = CreatePlayerTextDraw(playerid,512.000000, 261.000000, "loadsuk:loadsc6");//393
		PlayerTextDrawAlignment(playerid,Galaxy3Gallery3, 2);
		PlayerTextDrawBackgroundColor(playerid,Galaxy3Gallery3, 255);
		PlayerTextDrawFont(playerid,Galaxy3Gallery3, 4);
		PlayerTextDrawLetterSize(playerid,Galaxy3Gallery3, 0.500000, 1.000000);
		PlayerTextDrawColor(playerid,Galaxy3Gallery3, -1);
		PlayerTextDrawSetOutline(playerid,Galaxy3Gallery3, 0);
		PlayerTextDrawSetProportional(playerid,Galaxy3Gallery3, 1);
		PlayerTextDrawSetShadow(playerid,Galaxy3Gallery3, 1);
		PlayerTextDrawUseBox(playerid,Galaxy3Gallery3, 1);
		PlayerTextDrawBoxColor(playerid,Galaxy3Gallery3, 255);
		PlayerTextDrawTextSize(playerid,Galaxy3Gallery3, 46.000000, 39.000000);
		PlayerTextDrawSetSelectable(playerid,Galaxy3Gallery3, 1);

//dreapta
		Galaxy3Gallery4 = CreatePlayerTextDraw(playerid,559.000000, 261.000000, "loadsuk:loadsc7");//393
		PlayerTextDrawAlignment(playerid,Galaxy3Gallery4, 2);
		PlayerTextDrawBackgroundColor(playerid,Galaxy3Gallery4, 255);
		PlayerTextDrawFont(playerid,Galaxy3Gallery4, 4);
		PlayerTextDrawLetterSize(playerid,Galaxy3Gallery4, 0.500000, 1.000000);
		PlayerTextDrawColor(playerid,Galaxy3Gallery4, -1);
		PlayerTextDrawSetOutline(playerid,Galaxy3Gallery4, 0);
		PlayerTextDrawSetProportional(playerid,Galaxy3Gallery4, 1);
		PlayerTextDrawSetShadow(playerid,Galaxy3Gallery4, 1);
		PlayerTextDrawUseBox(playerid,Galaxy3Gallery4, 1);
		PlayerTextDrawBoxColor(playerid,Galaxy3Gallery4, 255);
		PlayerTextDrawTextSize(playerid,Galaxy3Gallery4, 46.000000, 39.000000);
		PlayerTextDrawSetSelectable(playerid,Galaxy3Gallery4, 1);

		Galaxy3Gallery5 = CreatePlayerTextDraw(playerid,559.000000, 345.000000, "loadsuk:loadsc8");
		PlayerTextDrawAlignment(playerid,Galaxy3Gallery5, 2);
		PlayerTextDrawBackgroundColor(playerid,Galaxy3Gallery5, 255);
		PlayerTextDrawFont(playerid,Galaxy3Gallery5, 4);
		PlayerTextDrawLetterSize(playerid,Galaxy3Gallery5, 0.500000, 1.000000);
		PlayerTextDrawColor(playerid,Galaxy3Gallery5, -1);
		PlayerTextDrawSetOutline(playerid,Galaxy3Gallery5, 0);
		PlayerTextDrawSetProportional(playerid,Galaxy3Gallery5, 1);
		PlayerTextDrawSetShadow(playerid,Galaxy3Gallery5, 1);
		PlayerTextDrawUseBox(playerid,Galaxy3Gallery5, 1);
		PlayerTextDrawBoxColor(playerid,Galaxy3Gallery5, 255);
		PlayerTextDrawTextSize(playerid,Galaxy3Gallery5, 46.000000, 39.000000);
		PlayerTextDrawSetSelectable(playerid,Galaxy3Gallery5, 1);

		Galaxy3Gallery6 = CreatePlayerTextDraw(playerid,559.000000, 303.000000, "loadsuk:loadsc9");//393
		PlayerTextDrawAlignment(playerid,Galaxy3Gallery6, 2);
		PlayerTextDrawBackgroundColor(playerid,Galaxy3Gallery6, 255);
		PlayerTextDrawFont(playerid,Galaxy3Gallery6, 4);
		PlayerTextDrawLetterSize(playerid,Galaxy3Gallery6, 0.500000, 1.000000);
		PlayerTextDrawColor(playerid,Galaxy3Gallery6, -1);
		PlayerTextDrawSetOutline(playerid,Galaxy3Gallery6, 0);
		PlayerTextDrawSetProportional(playerid,Galaxy3Gallery6, 1);
		PlayerTextDrawSetShadow(playerid,Galaxy3Gallery6, 1);
		PlayerTextDrawUseBox(playerid,Galaxy3Gallery6, 1);
		PlayerTextDrawBoxColor(playerid,Galaxy3Gallery6, 255);
		PlayerTextDrawTextSize(playerid,Galaxy3Gallery6, 46.000000, 39.000000);
		PlayerTextDrawSetSelectable(playerid,Galaxy3Gallery6, 1);

		//                <<<  X dreapata stanga      >>>             <<<in sus Y sus jos  >>>>jo
		//=====================================================================================================
	}
	return 1;
}

public WhenAccountCheck(playerid, password[])
{
    cache_get_data(rows, fields, handle);
 	if(rows)
	gRegistred[playerid] = 1;
   	else
    gRegistred[playerid] = 0;
	// Login or Register!
	new string[155];
  	if(gLogged[playerid] == 0)
	{
	    if(gRegistred[playerid] == 1)
	    {
			if(rows)
			{
   				cache_get_field_content(0, "LastLogin", temp), strmid(PlayerInfo[playerid][pLastLogin], temp, 0, 255, 255);
	         	format(string,sizeof(string),"{1580EA}\tWelcome, {F23A0D}%s{1580EA}!\n\nScrieti parola contul pentru a va loga\n\n {FFFFFF}*Last login: %s *",PlayerName(playerid), PlayerInfo[playerid][pLastLogin]);
				ShowPlayerDialog(playerid,DIALOG_LOGIN,DIALOG_STYLE_PASSWORD,"Login",string,"Logare","Iesi");
   			}
     	}
     	else
     	{
			ShowPlayerDialog(playerid,DIALOG_REGISTER,DIALOG_STYLE_PASSWORD,"{DC0C0C}Inregistrare","{DC0C0C}\t  Acest cont nu este inregistrat \n {1580EA} Introduceti o parola sigura pentru a va inregistra:","Inregistrare","Iesi");
   		}
	}
	InterpolateCameraPos(playerid,	  1125.2023,-2019.4734,143.5,         1398.9823,-888.0203,119.84, 22000, CAMERA_MOVE);
    InterpolateCameraLookAt(playerid, 1035.6237,-1994.3496,119.840,   1413.5432,-822.4436,119.84, 4000, CAMERA_MOVE);
	SetPlayerVirtualWorld(playerid,playerid+1);
	return 1;
}

public OnPlayerRegister(playerid, password[])
{
    if(IsPlayerConnected(playerid))
	{
		new string[155];
        format(query, sizeof(query), "INSERT INTO `players` (`username`,`password`) VALUES ('%s','%s')", PlayerName(playerid), password);
        mysql_tquery(handle, query, "", "");

        strmid(PlayerInfo[playerid][pPassword], password, 0, strlen(password), 255);

        format(string, sizeof(string), "{1580EA}Scrieti parola contului dumoneavoastra", PlayerName(playerid));
		ShowPlayerDialog(playerid, DIALOG_LOGIN ,DIALOG_STYLE_PASSWORD, "Logare", string, "Logare", "Exit");

	}
	return 1;
}

public OnPlayerLogin(playerid, password[])
{
    if(IsPlayerConnected(playerid))
	{
        format(query, sizeof(query), "SELECT * FROM `players` WHERE `username`='%s' AND `password`='%s'", PlayerName(playerid), password);
        mysql_tquery(handle, query, "WhenPlayerLogin", "i", playerid);

	}
	TogglePlayerSpectating(playerid, 0);
	return 1;
}


public WhenPlayerLogin(playerid)
{
    if(IsPlayerConnected(playerid))
	{

	    cache_get_data(rows, fields, handle);

		if(rows != 0)
		{
  		    cache_get_field_content(0, "password", temp),  format(PlayerInfo[playerid][pPassword], 128, temp);
			cache_get_field_content(0, "Level", temp), PlayerInfo[playerid][pLevel] = strval(temp);
			cache_get_field_content(0, "AdminLevel", temp), PlayerInfo[playerid][pAdmin] = strval(temp);
			cache_get_field_content(0, "HelperLevel", temp), PlayerInfo[playerid][pHelper] = strval(temp);
			cache_get_field_content(0, "Cash", temp), PlayerInfo[playerid][pCash] = strval(temp);
			cache_get_field_content(0, "Account", temp), PlayerInfo[playerid][pAccount] = strval(temp);
			cache_get_field_content(0, "Email", temp),  format(PlayerInfo[playerid][pEmail], 256, temp);
			cache_get_field_content(0, "Registred", temp), PlayerInfo[playerid][pRegistred] = strval(temp);
			cache_get_field_content(0, "Tutorial", temp), PlayerInfo[playerid][pTutorial] = strval(temp);
			cache_get_field_content(0, "Sex", temp), PlayerInfo[playerid][pSex] = strval(temp);
			cache_get_field_content(0, "Age", temp), PlayerInfo[playerid][pAge] = strval(temp);
			cache_get_field_content(0, "PhoneNumber", temp), PlayerInfo[playerid][pPhoneNumber] = strval(temp);
			cache_get_field_content(0, "PremiumAccount", temp), PlayerInfo[playerid][pPremiumAccount] = strval(temp);
			cache_get_field_content(0, "Banned", temp), PlayerInfo[playerid][pBanned] = strval(temp);
			cache_get_field_content(0, "Warns", temp), PlayerInfo[playerid][pWarns] = strval(temp);
			cache_get_field_content(0, "Leader", temp), PlayerInfo[playerid][pLeader] = strval(temp);
			cache_get_field_content(0, "Member", temp), PlayerInfo[playerid][pMember] = strval(temp);
			cache_get_field_content(0, "Rank", temp), PlayerInfo[playerid][pRank] = strval(temp);
			cache_get_field_content(0, "Skin", temp), PlayerInfo[playerid][pSkin] = strval(temp);
			cache_get_field_content(0, "IP", temp), PlayerInfo[playerid][pIP] = strval(temp);// adaugimuie adaugi muie
  			cache_get_field_content(0, "Canistra", temp), PlayerInfo[playerid][pCanistra] = strval(temp);
  			cache_get_field_content(0, "Glasses", temp), PlayerInfo[playerid][pGlasses] = strval(temp);
  			cache_get_field_content(0, "Decoder", temp), PlayerInfo[playerid][pDecoder] = strval(temp);
  			cache_get_field_content(0, "Servieta", temp), PlayerInfo[playerid][pServieta] = strval(temp);
  			cache_get_field_content(0, "Hair", temp), PlayerInfo[playerid][pHair] = strval(temp);
  			cache_get_field_content(0, "Cheie", temp), PlayerInfo[playerid][pCheie] = strval(temp);
  			cache_get_field_content(0, "Casti", temp), PlayerInfo[playerid][pCasti] = strval(temp);
  			cache_get_field_content(0, "Hotel", temp), PlayerInfo[playerid][pHotel] = strval(temp);
  			cache_get_field_content(0, "AmmoWork", temp), PlayerInfo[playerid][pAmmoWork] = strval(temp);
  			cache_get_field_content(0, "Fireworks", temp), PlayerInfo[playerid][pFireworks] = strval(temp);
  			cache_get_field_content(0, "Laser", temp), PlayerInfo[playerid][pLaser] = strval(temp);
  			cache_get_field_content(0, "Leasing", temp), PlayerInfo[playerid][pLeasing] = strval(temp);
  			cache_get_field_content(0, "PdSkin", temp), PlayerInfo[playerid][pPdSkin] = strval(temp);
  			cache_get_field_content(0, "Cip", temp), PlayerInfo[playerid][pCip] = strval(temp);
  			cache_get_field_content(0, "Iphone", temp), PlayerInfo[playerid][pIphone] = strval(temp);
  			cache_get_field_content(0, "Baterie", temp), PlayerInfo[playerid][pBaterie] = strval(temp);
  			cache_get_field_content(0, "Interior", temp), PlayerInfo[playerid][pInterior] = strval(temp);
  			cache_get_field_content(0, "VW", temp), PlayerInfo[playerid][pVW] = strval(temp);
			cache_get_field_content(0, "LastLogin", temp), PlayerInfo[playerid][pLastLogin] = strval(temp);
			cache_get_field_content(0, "LoginDate", temp), PlayerInfo[playerid][pLoginDate] = strval(temp);
			cache_get_field_content(0, "Respect", temp), PlayerInfo[playerid][pRespect] = strval(temp);
			cache_get_field_content(0, "ConnectTime", temp), PlayerInfo[playerid][pConnectTime] = strval(temp);
			cache_get_field_content(0, "Origin", temp), PlayerInfo[playerid][pOrigin] = strval(temp);
			cache_get_field_content(0, "Mute", temp), PlayerInfo[playerid][pMute] = strval(temp);
			cache_get_field_content(0, "Crime", temp), PlayerInfo[playerid][pCrime] = strval(temp);
			cache_get_field_content(0, "Kill", temp), PlayerInfo[playerid][pKill] = strval(temp);
			cache_get_field_content(0, "Death", temp), PlayerInfo[playerid][pDeath] = strval(temp);
			cache_get_field_content(0, "WantedDeaths", temp), PlayerInfo[playerid][pWantedDeaths] = strval(temp);
			cache_get_field_content(0, "Wanted", temp), PlayerInfo[playerid][pWanted] = strval(temp);
			cache_get_field_content(0, "ArrestedTime", temp), PlayerInfo[playerid][pArrestedTime] = strval(temp);
			cache_get_field_content(0, "Lotto", temp), PlayerInfo[playerid][pLotto] = strval(temp);
			cache_get_field_content(0, "Job1", temp), PlayerInfo[playerid][pJob1] = strval(temp);
			cache_get_field_content(0, "Job2", temp), PlayerInfo[playerid][pJob2] = strval(temp);
			cache_get_field_content(0, "JailTime", temp), PlayerInfo[playerid][pJailTime] = strval(temp);
			cache_get_field_content(0, "Jail", temp), PlayerInfo[playerid][pJail] = strval(temp);
			cache_get_field_content(0, "Materials", temp), PlayerInfo[playerid][pMaterials] = strval(temp);
			cache_get_field_content(0, "Drugs", temp), PlayerInfo[playerid][pDrugs] = strval(temp);
			cache_get_field_content(0, "PosX", temp), PlayerInfo[playerid][pPosX] = strval(temp);
			cache_get_field_content(0, "PosY", temp), PlayerInfo[playerid][pPosY] = strval(temp);
			cache_get_field_content(0, "PosZ", temp), PlayerInfo[playerid][pPosZ] = strval(temp);
 			cache_get_field_content(0, "Yeni", temp), PlayerInfo[playerid][pYeni] = strval(temp);
			cache_get_field_content(0, "House", temp), PlayerInfo[playerid][pHouse] = strval(temp);
			cache_get_field_content(0, "Biz", temp), PlayerInfo[playerid][pBiz] = strval(temp);
			cache_get_field_content(0, "CarLic", temp), PlayerInfo[playerid][pCarLic] = strval(temp);
			cache_get_field_content(0, "FlyLic", temp), PlayerInfo[playerid][pFlyLic] = strval(temp);
			cache_get_field_content(0, "BoatLic", temp), PlayerInfo[playerid][pBoatLic] = strval(temp);
			cache_get_field_content(0, "FishLic", temp), PlayerInfo[playerid][pFishLic] = strval(temp);
			cache_get_field_content(0, "GunLic", temp), PlayerInfo[playerid][pGunLic] = strval(temp);
			cache_get_field_content(0, "Gun1", temp), PlayerInfo[playerid][pGun1] = strval(temp);
			cache_get_field_content(0, "Gun2", temp), PlayerInfo[playerid][pGun2] = strval(temp);
			cache_get_field_content(0, "Gun3", temp), PlayerInfo[playerid][pGun3] = strval(temp);
			cache_get_field_content(0, "Gun4", temp), PlayerInfo[playerid][pGun4] = strval(temp);
			cache_get_field_content(0, "Gun5", temp), PlayerInfo[playerid][pGun5] = strval(temp);
			cache_get_field_content(0, "Gun6", temp), PlayerInfo[playerid][pGun6] = strval(temp);
			cache_get_field_content(0, "Gun7", temp), PlayerInfo[playerid][pGun7] = strval(temp);
			cache_get_field_content(0, "Gun8", temp), PlayerInfo[playerid][pGun8] = strval(temp);
			cache_get_field_content(0, "Ammo1", temp), PlayerInfo[playerid][pAmmo1] = strval(temp);
			cache_get_field_content(0, "Ammo2", temp), PlayerInfo[playerid][pAmmo2] = strval(temp);
			cache_get_field_content(0, "Ammo3", temp), PlayerInfo[playerid][pAmmo3] = strval(temp);
			cache_get_field_content(0, "Ammo4", temp), PlayerInfo[playerid][pAmmo4] = strval(temp);
			cache_get_field_content(0, "Ammo5", temp), PlayerInfo[playerid][pAmmo5] = strval(temp);
			cache_get_field_content(0, "Ammo6", temp), PlayerInfo[playerid][pAmmo6] = strval(temp);
			cache_get_field_content(0, "Ammo7", temp), PlayerInfo[playerid][pAmmo7] = strval(temp);
			cache_get_field_content(0, "Ammo8", temp), PlayerInfo[playerid][pAmmo8] = strval(temp);
			cache_get_field_content(0, "PayDay", temp), PlayerInfo[playerid][pPayDay] = strval(temp);
			cache_get_field_content(0, "Players", temp), PlayerInfo[playerid][pPlayers] = strval(temp);
			cache_get_field_content(0, "Fuel", temp), PlayerInfo[playerid][pFuel] = strval(temp);
			cache_get_field_content(0, "Loses", temp), PlayerInfo[playerid][pLoses] = strval(temp);
			cache_get_field_content(0, "Win", temp), PlayerInfo[playerid][pWin] = strval(temp);
			cache_get_field_content(0, "Spawn", temp), PlayerInfo[playerid][pSpawn] = strval(temp);
			cache_get_field_content(0, "CarTime", temp), PlayerInfo[playerid][pCarTime] = strval(temp);
   			cache_get_field_content(0, "Slots", temp), PlayerInfo[playerid][pSlots] = strval(temp);
			cache_get_field_content(0, "FightStyle", temp), PlayerInfo[playerid][pFightStyle] = strval(temp);
			cache_get_field_content(0, "Fwarn", temp), PlayerInfo[playerid][pFwarn] = strval(temp);
			cache_get_field_content(0, "Punish", temp), PlayerInfo[playerid][pPunish] = strval(temp);
			cache_get_field_content(0, "Online", temp), PlayerInfo[playerid][pOnline] = strval(temp);
			cache_get_field_content(0, "rpgon", temp), PlayerInfo[playerid][prpgon] = strval(temp);
			cache_get_field_content(0, "DetSkill", temp), PlayerInfo[playerid][pDetSkill] = strval(temp);
			cache_get_field_content(0, "SexSkill", temp), PlayerInfo[playerid][pSexSkill] = strval(temp);
			cache_get_field_content(0, "JackSkill", temp), PlayerInfo[playerid][pJackSkill] = strval(temp);
			cache_get_field_content(0, "BoxSkill", temp), PlayerInfo[playerid][pBoxSkill] = strval(temp);
			cache_get_field_content(0, "NewsSkill", temp), PlayerInfo[playerid][pNewsSkill] = strval(temp);
			cache_get_field_content(0, "DrugsSkill", temp), PlayerInfo[playerid][pDrugsSkill] = strval(temp);
			cache_get_field_content(0, "MechSkill", temp), PlayerInfo[playerid][pMechSkill] = strval(temp);
			cache_get_field_content(0, "LawSkill", temp), PlayerInfo[playerid][pLawSkill] = strval(temp);
			cache_get_field_content(0, "FishSkill", temp), PlayerInfo[playerid][pFishSkill] = strval(temp);
			cache_get_field_content(0, "Crima", temp), format(PlayerInfo[playerid][pCrima], 128, temp);
			cache_get_field_content(0, "Dice", temp), PlayerInfo[playerid][pDice] = strval(temp);
			cache_get_field_content(0, "Coin", temp), PlayerInfo[playerid][pCoin] = strval(temp);
			cache_get_field_content(0, "Bombe", temp), PlayerInfo[playerid][pBombe] = strval(temp);
			cache_get_field_content(0, "GPS", temp), PlayerInfo[playerid][pGPS] = strval(temp);
			cache_get_field_content(0, "HeadValue", temp), PlayerInfo[playerid][pHeadValue] = strval(temp);
			cache_get_field_content(0, "Fishes", temp), PlayerInfo[playerid][pFishes] = strval(temp);
			cache_get_field_content(0, "BiggestFish", temp), PlayerInfo[playerid][pBiggestFish] = strval(temp);
			cache_get_field_content(0, "Craciun", temp), PlayerInfo[playerid][pCraciun] = strval(temp);
			cache_get_field_content(0, "Ceas", temp), PlayerInfo[playerid][pCeas] = strval(temp);
			cache_get_field_content(0, "Scarf", temp), PlayerInfo[playerid][pScarf] = strval(temp);
			cache_get_field_content(0, "Funie", temp), PlayerInfo[playerid][pFunie] = strval(temp);
			cache_get_field_content(0, "CDPlayer", temp), PlayerInfo[playerid][pCDPlayer] = strval(temp);
			new storea[100], storevar[100];
			new storea1 = 0, storea2 = 0, storea3 = 0, storea4 = 0, storea5 = 0, storea6 = 0, storea7 = 0, storea8 = 0, storea9 = 0, storea10 = 0;
   			new storea11 = 0, storea12 = 0, storea13 = 0, storea14 = 0, storea15 = 0, storea16 = 0, storea17 = 0, storea18 = 0, storea19 = 0, storea20 = 0;
     		cache_get_field_content(0, "AchievementF", temp), 	format(storea, 128, temp);
            strmid(storevar, storea, 0, 1, 255);
	        storea1 = strval(storevar); PlayerInfo[playerid][pAchievement1] = storea1;// lupta
           	strmid(storevar, storea, 1, 2, 255);
            storea2 = strval(storevar); PlayerInfo[playerid][pAchievement2] = storea2;// lupta
            strmid(storevar, storea, 2, 3, 255);
            storea3 = strval(storevar); PlayerInfo[playerid][pAchievement3] = storea3;// lupta
            strmid(storevar, storea, 3, 4, 255);
            storea4 = strval(storevar); PlayerInfo[playerid][pAchievement4] = storea4;// lupta
            strmid(storevar, storea, 4, 5, 255);
           	storea5 = strval(storevar); PlayerInfo[playerid][pAchievement5] = storea5;// lupta
            strmid(storevar, storea, 5, 6, 255);
           	storea6 = strval(storevar); PlayerInfo[playerid][pAchievement6] = storea6;// lupta
           	strmid(storevar, storea, 6, 7, 255);
           	storea7 = strval(storevar); PlayerInfo[playerid][pAchievement7] = storea7;// luat turf
          	strmid(storevar, storea, 7, 8, 255);
          	storea8 = strval(storevar); PlayerInfo[playerid][pAchievement8] = storea8;//luat ore
          	strmid(storevar, storea, 8, 9, 255);
        	storea9 = strval(storevar); PlayerInfo[playerid][pAchievement9] = storea9;
        	strmid(storevar, storea, 9, 10, 255);
         	storea10 = strval(storevar); PlayerInfo[playerid][pAchievement10] = storea10;
    		strmid(storevar, storea, 10, 11, 255);
   			storea11 = strval(storevar); PlayerInfo[playerid][pAchievement11] = storea11;
    		strmid(storevar, storea, 11, 12, 255);
   			storea12 = strval(storevar); PlayerInfo[playerid][pAchievement12] = storea12;
      		strmid(storevar, storea, 12, 13, 255);
      		storea13 = strval(storevar); PlayerInfo[playerid][pAchievement13] = storea13;
      		strmid(storevar, storea, 13, 14, 255);
      		storea14 = strval(storevar); PlayerInfo[playerid][pAchievement14] = storea14;
    		strmid(storevar, storea, 14, 15, 255);
     		storea15 = strval(storevar); PlayerInfo[playerid][pAchievement15] = storea15;
    		strmid(storevar, storea, 15, 16, 255);
 			storea16 = strval(storevar); PlayerInfo[playerid][pAchievement16] = storea16;
       		strmid(storevar, storea, 16, 17, 255);
      		storea17 = strval(storevar); PlayerInfo[playerid][pAchievement17] = storea17;
         	strmid(storevar, storea, 17, 18, 255);
   			storea18 = strval(storevar); PlayerInfo[playerid][pAchievement18] = storea18;
         	strmid(storevar, storea, 18, 19, 255);
    		storea19 = strval(storevar); PlayerInfo[playerid][pAchievement19] = storea19;
        	strmid(storevar, storea, 19, 20, 255);
    		storea19 = strval(storevar); PlayerInfo[playerid][pAchievement20] = storea20;
        	strmid(storevar, storea, 20, 20, 255);
		}
		else
		{
		    if(passwords[playerid]<4)
		    {
	    		new ghour, gminute, gsecond;
				gettime(ghour, gminute, gsecond);
				SetPlayerTime(playerid, ghour, gminute); // Noodggdfdffff
				ShowPlayerDialog(playerid,DIALOG_LOGIN,DIALOG_STYLE_PASSWORD,"{FFFFFF}Login/Register","{FFFFFF}Parolele nu se potrivesc!\n{FFFFFF}Scrie {1580EA}parola contului tau {FFFFFF}mai jos:","Logare","Iesi");
				passwords[playerid] ++;
			}
			else
			{
			    SendClientMessage(playerid,COLOR_RED,"Ai gresit parola de prea multe ori!");
				SetTimerEx("kiked", 100, false, "i", playerid);
			}
			return 1;
		}

 		if(PlayerInfo[playerid][pRegistred] == 0)
		{
           	PlayerInfo[playerid][pLevel] = 1;			Update(playerid, pLevelx);
    		PlayerInfo[playerid][pAdmin] = 0;			Update(playerid,pAdminx);
			PlayerInfo[playerid][pHelper] = 0;			Update(playerid,pHelperx);
			PlayerInfo[playerid][pCash] = 50000;		Update(playerid,pCashx);
			PlayerInfo[playerid][pAccount] = 100000;	Update(playerid,pAccountx);
			PlayerInfo[playerid][pPhoneNumber] = 0;		Update(playerid,pPhoneNumberx);
			PlayerInfo[playerid][pPremiumAccount] = 0;	Update(playerid,pPremiumAccountx);
		    PlayerInfo[playerid][pBanned] = 0;			Update(playerid,pBannedx);
			PlayerInfo[playerid][pWarns] = 0;			Update(playerid,pWarnsx);
			PlayerInfo[playerid][pLeader] = 0;			Update(playerid,pLeaderx);
			PlayerInfo[playerid][pMember] = 0;			Update(playerid,pMemberx);
			PlayerInfo[playerid][pRank] = 0;			Update(playerid,pRankx);
  			PlayerInfo[playerid][pCanistra] = 0;		Update(playerid,pCanistrax);
  			PlayerInfo[playerid][pGlasses] = -1;		Update(playerid,pGlassesx);
  			PlayerInfo[playerid][pDecoder] = 0;			Update(playerid,pDecoderx);
  			PlayerInfo[playerid][pServieta] = 0;		Update(playerid,pServietax);
  			PlayerInfo[playerid][pHair] = 0;			Update(playerid,pHairx);
  			PlayerInfo[playerid][pCheie] = 0;			Update(playerid,pCheiex);
  			PlayerInfo[playerid][pCasti] = 0;			Update(playerid,pCastix);
  			PlayerInfo[playerid][pHotel] = 0;			Update(playerid,pHotelx);
  			PlayerInfo[playerid][pLeasing] = 0;			Update(playerid,pLeasingx);
  			PlayerInfo[playerid][pPdSkin] = 0;			Update(playerid,pPdSkinx);
  			PlayerInfo[playerid][pCip] = 0;				Update(playerid,pCipx);
  			PlayerInfo[playerid][pIphone] = 0;			Update(playerid,pIphonex);
  			PlayerInfo[playerid][pBaterie] = 0;			Update(playerid,pBateriex);
  			PlayerInfo[playerid][pInterior] = 0;		Update(playerid,pInteriorx);
  			PlayerInfo[playerid][pVW] = 0;				Update(playerid,pVWx);
			PlayerInfo[playerid][pRespect] = 1;			Update(playerid,pRespectx);
			PlayerInfo[playerid][pConnectTime] = 0;		Update(playerid,pConnectTimex);
			PlayerInfo[playerid][pMute] = 0;			Update(playerid,pMutex);
			PlayerInfo[playerid][pCrime] = 0;			Update(playerid,pCrimex);
			PlayerInfo[playerid][pKill] = 0;			Update(playerid,pKillx);
			PlayerInfo[playerid][pDeath] = 0;			Update(playerid,pDeathx);
			PlayerInfo[playerid][pWantedDeaths] = 0;	Update(playerid,pWantedDeathsx);
			PlayerInfo[playerid][pWanted] = 0;			Update(playerid,pWantedx);
			PlayerInfo[playerid][pArrestedTime] = 0;	Update(playerid,pArrestedTimex);
			PlayerInfo[playerid][pLotto] = 0;			Update(playerid,pLottox);
			PlayerInfo[playerid][pJob1] = 0;			Update(playerid,pJob1x);
			PlayerInfo[playerid][pJob2] = 0;			Update(playerid,pJob2x);
			PlayerInfo[playerid][pJailTime] = 0;		Update(playerid,pJailTimex);
			PlayerInfo[playerid][pJail] = 0;			Update(playerid,pJailx);
		 	PlayerInfo[playerid][pMaterials] = 0;		Update(playerid,pMaterialsx);
			PlayerInfo[playerid][pDrugs] = 0;			Update(playerid,pDrugsx);
			PlayerInfo[playerid][pLawSkill] = 0;		Update(playerid,pLawSkillx);
			PlayerInfo[playerid][pYeni] = 5;			Update(playerid,pYenix);
			PlayerInfo[playerid][pHouse] = 255;			Update(playerid,pHousex);
			PlayerInfo[playerid][pBiz] = 255;			Update(playerid,pBizx);
			PlayerInfo[playerid][pCarLic] = 0;			Update(playerid,pCarLicx);
			PlayerInfo[playerid][pFlyLic] = 0;			Update(playerid,pFlyLicx);
			PlayerInfo[playerid][pBoatLic] = 0;			Update(playerid,pBoatLic);
			PlayerInfo[playerid][pFishLic] = 0;			Update(playerid,pFishLicx);
			PlayerInfo[playerid][pGunLic] = 0;			Update(playerid,pGunLicx);
  			PlayerInfo[playerid][pPayDay] = 0;			Update(playerid,pPayDayx);
			PlayerInfo[playerid][pPlayers] = 0;			Update(playerid,pPlayersx);
		 	PlayerInfo[playerid][pFuel] = 0;			Update(playerid,pFuelx);
			PlayerInfo[playerid][pSpawn] = 0;			Update(playerid,pSpawnx);
			PlayerInfo[playerid][pLoses] = 0;			Update(playerid,pLosesx);
  			PlayerInfo[playerid][pWin] = 0;				Update(playerid,pWinx);
			PlayerInfo[playerid][pSlots] = 3;			Update(playerid,pSlotsx);
			PlayerInfo[playerid][pFightStyle] = 0;		Update(playerid,pFightStylex);
			PlayerInfo[playerid][pFwarn] = 0;			Update(playerid,pFwarnx);
			PlayerInfo[playerid][pPunish] = 0;			Update(playerid,pPunishx);
			PlayerInfo[playerid][pOnline] = 1;			Update(playerid,pOnlinex);
  			PlayerInfo[playerid][pDetSkill] = 0;		Update(playerid,pDetSkillx);
			PlayerInfo[playerid][pSexSkill] = 0;		Update(playerid,pSexSkillx);
			PlayerInfo[playerid][pJackSkill] = 0;		Update(playerid,pJackSkillx);
			PlayerInfo[playerid][pBoxSkill] = 0;		Update(playerid,pBoxSkillx);
			PlayerInfo[playerid][pNewsSkill] = 0;		Update(playerid,pNewsSkillx);
			PlayerInfo[playerid][pDrugsSkill] = 0;		Update(playerid,pDrugsSkillx);
			PlayerInfo[playerid][pCoin] = 0;			Update(playerid,pCoinx);
			PlayerInfo[playerid][pDice] = 0;			Update(playerid,pDicex);
			PlayerInfo[playerid][pBombe] = 0;			Update(playerid,pBombex);
			PlayerInfo[playerid][pCar1] = 0;			//Update(playerid,pCar1x);
			PlayerInfo[playerid][pCar2] = 0;			//Update(playerid,pCar2x);
			PlayerInfo[playerid][pCar3] = 0;			//Update(playerid,pCar3x);
			PlayerInfo[playerid][pCar4] = 0;			//Update(playerid,pCar4x);
			PlayerInfo[playerid][pCar5] = 0;			//Update(playerid,pCar5x);
			PlayerInfo[playerid][pCar6] = 0;			//Update(playerid,pCar6x);
			PlayerInfo[playerid][pCar7] = 0;			//Update(playerid,pCar7x);
			PlayerInfo[playerid][pCar8] = 0;			//Update(playerid,pCar8x);
			PlayerInfo[playerid][pBiggestFish] = 0;		Update(playerid,pBiggestFishx);
			PlayerInfo[playerid][pCraciun] = 0;			Update(playerid,pCraciunx);
			PlayerInfo[playerid][pFishes] = 0;			Update(playerid,pFishesx);
			PlayerInfo[playerid][pHeadValue] = 0;		Update(playerid,pHeadValue);
			PlayerInfo[playerid][pCDPlayer] = 0;		Update(playerid,pCDPlayerx);
			PlayerInfo[playerid][pAmmoWork] = 0;		Update(playerid,pAmmoWorkx);
			PlayerInfo[playerid][pFireworks] = 0;		Update(playerid,pFireworksx);
			PlayerInfo[playerid][pLaser] = 0;			Update(playerid,pLaserx);
			PlayerInfo[playerid][pMechSkill] = 0;		Update(playerid,pMechSkillx);
			PlayerInfo[playerid][pCarTime] = 0;			Update(playerid,pCarTimex);
			PlayerInfo[playerid][pGPS] = 0;				Update(playerid,pGPSx);
			PlayerInfo[playerid][pCeas] = 0;			Update(playerid,pCeasx);
			PlayerInfo[playerid][pCDPlayer] = 0;		Update(playerid,pCDPlayerx);
			PlayerInfo[playerid][pFunie] = 0;			Update(playerid,pFunie);
			strmid(PlayerInfo[playerid][pMarriedTo], "No-one", 0, strlen("No-one"), 255);
			Update(playerid,pMarriedTox);
            if(PlayerInfo[playerid][pSex] == 1) PlayerInfo[playerid][pSkin] = 188;
			else 								PlayerInfo[playerid][pSkin] = 188;//194;
 			Update(playerid,pSkinx);
	 	}
   		new string[155];
		gLogged[playerid] = 1;
        GetPlayerCash(playerid);
		SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
  		SetPlayerCash(playerid, PlayerInfo[playerid][pCash]);
		SetSpawnInfo(playerid, 0, 0, 1382.2604, -1622.6512, 14.2860, 359.5591, 0, 0, 0, 0, 0, 0);
		SpawnPlayer(playerid);
		Update(playerid, pLastLoginx);
		strmid(PlayerInfo[playerid][pIP], PlayerIP(playerid), 0, 100, 255);
		Update(playerid, pIPx);

		if (PlayerInfo[playerid][pHelper] >= 1)
		{
  			format(string, sizeof(string), "Esti logat cu Helper level %d", PlayerInfo[playerid][pHelper]);
			SendClientMessage(playerid, COLOR_YELLOW2, string);
		}
		
		if (PlayerInfo[playerid][pAdmin] > 0)
		{
			format(string, sizeof(string), "Esti logat cu Admin level %d.", PlayerInfo[playerid][pAdmin]);
			SendClientMessage(playerid, COLOR_YELLOW2, string);
		}

		if (PlayerInfo[playerid][pPremiumAccount] >= 1)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Esti logat cu Cont VIP");
			SendClientMessage(playerid, COLOR_YELLOW2, string);
		}
		printf("%s[%d] has logged in.", PlayerName(playerid),playerid);
	}

	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
	PlayerInfo[playerid][pOnline] = 0;
	Update(playerid,pOnlinex);
    new string[128];
    if(GetPlayerVehicleID(playerid) != 0)    KillTimer(timerkm[GetPlayerVehicleID(playerid)]);//omoram acel timer care masoara kilometrii deoarece nu mai e nici un sofer in ea
	PlayerInfo[playerid][pInterior] = GetPlayerInterior(playerid);
	Update(playerid,pInteriorx);
	PlayerInfo[playerid][pVW] = GetPlayerVirtualWorld(playerid);
	Update(playerid,pVWx);
	SetCameraBehindPlayer(playerid);
    takingselfie[playerid] = 0;
    TesterDuty[playerid]=0;
	AdminDuty[playerid]= 0;
//	if(IsValidObject(Ziare[playerid][0] ))	SetObjectPos(Ziare[0]);
//	if(IsValidObject(Ziare[playerid][1] ))	SetObjectPos(Ziare[1]);
//	if(IsValidObject(Ziare[playerid][2] ))	SetObjectPos(Ziare[2]);
//	if(IsValidObject(Ziare[playerid][3] ))	SetObjectPos(Ziare[3]);
//	if(IsValidObject(Ziare[playerid][4] ))	SetObjectPos(Ziare[4]);
//	if(IsValidObject(Ziare[playerid][5] ))	SetObjectPos(Ziare[5]);
//	if(IsValidObject(Ziare[playerid][6] ))	SetObjectPos(Ziare[6]);
//	if(IsValidObject(Ziare[playerid][7] ))	SetObjectPos(Ziare[7]);
//    if(InPlane[playerid] >0)
    cmd_over(playerid,string);
    
    if(snowOn{playerid})
    {
    	for(new i = 0; i < MAX_SNOW_OBJECTS; i++) DestroyDynamicObject(snowObject[playerid][i]);
        snowOn{playerid} = false;
        KillTimer(updateTimer{playerid});
 	}
    
    undercover[playerid] = 0;
    new fftext[10];
	if(reason == 0)
    fftext = "(Crashed)";
	else if(reason == 1)
    fftext = "(Leaving)";
	else if(reason == 2)
    fftext = "(Kicked)";
	else if(reason == 3)
    fftext = "(Restart)";
	format(string,sizeof(string), " %s[%d] a parasit serverul,%s- %s",PlayerName(playerid),playerid,fftext,CurrentTimeStamps());
	LoginQuit(string);
	if(plantata[playerid] != 999)	DestroyDynamicObject(bomb[playerid]);
	if(caged[playerid] != 0)	UnCagePlayer(playerid);
	KillTimer(DildoTimerReset);
	if(Gamble[0] == playerid)
	{
		Gamble[0]=999;
		CreateSet();
	}
    if(Gamble[1] == playerid)
    {
    	Gamble[1]=999;
		CreateSet();
	}
	if(OnJob[playerid] == 9)
	{
		cmd_over(playerid,string);
        CP[playerid] = 0;
  		DisablePlayerRaceCheckpoint(playerid);
		SetTimerEx("DestroyPapers",1000,false,"i",playerid);
	}
	new caller = Mobile[playerid];
	if(OnJob[playerid] == 7)
	{
	    if(IsValidDynamicObject(TccSmoke[playerid]))
	    DestroyDynamicObject(TccSmoke[playerid]);
	    DestroyVehicle(TccPlayerCar[playerid]);
		GameTextForPlayer(playerid, "~w~Ai iesit din masina", 5000, 1);
		DisablePlayerCheckpoint(playerid);
		CP[playerid] = 0;
	}
	if(BallHolder == playerid)	RecreateBall();
	if(IsValidDynamicObject(CrateBoat[0][playerid])) DestroyDynamicObject(CrateBoat[0][playerid]);
	if(IsValidDynamicObject(CrateBoat[1][playerid])) DestroyDynamicObject(CrateBoat[1][playerid]);
	if(IsValidDynamicObject(CrateBoat[2][playerid])) DestroyDynamicObject(CrateBoat[2][playerid]);
	if(SmokeCRopDust[playerid] == 1)
 	{
		SmokeCRopDust[playerid] = 0;
        if(IsValidDynamicObject(SmokeCropDuster[0][playerid])) DestroyDynamicObject(SmokeCropDuster[0][playerid]);
	    if(IsValidDynamicObject(SmokeCropDuster[1][playerid])) DestroyDynamicObject(SmokeCropDuster[1][playerid]);
	    if(IsValidDynamicObject(SmokeCropDuster[2][playerid])) DestroyDynamicObject(SmokeCropDuster[2][playerid]);
	    if(IsValidDynamicObject(SmokeCropDuster[3][playerid])) DestroyDynamicObject(SmokeCropDuster[3][playerid]);
		GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Smoke OFF",700,3);
   	}
	if(caller != 999)
	{
		if(caller < 999)
		{
			SendClientMessage(caller,  COLOR_GRAD2, "	Apelul s-a incheiat brusc...");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = 999;
			TogglePlayerControllable(caller, 1);
		}
		Mobile[playerid] = 999;
		CellTime[playerid] = 0;
		TogglePlayerControllable(playerid, 1);
	}
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
	{
	    if(IsPlayerConnected(TransportDriver[playerid]))
		{
		    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
		    TransportTime[TransportDriver[playerid]] = 0;
		    TransportCost[TransportDriver[playerid]] = 0;
		    format(string, sizeof(string), "~w~Clientul a coborat~n~~g~Profit: $%d",TransportCost[playerid]);
		    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
		}
	}
	if(TransportDuty[playerid] == 1) 	TaxiDrivers -= 1;
	if(GotHit[playerid] > 0)
	{
	    if(GetChased[playerid] < 999)
	    {
	        if(IsPlayerConnected(GetChased[playerid]))
	        {
	        	SendClientMessage(GetChased[playerid], COLOR_YELLOW, "	Tinta s-a deconectat..");
				foreach(Player,i)
    			ShowPlayerNameTagForPlayer(i, GetChased[playerid], true);
	            GoChase[GetChased[playerid]] = 999;
			}
	    }
	}
	if(LastCar[playerid] != INVALID_VEHICLE_ID && LastCar[playerid] != 0)
	{
		VehLocked[LastCar[playerid]] = 0;
	    GetVehicleParamsEx(LastCar[playerid], engine, lights, alarm, doors, bonnet,boot,objective);
		SetVehicleParamsEx(LastCar[playerid], engine, lights, alarm, VEHICLE_PARAMS_OFF, bonnet, boot, objective);
	}
    foreach(Player, i)
	{
	    if(FindTime[i] == playerid)
	    {
	        FindTime[i]=999;
			FindTimePoints[i]=-1;
			DisablePlayerCheckpoint(i);
			PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
			GameTextForPlayer(i, "~r~Checkpoint ~b~scos!", 2500, 1);
	    }
 		if(TaxiAccepted[i] < 999)
	    {
			if(TaxiAccepted[i] == playerid)
		    {
		    	TaxiAccepted[i] = 999;
				GameTextForPlayer(i, "~w~Clientul~n~~r~a iesit", 5000, 1);
	            TaxiCallTime[i] = 0;
	            DisablePlayerCheckpoint(i);
	        }
	    }
 	    if(PlayerInfo[i][pAdmin]>5)
	    {
      	    format(string, 128, "%s a iesit.%s", PlayerName(playerid),fftext);
			SendClientMessage(i, -1, string);
 	    }
		if(SpectatedID[i] == playerid)
		{
		    SendClientMessage(SpectatedID[i],-1,"Playerul a parasit serverul");
		    SetPlayerPos(playerid,SpecPosx[playerid],SpecPosy[playerid],SpecPosz[playerid]);
		    SetPlayerInterior(playerid,interiorplayer[playerid]);
		    SetPlayerVirtualWorld(playerid,virtualworld[playerid]);
		    SpectatedID[playerid] = 999;
 		}
	}
	if(gLogged[playerid] != 0)
	{
		new weapons[13],ammo[13];
		GetPlayerWeaponData(playerid, 0, weapons[0], ammo[0]);
		GetPlayerWeaponData(playerid, 1, weapons[1], ammo[1]);//slotul 1 	-golf,knife,baseball,lopata,tac,katana,drujba
		GetPlayerWeaponData(playerid, 2, weapons[2], ammo[2]);//slotul 2    -pistol
		GetPlayerWeaponData(playerid, 3, weapons[3], ammo[3]);//slotul 3    -shoitgun sawn combat
		GetPlayerWeaponData(playerid, 4, weapons[4], ammo[4]);//slotul 4    -microsmg mp5 tec9
		GetPlayerWeaponData(playerid, 5, weapons[5], ammo[5]);//slotul 5    -m4 ak
		GetPlayerWeaponData(playerid, 6, weapons[6], ammo[6]);//slotul 6    -rifle sniper
		GetPlayerWeaponData(playerid, 9, weapons[9], ammo[9]);//slotul 9    -camera spray extinctor
		GetPlayerWeaponData(playerid, 8, weapons[8], ammo[8]);//slotul 8    -grenade
		PlayerInfo[playerid][pGun1] = weapons[1];
	    PlayerInfo[playerid][pAmmo1] = ammo[1];
		PlayerInfo[playerid][pGun2] = weapons[2];//
	    PlayerInfo[playerid][pAmmo2] = ammo[2];//
		PlayerInfo[playerid][pGun3] = weapons[3];
	    PlayerInfo[playerid][pAmmo3] = ammo[3];
		PlayerInfo[playerid][pGun4] = weapons[4];//
	    PlayerInfo[playerid][pAmmo4] = ammo[4];//
		PlayerInfo[playerid][pGun5] = weapons[5];
	    PlayerInfo[playerid][pAmmo5] = ammo[5];
		PlayerInfo[playerid][pGun6] = weapons[6];//
	    PlayerInfo[playerid][pAmmo6] = ammo[6];//
		PlayerInfo[playerid][pGun7] = weapons[9];
	    PlayerInfo[playerid][pAmmo7] = ammo[9];
		PlayerInfo[playerid][pGun8] = weapons[8];//
	    PlayerInfo[playerid][pAmmo8] = ammo[8];//
	    if(ammo[0] > 0)
		{
		    format(string, 128, "%s a a parasit serverul. Armele lui au fost resetate. Motiv: Hack Weapon", PlayerName(playerid));
		    AdminsBroadCast(COLOR_RED, string,4);
		    HackLog(string);
		    PlayerInfo[playerid][pGun1] = 0;
		    PlayerInfo[playerid][pAmmo1] = 0;
			PlayerInfo[playerid][pGun2] = 0;
		    PlayerInfo[playerid][pAmmo2] = 0;
			PlayerInfo[playerid][pGun3] = 0;
		    PlayerInfo[playerid][pAmmo3] = 0;
			PlayerInfo[playerid][pGun4] = 0;
		    PlayerInfo[playerid][pAmmo4] = 0;
			PlayerInfo[playerid][pGun5] = 0;
		    PlayerInfo[playerid][pAmmo5] = 0;
			PlayerInfo[playerid][pGun6] = 0;
		    PlayerInfo[playerid][pAmmo6] =0;
			PlayerInfo[playerid][pGun7] = 0;
		    PlayerInfo[playerid][pAmmo7] = 0;
			PlayerInfo[playerid][pGun8] = 0;
		    PlayerInfo[playerid][pAmmo8] = 0;
		}
		Update(playerid, pGun1x);
		Update(playerid, pAmmo1x);
		Update(playerid, pGun2x);
		Update(playerid, pAmmo2x);
		Update(playerid, pGun3x);
		Update(playerid, pAmmo3x);
		Update(playerid, pGun4x);
		Update(playerid, pAmmo4x);
		Update(playerid, pGun5x);
		Update(playerid, pAmmo5x);
		Update(playerid, pGun6x);
		Update(playerid, pAmmo6x);
		Update(playerid, pGun7x);
		Update(playerid, pAmmo7x);
		Update(playerid, pGun8x);
		Update(playerid, pAmmo8x);
	}
	return 1;
}
public CheckSlots(playerid)
{
    Total_Player_Vehicles[playerid] = 0;
    PlayerInfo[playerid][pCar1] = 0;
	PlayerInfo[playerid][pCar2] = 0;
	PlayerInfo[playerid][pCar3] = 0;
	PlayerInfo[playerid][pCar4] = 0;
	PlayerInfo[playerid][pCar5] = 0;
	PlayerInfo[playerid][pCar6] = 0;
	PlayerInfo[playerid][pCar7] = 0;
	PlayerInfo[playerid][pCar8] = 0;
    for(new i=0; i<MAX_VEHICLES; i++)
    {
    	if(OwnedVeh(i))
      	{
	    	if(strmatch(vInfo[OwnedVeh(i)][vOwner], PlayerName(playerid)))
	        {
	        	if(PlayerInfo[playerid][pCar1] == 0)		{Total_Player_Vehicles[playerid] ++;	PlayerInfo[playerid][pCar1] = i; continue;	}
	            else if(PlayerInfo[playerid][pCar2] == 0)	{Total_Player_Vehicles[playerid] ++;	PlayerInfo[playerid][pCar2] = i; continue;	}
	            else if(PlayerInfo[playerid][pCar3] == 0)	{Total_Player_Vehicles[playerid] ++;	PlayerInfo[playerid][pCar3] = i; continue;	}
	            else if(PlayerInfo[playerid][pCar4] == 0)	{Total_Player_Vehicles[playerid] ++;	PlayerInfo[playerid][pCar4] = i; continue;	}
	            else if(PlayerInfo[playerid][pCar5] == 0)	{Total_Player_Vehicles[playerid] ++;	PlayerInfo[playerid][pCar5] = i; continue;	}
	            else if(PlayerInfo[playerid][pCar6] == 0)	{Total_Player_Vehicles[playerid] ++;	PlayerInfo[playerid][pCar6] = i; continue;	}
	            else if(PlayerInfo[playerid][pCar7] == 0)	{Total_Player_Vehicles[playerid] ++;	PlayerInfo[playerid][pCar7] = i; continue;	}
			    else if(PlayerInfo[playerid][pCar8] == 0)	{Total_Player_Vehicles[playerid] ++;	PlayerInfo[playerid][pCar8] = i; continue;	}
	        }
		}
   	}
	return 1;
}
forward ResetVariable(playerid);
public ResetVariable(playerid)
{
	SexPrice[playerid] = 0;         		SexOffer[playerid] = 999;       EnablePlayerCameraTarget(playerid, 1);
    RepairCar[playerid] = 0;				RepairOffer[playerid] = 999;	undercover[playerid] = 0;
	brake[playerid] = 0;					Mobile[playerid] = 999;			WantLawyer[playerid] = 0;
	SexTimer[playerid] = 0;					Injourney[playerid] = 0;		UsedDildo[playerid] = 0;
	ActorPlayers[playerid] = 0; 			FindTimePoints[playerid] = 0; 	Folded[playerid] = 0;
	Tied[playerid] = 0;						ReportTime[playerid] = 0;		SpectatedID[playerid] = 999;
    BigEar[playerid] = 0;					AdminDuty[playerid] = 0;		TicketOffer[playerid] = 999;
	RefillOffer[playerid] = 999; 			RefillPrice[playerid] = 0;      Comenzi[playerid] = 0;
	OwnableCarOffer[playerid] = 999; 		OwnableCarID[playerid] = 0; 	OwnableCarPrice[playerid] = 0;
    CallLawyer[playerid] = 0;           	JailPrice[playerid] = 0;        ApprovedLawyer[playerid] = 0;
    CanFreeLawyer[playerid] = 0;            TransportDuty[playerid] = 0;	TransportValue[playerid] = 0;
	TransportMoney[playerid] = 0;			TransportTime[playerid] = 0; 	TransportCost[playerid] = 0;
	TransportDriver[playerid] = 999;       	TaxiCallTime[playerid] = 0;     GetChased[playerid] = 999;
	TaxiAccepted[playerid] = 999;           GoChase[playerid] = 999;        EditingObjectId[playerid] = -1;
	AdTimer[playerid] = 0;                  TalkingLive[playerid] = 999; 	LiveOffer[playerid] = 999;
    TeamBall[playerid] = 0;               	ProposeOffer[playerid] = 999; 	MarryWitness[playerid] = 999;
	MarryWitnessOffer[playerid] = 999; 		MarriageCeremoney[playerid] = 0;ProposedTo[playerid] = 999;
	GotProposedBy[playerid] = 999;			DivorceOffer[playerid] = 999;
    InPlane[playerid] = 0;                  SmokeCRopDust[playerid] = 0;   	BodyTimer[playerid] = 0;
    GuardOffer[playerid] = 999; 			GuardPrice[playerid] = 0;       PlayerBoxing[playerid] = 0;
    BoxOffer[playerid] = 999;               BoxWaitTime[playerid] = 0;      NumberPizza[playerid] = 0;
    PizzaOfPlayer[playerid] = 0;		 	PhoneOnCharge[playerid] = 0;    PlayerLitter[playerid] = 0;
   	FindTime[playerid] = 999; 				RepairPrice[playerid] = 0;		noclipdata[playerid][cameramode] = CAMERA_MODE_NONE;
    PlayerReservor[playerid] = 0;			Vestiar[playerid] = 0;          ticket[playerid] = 0;
    Classes[playerid] = 0;                  PhoneMeniu[playerid] = 0;       
    PlayerInfo[playerid][pRadar] = 0;       ClearAnimations(playerid);      SetplayerRank(playerid);
	PlayerCuffed[playerid] = 0;             PlayerCuffs[playerid] = 0;      RowedPDMenu[playerid] = 0;
  	CanUsePd[playerid] = 1;					Tazed[playerid] = 0;			Tazer[playerid] = 0;
	OnDuty[playerid] = 0;					ChatTexted[playerid] = 0;		AlreadyRadar[playerid] = 0;
	TakingLeeson[playerid] = 0;				aprobat[playerid] = 0;			SeatBelt[playerid] = 0;
	TakingLesson[playerid] = 0;				freeze[playerid] = 0;   		Tele[playerid] = 1;
	hack[playerid] = 0; 					CheckSlots(playerid);			Fails[playerid] = 0;
	HireCar[playerid] = 255; 				instart[playerid] = 0; 			NeedBackUp[playerid] = 0;
    Codel[playerid] = 0;					DrugTimer[playerid] = 0;		PlayerInfo[playerid][pradio] = 0;
	Refueling[playerid] = 0;    			SetPlayerToTeamColor(playerid);	FindTimePoints[playerid] = 0;
    CanJump[playerid] = 1;                  PlayerDrunkTime[playerid] = 0;  PlayerDrunk[playerid] = 0;
    TesterDuty[playerid] = 0;				AdminDuty[playerid] = 0;		PlayerInfo[playerid][pOnline] = 1;
	Update(playerid,pOnlinex);				DrugOffer[playerid] = 999;  	DrugPrice[playerid] = 0;
	DrugGram[playerid] = 0;                 takingselfie[playerid] = 0;     PlayerSledTime[playerid] = 0;
	ParcareIn[playerid] = 0;                Clothings[playerid] = 0;
	new ghour, gminute, gsecond;            pcamera[playerid] = 0;          SetCameraBehindPlayer(playerid);
	gettime(ghour, gminute, gsecond);		SetPlayerTime(playerid, ghour, gminute);
    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	Delete3DTextLabel(DutyLabel[playerid]);
	Delete3DTextLabel(DutyLabel[playerid]);
	SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
	if(IsValidDynamicObject(firstpersona[playerid])) DestroyDynamicObject(firstpersona[playerid]);
	if(IsValidPlayerObject(playerid,vehview[playerid])) DestroyPlayerObject(playerid,vehview[playerid]);
    return 1;
}

new Float:RandomSpawnsBlue[6][3] =
{
	{-974.9094, 1090.5587, 1345.0123}, // Randomspawn
	{-969.5334, 1098.6237, 1345.0123}, // Randomspawn
	{-969.8724, 1080.8805, 1345.0123}, // Randomspawn
	{-969.6225, 1061.2690, 1345.0123}, // Randomspawn
	{-977.8994, 1035.0183, 1345.0123}, // Randomspawn
	{-969.6342, 1021.8231, 1345.0123}// Randomspawn
};
new Float:RandomSpawnsRed[6][3] =
{
	{-1127.90344, 1083.69531, 1345.82581}, // Randomspawn
	{-1137.00647, 1099.40662, 1345.82581}, // Randomspawn
	{-1135.76233, 1057.89197, 1345.82581}, // Randomspawn
	{-1135.73157, 1039.19543, 1345.82581}, // Randomspawn
	{-1130.57825, 1028.93469, 1345.82581}, // Randomspawn
	{-1135.47095, 1022.02161, 1345.82581}// Randomspawn
};

public OnPlayerSpawn(playerid)
{
    new string[155];
    if(gLogged[playerid] != 1 && PlayerInfo[playerid][pTutorial] != 0)
	{
		SetPlayerPos(playerid, 1382.2604, -1622.6512, 14.2860);
   		KickWithMessage(playerid, COLOR_LIGHTRED, "** Acest server necesita login inainte de Spawn(Ai primit Kick) **");
   		return 1;
	}
	if(PlayerInfo[playerid][pTutorial] == 0 && FirstSpawn[playerid] == 1 && PlayerInfo[playerid][pLevel] < 2)
	{
		SetPlayerPos(playerid, 1382.2604, -1622.6512, 14.2860);
	    InterpolateCameraPos(playerid,	  1125.2023,-2019.4734,143.5,         1398.9823,-888.0203,119.84, 22000, CAMERA_MOVE);
	    InterpolateCameraLookAt(playerid, 1035.6237,-1994.3496,119.840,   1413.5432,-822.4436,119.84, 4000, CAMERA_MOVE);
		FirstSpawn[playerid] = 0;
		ShowPlayerDialog(playerid, DIALOG_SEX, DIALOG_STYLE_MSGBOX, "{FFFFFF}Character Gender", "{FFFFFF}Esti Barbat sau Femeie?", "Barbat", "Femeie");
		return 1;
	}
	PlayerInfo[playerid][pTutorial] = 2;
	Update(playerid, pTutorialx);
	ChatTexted[playerid] = 0;
    TextDrawShowForPlayer(playerid, NameText[playerid]);
    TextDrawShowForPlayer(playerid, Textdraw45);
	TextDrawShowForPlayer(playerid, Time2);
	TextDrawShowForPlayer(playerid, Date);
	TextDrawHideForPlayer(playerid, TextdrawIntro1);
	TextDrawHideForPlayer(playerid, TextdrawIntro2);
	TextDrawHideForPlayer(playerid, TextdrawIntro3);
	TextDrawHideForPlayer(playerid, TextdrawIntro4);
	TextDrawHideForPlayer(playerid, TextMostAcc);
	TextDrawHideForPlayer(playerid, TextBannedAcc);
	TextDrawHideForPlayer(playerid, TextNewAcc);
	TextDrawHideForPlayer(playerid, TextTotalAcc);
	TextDrawHideForPlayer(playerid, BlindFold);
	PlayerPlaySound(playerid,1068,0,0,0);
	SetTimer("StopMusic", 4000, 0);
    format(string,sizeof(string), "%s",PlayerName(playerid));
    TextDrawSetString(NameText[playerid], string);
    StopAudioStreamForPlayer(playerid);
    if(IsValidPlayerObject(playerid,firstpersona[playerid])) DestroyPlayerObject(playerid,firstpersona[playerid]);
    if(IsValidPlayerObject(playerid,vehview[playerid])) DestroyPlayerObject(playerid,vehview[playerid]);
	if(IsValidDynamicObject(ObjecPlayersMAX[playerid])) DestroyDynamicObject(ObjecPlayersMAX[playerid]);
	if(PlayerInfo[playerid][pAchievement7] == 1)
   	TextDrawHideForPlayer(playerid,Textdraw47[playerid]);
	if(InMeniuIphone[playerid]==1)
	cmd_iphone(playerid,string);
	if(PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pPdSkin] != 0)
	{
		if(PlayerInfo[playerid][pPdSkin] == 310)
 			SetPlayerSkin(playerid, 250);
 		else if(PlayerInfo[playerid][pPdSkin] == 302)
  			SetPlayerSkin(playerid, 305);
 		else if(PlayerInfo[playerid][pPdSkin] == 311)
  			SetPlayerSkin(playerid, 60);
 		else if(PlayerInfo[playerid][pPdSkin] == 300)
  			SetPlayerSkin(playerid, 304);
 	}
 	else SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
   	if(PlayerInfo[playerid][pConnectTime] >= 3600 && PlayerInfo[playerid][pAchievement8] == 0)
	{
	    format(string,sizeof(string),"{FFFFFF}\tPentru ca ai facut o ora jucata\nTe rugam sa specifici cine te-a adus pe server.\n\tScrie numele Exact al playerului");
		ShowPlayerDialog(playerid, 26, DIALOG_STYLE_INPUT, "{FFFFFF}REFERRAL",string,"OK","SKIP->");
	}

	if(PaintBallPlaying[playerid] == 1)//blue
	{
		new Random = random(sizeof(RandomSpawnsBlue));
	    SetPlayerPos(playerid, RandomSpawnsBlue[Random][0], RandomSpawnsBlue[Random][1], RandomSpawnsBlue[Random][2]);
	    SetTimerEx("freze", 500, 0, "i", playerid);
		TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid,10);
 		SetPlayerFacingAngle(playerid,90);
 		SetPlayerVirtualWorld(playerid,1);//WEAPONS OFF BLUE TEAM
		ServerWeapon(playerid, 3, 1);//pulan
		ServerWeapon(playerid, 31, 500);//m4a1
		ServerWeapon(playerid, 16, 15);//grenade
		ServerWeapon(playerid, 34, 100);//sniper
		ServerWeapon(playerid, 32, 300);//tec9
		ServerWeapon(playerid, 24, 120);//deagle
		ServerWeapon(playerid, 26, 220);//sawn off
		SetPlayerSkin(playerid,285);
   		SetPlayerArmour(playerid, 50);
       	SetPlayerHealth(playerid, 100);
		if(PaintBallPlaying[playerid] == 1) SetPlayerColor(playerid,0x3300FFC8);
	    if(PaintBallPlaying[playerid] == 2) SetPlayerColor(playerid,0xFB1D04C8);
		return 1;
	}
	if(PaintBallPlaying[playerid] == 2)//red
	{
	    new Random = random(sizeof(RandomSpawnsRed));
	    SetPlayerPos(playerid, RandomSpawnsRed[Random][0], RandomSpawnsRed[Random][1], RandomSpawnsRed[Random][2]);
	    SetTimerEx("freze", 500, 0, "i", playerid);
		TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid,10);
 		SetPlayerFacingAngle(playerid,-90);
 		SetPlayerVirtualWorld(playerid,1);//WEAPONS OFF RED TEAM
		ServerWeapon(playerid, 5, 1);//bata
		ServerWeapon(playerid, 30, 500);//ak47
		ServerWeapon(playerid, 16, 15);//grenade
		ServerWeapon(playerid, 34, 100);//sniper
		ServerWeapon(playerid, 28, 300);//uzzy
		ServerWeapon(playerid, 24, 120);//deagle
		ServerWeapon(playerid, 26, 220);//sawn off
		SetPlayerSkin(playerid,110);
   		SetPlayerArmour(playerid, 50);
       	SetPlayerHealth(playerid, 100);
		if(PaintBallPlaying[playerid] == 1) SetPlayerColor(playerid,0x3300FFC8);
	    if(PaintBallPlaying[playerid] == 2) SetPlayerColor(playerid,0xFB1D04C8);
		return 1;
	}

    if(AdminDuty[playerid]==1)
	{
		format(string, sizeof(string),"{E5E5E5}[ADMIN]: {F70909}%s {E5E5E5}nu mai este la datorie ca admin", PlayerName(playerid));
		SendClientMessageToAll(0x2FC0D0C8, string);
		AdminDuty[playerid] = 0;
		SetPlayerHealth(playerid,100);
		SetPlayerArmour(playerid,0);
		SetPlayerToTeamColor(playerid);
  		ResetPlayerWeapons(playerid);
		SetPlayerSkin(playerid,PlayerSavedSkinPas[playerid]);
	}
    if(TesterDuty[playerid]==1)
	{
		format(string, sizeof(string), "* Helper %s este acum off-duty.", PlayerName(playerid));
		SendClientMessageToAll(0xa9c4e4FF, string);
		TesterDuty[playerid] = 0;
		SetPlayerHealth(playerid,100);
		SetPlayerArmour(playerid,0);
		SetPlayerToTeamColor(playerid);
		SetPlayerSkin(playerid,PlayerSavedSkinPas[playerid]);
	}
	if(LastCar[playerid] != INVALID_VEHICLE_ID && LastCar[playerid] != 0)
	{
		if(VehLocked[LastCar[playerid]] == 1)
		{
			VehLocked[LastCar[playerid]] = 0;
		    GetVehicleParamsEx(LastCar[playerid], engine, lights, alarm, doors, bonnet,boot,objective);
   			SetVehicleParamsEx(LastCar[playerid], engine, lights, alarm, VEHICLE_PARAMS_OFF, bonnet, boot, objective);
            LastCar[playerid] = 0;
		}
	}
	if(PlayerInfo[playerid][pAchievement7] == 1)
	{
		for(new g=0;g<Total_Gang_Created;g++)
		{
 		    GangZoneShowForPlayer(playerid, g, GetTeamZoneColor(GangInfo[g][zOwner]));
		    if(WarStarted == 1) GangZoneFlashForPlayer(playerid,Gangzone[WarZone], 0xC0C0C0C8);
		}
	}
	if(SpectatedID[playerid] != 999 && SpectatedID[playerid] != 998)
	{
        SetPlayerPos(playerid,SpecPosx[playerid],SpecPosy[playerid],SpecPosz[playerid]);
 	   	SetPlayerInterior(playerid,interiorplayer[playerid]);
 	   	SetPlayerVirtualWorld(playerid,virtualworld[playerid]);
 		SetCameraBehindPlayer(playerid);
 		SpectatedID[playerid] = 999;
		return 1;
	}
	if(SpectatedID[playerid] == 998)
	{
		SetPlayerPos(playerid,FlyPosx[playerid][0] ,FlyPosx[playerid][1] ,FlyPosx[playerid][2]);
		FirstSpawn[playerid] = 0;
		SpectatedID[playerid] = 999;
		return 1;
	}
	

	SetTimerEx("ResetVariable",2000,false,"i",playerid);
	gLogged[playerid] = 1;
    SetTimerEx("OnVehicleSpeedUpdate", 400, false, "i", playerid);
	if(HireCar[playerid] != 255) SetVehicleToRespawn(HireCar[playerid]);
    if(BallHolder == playerid)	RecreateBall();


	if(PlayerInfo[playerid][pHair] != 0)
	{
 		RemovePlayerAttachedObject(playerid, 7);
		new skin = GetPlayerSkin(playerid);
  		if(PlayerInfo[playerid][pHair] == 1)
	   	SetPlayerAttachedObject(playerid, 7, 19077, 2, SkinOffSett[skin][0], SkinOffSett[skin][1], SkinOffSett[skin][2], SkinOffSett[skin][3], SkinOffSett[skin][4], SkinOffSett[skin][5], SkinOffSett[skin][8], SkinOffSett[skin][8], SkinOffSett[skin][8]);
		else if(PlayerInfo[playerid][pHair] == 2)
        SetPlayerAttachedObject(playerid, 7, 18975, 2, SkinOffSett[skin][0], SkinOffSett[skin][1], SkinOffSett[skin][2], SkinOffSett[skin][3], SkinOffSett[skin][4], SkinOffSett[skin][5], SkinOffSett[skin][8], SkinOffSett[skin][8], SkinOffSett[skin][8]);
		else if(PlayerInfo[playerid][pHair] == 7)
	    SetPlayerAttachedObject(playerid, 7, 19136, 2, SkinOffSett[skin][0], SkinOffSett[skin][1], SkinOffSett[skin][2], SkinOffSett[skin][3], SkinOffSett[skin][4], SkinOffSett[skin][5], SkinOffSett[skin][8], SkinOffSett[skin][8], SkinOffSett[skin][8]);
 		else if(PlayerInfo[playerid][pHair] == 5)
	    SetPlayerAttachedObject(playerid, 7, 19274, 2, SkinOffSett[skin][0], SkinOffSett[skin][1], SkinOffSett[skin][2], SkinOffSett[skin][3], SkinOffSett[skin][4], SkinOffSett[skin][5], SkinOffSett[skin][8], SkinOffSett[skin][8], SkinOffSett[skin][8]);
		else RemovePlayerAttachedObject(playerid, 7);
	}
	if(FirstSpawn[playerid] == 1 && PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pLeader] == 0 && PlayerInfo[playerid][pJail] == 0)
	{
		SendClientMessage(playerid, 0x004DFFC8, "Iti multumim ca ai revenit pe "#SERVERNAME"");
		format(string, sizeof(string), "~n~~n~~n~~n~~n~~w~Welcome~n~~y~%s", PlayerName(playerid));
		GameTextForPlayer(playerid, string, 2000, 5);
	    SetPlayerPos(playerid,SpawnInfo[0][sPosX],SpawnInfo[0][sPosY],SpawnInfo[0][sPosZ]);
	    FirstSpawn[playerid] = 0;
		SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted]);
		SetPlayerInterior(playerid,0);//PlayerInfo[playerid][pInterior]);
		SetPlayerVirtualWorld(playerid,0);
 		SetPlayerFacingAngle(playerid,SpawnInfo[0][sRotZ]);
    	SetCameraBehindPlayer(playerid);
	    SetTimerEx("freze", 1000, 0, "i", playerid);
		TogglePlayerControllable(playerid, 0);
 		SetTimerEx("SetplayerBackWeapons", 3000, false, "i", playerid);
	    return 1;
	}

	if(PlayerInfo[playerid][pJail] == 1)// lspd
	{
	    PlayerInfo[playerid][pWanted] = 0;
	    Update(playerid,pWantedx);
		SetPlayerWantedLevel(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		TogglePlayerControllable(playerid, 0);
		FirstSpawn[playerid] = 0;
		ResetPlayerWeapons(playerid);
	    SetTimerEx("freze", 2000, 0, "i", playerid);
		SendClientMessage(playerid, COLOR_LIGHTRED, "Sentinta incompleta, inapoi in inchisoarea L.S.P.D.!");
		switch(random(5))
		{
		    case 0: SetPlayerPos(playerid,1564.4834, -1671.7292, 12.4190);
		    case 1: SetPlayerPos(playerid,1564.4148, -1674.8582, 12.4190);
		    case 2: SetPlayerPos(playerid,1557.8252, -1678.8262, 12.4190);
		    case 3: SetPlayerPos(playerid,1557.8402, -1675.0198, 12.4190);
		    case 4: SetPlayerPos(playerid,1558.0499, -1671.6038, 12.4190);
     	}
     	return 1;
	}

	if(PlayerInfo[playerid][pJail] == 2)//national guard
	{
	    SetPlayerInterior(playerid, 1);
	    PlayerInfo[playerid][pWanted] = 0;
	    Update(playerid,pWantedx);
	    SetPlayerVirtualWorld(playerid, 0);
		FirstSpawn[playerid] = 0;
		TogglePlayerControllable(playerid, 0);
	    SetTimerEx("freze", 2000, 0, "i", playerid);
		SendClientMessage(playerid, COLOR_LIGHTRED, "Sentinta incompleta, inapoi in inchisoarea N.G.!");
	 	switch(random(12))
		{
		    case 0:	SetPlayerPos(playerid,192.0303, 1845.9227, 1004.3575);
		    case 1: SetPlayerPos(playerid,188.7821, 1846.9127, 1000.3329);
		    case 2: SetPlayerPos(playerid,195.8428, 1846.7665, 1000.3329);
		    case 3: SetPlayerPos(playerid,199.5542, 1844.8267, 1004.3535);
		    case 4: SetPlayerPos(playerid,203.6979, 1846.5453, 1000.3329);
		    case 5: SetPlayerPos(playerid,207.8190, 1845.1615, 1004.3575);
		    case 6: SetPlayerPos(playerid,208.3337, 1866.9468, 1004.3575);
		    case 7: SetPlayerPos(playerid,203.7540, 1866.1964, 1000.3329);
		    case 8: SetPlayerPos(playerid,200.0305, 1866.6603, 1004.3575);
		    case 9: SetPlayerPos(playerid,195.6612, 1866.3180, 1000.3329);
		    case 10: SetPlayerPos(playerid,191.9282, 1867.1726, 1004.3575);
		    case 11: SetPlayerPos(playerid,188.2587, 1866.0084, 1000.3329);
		}
		return 1;
	}
    if(PlayerInfo[playerid][pSpawn] == 0)
	{
		SetPlayerPos(playerid, 1382.2604, -1622.6512, 14.2860);
		SetPlayerVirtualWorld(playerid, SpawnInfo[0][sVW]);
		SetPlayerInterior(playerid,SpawnInfo[0][sYNT]);
 		SetPlayerFacingAngle(playerid,SpawnInfo[0][sRotZ]);
	    SetCameraBehindPlayer(playerid);
		SetPlayerToTeamColor(playerid);
		FirstSpawn[playerid] = 0;
	    SetTimerEx("freze", 1000, 0, "i", playerid);
		TogglePlayerControllable(playerid, 0);
	    return 1;
	}
	if(PlayerInfo[playerid][pSpawn] == 1)
	{
		new x = PlayerInfo[playerid][pMember];
	    SetPlayerPos(playerid,SpawnInfo[x][sPosX],SpawnInfo[x][sPosY],SpawnInfo[x][sPosZ]);
		SetPlayerVirtualWorld(playerid, 0);//SpawnInfo[x][sVW]);
		SetPlayerInterior(playerid,0);//SpawnInfo[x][sYNT]);
		SetPlayerFacingAngle(playerid,SpawnInfo[x][sRotZ]);
	    SetCameraBehindPlayer(playerid);
		SetPlayerToTeamColor(playerid);
		FirstSpawn[playerid] = 0;
	    SetTimerEx("freze", 2000, 0, "i", playerid);
		TogglePlayerControllable(playerid, 0);
	    return 1;
	}
	if(PlayerInfo[playerid][pSpawn] == 2)
	{
	    new h = PlayerInfo[playerid][pHouse];
	    if(strmatch(HouseInfo[h][hOwner], PlayerName(playerid)))
		{
	  		SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 0);
		    SetTimerEx("freze", 1500, 0, "i", playerid);
			SetPlayerPos(playerid, HouseInfo[h][hPosX1], HouseInfo[h][hPosY1], HouseInfo[h][hPosZ1]);
			SetPlayerInterior(playerid, HouseInfo[h][hInt]);
			SetPlayerVirtualWorld(playerid, h);
		    FirstSpawn[playerid] = 0;
			return 1;
		}
		else
		{
			SetPlayerPos(playerid, 1382.2604, -1622.6512, 14.2860);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		    SetTimerEx("freze", 1000, 0, "i", playerid);
			TogglePlayerControllable(playerid, 0);
			return 1;
		}
	}
	if(PlayerInfo[playerid][pSpawn] == 3)
	{
	    if(FirstSpawn[playerid] == 1)
 		{
			SetPlayerPos(playerid, PlayerInfo[playerid][pPosX], PlayerInfo[playerid][pPosY],PlayerInfo[playerid][pPosZ]);
	        SetPlayerInterior(playerid, PlayerInfo[playerid][pInterior]);
	        SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pVW]);
            FirstSpawn[playerid] = 0;
		    SetTimerEx("freze", 1000, 0, "i", playerid);
			TogglePlayerControllable(playerid, 0);
			return 1;
   		}
	    else
  		{
	    	SetPlayerPos(playerid,SpawnInfo[0][sPosX],SpawnInfo[0][sPosY],SpawnInfo[0][sPosZ]);
			SetPlayerFacingAngle(playerid,SpawnInfo[0][sRotZ]);
	    	SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
           	FirstSpawn[playerid] = 0;
		    SetTimerEx("freze", 1000, 0, "i", playerid);
			TogglePlayerControllable(playerid, 0);
           	return 1;
		}
	}
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	new string[155];
	if(PaintBallPlaying[playerid]==0)
	PlayerInfo[playerid][pDeath]++;
	Update(playerid,pDeathx);
//	Tele[playerid] = 1;
//    PlayerPosX[playerid] = OldPlayerPosX[playerid]+0.2;
//	PlayerPosY[playerid] = OldPlayerPosY[playerid]+0.2;
//	PlayerPosZ[playerid] = OldPlayerPosZ[playerid]+0.2;
//	SetTimerEx("UpdatePlayerPos", 7000, false, "i", playerid);
	Codel[playerid] = 0;
	instart[playerid] = 0;
   	TextDrawHideForPlayer(playerid, td_fuel[playerid]);
    TextDrawHideForPlayer(playerid, TextDrawVeh[playerid]);
	TextDrawHideForPlayer(playerid, Textdraw70[playerid]);
	TextDrawHideForPlayer(playerid, Textdraw71[playerid]);
	TextDrawHideForPlayer(playerid, Textdraw72[playerid]);
	TextDrawHideForPlayer(playerid, Textdraw69[playerid]);
	TextDrawHideForPlayer(playerid, Textdraw40[playerid]);
	TextDrawHideForPlayer(playerid, Textdraw39[playerid]);
	TextDrawHideForPlayer(playerid, Textdraw160[playerid]);
	TextDrawHideForPlayer(playerid, sState[playerid]);
	TextDrawHideForPlayer(playerid, Modelcar[playerid]);
	TextDrawHideForPlayer(playerid, Healthveh[playerid]);
	TextDrawHideForPlayer(playerid, heights[playerid]);
	TextDrawHideForPlayer(playerid, Gpscar[playerid]);
    PlayerInfo[playerid][pradio] = 0;
    CP[playerid] = 0;
 	DisablePlayerCheckpoint(playerid);
    DisablePlayerRaceCheckpoint(playerid);
    StopAudioStreamForPlayer(playerid);
    InTargeted[playerid] = 0;
   	Taced[playerid] = 0;
    FirstMove[playerid] = 1;
	CanMove[playerid] = 0;
	foreach(Player,b)
	if(PaintBallPlaying[b]>0)
		SendDeathMessageToPlayer(b, killerid, playerid, reason);

	if(IsValidDynamicObject(SmokeCropDuster[0][playerid])) DestroyDynamicObject(SmokeCropDuster[0][playerid]);
    if(IsValidDynamicObject(SmokeCropDuster[1][playerid])) DestroyDynamicObject(SmokeCropDuster[1][playerid]);
    if(IsValidDynamicObject(SmokeCropDuster[2][playerid])) DestroyDynamicObject(SmokeCropDuster[2][playerid]);
    if(IsValidDynamicObject(SmokeCropDuster[3][playerid])) DestroyDynamicObject(SmokeCropDuster[3][playerid]);
	if(IsValidPlayerObject(playerid,PlayerTac[playerid]))	DestroyPlayerObject(playerid,PlayerTac[playerid]);
   	if(IsValidPlayerObject(playerid,PlayerCameraTac[playerid])) DestroyPlayerObject(playerid,PlayerCameraTac[playerid]);
    if(OnJob[playerid] == 9)
	{
		cmd_over(playerid,string);
        CP[playerid] = 0;
  		DisablePlayerRaceCheckpoint(playerid);
		SetTimerEx("DestroyPapers",1000,false,"i",playerid);
	}
    if(BallHolder == playerid)
	RecreateBall();
	if(TeamBall[playerid] != 0)
	TeamBall[playerid] = 0;
    if(Decoding[playerid] == 1)
	{
	    Decoding[playerid] = 0;
	    KillTimer(DecoderTimer);
		HideDecoder(playerid);
		SendClientMessage(playerid, COLOR_NICERED, "Ai iesit din masina, decodorul a fost oprit!");
 	}
    if(GetPlayerVehicleID(playerid) != 0)
    KillTimer(timerkm[GetPlayerVehicleID(playerid)]);//omoram acel timer care masoara kilometrii deoarece nu mai e nici un sofer in ea
    if(killerid != INVALID_PLAYER_ID)
	{
	    if(PaintBallPlaying[playerid]!=0&&PaintBallPlaying[killerid]!=0)
	    {
	    	if(PaintBallPlaying[playerid]!=PaintBallPlaying[killerid])
	    	{
				PaintScore[killerid] ++;
				if(PaintScore[killerid] > PaintballWinnerKills)
				{
		        	PaintballWinner = killerid;
		        	PaintballWinnerKills = PaintScore[killerid];
                    format(string, sizeof(string), "* %s conduce cu %d fraguri.",PlayerName(killerid),PaintballWinnerKills);
					PainBallBroadCast(COLOR_WHITE, string);
				}
				format(string,sizeof(string),"~r~%s te-a omorat",PlayerName(killerid));
				GameTextForPlayer(playerid, string,3000,1);
				format(string,sizeof(string),"~r~l-ai omorat pe %s~n~~g~+50 HP",PlayerName(playerid));
				GameTextForPlayer(killerid, string,3000,1);
				format(string,sizeof(string),"%s l-a omorat la paintball pe %s",PlayerName(killerid),PlayerName(playerid));
				AdminsBroadCast(COLOR_GREEN, string,2);
				new Float:health;
			    GetPlayerHealth(killerid,health);
			    if (health < 100.0)
		        SetPlayerHealth(killerid, health+50);
		        else
	        	SetPlayerHealth(killerid, 150);
				return 1;
			}
		}

		new deathreason[40];
	    if(reason == 0) { deathreason = "cu pumnul"; }
	    if(reason == 1) { deathreason = "cu rozeta"; }
	    if(reason == 2) { deathreason = "cu o crosa"; }
	    if(reason == 3) { deathreason = "cu pulanul"; }
	    if(reason == 4) { deathreason = "cu cutitul"; }
	    if(reason == 5) { deathreason = "cu bata de baseball"; }
	    if(reason == 6) { deathreason = "cu lopata"; }
	    if(reason == 7) { deathreason = "cu tacul"; }
	    if(reason == 8) { deathreason = "cu katana"; }
	    if(reason == 9) { deathreason = "cu drujba"; }
	    if(reason == 10 || reason == 11 || reason == 12 || reason == 13) { deathreason = "cu dildo-ul"; }
	    if(reason == 14) { deathreason = "cu florile"; }
	    if(reason == 15) { deathreason = "cu bastonul"; }
	    if(reason == 16) { deathreason = "cu grenada"; }
	    if(reason == 17) { deathreason = "cu gaz lacrimogen"; }
	    if(reason == 18) { deathreason = "cu cocktail molotov"; }
	    if(reason == 22) { deathreason = "cu Glock"; }
	    if(reason == 23) { deathreason = "cu silencer-ul"; }
	    if(reason == 24) { deathreason = "cu Desert Eagle"; }
	    if(reason == 25) { deathreason = "cu ShotGun"; }
	    if(reason == 26) { deathreason = "cu Sawn-Off ShotGun"; }
	    if(reason == 27) { deathreason = "cu Combat ShotGun"; }
	    if(reason == 28) { deathreason = "cu Micro SMG"; }
	    if(reason == 29) { deathreason = "cu MP5"; }
	    if(reason == 30) { deathreason = "cu AK47"; }
	    if(reason == 31) { deathreason = "cu M4A1"; }
	    if(reason == 32) { deathreason = "cu Tec 9"; }
	    if(reason == 33) { deathreason = "cu Rifle"; }
	    if(reason == 34) { deathreason = "cu Sniper Rifle"; }
	    if(reason == 35) { deathreason = "cu RPG Launcher"; }
	    if(reason == 36) { deathreason = "cu Rocket Launcher"; }
	    if(reason == 37) { deathreason = "cu Flame Thrower"; }
	    if(reason == 38) { deathreason = "cu Mini Gun"; }
	    if(reason == 39) { deathreason = "cu Sticky nomn"; }
	    if(reason == 40) { deathreason = "cu Detonator"; }
	    if(reason == 41) { deathreason = "cu Spray Can"; }
	    if(reason == 42) { deathreason = "cu Extinctor"; }
	    if(reason == 43) { deathreason = "cu Camera"; }
	    if(reason == 46) { deathreason = "cu Parasuta"; }
	    if(reason == 47) { deathreason = "cu Fake Pistol"; }
	    if(reason == 49) { deathreason = "Drive By"; }
	    if(reason == 50) { deathreason = "Cu elicopterul"; }
	    else if(reason == 51) { deathreason = "intr-o Explozie"; }
	    format(string, sizeof(string),"[INFO]: %s(%d) A fost omorat de %s(%d) - %s", PlayerName(playerid),playerid,PlayerName(killerid),killerid,deathreason);
	    AdminsBroadCast(COLOR_GREEN, string,2);
	    format(string, sizeof(string),"[INFO]:Ai fost omorat de %s(%d) %s",PlayerName(killerid),killerid,deathreason);
		SendClientMessage(playerid,COLOR_RED,string);
		format(string, sizeof(string),"[INFO]: %s(%d) A fost omorat de %s(%d) - %s", PlayerName(playerid),playerid,PlayerName(killerid),killerid,deathreason);
		LoginQuit(string);
	    PlayerInfo[killerid][pCrime]++;
	    Update(killerid,pCrimex);
	    PlayerInfo[killerid][pKill]++;
	    Update(killerid,pKillx);

        if(PlayerInfo[playerid][pHeadValue] > 0)
		{
		    if(IsPlayerConnected(killerid))
		    {
		    	if(PlayerInfo[killerid][pLeader] == 8|| PlayerInfo[killerid][pMember]==8)
			   	{
       				if(GoChase[killerid] == playerid)
    				{
						GivePlayerCash(killerid, PlayerInfo[playerid][pHeadValue]);
						format(string,128,"<< Hitman %s a terminat contractul pe %s si a primit $%d >>",PlayerName(killerid),PlayerName(playerid),PlayerInfo[playerid][pHeadValue]);
						FactionsBroadCast(8, COLOR_YELLOW, string);
						PlayerInfo[playerid][pHeadValue] = 0;
						Update(playerid, pHeadValuex);
						undercover[killerid] = 0;
		     			foreach(Player,i)
      				    ShowPlayerNameTagForPlayer(i, killerid, 1);
      					SetPlayerSkin(killerid, PlayerInfo[killerid][pSkin]);
						TogglePlayerControllable(playerid, 1);
						GotHit[playerid] = 0;
						GetChased[playerid] = 999;
						GoChase[killerid] = 999;
  					}
				}
			}
		}
	    if(WarStarted != 0)
	    {
        	if(IsPlayerInArea(killerid,GangInfo[WarZone][zMinX],GangInfo[WarZone][zMaxX],GangInfo[WarZone][zMinY],GangInfo[WarZone][zMaxY]))
	        {
	            if(IsPlayerInArea(playerid,GangInfo[WarZone][zMinX],GangInfo[WarZone][zMaxX],GangInfo[WarZone][zMinY],GangInfo[WarZone][zMaxY]))
	        	{
					if(PlayerInfo[killerid][pMember]==WarF)
					WarPoints[WarF]++;
					else if(PlayerInfo[killerid][pMember]==WarF1)
					WarPoints[WarF1]++;
		        	GivePlayerCash(killerid, 300);
		        	GivePlayerCash(playerid, -300);
					GameTextForPlayer(playerid, "~r~-$300", 3000, 1);
					GameTextForPlayer(killerid, "~g~+$300", 3000, 1);
					format(string, sizeof(string), "{a9c4e4}War: {FFFFFF}Ai fost omorat de {1580EA}%s{FFFFFF} si ai pierdut $300!", PlayerName(killerid));
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "{a9c4e4}War: {FFFFFF}L-ai omorat pe {1580EA}%s{FFFFFF} si ai castigat $300!", PlayerName(playerid));
					SendClientMessage(killerid, COLOR_WHITE, string);
				}
			}
		}
    }
	else
	{
	    if(PaintBallPlaying[playerid]>0)
 		GameTextForPlayer(playerid, "~r~ai murit",3000,1);
	    new text[30];
	    if(reason == 51) { text = "intr-o Explozie"; }
	    else if(reason == 53) { text = "inecat"; }
	    else if(reason == 54) { text = "sinucidere"; }
	    else { text = "Intr-un accident"; }
	    format(string, sizeof(string),"[INFO]: %s(%d) A murit %s", PlayerName(playerid),playerid,text);
	    AdminsBroadCast(COLOR_GREEN, string,2);
		LoginQuit(string);
	}
    if(PaintBallPlaying[playerid]>0) return 1;
	if(killerid != INVALID_PLAYER_ID)
    if(PaintBallPlaying[killerid]>0) return 1;

	if(GetPlayerWantedLevel(playerid) > 0)
	{
	    if(GetPlayerWantedLevel(playerid) >= 1 && GetPlayerWantedLevel(playerid) < 5)
	    {
		 	new price = GetPlayerWantedLevel(playerid) * 300;
			if(killerid != INVALID_PLAYER_ID)
			{
				format(string, sizeof(string), "~w~Suspectul a fost~r~omorat~n~Bonus~g~$%d", price);
				GameTextForPlayer(killerid, string, 5000, 1);
				GivePlayerCash(killerid, price);
				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
				GivePlayerCash(playerid, - price);
				PlayerInfo[playerid][pWantedDeaths] += 1;
				Update(playerid, pWantedDeathsx);
				PlayerInfo[playerid][pJail] = 1;
				Update(playerid, pJailx);
			    PlayerInfo[playerid][pJailTime] = GetPlayerWantedLevel(playerid)*300;
		    	Update(playerid, pJailTimex);
			 	format(string, sizeof(string), "* Esti in inchisoare pentru %d secunde si ai pierdut $%d pentru ca ai fost omorat.", PlayerInfo[playerid][pJailTime], price);
			   	SendClientMessage(playerid, COLOR_LIGHTRED, string);
				PlayerInfo[playerid][pWanted] = 0;
				Update(playerid, pWantedx);
				SetPlayerWantedLevel(playerid, 0);
				WantedLeft[playerid] = 0;
   			}
 			else
			{
				PlayerInfo[playerid][pWantedDeaths] += 1;
				Update(playerid, pWantedDeathsx);
				PlayerInfo[playerid][pJail] = 1;
				Update(playerid, pJailx);
			    PlayerInfo[playerid][pJailTime] = GetPlayerWantedLevel(playerid)*300;
		    	Update(playerid, pJailTimex);
			 	format(string, sizeof(string), "* Esti in inchisoare pentru %d secunde si ai pierdut $%d pentru ca ai fost prins.", PlayerInfo[playerid][pJailTime], price);
			   	SendClientMessage(playerid, COLOR_LIGHTRED, string);
				PlayerInfo[playerid][pWanted] = 0;
				Update(playerid, pWantedx);
				SetPlayerWantedLevel(playerid, 0);
				WantedLeft[playerid] = 0;
			}
		}
		else if(GetPlayerWantedLevel(playerid) > 4)
		{
		    new price = GetPlayerWantedLevel(playerid) * 500;
		    if(killerid != INVALID_PLAYER_ID)
		    {
				format(string, sizeof(string), "~w~Suspectul a fost~r~omorat~n~Bonus~g~$%d", price);
				GameTextForPlayer(killerid, string, 5000, 1);
				GivePlayerCash(killerid, price);
				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
				GivePlayerCash(playerid, - price);
				PlayerInfo[playerid][pWantedDeaths] += 1;
				Update(playerid, pWantedDeathsx);
				PlayerInfo[playerid][pJail] = 2;
				Update(playerid, pJailx);
				PlayerInfo[playerid][pJailTime] = GetPlayerWantedLevel(playerid)*450;
	  			Update(playerid, pJailTimex);
				format(string, sizeof(string), "* Esti in inchisoare pentru %d secunde si ai pierdut $%d pentru ca te-a prins un politist.", PlayerInfo[playerid][pJailTime], price);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				PlayerInfo[playerid][pWanted] = 0;
				Update(playerid, pWantedx);
				SetPlayerWantedLevel(playerid, 0);
			}
			else
			{
				PlayerInfo[playerid][pWantedDeaths] += 1;
				Update(playerid, pWantedDeathsx);
				PlayerInfo[playerid][pJail] = 2;
				Update(playerid, pJailx);
			   	PlayerInfo[playerid][pJailTime] =  GetPlayerWantedLevel(playerid)*450;
			   	Update(playerid, pJailTimex);
				format(string, sizeof(string), "* Esti in inchisoare pentru %d secunde si ai pierdut $%d pentru ca te-a prins un politist.", PlayerInfo[playerid][pJailTime], price);
			   	SendClientMessage(playerid, COLOR_LIGHTRED, string);
			   	PlayerInfo[playerid][pWanted] = 0;
				Update(playerid, pWantedx);
				SetPlayerWantedLevel(playerid, 0);
			}
		}
 	}
	if(killerid != INVALID_PLAYER_ID)
	{
	    if(PlayerInfo[killerid][pJailTime]>2) return 1;
        if(IsACop(killerid))return 1;
	    if(IsAMafia(killerid) && IsAMafia(playerid)) return 1;
	    if((PlayerInfo[killerid][pMember] == 8 || PlayerInfo[killerid][pLeader] == 8) && GoChase[killerid] == playerid) return 1;
     	if(IsACop(playerid) && GetPlayerWantedLevel(killerid) == 0)
        {
			PlayerInfo[killerid][pWanted] +=2;
	    	Update(killerid,pWantedx);
	    	SetPlayerWantedLevel(killerid, GetPlayerWantedLevel(killerid) + 2);
			SendClientMessage(killerid,COLOR_RED, "[INFO]: Ai comis o crima. Ai omorat un Politist");
			format(string, sizeof(string),"Wanted Level: %d", GetPlayerWantedLevel(killerid));
	   		SendClientMessage(killerid,COLOR_YELLOW, string);
	   		format(string, sizeof(string), "%s[%d] comis o crima: A omorat un Politist. Wanted: %d",PlayerName(killerid),killerid,GetPlayerWantedLevel(killerid));
			SendDepartamentMessage(COLOR_LIGHTRED, string);
			format(PlayerInfo[killerid][pCrima], 128, "Ucidere Politist");
            Update(killerid,pCrimax);
			foreach(Player,i)
			{
			    if(IsACop(i))
				PlayCrimeReportForPlayer(killerid, i, 17);
			}
	   		return 1;
		}
		if(GetPlayerWantedLevel(killerid) == 0)
        {
			PlayerInfo[killerid][pWanted] +=2;
	    	Update(killerid,pWantedx);
	    	SetPlayerWantedLevel(killerid, GetPlayerWantedLevel(killerid) + 2);
			SendClientMessage(killerid,COLOR_RED, "[INFO]: Ai comis o crima. Prima Victima");
			format(string, sizeof(string),"Wanted Level: %d", GetPlayerWantedLevel(killerid));
	   		SendClientMessage(killerid,COLOR_YELLOW, string);
	   		format(string, sizeof(string), "%s[%d] comis o crima: Prima Victima. Wanted: %d",PlayerName(killerid),killerid,GetPlayerWantedLevel(killerid));
			SendDepartamentMessage(COLOR_LIGHTRED, string);
			format(PlayerInfo[killerid][pCrima], 128, "Prima Ucidere");
            Update(killerid,pCrimax);
			foreach(Player,i)
			{
			    if(IsACop(i))
				PlayCrimeReportForPlayer(killerid, i, 17);
			}
	   		return 1;
		}
		else
		{
 			PlayerInfo[killerid][pWanted] +=1;
	    	Update(killerid,pWantedx);
	    	SetPlayerWantedLevel(killerid, GetPlayerWantedLevel(killerid) + 1);
			SendClientMessage(killerid,COLOR_RED, "[INFO]: Ai comis o crima. Ai ucis un om");
			format(string, sizeof(string),"Wanted Level: %d", GetPlayerWantedLevel(killerid));
	   		SendClientMessage(killerid,COLOR_YELLOW, string);
	   		format(string, sizeof(string), "%s[%d] comis o crima: A ucis un om. Wanted: %d",PlayerName(killerid),killerid,GetPlayerWantedLevel(killerid));
			SendDepartamentMessage(COLOR_LIGHTRED, string);
			format(PlayerInfo[killerid][pCrima], 128, "Ucidere");
            Update(killerid,pCrimax);
			foreach(Player,i)
			{
			    if(IsACop(i))
				PlayCrimeReportForPlayer(killerid, i, 17);
			}
	   		return 1;
 		}
	}
    //SpawnPlayer(playerid);
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
    capacitate[vehicleid] = 0;
	if(vehicleid == SanieCar[0])
    LinkVehicleToInterior(SanieCar[0], 2);
	if(vehicleid == SanieCar[1])
    LinkVehicleToInterior(SanieCar[1], 2);
	if(vehicleid == SanieCar[2])
    LinkVehicleToInterior(SanieCar[2], 2);
	if(vehicleid == SanieCar[3])
    LinkVehicleToInterior(SanieCar[3], 2);
    VehicleOnJob[vehicleid] = 0;
    EncodeVehicle(vehicleid);
    GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF);
    VehicleAlarm[vehicleid]= 0;
	VehicleLights[vehicleid]= 0;
	VehicleBonnet[vehicleid]= 0;
	VehicleBoot[vehicleid]= 0;
	VehicleObjective[vehicleid]= 0;
	VehicleEngine[vehicleid]= 0;
    if(IsAnTaxiCar(vehicleid))
   	{
   		AttachDynamicObjectToVehicle(taxisign2, taxicar[7], 0.00170, -0.17540, 0.91590, 0.0,  0.0, 0.0);
		AttachDynamicObjectToVehicle(taxisign1, taxicar[8], 0.00170, -0.17540, 0.91590, 0.0,  0.0, 0.0);
		AttachDynamicObjectToVehicle(taxisign3, taxicar[9], -0.03540,-0.21560, 0.91430,0.0,  0.0, 0.0);
		AttachDynamicObjectToVehicle(taxisign4, taxicar[10], 0.06080, -0.57490, 1.32640,0.0,  0.0, 0.0);
	}
	if(!OwnedVeh(vehicleid))
	{
		if(VehLocked[vehicleid] == 1)
		{
			VehLocked[vehicleid] = 0;
		    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, 			 bonnet,boot,objective);
			SetVehicleParamsEx(vehicleid, engine, lights, alarm, VEHICLE_PARAMS_OFF, bonnet, boot, objective);
		}
	}
 	if(DealerVeh(vehicleid) != 0)
	{
	    new dCreated = DealerVeh(vehicleid);
		DestroyVehicle(vehicleid);
		new
		NewdVeh = CreateVehicle(dInfo[dCreated][dModel], dInfo[dCreated][dPosX], dInfo[dCreated][dPosY], dInfo[dCreated][dPosZ], dInfo[dCreated][dPosA], dInfo[dCreated][dColor1], dInfo[dCreated][dColor2], 500000);
        SetVehicleNumberPlate(NewdVeh,""#SERVERNAME" Dealer");
	}
	if(OwnedVeh(vehicleid) != 0)
	{
	    new vCreated = OwnedVeh(vehicleid);
		DestroyVehicle(vehicleid);
		new
		NewVeh = CreateVehicle(vInfo[vCreated][vModel], vInfo[vCreated][vPosX], vInfo[vCreated][vPosY], vInfo[vCreated][vPosZ], vInfo[vCreated][vPosA], vInfo[vCreated][vColor1], vInfo[vCreated][vColor2], 500000);
        SetVehicleNumberPlate(NewVeh, vInfo[vCreated][vPlate]);
        ChangeVehiclePaintjob(NewVeh, vInfo[vCreated][vPaintJ]);
		VehiclePass[NewVeh] = vInfo[vCreated][vCarCode];

		AddVehicleComponent(NewVeh, vInfo[vCreated][vComponent0]);
	    AddVehicleComponent(NewVeh, vInfo[vCreated][vComponent1]);
	    AddVehicleComponent(NewVeh, vInfo[vCreated][vComponent2]);
	    AddVehicleComponent(NewVeh, vInfo[vCreated][vComponent3]);
	    AddVehicleComponent(NewVeh, vInfo[vCreated][vComponent4]);
	    AddVehicleComponent(NewVeh, vInfo[vCreated][vComponent5]);
	    AddVehicleComponent(NewVeh, vInfo[vCreated][vComponent6]);
	    AddVehicleComponent(NewVeh, vInfo[vCreated][vComponent7]);
	    AddVehicleComponent(NewVeh, vInfo[vCreated][vComponent8]);
	    AddVehicleComponent(NewVeh, vInfo[vCreated][vComponent9]);
	    AddVehicleComponent(NewVeh, vInfo[vCreated][vComponent10]);
	    AddVehicleComponent(NewVeh, vInfo[vCreated][vComponent11]);
	    AddVehicleComponent(NewVeh, vInfo[vCreated][vComponent12]);
	    AddVehicleComponent(NewVeh, vInfo[vCreated][vComponent13]);
  //      if(strmatch(vInfo[OwnedVeh(NewVeh)][vOwner], "Unbought"))
    //    {
      //      format(string, sizeof(string), "{00FF1A}De Vanzare\n{09DFF7}Marca: %s\n{FFFFFF}Pret: %d\n{00FF66}/BuyCar sau /LeasingBuy",GetVehicleName(GetVehicleModel(NewVeh)),vInfo[OwnedVeh(NewVeh)][vPrice]);
		//	vehiclet[NewVeh] = Create3DTextLabel( string, COLOR_WHITE, 0.0, 0.0, 0.0, 20.0, 0, 1);
		//	Attach3DTextLabelToVehicle(vehiclet[NewVeh] , NewVeh, 0.0, 0.0, 0.0);
        //}
	    /*if(vInfo[OwnedVeh(NewVeh)][vNeon] != 0 || vInfo[OwnedVeh(NewVeh)][vLights] != 0)
	    {
     		if(IsValidObject(ObjectSelect[NewVeh][0]) || IsValidObject(ObjectSelect[NewVeh][1]))
			{
				DestroyObject(ObjectSelect[NewVeh][0]);
				DestroyObject(ObjectSelect[NewVeh][1]);
			}
  			//neon
			NeonObject[NewVeh][0]=vInfo[OwnedVeh(NewVeh)][vNeon];
			ObjectSelect[NewVeh][0] = CreateObject(NeonObject[NewVeh][0],0,0,0,0,0,0);
	        ObjectSelect[NewVeh][1] = CreateObject(NeonObject[NewVeh][0],0,0,0,0,0,0);
	        AttachObjectToVehicle(ObjectSelect[NewVeh][0], NewVeh, -0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
	        AttachObjectToVehicle(ObjectSelect[NewVeh][1], NewVeh, 0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
			//luights
	        NeonObject[NewVeh][0]=vInfo[OwnedVeh(NewVeh)][vNeon];
			ObjectSelect[NewVeh][2] = CreateObject(NeonObject[NewVeh][1],0,0,0,0,0,0);
	        ObjectSelect[NewVeh][3] = CreateObject(NeonObject[NewVeh][1],0,0,0,0,0,0);
			AttachObjectToVehicle(ObjectSelect[NewVeh][2], NewVeh, -0.8, 2.25, 0.0, 0.0, 0.0, 180.0);
	        AttachObjectToVehicle(ObjectSelect[NewVeh][3], NewVeh, 0.8, 2.25, 0.0, 0.0, 0.0, 180.0);
		}*/
	}
    if(IsAnDerbyCar(vehicleid))
	{
	    LinkVehicleToInterior(derbycar[19], 4);
	    LinkVehicleToInterior(derbycar[20], 4);
	    LinkVehicleToInterior(derbycar[21], 4);
	    LinkVehicleToInterior(derbycar[22], 4);
	    LinkVehicleToInterior(derbycar[23], 4);
	    LinkVehicleToInterior(derbycar[24], 4);
	    LinkVehicleToInterior(derbycar[25], 4);
	    LinkVehicleToInterior(derbycar[26], 4);
	    LinkVehicleToInterior(derbycar[27], 4);
	    LinkVehicleToInterior(derbycar[28], 4);
	    LinkVehicleToInterior(derbycar[13], 7);
	    LinkVehicleToInterior(derbycar[14], 7);
	    LinkVehicleToInterior(derbycar[15], 7);
	    LinkVehicleToInterior(derbycar[16], 7);
	    LinkVehicleToInterior(derbycar[17], 7);
	    LinkVehicleToInterior(derbycar[18], 7);
	    LinkVehicleToInterior(derbycar[6], 15);
	    LinkVehicleToInterior(derbycar[7], 15);
	    LinkVehicleToInterior(derbycar[8], 15);
	    LinkVehicleToInterior(derbycar[9], 15);
	    LinkVehicleToInterior(derbycar[10], 15);
	    LinkVehicleToInterior(derbycar[11], 15);
	    LinkVehicleToInterior(derbycar[12], 15);
	   	LinkVehicleToInterior(derbycar[0], 14);
		LinkVehicleToInterior(derbycar[1], 14);
		LinkVehicleToInterior(derbycar[2], 14);
		LinkVehicleToInterior(derbycar[3], 14);
		LinkVehicleToInterior(derbycar[4], 14);
		LinkVehicleToInterior(derbycar[5], 14);
		return 1;
 	}
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
    FrenodeMano[vehicleid] = 0;
	return 1;
}
public OnPlayerText(playerid, text[])
{
	new string[195];
	new idx;
	new tmp[256];
	tmp = strtok(text, idx);
	format(string,sizeof(string), "%s: %s[%d] [chat] -> %s",CurrentTimeStamps(),PlayerName(playerid),playerid,text);
	printf(string);
	if(PlayerInfo[playerid][pAdmin] == 0)
	ChatTexted[playerid] ++;
  	if(ChatTexted[playerid] > 3)
 	{
 	    SendClientMessage(playerid, COLOR_LIGHTRED, "Fara SPAM!");
		return 0;
	}
    if(TutorialTime[playerid] > 0)
	{
	 	SCM(playerid,COLOR_LIGHTBLUE,"Esti in tutorial nu poti scrie nimic!");
	 	return 0;
	}
    if(gLogged[playerid] == 0)
	{
	 	SCM(playerid,COLOR_LIGHTBLUE,"Nu esti logat nu poti vorbi");
	 	return 0;
	}
	if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(text) || FindIP(text))
	{
	    format(string, sizeof(string), "%s[%d] a facut reclama pe chat: %s",PlayerName(playerid),playerid, text);
	    AdminsBroadCast(COLOR_RED,string,7);
	    SCM(playerid,-1,string);
	    HackLog(string);
	    return 0;
	}
	if(PlayerInfo[playerid][pMute] >0)
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "ai mute!");
		return 0;
	}
    if(TalkingLive[playerid] != 999)
	{
		if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
 	    format(string, sizeof(string), "[LIVE]:Reporter %s: %s", PlayerName(playerid), text);
  		else
 	    format(string, sizeof(string), "[LIVE]:Intervievat %s: %s", PlayerName(playerid), text);
		OOCNews(COLOR_LIGHTGREEN, string);
		return 0;
	}
	if(CallLawyer[playerid] == 111)
	{
		if (strfind(text, "da", true) != -1)
		{
		    format(string, sizeof(string), "** %s are nevoie de un avocat in puscarie.", PlayerName(playerid));
	    	SendJobMessage(2, COLOR_LIGHTBLUE, string);
	    	SendJobMessage(2, COLOR_LIGHTBLUE, "* Cand ajungi la puscarie, intreaba un politist /accept lawyer.");
	    	SendClientMessage(playerid, COLOR_LIGHTRED, "Un mesaj a fost trimis avocatilor.");
	    	WantLawyer[playerid] = 0;
			CallLawyer[playerid] = 0;
	    	return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Nu sunt avocati disponibili.");
		    WantLawyer[playerid] = 0;
			CallLawyer[playerid] = 0;
		    return 0;
		}
	}
   	if(Mobile[playerid] != 999)
	{
		text[0] = toupper(text[0]);
		format(string, sizeof(string), "%s spune (telefon): %s", PlayerName(playerid), text);
		ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
 		if(Mobile[playerid] == 912)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "URGENTE: Nu inteleg ce ai spus!");
				return 0;
			}
			SendClientMessage(playerid, COLOR_DBLUE, "PR: Daca stii numele suspectului, scrie numele acum. Daca nu, scrie 'nu'.");
			Mobile[playerid] = 913;
			return 0;
		}
		if(Mobile[playerid] == 112)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "URGENTE: Nu inteleg ce ai spus! Politia sau SMURD?");
				return 0;
			}
			else if ((strcmp("politia", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("politia")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "URGENTE: Va transfer catre linia de urgente PR, va rog sa asteptati.");
				Mobile[playerid] = 912;
				SendClientMessage(playerid, COLOR_DBLUE, "Politia Romana: Va rog descrieti incidentul.");
				return 0;
			}
			else if ((strcmp("smurd", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("smurd")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: trimitem un echipaz  de Paramedici, asteptati.");
				Mobile[playerid] = 914;
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Dispecerat: Va rog descrieti incidentul.");
				return 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "URGENTE: Nu inteleg ce ai spus! Politia sau SMURD?");
				return 0;
			}
		}
		if(Mobile[playerid] == 914)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Dispecerat: Nu inteleg ce ai spus!");
				return 0;
			}
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Dispecerat: Am alertat toate unitatile din zona.");
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Va multumim pentru raportarea incidentului");
			format(string, sizeof(string), "Dispecerat: Toate unitatile IA: Reclamant: %s",PlayerName(playerid));
			SendDepartamentMessage(TEAM_CYAN_COLOR, string);
			format(string, sizeof(string), "Dispecerat: Incident: %s",text);
			FactionsBroadCast(1, TEAM_CYAN_COLOR, string);
			SendClientMessage(playerid, COLOR_GRAD2, "   A inchis...");
			Mobile[playerid] = 999;
			return 0;
		}
		if(Mobile[playerid] == 913)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "URGENTE: Nu inteleg ce ai spus!");
				return 0;
			}
			if ((strcmp("nu", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("nu")))
			{
				SendClientMessage(playerid, COLOR_DBLUE, "PR: Am alertat toate unitatile din zona.");
				SendClientMessage(playerid, COLOR_DBLUE, "Va multumim pentru raportarea incidentului");
				format(string, sizeof(string), "HQ: Toate unitatile APB: Reclamant: %s",PlayerName(playerid));
				FactionsBroadCast(1, COLOR_DBLUE, string);
				FactionsBroadCast(1, COLOR_DBLUE, "HQ: Crima: necunoscuta, Suspect: Necunoscut");
				SendClientMessage(playerid, COLOR_GRAD2, "   A inchis...");
				Mobile[playerid] = 999;
				return 0;
			}
			new badguy;
			//badguy = strval(tmp);
			badguy = ReturnUser(tmp);
			if (IsPlayerConnected(badguy))
			{
			    if(badguy != INVALID_PLAYER_ID)
			    {
					if (IsACop(badguy))
					{
						SendClientMessage(playerid, COLOR_DBLUE, "PR: Va trebui sa iei legatura cu autoritatile locale. Aceasta este o linie de urgente!");
						SendClientMessage(playerid, COLOR_GRAD2, "A inchis...");
						Mobile[playerid] = 999;
						return 0;
					}
					if (GetPlayerWantedLevel(badguy) > 0)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "PR: Politia stie deja de acest caz!");
						SendClientMessage(playerid, COLOR_GRAD2, "A inchis...");
						Mobile[playerid] = 999;
						return 0;
					}
					if (badguy == playerid)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "PR: Aceasta este o linie de urgente!");
						SendClientMessage(playerid, COLOR_GRAD2, "A inchis...");
						Mobile[playerid] = 999;
						return 0;
					}
					SendClientMessage(playerid, COLOR_DBLUE, "PR: Am alertat toate unitatile din zona.");
					SendClientMessage(playerid, COLOR_DBLUE, "Va multumim pentru raportarea incidentului.");
					format(string, sizeof(string), "HQ: Toate unitatile Agresor: %s",PlayerName(badguy));
					FactionsBroadCast(1, COLOR_DBLUE, string);
    				SendClientMessage(playerid, COLOR_GRAD2, "   A inchis...");
					foreach(Player,i)
					{
					    if(IsACop(i)) PlayCrimeReportForPlayer(i, badguy, 16);
					}
					Mobile[playerid] = 999;
					return 0;
				}//invalid id
				return 0;
			}//not connected
			else
			{
				format(string, sizeof(string), "PR: Nu am nicio informatie asupra lui %s, sunteti sigur ca acesta este numele corect?",tmp);
				SendClientMessage(playerid, COLOR_DBLUE, string);
				return 0;
			}
		}

		if(IsPlayerConnected(Mobile[playerid]))
		{
		    if(Mobile[Mobile[playerid]] == playerid)
  			SendClientMessage(Mobile[playerid], COLOR_YELLOW,string);
			foreach(Player,i)
			if(PlayerSledID[i]==playerid&&PlayerSledTime[i]==10)
  			SendClientMessage(i, COLOR_YELLOW,string);
  		}
		else
		{
			SendClientMessage(playerid, COLOR_YELLOW,"Nu este nimeni la telefon...Telefonul se inchide");
			Mobile[playerid] = 999;
		}
		if(Masked[playerid] == 1)
		{
 			format(string, sizeof(string), "{FF8040}(Necunoscut) spune:{FF8000} %s", text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			return 1;
		}
		return 0;
	}

	if(MarriageCeremoney[playerid] > 0)
	{
 	    if ((strcmp("da", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("da")))
		{
		    if(GotProposedBy[playerid] < 999)
		    {
			    if(IsPlayerConnected(GotProposedBy[playerid]))
				{
				    format(string, sizeof(string), "Preot: %s, vrei sa iei in casatorie pe %s? (scrie 'da', orice altceva va anula casatoria).", PlayerName(GotProposedBy[playerid]),PlayerName(GotProposedBy[playerid]));
					SendClientMessage(GotProposedBy[playerid], COLOR_WHITE, string);
					MarriageCeremoney[GotProposedBy[playerid]] = 1;
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
				    return 0;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        GotProposedBy[playerid] = 999;
			        return 0;
			    }
			}
			else if(ProposedTo[playerid] < 999)
			{
			    if(IsPlayerConnected(ProposedTo[playerid]))
				{
					if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "Preot: %s si %s sunteti acum sot si sotie..., poti saruta mireasa.", PlayerName(playerid), PlayerName(ProposedTo[playerid]));
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Preot: %s si %s sunteti acum sot si sotie..., poti saruta mirele.", PlayerName(ProposedTo[playerid]), PlayerName(playerid));
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Stirile Los Santos: Avem un nou cuplu frumos, %s si %s s-au casatorit!", PlayerName(playerid), PlayerName(ProposedTo[playerid]));
						OOCNews(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 1)
					{
					    format(string, sizeof(string), "Preot: %s si %s sunteti acum sot si sotie..., poti saruta mireasa.", PlayerName(playerid), PlayerName(ProposedTo[playerid]));
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Preot: %s si %s sunteti acum sot si sotie..., poti saruta mirele.", PlayerName(ProposedTo[playerid]), PlayerName(playerid));
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Stirile Los Santos: Avem un nou cuplu de gay, %s si %s s-au casatorit!", PlayerName(playerid), PlayerName(ProposedTo[playerid]));
						OOCNews(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
					    format(string, sizeof(string), "Preot: %s si %s sunteti acum sot si sotie..., poti saruta mireasa.", PlayerName(playerid), PlayerName(ProposedTo[playerid]));
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Preot: %s si %s sunteti acum sot si sotie..., poti saruta mireasa.", PlayerName(ProposedTo[playerid]), PlayerName(playerid));
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Stirile Los Santos: Avem un nou cuplu lesbian, %s si %s s-au casatorit!", PlayerName(playerid), PlayerName(ProposedTo[playerid]));
						OOCNews(COLOR_WHITE, string);
					}
					//MarriageCeremoney[ProposedTo[playerid]] = 1;
					MarriageCeremoney[ProposedTo[playerid]] = 0;
					MarriageCeremoney[playerid] = 0;
					strmid(PlayerInfo[ProposedTo[playerid]][pMarriedTo], PlayerName(playerid), 0, strlen(string), 255);
					strmid(PlayerInfo[playerid][pMarriedTo], PlayerName(ProposedTo[playerid]), 0, strlen(string), 255);
					GivePlayerCash(playerid, - 100000);
					Update(playerid, pMarriedTox);
					Update(ProposedTo[playerid], pMarriedTox);
					PlayerInfo[ProposedTo[playerid]][pHouse] = PlayerInfo[playerid][pHouse];
					PlayerInfo[ProposedTo[playerid]][pBiz] = PlayerInfo[playerid][pBiz];
					Update(playerid, pBizx);
					ProposedTo[playerid] = 999;
					MarriageCeremoney[playerid] = 0;
				    return 0;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        ProposedTo[playerid] = 999;
			        return 0;
			    }
			}
		}
		else
		{
		    if(GotProposedBy[playerid] < 999)
		    {
				if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					format(string, sizeof(string), "* Nu ai vrut sa te casatoresti cu %s, nu ai spus 'da' cand trebuia.",PlayerName(GotProposedBy[playerid]));
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				    format(string, sizeof(string), "* %s nu a vrut sa se casatoreasca cu tine, nu a spus 'da' cand trebuia.",PlayerName(playerid));
				    SendClientMessage(GotProposedBy[playerid], COLOR_YELLOW, string);
				    return 0;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        GotProposedBy[playerid] = 999;
			        return 0;
			    }
		    }
		    else if(ProposedTo[playerid] < 999)
			{
			    if(IsPlayerConnected(ProposedTo[playerid]))
				{
					format(string, sizeof(string), "* Nu ai vrut sa te casatoresti cu %s, nu ai spus 'da' cand trebuia.",PlayerName(GotProposedBy[playerid]));
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				    format(string, sizeof(string), "* %s nu a vrut sa se casatoreasca cu tine, nu a spus 'da' cand trebuia.",PlayerName(playerid));
				    SendClientMessage(ProposedTo[playerid], COLOR_YELLOW, string);
				    return 0;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        ProposedTo[playerid] = 999;
			        return 0;
			    }
			}
		}
	    return 0;
	}

	if(Masked[playerid]==0)
	format(string, sizeof(string), "{FF8040}%s spune:{00FFFF} %s", PlayerName(playerid), text);
	else
	format(string, sizeof(string), "{FF8040}Necunoscut spune:{00FFFF} %s", text);
	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	SetPlayerChatBubble(playerid, text, 0xa9c4e4FF, 20.0, 10000);


	return 0;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	new string[256];
	new vehicles = GetVehicleModel(vehicleid);
	if(VehLocked[vehicleid] == 1)
	{
    	if(OwnedVeh(vehicleid) && strmatch(vInfo[OwnedVeh(vehicleid)][vOwner],  PlayerName(playerid)))
		GameTextForPlayer(playerid, "~b~Lock", 1500, 3);
		else
 		GameTextForPlayer(playerid, "~r~Lock", 1500, 3);
 	}

	if(OwnedVeh(vehicleid))
	{
	    if(vInfo[OwnedVeh(vehicleid)][vLocked] == 1)
	    {
    		TogglePlayerControllable(playerid, 1);
	        GameTextForPlayer(playerid, "~b~Lock", 1500, 3);
	    }
     	if(VehicleKM[vehicleid]+2 < vInfo[OwnedVeh(vehicleid)][vVodo])
	    {
	    	VehicleKM[vehicleid] = vInfo[OwnedVeh(vehicleid)][vVodo];
 			vUpdate(OwnedVeh(vehicleid), vVodox);
	   	}
 		format(string,sizeof(string),"Te urci in %s (%d)   Owner: %s",GetVehicleName(vehicles), vehicleid, vInfo[OwnedVeh(vehicleid)][vOwner]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(DealerVeh(vehicleid))
	{
		format(string,sizeof(string),"Te urci in %s (%d)   Owner: "#SERVERNAME" Dealer",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(BoatJ[0] == vehicleid || BoatJ[1] == vehicleid || BoatJ[2] == vehicleid || BoatJ[3] == vehicleid || BoatJ[4] == vehicleid)
	{
	   	format(string,sizeof(string),"Te urci in %s (%d)   Owner: Los Santos Docks",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(boatsi == vehicleid || boatsi1 == vehicleid || planesi == vehicleid || planesi1 == vehicleid)
	{
	   	format(string,sizeof(string),"Te urci in %s (%d)   Owner: DMW",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(drug1 == vehicleid || drug2 == vehicleid || drug3 == vehicleid || drug4 == vehicleid || drug5 == vehicleid)
	{
	   	format(string,sizeof(string),"Te urci in %s (%d)   Owner: The State",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(autobuz == vehicleid || autobuz1 == vehicleid || autobuz2 == vehicleid || autobuz3 == vehicleid)
	{
	   	format(string,sizeof(string),"Te urci in %s (%d)   Owner: Bus Driver",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(gascar1 == vehicleid || gascar2 == vehicleid || gascar3 == vehicleid || gascar4 == vehicleid)
	{
	   	format(string,sizeof(string),"Te urci in %s (%d)   Owner: Gas Collector",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(IsAnAmbulance(vehicleid))
	{
	   	format(string,sizeof(string),"Te urci in %s (%d)   Owner: L.S.M.D.",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(cutter == vehicleid || cutter2 == vehicleid || cutter3 == vehicleid || cutter4 == vehicleid)
    {
	   	format(string,sizeof(string),"Te urci in %s (%d)   Owner: Taietor de iarba",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(petroltank4 == vehicleid || petroltank3 == vehicleid || petroltank2 == vehicleid || petroltank1 == vehicleid || petrol1 == vehicleid || petrol4 == vehicleid || petrol3 == vehicleid || petrol2 == vehicleid || petrol1 == vehicleid)
	{
		format(string,sizeof(string),"Te urci in %s (%d)   Owner: Petrol Company",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
 	}
	else if(fastfood0 == vehicleid || fastfood1 == vehicleid || fastfood2 == vehicleid || fastfood3 == vehicleid || fastfood4 == vehicleid || fastfood5 == vehicleid)
	{
		format(string,sizeof(string),"Te urci in %s (%d)   Owner: Fast Food",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
 	}
	else if(farmer0 == vehicleid || trailerfarm0 == vehicleid || trailerfarm4 == vehicleid || trailerfarm3 == vehicleid || trailerfarm2 == vehicleid || trailerfarm1 == vehicleid || farmer1 == vehicleid || farmer2 == vehicleid || farmer3 == vehicleid || farmer4 == vehicleid)
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: Farmer",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
 	}
	else if(fuel9 == vehicleid || fuel8 == vehicleid || fuel7 == vehicleid || fuel0 == vehicleid || fuel1 == vehicleid || fuel2 == vehicleid || fuel3 == vehicleid || fuel4 == vehicleid || fuel5 == vehicleid || fuel6 == vehicleid)
    {
	   	format(string,sizeof(string),"Te urci in %s (%d)   Owner: Xommer Company",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(swep1 == vehicleid || swep2 == vehicleid || swep3 == vehicleid || swep4 == vehicleid || swep5 == vehicleid || swep6 == vehicleid)
    {
	   	format(string,sizeof(string),"Te urci in %s (%d)   Owner: Sweeper",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(tcc1 == vehicleid || tcc2 == vehicleid || tcc3 == vehicleid || tcc5 == vehicleid || tcc4 == vehicleid || tcc6 == vehicleid || tcc7 == vehicleid)
    {
	   	format(string,sizeof(string),"Te urci in %s (%d)   Owner: T.C.C",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(fireman2 == vehicleid || fireman1 == vehicleid || fireman3 == vehicleid || fireman4 == vehicleid || fireman5 == vehicleid || fireman6 == vehicleid)
	{
	   	format(string,sizeof(string),"Te urci in %s (%d)   Owner: S.F.F.D.",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(wodden == vehicleid || wodden1 == vehicleid || wodden2 == vehicleid || wodden3 == vehicleid || wodden4 == vehicleid)
	{
	   	format(string,sizeof(string),"Te urci in %s (%d)   Owner: Lumberjack",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(IsAKartCar(vehicleid))
    {
	   	format(string,sizeof(string),"Te urci in %s (%d)   Owner: Kart Track",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(IsARentableCarLS(vehicleid))
	{
	   	format(string,sizeof(string),"Te urci in %s (%d)   Owner: Rent Car LS",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(IsARentableCarLV(vehicleid))
	{
	   	format(string,sizeof(string),"Te urci in %s (%d)   Owner: Rent Car LV",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(IsARentableCarSF(vehicleid))
	{
	   	format(string,sizeof(string),"Te urci in %s (%d)   Owner: Rent Car SF",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(IsARentableAir(vehicleid))
	{
	   	format(string,sizeof(string),"Te urci in %s (%d)   Owner: Rent Bike",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(IsAParlamentCar(vehicleid))
    {
		format(string,sizeof(string),"Te urci in %s (%d)   Owner: Parlamentul",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(IsANewsCar(vehicleid))
	{
		format(string,sizeof(string),"Te urci in %s (%d)   Owner: News Reporter",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(IsACopCar(vehicleid))
	{
    	format(string,sizeof(string),"Te urci in %s (%d)   Owner: Police Departament",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(IsAnFbiCar(vehicleid))
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: F.B.I.",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(IsNgCar(vehicleid))
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: National Guard",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
 	else if(IsAnCiaCar(vehicleid))
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: C.I.A.",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
 	else if(IsAnNavyCar(vehicleid))
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: Navy Seal",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
 	else if(IsAHitCar(vehicleid))
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: Hit Man",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
 	else if(IsAnPresident(vehicleid))
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: President",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
 	else if(IsARifaCar(vehicleid))
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: Rifa Gang",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
 	else if(IsATriadsCar(vehicleid))
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: Triads Mafia",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(IsAGovernmentCar(vehicleid))
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: Guvernul",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(IsABratvaCar(vehicleid))
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: Bratva Mafia",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
 	else if(IsABallasCar(vehicleid))
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: Ballas Gang",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
 	else if(IsASevileCar(vehicleid))
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: Sevile Gang",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
 	else if(IsACrlCar(vehicleid))
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: Corleone Mafia",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
 	else if(IsAnLevelCar(vehicleid))
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: Level Player",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
 	else if(IsAnDerbyCar(vehicleid))
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: Stadium Derby",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
 	else if(IsAnHelperCar(vehicleid))
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: "#SERVERNAME" Staff",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(IsAnTaxiCar(vehicleid))
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: Taxi Company",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else
	{
	    format(string,sizeof(string),"Te urci in %s (%d)   Owner: The State",GetVehicleName(vehicles), vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}

	return 1;
}


public OnPlayerExitVehicle(playerid, vehicleid)
{
	if(IsAExamCar(vehicleid) && TakingLeeson[playerid] == 2)
	{
    	CP[playerid] = 0;
  		TakingLeeson[playerid] =0;
		GivePlayerCash(playerid, - 300);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		DisablePlayerCheckpoint(playerid);
		SetPlayerPos(playerid,1219.0480, -1812.2429, 16.6041);
		SendClientMessage(playerid,0xFF1A00C8,"*{1580EA}Info: {FFFFFF}Ai coborat din Masina. Ai picat testul si ai fost taxat cu 300$!");
  	}
  	if(vehicleid == planesi && TakingLesson[playerid] == 1 || vehicleid == planesi1 && TakingLesson[playerid] == 1)
	{
	    CP[playerid] = 0;
	    RemovePlayerFromVehicle(playerid);
		SetVehicleToRespawn(vehicleid);
	    SetPlayerPos(playerid, 1957.1649,-2183.6143,13.5469);
	    TakingLesson[playerid] = 0;
		GivePlayerCash(playerid, - 300);
		SendClientMessage(playerid,0xFF1A00C8,"*{1580EA}Info: {FFFFFF}Ai coborat din Avion. Ai picat testul si ai fost taxat cu 300$!");
	    DisablePlayerRaceCheckpoint(playerid);
	}
	if(vehicleid == boatsi || vehicleid == boatsi1)
	{
	    CP[playerid] = 0;
	    RemovePlayerFromVehicle(playerid);
		SetVehicleToRespawn(vehicleid);
		GivePlayerCash(playerid, - 300);
	    SetPlayerPos(playerid, 436.4564,-1900.2853,2.8703);
	    TakingLesson[playerid] = 0;
		SendClientMessage(playerid,0xFF1A00C8,"*{1580EA}Info: {FFFFFF}Ai coborat din Barca. Ai picat testul si ai fost taxat cu 300$!");
	    DisablePlayerRaceCheckpoint(playerid);
	}
	if(OnJob[playerid] == 7)
	{
	    if(IsValidDynamicObject(TccSmoke[playerid]))
	    DestroyDynamicObject(TccSmoke[playerid]);
	    DestroyVehicle(TccPlayerCar[playerid]);
		GameTextForPlayer(playerid, "~w~Ai iesit din masina", 5000, 1);
		DisablePlayerCheckpoint(playerid);
		CP[playerid] = 0;
	}
	return 1;
}

public OnPlayerVirtualWorldChange(playerid, newvirtualworld, oldvirtualworld)
{
    new ghour, gminute, gsecond;
	gettime(ghour, gminute, gsecond);
	if(gLogged[playerid] ==0 || PlayerInfo[playerid][pTutorial] == 0) return 1;
	if(newvirtualworld != 0)
	{
		if(PlayerInfo[playerid][pAchievement7] == 1)
   		TextDrawHideForPlayer(playerid,Textdraw47[playerid]);
	    SetPlayerTime(playerid, 12, 0); //
	}
	if(newvirtualworld == 0)
	{
		if(PlayerInfo[playerid][pAchievement7] == 1)
   		TextDrawShowForPlayer(playerid,Textdraw47[playerid]);
    	SetPlayerTime(playerid, ghour, gminute); //
	}
    return 1;
}


public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
    new ghour, gminute, gsecond;
	gettime(ghour, gminute, gsecond);
	if(gLogged[playerid] ==0 || PlayerInfo[playerid][pTutorial] == 0) return 1;

	if(newinteriorid != 0)
	{
		if(PlayerInfo[playerid][pAchievement7] == 1)
   		TextDrawHideForPlayer(playerid,Textdraw47[playerid]);

	    SetPlayerTime(playerid, 12, 0); //
	}
	if(newinteriorid == 0)
	{
		if(PlayerInfo[playerid][pAchievement7] == 1)
   		TextDrawShowForPlayer(playerid,Textdraw47[playerid]);
    	SetPlayerTime(playerid, ghour, gminute); //
	}
    return 1;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{

	new string[155];
   	if(newstate == PLAYER_STATE_PASSENGER && GetVehicleModel(GetPlayerVehicleID(playerid)) == 508)
	{
     	SetPlayerPos(playerid, 2.0312, -3.2043, 999.5712);
        SetPlayerInterior(playerid, 2);
        SetPlayerVirtualWorld(playerid, GetPlayerVehicleID(playerid));
		Injourney[playerid] = GetPlayerVehicleID(playerid);
		TogglePlayerControllable(playerid, 0);
	    SetTimerEx("freze", 2000, 0, "i", playerid);
	    return 1;
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
	    foreach(Player,i)
	    {
     		if(IsPlayerInVehicle(i, GetPlayerVehicleID(playerid)) && GetPlayerState(i) == 2 && TransportDuty[i] > 0)
       		{
	        	if(GetPlayerCash(playerid) < TransportValue[i])
	            {
	            	format(string, sizeof(string), "* Iti trebuie $%d pentru a intra.", TransportValue[i]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					RemovePlayerFromVehicle(playerid);
     			}
        		else
	            {
	            	if(TransportDuty[i] == 1)
	                {
	                	format(string, sizeof(string), "* Ai platit $%d soferului.", TransportValue[i]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Pasagerul %s a intrat in taxiul tau.", PlayerName(playerid));
						SendClientMessage(i, COLOR_LIGHTBLUE, string);
						TransportTime[i] = 1;
	                    TransportTime[playerid] = 1;
	                    TransportCost[playerid] = TransportValue[i];
	                    TransportCost[i] = TransportValue[i];
	                    TransportDriver[playerid] = i;
           				GivePlayerCash(playerid, - TransportValue[i]);
						TransportMoney[i] += TransportValue[i];
	    			}
				}
    		}
		}
	}
   	if(oldstate == PLAYER_STATE_PASSENGER)
   	{
   	    if(PhoneOnCharge[playerid] == 1)
		{
        	PhoneOnCharge[playerid] = 0;
        	SendClientMessage(playerid, COLOR_WHITE,"Telefonul a fost scos de la incarcat!");
  		}
   	}
    if(oldstate == PLAYER_STATE_DRIVER)
	{
 		Codel[playerid] = 0;
		instart[playerid] = 0;
   		TextDrawHideForPlayer(playerid, td_fuel[playerid]);
        TextDrawHideForPlayer(playerid, TextDrawVeh[playerid]);
	    TextDrawHideForPlayer(playerid, Textdraw70[playerid]);
	    TextDrawHideForPlayer(playerid, Textdraw71[playerid]);
	    TextDrawHideForPlayer(playerid, Textdraw72[playerid]);
	    TextDrawHideForPlayer(playerid, Textdraw69[playerid]);
	    TextDrawHideForPlayer(playerid, Textdraw40[playerid]);
	    TextDrawHideForPlayer(playerid, Textdraw39[playerid]);
	    TextDrawHideForPlayer(playerid, Textdraw160[playerid]);
	    TextDrawHideForPlayer(playerid, sState[playerid]);
	    TextDrawHideForPlayer(playerid, Modelcar[playerid]);
	    TextDrawHideForPlayer(playerid, Healthveh[playerid]);
	    TextDrawHideForPlayer(playerid, heights[playerid]);
	    TextDrawHideForPlayer(playerid, Gpscar[playerid]);
	    TextDrawHideForPlayer(playerid, Textdraw53[playerid]);
      	PlayerInfo[playerid][pradio] = 0;
    	StopAudioStreamForPlayer(playerid);
		vInfo[OwnedVeh(GetPlayerVehicleID(playerid))][vVodo] = floatround(VehicleKM[GetPlayerVehicleID(playerid)]);
		vUpdate(OwnedVeh(GetPlayerVehicleID(playerid)), vVodox);
        KillTimer(timerkm[GetPlayerVehicleID(playerid)]);//omoram acel timer care masoara kilometrii deoarece nu mai e nici un sofer in ea
     	if(PlayerInfo[playerid][pRadar] == 1)
		PlayerInfo[playerid][pRadar] = 0;
		if(RowedPDMenu[playerid] != 0)
  		{
 	    	TogglePlayerControllable(playerid, 1);
			TextDrawHideForPlayer(playerid,PDMainMenu);
			TextDrawHideForPlayer(playerid,PDLineUp);
			TextDrawHideForPlayer(playerid,PDLineDown);
			TextDrawHideForPlayer(playerid,PDSsapd);
			TextDrawHideForPlayer(playerid,PDProtect);
			TextDrawHideForPlayer(playerid,PDOption[playerid]);
			TextDrawHideForPlayer(playerid,PDBackGround);
			TextDrawHideForPlayer(playerid,PDRowStar1);
			TextDrawHideForPlayer(playerid,PDRowStar2);
			TextDrawHideForPlayer(playerid,PDRowStar3);
			TextDrawHideForPlayer(playerid,PDRowStar4);
			TextDrawHideForPlayer(playerid,PDRowStar5);
			PlayerTextDrawHide(playerid,PDRow1[playerid]);
			PlayerTextDrawHide(playerid,PDRow2[playerid]);
			PlayerTextDrawHide(playerid,PDRow3[playerid]);
			PlayerTextDrawHide(playerid,PDRow4[playerid]);
			PlayerTextDrawHide(playerid,PDRow5[playerid]);
			RowedPDMenu[playerid] = 0;
		}
		if(CP[playerid] >= 373 && CP[playerid] <= 380)
		{
		    SendClientMessage(playerid,COLOR_LIGHTRED,"Ai abandonat livrarea!");
		    DisablePlayerRaceCheckpoint(playerid);
 		    DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
		}
      	if(pcamera[playerid] == 1)
		{
		   	pcamera[playerid] = 1;
		   	if(IsValidPlayerObject(playerid,vehview[playerid])) DestroyPlayerObject(playerid,vehview[playerid]);
		   	if(IsValidDynamicObject(firstpersona[playerid])) DestroyDynamicObject(firstpersona[playerid]);
		   	firstpersona[playerid] = CreateDynamicObject(19300, 0.0, 0.0, 1110.0, 0.0, 0.0, 0.0);
	   	  	AttachDynamicObjectToPlayer(firstpersona[playerid],playerid,  0.0, 0.0800, 0.7, 0.0, 0.0, 0.0);
		   	AttachCameraToDynamicObject(playerid, firstpersona[playerid]);
		}
		if(pcamera[playerid] == 0)
		{
		    if(IsValidPlayerObject(playerid,vehview[playerid])) DestroyPlayerObject(playerid,vehview[playerid]);
		   	if(IsValidDynamicObject(firstpersona[playerid])) DestroyDynamicObject(firstpersona[playerid]);
		}
		if(PhoneOnCharge[playerid] == 1)
		{
        	PhoneOnCharge[playerid] = 0;
        	SendClientMessage(playerid, COLOR_WHITE,"Telefonul a fost scos de la incarcat!");
  		}
        if(CP[playerid] == 21 || OnJob[playerid] == 10)
 		{
 		    DisablePlayerCheckpoint(playerid);
			OnJob[playerid] = 0;
			CP[playerid] = 0;
			VehicleOnJob[GetPlayerVehicleID(playerid)] = 0;
		}
		if(OnJob[playerid] == 11)
  		{
 		    DisablePlayerRaceCheckpoint(playerid);
 		    DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
	  	    OnJob[playerid] = 0;
	  	    PlayerLitter[playerid] = 0;
		 	PlayerReservor[playerid] = 0;
		}
     	if(OnJob[playerid] == 7)
    	{
			DestroyVehicle(TccPlayerCar[playerid]);
	  	    if(IsValidDynamicObject(TccSmoke[playerid]))
	  	    DestroyDynamicObject(TccSmoke[playerid]);
	  	    OnJob[playerid] = 0;
   		}
   		if(OnJob[playerid] == 13)
   		{
 		    DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
   		}
   		if(OnJob[playerid] == 9)
		{
			cmd_over(playerid,string);
	        CP[playerid] = 0;
	  		DisablePlayerRaceCheckpoint(playerid);
			SetTimerEx("DestroyPapers",1000,false,"i",playerid);
		}
   		if(OnJob[playerid]!=0)
		OnJob[playerid]=0;
    	if(SmokeCRopDust[playerid] == 1)
        {
            SmokeCRopDust[playerid] = 0;
  	        if(IsValidDynamicObject(SmokeCropDuster[0][playerid])) DestroyDynamicObject(SmokeCropDuster[0][playerid]);
		    if(IsValidDynamicObject(SmokeCropDuster[1][playerid])) DestroyDynamicObject(SmokeCropDuster[1][playerid]);
		    if(IsValidDynamicObject(SmokeCropDuster[2][playerid])) DestroyDynamicObject(SmokeCropDuster[2][playerid]);
		    if(IsValidDynamicObject(SmokeCropDuster[3][playerid])) DestroyDynamicObject(SmokeCropDuster[3][playerid]);
			GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Smoke OFF",700,3);
      	}
	    if(SeatBelt[playerid] == 1)
		{
  			SeatBelt[playerid] = 0;
		 	RemovePlayerAttachedObject(playerid,9);
		}
  		if(Tele[playerid] ==2)
		{
     		DestroyDynamicObject(Foc1[playerid]);
			DestroyDynamicObject(Foc2[playerid]);
		}
		if(Decoding[playerid] == 1)
		{
		    Decoding[playerid] = 0;
		    KillTimer(DecoderTimer);
			HideDecoder(playerid);
			SendClientMessage(playerid, COLOR_NICERED, "Ai iesit din masina, decodorul a fost oprit!");
   		}
 	}
 	if(newstate == PLAYER_STATE_ONFOOT)
 	{
 	 	if(TransportDuty[playerid] > 0)
		{
		    if(TransportDuty[playerid] == 1)
  	        TaxiDrivers -= 1;
 			TransportDuty[playerid] = 0;
			format(string, sizeof(string), "*	Esti acum Off Duty si ai strans $%d.", TransportMoney[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, TransportMoney[playerid]);
			TransportValue[playerid] = 0;
			TransportMoney[playerid] = 0;
		}
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
		    if(IsPlayerConnected(TransportDriver[playerid]))
			{
			    if(TransportCost[playerid] > GetPlayerCash(playerid))
				TransportCost[playerid] = GetPlayerCash(playerid);
  			    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
			    TransportTime[TransportDriver[playerid]] = 0;
			    TransportCost[TransportDriver[playerid]] = 0;
			    format(string, sizeof(string), "~w~Taxa:~n~~r~$%d",TransportCost[playerid]);
			    GameTextForPlayer(playerid, string, 5000, 1);
			    format(string, sizeof(string), "~w~Pasagerul a iesit~n~~g~Profit: $%d",TransportCost[playerid]);
			    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
				GivePlayerCash(playerid, -TransportCost[playerid]);
				TransportCost[playerid] = 0;
				TransportTime[playerid] = 0;
				TransportDriver[playerid] = 999;
			}
		}
	}
 	if(newstate == PLAYER_STATE_DRIVER)
	{
        if(LastCar[playerid] != INVALID_VEHICLE_ID && LastCar[playerid] != 0)
		{
		    if(OwnedVeh(LastCar[playerid])) return 1;// && strmatch(vInfo[OwnedVeh(veh)][vOwner],  PlayerName(playerid)))
			if(VehLocked[LastCar[playerid]] == 1)
			{
				VehLocked[LastCar[playerid]] = 0;
				SetVehicleParamsEx(LastCar[playerid], engine, lights, alarm, VEHICLE_PARAMS_OFF, bonnet, boot, objective);
			}
		}
		if(!OwnedVeh(GetPlayerVehicleID(playerid)))
	    LastCar[playerid] = GetPlayerVehicleID(playerid);
	    if(Tele[playerid] == 2)
	 	{
	 	    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	 	    {
	 	    	new model = GetVehicleModel(GetPlayerVehicleID(playerid));
				if(model == 463||model == 468||model == 471||model == 521||model == 522||model == 523||model == 586||model == 586||
				   model == 608||model == 590||model == 591||model == 606||model == 607||model == 610||model == 465||model == 468||
				   model == 448||model == 581||model == 522||model == 461||model == 521||model == 523||model == 463)
				{
					Foc1[playerid] = CreateDynamicObject(18694,0,0,0,0,0,0);
				    Foc2[playerid] = CreateDynamicObject(18694,0,0,0,0,0,0);
					AttachDynamicObjectToVehicle(Foc1[playerid], GetPlayerVehicleID(playerid), 0.0, 1.3, -2.0, 0.0, 0.0, 0.0);
					AttachDynamicObjectToVehicle(Foc2[playerid], GetPlayerVehicleID(playerid), 0.0, -1.3, -2.0, 0.0, 0.0, 0.0);
   				}
			}
		}
		if(pcamera[playerid] == 1)
		{
		    if(IsValidDynamicObject(firstpersona[playerid])) DestroyDynamicObject(firstpersona[playerid]);
   		  	if(IsValidPlayerObject(playerid,vehview[playerid])) DestroyPlayerObject(playerid,vehview[playerid]);
			new p = GetPlayerVehicleID(playerid);
			vehview[playerid] = CreatePlayerObject(playerid,19300, 0.0000, -1282.9984, 10.1493, 0.0000, -1, -1, 100);
			AttachPlayerObjectToVehicle(playerid,vehview[playerid],p,-0.314999, -0.195000, 0.510000, 0.000000, 0.000000, 0.000000);
			AttachCameraToDynamicObject(playerid,vehview[playerid]);
			pcamera[playerid] = 1;
		}
		if(pcamera[playerid] == 0)
	   	{
	   	    if(IsValidDynamicObject(firstpersona[playerid])) DestroyDynamicObject(firstpersona[playerid]);
	   		if(IsValidPlayerObject(playerid,vehview[playerid])) DestroyPlayerObject(playerid,vehview[playerid]);
	   	    pcamera[playerid] = 0;
	   	    SetCameraBehindPlayer(playerid);
	   	}

	    timerkm[GetPlayerVehicleID(playerid)] = SetTimerEx("km_counter", 1000, 1, "d", GetPlayerVehicleID(playerid));//pornim acel timer care masoara kilometrii parcursi
 		new color1,color2;
		new vehiclessid = GetPlayerVehicleID(playerid);
        new modeddlid = GetVehicleModel(vehiclessid);
        TextDrawSetPreviewModel(TextDrawVeh[playerid], modeddlid);
		GetVehicleColor(vehiclessid, color1, color2);
		TextDrawSetPreviewVehCol(TextDrawVeh[playerid], color1, color2);
        TextDrawShowForPlayer(playerid, TextDrawVeh[playerid]);
        if(VehiclePass[GetPlayerVehicleID(playerid)] == 0)
		Codel[playerid] = 1;
 	    if(vInfo[OwnedVeh(GetPlayerVehicleID(playerid))][vTowed] == 1)
	 	TextDrawShowForPlayer(playerid,td_fuel[playerid]);
 		if(Gps[playerid] == 1)
	    TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		TextDrawShowForPlayer(playerid, TextDrawVeh[playerid]);
	    TextDrawShowForPlayer(playerid, Textdraw70[playerid]);
	    TextDrawShowForPlayer(playerid, Textdraw71[playerid]);
	    TextDrawShowForPlayer(playerid, Textdraw72[playerid]);
	    TextDrawShowForPlayer(playerid, Textdraw69[playerid]);
	    TextDrawShowForPlayer(playerid, Textdraw40[playerid]);
	    TextDrawShowForPlayer(playerid, Textdraw39[playerid]);
	    TextDrawHideForPlayer(playerid, Textdraw160[playerid]);
	    TextDrawShowForPlayer(playerid, sState[playerid]);
	    TextDrawShowForPlayer(playerid, Modelcar[playerid]);
	    TextDrawShowForPlayer(playerid, Healthveh[playerid]);
	    TextDrawShowForPlayer(playerid, heights[playerid]);
	    TextDrawShowForPlayer(playerid, Gpscar[playerid]);
        if(IsAnDerbyCar(GetPlayerVehicleID(playerid)))
	    {  SetVehicleHealth(GetPlayerVehicleID(playerid), 10000);  	gGas[GetPlayerVehicleID(playerid)] = 11000;	}

		if(IsARentableCarLS(GetPlayerVehicleID(playerid)))
		{
			if (HireCar[playerid] != GetPlayerVehicleID(playerid))
			{
	            format(string,sizeof(string),"{72BABA}Model: \t{D2CDD2}%s \n\n{72BABA}Pret: \t{D21938}${D2CDD2}%d \n\n{72BABA}Apasa: \t{D2CDD2}cancel pentru a iesi \n",GetVehicleName(GetPlayerVehicleID(playerid)),SBizzInfo[0][sbEntrace]);
			    ShowPlayerDialog(playerid, 266, DIALOG_STYLE_MSGBOX, "{0DC013}De inchiriat:", string, "Rent", "Cancel");
			}
		}
		if(IsARentableCarSF(GetPlayerVehicleID(playerid)))
		{
		    if (HireCar[playerid] != GetPlayerVehicleID(playerid))
			{
  	            format(string,sizeof(string),"{72BABA}Model: \t{D2CDD2}%s \n\n{72BABA}Pret: \t{D21938}${D2CDD2}%d \n\n{72BABA}Apasa: \t{D2CDD2}cancel pentru a iesi \n",GetVehicleName(GetPlayerVehicleID(playerid)),SBizzInfo[13][sbEntrace]);
			    ShowPlayerDialog(playerid, 266, DIALOG_STYLE_MSGBOX, "{0DC013}De inchiriat:", string, "Rent", "Cancel");
			}
		}
		if(IsARentableCarLV(GetPlayerVehicleID(playerid)))
   		{
   		   	if (HireCar[playerid] != GetPlayerVehicleID(playerid))
			{
	            format(string,sizeof(string),"{72BABA}Model: \t{D2CDD2}%s \n\n{72BABA}Pret: \t{D21938}${D2CDD2}%d \n\n{72BABA}Apasa: \t{D2CDD2}cancel pentru a iesi \n",GetVehicleName(GetPlayerVehicleID(playerid)),SBizzInfo[12][sbEntrace]);
			    ShowPlayerDialog(playerid, 266, DIALOG_STYLE_MSGBOX, "{0DC013}De inchiriat:", string, "Rent", "Cancel");
			}
   		}
		if(IsARentableAir(GetPlayerVehicleID(playerid)))
   	    {
   	        format(string,sizeof(string),"{72BABA}Model: \t{D2CDD2}%s \n\n{72BABA}Pret: \t{D21938}${D2CDD2}%d \n\n{72BABA}Apasa: \t{D2CDD2}cancel pentru a iesi \n",GetVehicleName(GetPlayerVehicleID(playerid)),SBizzInfo[1][sbEntrace]);
		    ShowPlayerDialog(playerid, 266, DIALOG_STYLE_MSGBOX, "{0DC013}De inchiriat:", string, "Rent", "Cancel");
   	    }
	    if(GetPlayerVehicleID(playerid) == planesi1 || GetPlayerVehicleID(playerid) == planesi)
		{
		    if(TakingLesson[playerid] == 1)
		    {
		        CP[playerid] = 300;
		        TakingLesson[playerid] = 1;
      	        SetPlayerRaceCheckpoint(playerid,3,1934.2943,-2348.1997,14.0526,1742.0460,-2493.9355,14.0187,20);
      	        SendClientMessage(playerid, COLOR_FADE1, "{ee5555}DMV: {1580EA}Pentru a termina testul, Piloteaza  avionul prin checkpoint-uri.");
      	        SendClientMessage(playerid, COLOR_FADE1, "{ee5555}DMV: {1580EA}Vei fi taxat cu 20.000$.");
		        return 1;
		    }
			if(PlayerInfo[playerid][pFlyLic] == 0 && TakingLesson[playerid] != 1)
			{	RemovePlayerFromVehicle(playerid);return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Du-te la Aeroport pentru a semna actele!");}
			if (PlayerInfo[playerid][pFlyLic] == 1)
			{	RemovePlayerFromVehicle(playerid);	return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Ai deja permisul de zbor!");	}
		}
		if(IsAPlane(GetPlayerVehicleID(playerid))&& GetPlayerVehicleID(playerid) != planesi1 && GetPlayerVehicleID(playerid) != planesi)
        {
            if(PlayerInfo[playerid][pFlyLic] == 0)
            { 	RemovePlayerFromVehicle(playerid);	return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Nu ai Licenta de Zbor!"); }
        }
		if(GetPlayerVehicleID(playerid) == boatsi || GetPlayerVehicleID(playerid) == boatsi1)
	    {
	        if(TakingLesson[playerid] == 3)
	        {
	  			TakingLesson[playerid] = 3;
				SetPlayerRaceCheckpoint(playerid,3,418.4089,-1956.2709,-0.1005, 401.8729,-2021.8424,-0.2336,7);
				CP[playerid] = 320;
				SendClientMessage(playerid, COLOR_FADE1, "{ee5555}DMV: {1580EA}Pentru a termina testul, Navigheaza  barca prin checkpoint-uri.");
      	        SendClientMessage(playerid, COLOR_FADE1, "{ee5555}DMV: {1580EA}Vei fi taxat cu 5.000$.");
			}
	    	else
			{   RemovePlayerFromVehicle(playerid); return SendClientMessage(playerid,COLOR_RED,"Du-te si semneaza actele pentru testul de barca");  	}
	    }
	    if(IsAExamCar(GetPlayerVehicleID(playerid)))
		{
		    if(TakingLesson[playerid] == 2)
		    {
		        CP[playerid] = 2333;
		        SetPlayerCheckpoint(playerid,1214.9260, -1834.2296, 12.9940,7.0);//2
		        SendClientMessage(playerid, COLOR_FADE1, "{ee5555}DMV: {1580EA}Pentru a termina testul, Condu masina prin checkpoint-uri.");
      	        SendClientMessage(playerid, COLOR_FADE1, "{ee5555}DMV: {1580EA}Vei fi taxat cu 5.000$.");
		        return 1;
		    }
			if(PlayerInfo[playerid][pCarLic] == 0 && TakingLesson[playerid] != 2)
			{	RemovePlayerFromVehicle(playerid);	return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Du-te la DMW pentru a semna actele!");}
			if (PlayerInfo[playerid][pCarLic] == 1)
			{	RemovePlayerFromVehicle(playerid);	return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Ai deja permisul auto!");}
		}
		if(IsAnLevelCar(GetPlayerVehicleID(playerid)))
		{
			if(PlayerInfo[playerid][pLevel]>4&&AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 5)
			{RemovePlayerFromVehicle(playerid);	SendClientMessage(playerid, COLOR_RED, "Aceasta masina este pentru playerii incepatori"); return 1;}
		}
        if(IsABoat(GetPlayerVehicleID(playerid)))
		{
		    if(PlayerInfo[playerid][pBoatLic] == 0 && TakingLeeson[playerid] != 3)
			return SendClientMessage(playerid, COLOR_GREY, "Nu stii sa navighezi, ai grija la politisti!");
		}
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 510 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 481 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 509)
	   	{
		    GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
			VehicleEngine[GetPlayerVehicleID(playerid)] = 1;
		}
	    if(IsAnDerbyCar(GetPlayerVehicleID(playerid)))
	    {SetVehicleHealth(GetPlayerVehicleID(playerid), 100000);gGas[GetPlayerVehicleID(playerid)] = 1001;}

   		if(PlayerInfo[playerid][pCarLic] == 0 && !IsABike(GetPlayerVehicleID(playerid)) && TakingLesson[playerid] != 1)
		SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Nu ai permisul de {1580EA}conducere{FFFFFF}! Ai grija la politisti!");
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 447 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 432 || GetVehicleModel(GetPlayerVehicleID(playerid)) ==  520 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 425)
	   	{
		    if(PlayerInfo[playerid][pAdmin]<7&&AdminDuty[playerid] != 1 && PlayerInfo[playerid][pMember] != 11 && PlayerInfo[playerid][pLeader] != 11 && PlayerInfo[playerid][pMember] != 3 && PlayerInfo[playerid][pLeader] != 3)
			{RemovePlayerFromVehicle(playerid);	SendClientMessage(playerid, COLOR_RED, "Nu poti conduce acest vehicul");}
		}
		if(VehicleEngine[GetPlayerVehicleID(playerid)] == 0 && !IsABike(GetPlayerVehicleID(playerid)))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 4)
  	        SendClientMessage(playerid, 0xa9c4e4FF, "{FF1A00}[ATENTIE]!{04E2FB} /st {8AB748}pentru a porni motorul!");
      	    else
      		SendClientMessage(playerid, 0xa9c4e4FF, "{FF1A00}[ATENTIE]!{04E2FB} /engine {8AB748}sau apasa{04E2FB} N{8AB748} pentru a porni motorul!");
  			SendClientMessage(playerid, 0xa9c4e4FF, "{FF1A00}REMEMBER: Foloseste {04E2FB}/belt{8AB748} altfel vei lua amenda!");
		}
		new vehicleid = GetPlayerVehicleID(playerid);
		if(IsAnAdminCar(vehicleid))
		{
		    if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] == 0)
  			{RemovePlayerFromVehicle(playerid);	SendClientMessage(playerid, COLOR_LIGHTBLUE, "** Nu esti Admin");}
		}
		if(IsAnHelperCar(vehicleid))
		{
		    if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] == 0)
      		{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_LIGHTBLUE, "** Nu esti Helper");}
		}
		foreach(Player,i)
		{
		    if(TccPlayerCar[i] == vehicleid && OnJob[i] == 7)
      		{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_LIGHTBLUE, "**Aceasta masina este defecta");}
		}
		if(IsACopCar(vehicleid))
		{
		    if(PlayerInfo[playerid][pCarLic] == 0 && AdminDuty[playerid] == 0 && PlayerInfo[playerid][pDecoder] == 0)
  	        RemovePlayerFromVehicle(playerid);
  		    if(!IsACop(playerid) && AdminDuty[playerid] != 1)
			{
				if(PlayerInfo[playerid][pDecoder] != 0)//decoder
    	        SendClientMessage(playerid, COLOR_GREY, "Poti folosi decodorul pentru a sparge codul masinii /decode");
   				else
    			{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Nu ai decodor si nu faci parte din factiune");}
			}
		}
		if(IsAnFbiCar(vehicleid))
		{
		    if(PlayerInfo[playerid][pCarLic] == 0 && AdminDuty[playerid] == 0 && PlayerInfo[playerid][pDecoder] == 0)
	        RemovePlayerFromVehicle(playerid);
		    if(!IsACop(playerid) && AdminDuty[playerid] != 1)
			{
				if(PlayerInfo[playerid][pDecoder] != 0)//decoder
    	        SendClientMessage(playerid, COLOR_GREY, "Poti folosi decodorul pentru a sparge codul masinii /decode");
   				else
				{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Nu ai decodor si nu faci parte din factiune");}
			}
		}
		if(IsAnCiaCar(vehicleid))
		{
		    if(PlayerInfo[playerid][pCarLic] == 0 && AdminDuty[playerid] == 0 && PlayerInfo[playerid][pDecoder] == 0)
	        RemovePlayerFromVehicle(playerid);
		    if(!IsACop(playerid) && AdminDuty[playerid] != 1)
			{
				if(PlayerInfo[playerid][pDecoder] != 0)
		        SendClientMessage(playerid, COLOR_GREY, "Poti folosi decodorul pentru a sparge codul masinii /decode");
				else
				{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Nu ai decodor si nu faci parte din factiune");}
			}
		}
		if(IsAParlamentCar(vehicleid) || IsAnPresident(vehicleid) || IsAGovernmentCar(vehicleid))
		{
		    if(PlayerInfo[playerid][pCarLic] == 0 && AdminDuty[playerid] == 0 && PlayerInfo[playerid][pDecoder] == 0)
  	        RemovePlayerFromVehicle(playerid);
  		    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pMember] != 4 && PlayerInfo[playerid][pLeader] != 4 && PlayerInfo[playerid][pLeader] != 7 && PlayerInfo[playerid][pMember] != 7 && PlayerInfo[playerid][pLeader] != 12 && PlayerInfo[playerid][pMember] != 12)
  			{
				if(PlayerInfo[playerid][pDecoder] != 0)
         	   SendClientMessage(playerid, COLOR_GREY, "Poti folosi decodorul pentru a sparge codul masinii /decode");
				else
  				{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Nu ai decodor si nu faci parte din factiune");}
			}
		}
		if(IsANewsCar(vehicleid))
		{
		    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pJob2] != 9  &&  PlayerInfo[playerid][pJob1] != 9 && PlayerInfo[playerid][pMember] != 9 && PlayerInfo[playerid][pLeader] != 9)
			{
				if(PlayerInfo[playerid][pDecoder] != 0)
				SendClientMessage(playerid, COLOR_GREY, "Poti folosi decodorul pentru a sparge codul masinii /decode");
				else
   				{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Nu ai decodor si nu faci parte din factiune");}
			}
		}
		if(IsNgCar(vehicleid) || IsAnNavyCar(vehicleid))
		{
		    if(PlayerInfo[playerid][pCarLic] == 0 && AdminDuty[playerid] == 0 && PlayerInfo[playerid][pDecoder] == 0)        RemovePlayerFromVehicle(playerid);
  		    if(AdminDuty[playerid] != 1 && !IsACop(playerid))
			{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Nu ai decodor si nu faci parte din factiune");}
		}
		if(IsAnTaxiCar(vehicleid))
		{
  		    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pMember] != 10 && PlayerInfo[playerid][pLeader] != 10 && PlayerInfo[playerid][pCarLic] == 0)
   		    {
		   		if(PlayerInfo[playerid][pDecoder] != 0)
                SendClientMessage(playerid, COLOR_GREY, "Poti folosi decodorul pentru a sparge codul masinii /decode");
 				else
				{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Nu ai decodor si nu faci parte din factiune");}
			}
		}
		if(IsAHitCar(vehicleid))
		{
		    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pMember] != 8 && PlayerInfo[playerid][pLeader] != 8)
		    {
		   		if(PlayerInfo[playerid][pDecoder] != 0)
       	        SendClientMessage(playerid, COLOR_GREY, "Poti folosi decodorul pentru a sparge codul masinii /decode");
    			else
    			RemovePlayerFromVehicle(playerid);
       		}
		}
		if(IsARifaCar(vehicleid))
		{
       		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pMember] != 5 && PlayerInfo[playerid][pLeader] != 5)
  		    {
		   		if(PlayerInfo[playerid][pDecoder] != 0)
      	        SendClientMessage(playerid, COLOR_GREY, "Poti folosi decodorul pentru a sparge codul masinii /decode");
 				else
				{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Nu ai decodor si nu faci parte din factiune");}
			}
		}
       	if(IsABallasCar(vehicleid))
		{
       		if(AdminDuty[playerid] != 0 && PlayerInfo[playerid][pMember] != 14 && PlayerInfo[playerid][pLeader] != 14)
		    {
		   		if(PlayerInfo[playerid][pDecoder] != 0)
      	        SendClientMessage(playerid, COLOR_GREY, "Poti folosi decodorul pentru a sparge codul masinii /decode");
  				else
				{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Nu ai decodor si nu faci parte din factiune");}
			}
		}
		if(IsASevileCar(vehicleid))
		{
       		if(AdminDuty[playerid] != 0 && PlayerInfo[playerid][pMember] != 15 && PlayerInfo[playerid][pLeader] != 15)
   		    {
		   		if(PlayerInfo[playerid][pDecoder] != 0)
      	        SendClientMessage(playerid, COLOR_GREY, "Poti folosi decodorul pentru a sparge codul masinii /decode");
  				else
  				{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Nu ai decodor si nu faci parte din factiune");}
			}
		}
		if(IsATriadsCar(vehicleid))
		{
      		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pMember] != 6 && PlayerInfo[playerid][pLeader] != 6)
		    {
		   		if(PlayerInfo[playerid][pDecoder] != 0)
      	        SendClientMessage(playerid, COLOR_GREY, "Poti folosi decodorul pentru a sparge codul masinii /decode");
  				else
				{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Nu ai decodor si nu faci parte din factiune");}
			}
		}
		if(IsACrlCar(vehicleid))
		{
      		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pMember] != 16 && PlayerInfo[playerid][pLeader] != 16)
		    {
		   		if(PlayerInfo[playerid][pDecoder] != 0)
      	        SendClientMessage(playerid, COLOR_GREY, "Poti folosi decodorul pentru a sparge codul masinii /decode");
  				else
				{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Nu ai decodor si nu faci parte din factiune");}
			}
		}
		if(IsABratvaCar(vehicleid))
		{
      		if(AdminDuty[playerid] != 0 && PlayerInfo[playerid][pMember] != 13 && PlayerInfo[playerid][pLeader] != 13)
 		    {
		   		if(PlayerInfo[playerid][pDecoder] != 0)
  		        SendClientMessage(playerid, COLOR_GREY, "Poti folosi decodorul pentru a sparge codul masinii /decode");
  				else
				{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Nu ai decodor si nu faci parte din factiune");}
			}
		}//jobule
		if(IsAnAmbulance(vehicleid))
		{
		    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pJob2] != 4 && PlayerInfo[playerid][pJob1] != 4)
  			{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Firma noastra nu permite decat angajatilor sa conduca"); return 1;}
    		else
    		{
    		    format(string, sizeof(string),"Bine ai venit,~n~ca paramedic scrie /heal~n~langa persoana care are nevoie~n~Apasa tasta 2 ~n~sa incepi jobul");
      			TextDrawSetString(TextdrawInfoBall, string);
		    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
		   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
		   		KillTimer(TimerH[playerid]);
   				TimerH[playerid]= SetTimerEx("HidesInfo", 7000, false, "i", playerid);
    		}
		}
		if(cutter == vehicleid || cutter2 == vehicleid || cutter3 == vehicleid || cutter4 == vehicleid)
	    {
	        if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pJob2] != 12 && PlayerInfo[playerid][pJob1] != 12)
  			{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Firma noastra nu permite decat angajatilor sa conduca"); return 1;}
    		else
    		{
    		    format(string, sizeof(string),"Apasa 2 pentru a incepe~n~ sa muncesti");
      			TextDrawSetString(TextdrawInfoBall, string);
		    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
		   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
   				KillTimer(TimerH[playerid]);
   				TimerH[playerid]= SetTimerEx("HidesInfo", 7000, false, "i", playerid);
    		}
		}
		if(swep1 == vehicleid || swep2 == vehicleid || swep3 == vehicleid || swep4 == vehicleid || swep5 == vehicleid || swep6 == vehicleid)
	    {
	        if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pJob2] != 5 && PlayerInfo[playerid][pJob1] != 5)
  			{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Firma noastra nu permite decat angajatilor sa conduca"); return 1;}
  			else
  			{
  			    format(string, sizeof(string),"Apasa tasta 2 ~n~sa incepi jobul");
      			TextDrawSetString(TextdrawInfoBall, string);
		    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
		   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
   				KillTimer(TimerH[playerid]);
   				TimerH[playerid]= SetTimerEx("HidesInfo", 7000, false, "i", playerid);
  			}
		}
 		if(tcc1 == vehicleid || tcc2 == vehicleid || tcc3 == vehicleid || tcc5 == vehicleid || tcc4 == vehicleid || tcc6 == vehicleid || tcc7 == vehicleid)
	    {
	        if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pJob2] != 7 && PlayerInfo[playerid][pJob1] != 7)
  			{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Firma noastra nu permite decat angajatilor sa conduca"); return 1;}
  			else
  			{
  			    format(string, sizeof(string),"Daca nu sunt playeri~n~care au nevoie de ajutor~n~Apasa tasta 2~n~pentru a incepe jobul");
      			TextDrawSetString(TextdrawInfoBall, string);
		    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
		   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
   				KillTimer(TimerH[playerid]);
   				TimerH[playerid]= SetTimerEx("HidesInfo", 7000, false, "i", playerid);
  			}
		}
		if(truck1 == vehicleid || truck2 == vehicleid || truck3 == vehicleid || truck4 == vehicleid || truck5 == vehicleid || truck6 == vehicleid || truck7 == vehicleid)
	    {
	        if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pJob2] != 8 && PlayerInfo[playerid][pJob1] != 8)
  			{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Firma noastra nu permite decat angajatilor sa conduca"); return 1;}
  			else
  			{
  			    format(string, sizeof(string),"Apasa tasta 2~n~pentru a incarca produse~n~acestea pot fi transportate~n~la un biz!");
      			TextDrawSetString(TextdrawInfoBall, string);
		    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
		   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
   				KillTimer(TimerH[playerid]);
   				TimerH[playerid]= SetTimerEx("HidesInfo", 7000, false, "i", playerid);
  			}
		}
		if(IsAPaperCar(vehicleid))
		{
   		    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pJob2] != 9 && PlayerInfo[playerid][pJob1] != 9)
  			{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Firma noastra nu permite decat angajatilor sa conduca"); return 1;}
    		else
    		{
    		    format(string, sizeof(string),"Apasa 2 pentru a incepe~n~ sa muncesti");
      			TextDrawSetString(TextdrawInfoBall, string);
		    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
		   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
   				KillTimer(TimerH[playerid]);
   				TimerH[playerid]= SetTimerEx("HidesInfo", 7000, false, "i", playerid);
    		}
   		}
		if(IsAPizzaCar(vehicleid))
		{
		    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pJob2] != 10 && PlayerInfo[playerid][pJob1] != 10)
  			{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Firma noastra nu permite decat angajatilor sa conduca"); return 1;}
  			else
  			{
  			    format(string, sizeof(string),"Apasa tasta 2~n~pentru a incarca pizza~n~si a le livra la destinatie!");
      			TextDrawSetString(TextdrawInfoBall, string);
		    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
		   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
   				KillTimer(TimerH[playerid]);
   				TimerH[playerid]= SetTimerEx("HidesInfo", 7000, false, "i", playerid);
  			}
		}
		if(CropDust[0] == vehicleid || CropDust[1] == vehicleid || CropDust[2] == vehicleid || CropDust[3] == vehicleid || farmer0 == vehicleid || trailerfarm0 == vehicleid || trailerfarm4 == vehicleid || trailerfarm3 == vehicleid || trailerfarm2 == vehicleid || trailerfarm1 == vehicleid || farmer1 == vehicleid || farmer2 == vehicleid || farmer3 == vehicleid || farmer4 == vehicleid)
		{
		    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pJob2] != 11 && PlayerInfo[playerid][pJob1] != 11)
  			{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Firma noastra nu permite decat angajatilor sa conduca"); return 1;}
  			else
  			{
  			    format(string, sizeof(string),"Apasa tasta 2~n~pentru a incepe sa ari!");
      			TextDrawSetString(TextdrawInfoBall, string);
		    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
		   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
   				KillTimer(TimerH[playerid]);
   				TimerH[playerid]= SetTimerEx("HidesInfo", 7000, false, "i", playerid);
  			}
      	}
      	if(fireman2 == vehicleid || fireman1 == vehicleid || fireman3 == vehicleid || fireman4 == vehicleid || fireman5 == vehicleid || fireman6 == vehicleid)
		{
		    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pJob2] != 13 && PlayerInfo[playerid][pJob1] != 13)
  			{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Firma noastra nu permite decat angajatilor sa conduca"); return 1;}
  			else
  			{
  			    format(string, sizeof(string),"Apasa tasta 2~n~pentru a incepe munca~n~de pompier!");
      			TextDrawSetString(TextdrawInfoBall, string);
		    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
		   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
   				KillTimer(TimerH[playerid]);
   				TimerH[playerid]= SetTimerEx("HidesInfo", 7000, false, "i", playerid);
  			}
		}//
		if(BoatJ[0] == vehicleid || BoatJ[1] == vehicleid || BoatJ[2] == vehicleid || BoatJ[3] == vehicleid || BoatJ[4] == vehicleid)
		{
     		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pJob2] != 14 && PlayerInfo[playerid][pJob1] != 14)
  			{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Firma noastra nu permite decat angajatilor sa conduca");return 1;}
  			else
  			{
  			    if(OnJob[playerid] == 0)
  			    {
  			    	if(IsValidDynamicObject(CrateBoat[0][playerid])) DestroyDynamicObject(CrateBoat[0][playerid]);
			  		if(IsValidDynamicObject(CrateBoat[1][playerid])) DestroyDynamicObject(CrateBoat[1][playerid]);
					if(IsValidDynamicObject(CrateBoat[2][playerid])) DestroyDynamicObject(CrateBoat[2][playerid]);
  		 	    	CP[playerid] = 374;
					SetPlayerRaceCheckpoint(playerid,4,2513.4146, -2713.1296, 0.9201, 2508.0911, -2713.4126, 0.9201,10);
  			    	format(string, sizeof(string),"Apasa tasta 2~n~pentru a incepe munca~n~de barcagiu!");
      				TextDrawSetString(TextdrawInfoBall, string);
		    		TextDrawShowForPlayer(playerid, TextdrawInfoBall);
		   			TextDrawShowForPlayer(playerid, TextdrawInfoBox);
   					KillTimer(TimerH[playerid]);
   					TimerH[playerid]= SetTimerEx("HidesInfo", 7000, false, "i", playerid);
  				}
  			}
		}
		
		if(petroltank4 == vehicleid || petroltank3 == vehicleid || petroltank2 == vehicleid || petroltank1 == vehicleid || petrol1 == vehicleid || petrol4 == vehicleid || petrol3 == vehicleid || petrol2 == vehicleid || petrol1 == vehicleid)
		{
		    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pJob2] == 21 && PlayerInfo[playerid][pJob1] != 21)
  			{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Firma noastra nu permite decat angajatilor sa conduca");}
	 	}
		if(fastfood0 == vehicleid || fastfood1 == vehicleid || fastfood2 == vehicleid || fastfood3 == vehicleid || fastfood4 == vehicleid || fastfood5 == vehicleid)
		{
		    if(AdminDuty[playerid] != 1  && PlayerInfo[playerid][pJob2] != 17 && PlayerInfo[playerid][pJob1] != 17)
  			{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Firma noastra nu permite decat angajatilor sa conduca");}
	 	}
		if(fuel9 == vehicleid || fuel8 == vehicleid || fuel7 == vehicleid || fuel0 == vehicleid || fuel1 == vehicleid || fuel2 == vehicleid || fuel3 == vehicleid || fuel4 == vehicleid || fuel5 == vehicleid || fuel6 == vehicleid)
	    {
	        if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pJob2] != 18 && PlayerInfo[playerid][pJob1] != 18)
  			{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Firma noastra nu permite decat angajatilor sa conduca");return 1;}

			format(string, sizeof(string),"Apasa tasta 2~n~pentru a incepe munca~n~de Fuel Delivery!~n~si 2 pentru a vinde combustibilul");
      		TextDrawSetString(TextdrawInfoBall, string);
		    TextDrawShowForPlayer(playerid, TextdrawInfoBall);
		   	TextDrawShowForPlayer(playerid, TextdrawInfoBox);
   			KillTimer(TimerH[playerid]);
   			TimerH[playerid]= SetTimerEx("HidesInfo", 9000, false, "i", playerid);
		}//

 		if(wodden == vehicleid || wodden1 == vehicleid || wodden2 == vehicleid || wodden3 == vehicleid || wodden4 == vehicleid)
		{
		    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pJob2] != 15 && PlayerInfo[playerid][pJob1] != 15)
  			{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Firma noastra nu permite decat angajatilor sa conduca");return 1;}

			format(string, sizeof(string),"Apasa tasta 2~n~pentru a incepe munca~n~de Lumberjack!~n~si 2 pentru a vinde lemnul");
      		TextDrawSetString(TextdrawInfoBall, string);
		    TextDrawShowForPlayer(playerid, TextdrawInfoBall);
		   	TextDrawShowForPlayer(playerid, TextdrawInfoBox);
   			KillTimer(TimerH[playerid]);
   			TimerH[playerid]= SetTimerEx("HidesInfo", 9000, false, "i", playerid);
		}
        if(gascar1 == vehicleid || gascar2 == vehicleid || gascar3 == vehicleid || gascar4 == vehicleid)
		{
			if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pJob2] != 19 && PlayerInfo[playerid][pJob1] != 19)
  			{RemovePlayerFromVehicle(playerid);SendClientMessage(playerid, COLOR_RED, "Firma noastra nu permite decat angajatilor sa conduca");return 1;}
		}
  	}
	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
    //DisablePlayerCheckpoint(playerid);
    //CP[playerid]
	PlayerPlaySound(playerid, 1058,0,0,0);//beepout
	new string[144];
	new vehicledsaid = GetPlayerVehicleID(playerid);
	if(CP[playerid] >= 6978 || CP[playerid] <= 6984)
	{
	    if(PlayerInfo[playerid][pJob1] == 11 || PlayerInfo[playerid][pJob2] == 11)
        {
		    if(!IsTrailerAttachedToVehicle(vehicledsaid)) return 1;
		}
	}
	if(CP[playerid] == 80)
	{
    	DisablePlayerCheckpoint(playerid);
    	CP[playerid] = 0;
    	SCM(playerid,-1,"Ai ajuns la masina ta!");
    	return 1;
	}
	if(CP[playerid] == 2500)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5,-2058.2168, 81.8098, 28.3615))
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 407)
	    	{
				CP[playerid] = 2600;
    			SetTimerEx("freze", 6000, 0, "i", playerid);
	   			TogglePlayerControllable(playerid, 0);
	   			GameTextForPlayer(playerid, "~w~Apa se incarca...", 5000, 5);
				SetPlayerCheckpoint(playerid,-1981.2808, 203.3594, 27.7752,4);//2
				SendClientMessage(playerid,0x0080FFC8,"* Du-te si stinge focul!");
				return 1;
   			}
		}
	}
	if(CP[playerid] == 2600)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 5,-1981.2808, 203.3594, 27.7752))
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 407)
	    	{
				SetTimerEx("freze", 600, 0, "i", playerid);
	   			TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~y~Stinge focul", 2000, 5);
				SetPlayerCheckpoint(playerid,-2010.2833, 444.9274, 34.6601,4);//2
				CreateExplosion(-1987.5671, 210.7719, 26.7645,1,100);//
				CreateExplosion(-1989.1361, 200.7385, 26.7645,1,100);//
				CreateExplosion(-1983.5891, 193.9704, 26.7645,1,100);//
				CreateExplosion(-1973.7465, 207.3236, 26.7645,1,100);//
				CreateExplosion(-1980.4286, 214.9042, 26.7645,1,100);//
				CreateExplosion(-1983.5891, 193.9704, 26.7645,1,100);//
				CreateExplosion(-1975.1746, 197.2575, 26.7645,1,100);//
		       	CP[playerid] = 2700;
				return 1;
			}
		}
	}

	if(CP[playerid] == 2700)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5,-2010.2833, 444.9274, 34.6601))
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 407)
		    {
				SetTimerEx("freze", 600, 0, "i", playerid);
	   			TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~y~Stinge focul", 2000, 5);
				SetPlayerCheckpoint(playerid,-1986.6404, 883.0803, 44.8353,4);//2
				CreateExplosion(-2015.2001, 457.5673, 34.0084,1,100);//
				CreateExplosion(-2007.5510, 458.5865, 34.0084,1,100);//
				CreateExplosion(-2004.3282, 436.0716, 34.0084,1,100);//
			    CreateExplosion(-2013.9508, 433.2050, 34.0084,1,100);//
			    CreateExplosion(-2015.2001, 457.5673, 34.0084,1,100);//
				CreateExplosion(-2001.8270, 450.6671, 34.0084,1,100);//
			    CreateExplosion(-2013.9508, 433.2050, 34.0084,1,100);//
				CP[playerid] = 2800;
				return 1;
			}
		}
	}

	if(IsPlayerInRangeOfPoint(playerid, 5,-1986.6404, 883.0803, 44.8353))
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 407)
	    {
         	if(CP[playerid] == 2800)
			{
				SetTimerEx("freze", 600, 0, "i", playerid);
	   			TogglePlayerControllable(playerid, 0);
	   			GameTextForPlayer(playerid, "~y~Stinge focul", 2000, 5);
	   			CreateExplosion(-1988.6122, 872.1146, 44.4978,1,100);//
	   			CreateExplosion(-1980.5408, 874.7705, 44.4978,1,100);//
	   			CreateExplosion(-1978.1483, 885.2044, 44.4978,1,100);//
	   			CreateExplosion(-1992.5802, 893.2883, 44.4978,1,100);//
	   			CreateExplosion(-1988.6122, 872.1146, 44.4978,1,100);//
	   			CreateExplosion(-1980.5408, 874.7705, 44.4978,1,100);//
	   			CreateExplosion(-1978.1483, 885.2044, 44.4978,1,100);//
	   			CreateExplosion(-1983.9484, 893.5166, 44.4978,1,100);//
	   			CreateExplosion(-1992.5802, 893.2883, 44.4978,1,100);//
	   			CreateExplosion(-1994.3960, 881.0753, 44.4978,1,100);//
				SetPlayerCheckpoint(playerid,-1710.5051, 787.0905, 24.4295,4);//2
				CP[playerid] = 2900;
				return 1;

			}
		}
	}

	if(IsPlayerInRangeOfPoint(playerid, 5,-1710.5051, 787.0905, 24.4295))
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 407)
	    {
	        if(CP[playerid] == 2900)
			{
				SetTimerEx("freze", 600, 0, "i", playerid);
	   			TogglePlayerControllable(playerid, 0);
				CreateExplosion(-1706.7429, 776.5505, 23.8423,1,100);
				CreateExplosion(-1714.2919, 775.1700, 23.8423,1,100);
				CreateExplosion(-1719.1370, 781.8589, 23.8423,1,100);
				CreateExplosion(-1713.1602, 799.4768, 23.8423,1,100);
				CreateExplosion(-1706.7429, 776.5505, 23.8423,1,100);
				CreateExplosion(-1714.2919, 775.1700, 23.8423,1,100);
				CreateExplosion(-1713.1602, 799.4768, 23.8423,1,100);
				CreateExplosion(-1705.5813, 797.1609, 23.8423,1,100);
				GameTextForPlayer(playerid, "~y~Stinge focul", 2000, 5);
				SetPlayerCheckpoint(playerid,-1953.9266, 611.3097, 34.4002,4);//2
				CP[playerid] = 3000;
				return 1;

			}
		}
	}

	if(IsPlayerInRangeOfPoint(playerid, 5,-1953.9266, 611.3097, 34.4002))
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 407)
	    {
	        if(CP[playerid] == 3000)
			{
				SetTimerEx("freze", 600, 0, "i", playerid);
	   			TogglePlayerControllable(playerid, 0);
				CreateExplosion( -1943.3601, 616.5680, 34.9764,1,100);
				CreateExplosion( -1938.9349, 609.8580, 34.9764,1,100);
				CreateExplosion( -1944.0935, 604.8508, 34.9764,1,100);
				CreateExplosion( -1961.9417, 616.8249, 34.9764,1,100);
				CreateExplosion( -1944.0935, 604.8508, 34.9764,1,100);
				CreateExplosion( -1954.0187, 603.2412, 34.9764,1,100);
				CreateExplosion(-1964.8983, 607.8677, 34.9764 ,1,100);
				CreateExplosion( -1961.9417, 616.8249, 34.9764,1,100);
				GameTextForPlayer(playerid, "~y~Stinge focul", 2000, 5);
				SetPlayerCheckpoint(playerid,-2641.9768, 568.8134, 14.457,4);//2
				CP[playerid] = 3100;
				return 1;

			}
		}
	}

	if(IsPlayerInRangeOfPoint(playerid, 5,-2641.9768, 568.8134, 14.4579))
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 407)
	    {
	        if(CP[playerid] == 3100)
			{
				SetTimerEx("freze", 600, 0, "i", playerid);
	   			TogglePlayerControllable(playerid, 0);
				CreateExplosion( -2651.7959, 568.5052, 14.4579,1,100);
				CreateExplosion(-2644.5200, 578.0291, 14.4579,1,100);
				CreateExplosion( -2635.5166, 576.2896, 14.4579,1,100);
				CreateExplosion(-2630.9404, 567.4718, 14.4579 ,1,100);
				CreateExplosion(-2637.0330, 558.9151, 14.4579,1,100);
				CreateExplosion(-2646.8340, 558.0853, 14.4579 ,1,100);
				GameTextForPlayer(playerid, "~y~Stinge focul", 2000, 5);
				SetPlayerCheckpoint(playerid,-2605.1882, 83.5949, 3.5590,4);//2
				CP[playerid] = 3200;
				return 1;

			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 5,-2605.1882, 83.5949, 3.5590))
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 407)
	    {
	        if(CP[playerid] == 3200)
			{
				SetTimerEx("freze", 600, 0, "i", playerid);
	   			TogglePlayerControllable(playerid, 0);
				CreateExplosion(-2596.7083, 83.7603, 3.7305 ,1,100);
				CreateExplosion(-2599.7844, 95.0633, 3.7305,1,100);
				CreateExplosion(-2609.8669, 94.5706, 3.7305 ,1,100);
				CreateExplosion(-2613.9744, 82.5552, 3.7305 ,1,100);
				CreateExplosion(-2609.6980, 72.2147, 3.7305,1,100);
				CreateExplosion( -2602.0220, 72.7589, 3.7305,1,100);
				GameTextForPlayer(playerid, "~y~Stinge focul", 2000, 5);
				SetPlayerCheckpoint(playerid,-2350.4587, -71.0529, 34.1625,4);//2
				CP[playerid] = 3300;
				return 1;
			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 5,-2350.4587, -71.0529, 34.1625))
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 407)
	    {
       		if(CP[playerid] == 3300)
			{
				SetTimerEx("freze", 600, 0, "i", playerid);
	   			TogglePlayerControllable(playerid, 0);
				CreateExplosion( -2342.9187, -63.8279, 34.1625,1,100);
				CreateExplosion(-2356.2988, -62.8544, 34.1625,1,100);
				CreateExplosion( -2362.7542, -69.4313, 34.1625,1,100);
				CreateExplosion( -2360.3054, -77.1636, 34.1625,1,100);
				CreateExplosion(-2347.5767, -78.5228, 34.1625,1,100);
				CreateExplosion(-2339.4741, -71.6620, 34.1625 ,1,100);
				GameTextForPlayer(playerid, "~y~Stinge focul", 2000, 5);
				SetPlayerCheckpoint(playerid,-2144.4551, 207.3384, 34.1803,4);//2
				CP[playerid] = 3400;
				return 1;

			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 5,-2144.4551, 207.3384, 34.1803))
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 407)
	    {
	        if(CP[playerid] == 3400)
			{
				SetTimerEx("freze", 600, 0, "i", playerid);
	   			TogglePlayerControllable(playerid, 0);
				CreateExplosion( -2136.9658, 212.6434, 34.1803,1,100);
				CreateExplosion(-2137.2166, 201.7620, 34.1803,1,100);
				CreateExplosion( -2154.8706, 202.8452, 34.1803,1,100);
				CreateExplosion(-2146.3760, 198.4415, 34.1803 ,1,100);
				CreateExplosion(-2155.2280, 212.0127, 34.1803,1,100);
				CreateExplosion( -2145.6599, 216.7010, 34.1803,1,100);
    			GameTextForPlayer(playerid, "~w~Ai stins focul intoarcete la baza!", 2000, 5);
				SetPlayerCheckpoint(playerid,-2021.9381, 84.6554, 28.6645,4);//2
				CP[playerid] = 3500;
				return 1;
			}
		}
	}

	if(IsPlayerInRangeOfPoint(playerid, 5,-2021.9381, 84.6554, 28.6645))
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 407)
	    {
	        if(CP[playerid] == 3500)
			{
				CP[playerid] = 0;
				SetTimerEx("freze", 600, 0, "i", playerid);
	   			TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~r~Ai ajuns cu bine la baza!", 2000, 5);
				SendClientMessage(playerid, COLOR_GREEN,"*Ai primit 45000$ pentru munca depusa!");
				GivePlayerCash(playerid, 45000);
				DisablePlayerCheckpoint(playerid);
				OnJob[playerid] = 0;
                DisablePlayerCheckpoint(playerid);
                format(string,sizeof(string), "%s %d [CMD] -> /finish fireman ",PlayerName(playerid),playerid);
				JobLog(string);
				if(PlayerInfo[playerid][pPremiumAccount] > 0)
				{
				    GivePlayerCash(playerid, 3000);
				    SendClientMessage(playerid, COLOR_GREY, "Conturile Vip primesc mai mult");
				}
				return 1;
			}
		}
	}

	if(CP[playerid] == 6977)
	{
    	CP[playerid] = 6978;
 		SetPlayerCheckpoint(playerid,-317.3448, -1338.1493, 9.0231,6.0);
	    return 1;
	}
	if(CP[playerid] == 6978)
	{
	    if(farmer0 == vehicledsaid || trailerfarm0 == vehicledsaid || trailerfarm4 == vehicledsaid || trailerfarm3 == vehicledsaid || trailerfarm2 == vehicledsaid || trailerfarm1 == vehicledsaid || farmer1 == vehicledsaid || farmer2 == vehicledsaid || farmer3 == vehicledsaid || farmer4 == vehicledsaid)
		{}
		else return 1;
	    CP[playerid] ++;
	    SetPlayerCheckpoint(playerid,-232.1782, -1332.5043, 9.7169,6.0);
		format(string,sizeof(string), "%s [CMD] -> farmer cp 1",PlayerName(playerid));
		JobLog(string);
	    return 1;
 	}
 	if(CP[playerid] == 6979)
	{
		if(farmer0 == vehicledsaid || trailerfarm0 == vehicledsaid || trailerfarm4 == vehicledsaid || trailerfarm3 == vehicledsaid || trailerfarm2 == vehicledsaid || trailerfarm1 == vehicledsaid || farmer1 == vehicledsaid || farmer2 == vehicledsaid || farmer3 == vehicledsaid || farmer4 == vehicledsaid)
		{}
		else return 1;
	    CP[playerid] ++;
		SetPlayerCheckpoint(playerid,-183.5653, -1353.8755, 4.2648,6.0);
  		format(string,sizeof(string), " %s [CMD] -> farmer cp 2",PlayerName(playerid));
		JobLog(string);
		return 1;
	}
	if(CP[playerid] == 6980)
	{
		if(farmer0 == vehicledsaid || trailerfarm0 == vehicledsaid || trailerfarm4 == vehicledsaid || trailerfarm3 == vehicledsaid || trailerfarm2 == vehicledsaid || trailerfarm1 == vehicledsaid || farmer1 == vehicledsaid || farmer2 == vehicledsaid || farmer3 == vehicledsaid || farmer4 == vehicledsaid)
		{}
		else return 1;
	    CP[playerid] ++;
		SetPlayerCheckpoint(playerid,-218.3816, -1370.8596, 6.6648,6.0);

		format(string,sizeof(string), " %s [CMD] -> farmer cp 3",PlayerName(playerid));
		JobLog(string);
		return 1;
	}
	if(CP[playerid] == 6981)
	{
		if(farmer0 == vehicledsaid || trailerfarm0 == vehicledsaid || trailerfarm4 == vehicledsaid || trailerfarm3 == vehicledsaid || trailerfarm2 == vehicledsaid || trailerfarm1 == vehicledsaid || farmer1 == vehicledsaid || farmer2 == vehicledsaid || farmer3 == vehicledsaid || farmer4 == vehicledsaid)
		{}
		else return 1;
	    CP[playerid] ++;
		SetPlayerCheckpoint(playerid,-301.3360, -1386.7928, 10.8843,6.0);


		format(string,sizeof(string), " %s [CMD] -> farmer cp 4",PlayerName(playerid));
		JobLog(string);
		return 1;
	}
	if(CP[playerid] == 6982)
	{
		if(farmer0 == vehicledsaid || trailerfarm0 == vehicledsaid || trailerfarm4 == vehicledsaid || trailerfarm3 == vehicledsaid || trailerfarm2 == vehicledsaid || trailerfarm1 == vehicledsaid || farmer1 == vehicledsaid || farmer2 == vehicledsaid || farmer3 == vehicledsaid || farmer4 == vehicledsaid)
		{}
		else return 1;
	    CP[playerid] ++;
		SetPlayerCheckpoint(playerid,-204.2861, -1397.9261, 6.1934,6.0);


		format(string,sizeof(string), " %s [CMD] -> farmer cp 5",PlayerName(playerid));
		JobLog(string);
		return 1;
	}
	if(CP[playerid] == 6983)
	{
		if(farmer0 == vehicledsaid || trailerfarm0 == vehicledsaid || trailerfarm4 == vehicledsaid || trailerfarm3 == vehicledsaid || trailerfarm2 == vehicledsaid || trailerfarm1 == vehicledsaid || farmer1 == vehicledsaid || farmer2 == vehicledsaid || farmer3 == vehicledsaid || farmer4 == vehicledsaid)
		{}
		else return 1;
	    CP[playerid] ++;
		SetPlayerCheckpoint(playerid,-221.8514, -1417.5857, 5.3985,6.0);


		format(string,sizeof(string), " %s [CMD] -> farmer cp 6",PlayerName(playerid));
		JobLog(string);
		return 1;
	}
	if(CP[playerid] == 6984)
	{
		if(farmer0 == vehicledsaid || trailerfarm0 == vehicledsaid || trailerfarm4 == vehicledsaid || trailerfarm3 == vehicledsaid || trailerfarm2 == vehicledsaid || trailerfarm1 == vehicledsaid || farmer1 == vehicledsaid || farmer2 == vehicledsaid || farmer3 == vehicledsaid || farmer4 == vehicledsaid)
		{}
		else return 1;
	    CP[playerid] ++;
		SetPlayerCheckpoint(playerid,-317.6230, -1418.2540, 14.4014,6.0);// Du-te sa iei bani


		format(string,sizeof(string), " %s [CMD] -> farmer cp 7",PlayerName(playerid));
		JobLog(string);
		return 1;
	}
	if(CP[playerid] == 6985)
	{
		if(farmer0 == vehicledsaid || trailerfarm0 == vehicledsaid || trailerfarm4 == vehicledsaid || trailerfarm3 == vehicledsaid || trailerfarm2 == vehicledsaid || trailerfarm1 == vehicledsaid || farmer1 == vehicledsaid || farmer2 == vehicledsaid || farmer3 == vehicledsaid || farmer4 == vehicledsaid)
		{}
		else return 1;
	    CP[playerid] ++;
	    SendClientMessage(playerid,-1,"*Du-te la Ferma sa iti iei plata");
		SetPlayerCheckpoint(playerid,-372.7786, -1428.0117, 25.7670,6.0); //ai primit bani (fermier)

		format(string,sizeof(string), " %s [CMD] -> farmer cp 8",PlayerName(playerid));
		JobLog(string);
		return 1;
	}
	if(CP[playerid] == 6986)
	{
		if(farmer0 == vehicledsaid || trailerfarm0 == vehicledsaid || trailerfarm4 == vehicledsaid || trailerfarm3 == vehicledsaid || trailerfarm2 == vehicledsaid || trailerfarm1 == vehicledsaid || farmer1 == vehicledsaid || farmer2 == vehicledsaid || farmer3 == vehicledsaid || farmer4 == vehicledsaid)
		{}
		else return 1;
	    CP[playerid] = 0;
		SendClientMessage(playerid,-1,"Ai primit plata pentru un pogon arat");
		SendClientMessage(playerid,COLOR_GREEN,"Ai primit 30000$");
		DisablePlayerCheckpoint(playerid);
		GivePlayerCash(playerid, 30000);
		format(string,sizeof(string), "%s [CMD] -> farmer finish",PlayerName(playerid));
		JobLog(string);
		return 1;
 	}

	if(CP[playerid] == 22)
	{
		SendClientMessage(playerid,-1,"*Ai ajuns la destinatie!");
		DisablePlayerCheckpoint(playerid);
    	CP[playerid] = 0;
 	}
	if(CP[playerid] == 23)
	{
		SendClientMessage(playerid,-1,"*Ai ajuns la destinatie. Scrie /vplate sa inmatriculezi masina!");
		DisablePlayerCheckpoint(playerid);
    	CP[playerid] = 0;
 	}
 	if(CP[playerid] == 24)
	{
		SendClientMessage(playerid,-1,"*Ai ajuns la fata locului");
		DisablePlayerCheckpoint(playerid);
    	CP[playerid] = 0;
    	foreach(Player,i)
		{
			if(NeedBackUp[i] == 1)
			{
				NeedBackUp[i] = 0;
       			SendClientMessage(i,COLOR_ALLDEPT, "Un politist a ajuns la fata locului");
			}
		}
		return 1;
 	}
 	if(CP[playerid] == 26)
 	{
 	    if(GetVehicleTrailer(GetPlayerVehicleID(playerid)) == TccPlayerCar[playerid])
 	    {
 	    	format(string, sizeof(string),"Ai adus masina la sediu~n~Apasa LALT sa lasi masina");
	    	TextDrawSetString(TextdrawInfoBall, string);
			TextDrawShowForPlayer(playerid, TextdrawInfoBall);
			TextDrawShowForPlayer(playerid, TextdrawInfoBox);
			KillTimer(TimerH[playerid]);
   			TimerH[playerid]= SetTimerEx("HidesInfo", 7000, false, "i", playerid);
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		return 1;
	}

 	if(TaxiCallTime[playerid] > 0 && TaxiAccepted[playerid] < 999)
	{
	    TaxiAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Ai ajuns la destinatie", 5000, 1);
		TaxiCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
		return 1;
	}
 	if(CP[playerid]==1)
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
		    PlayerInfo[playerid][pJackSkill] ++;
		    Update(playerid, pJackSkillx);
			if(PlayerInfo[playerid][pJackSkill] == 50)
			SendClientMessage(playerid, COLOR_YELLOW, "* Acum ai skill 2 la jefuit masini, vei primi mai multi bani si mai putin timp de asteptare.");
			else if(PlayerInfo[playerid][pJackSkill] == 100)
			SendClientMessage(playerid, COLOR_YELLOW, "* Acum ai skill 3 la jefuit masini, vei primi mai multi bani si mai putin timp de asteptare.");
			else if(PlayerInfo[playerid][pJackSkill] == 200)
			SendClientMessage(playerid, COLOR_YELLOW, "* Acum ai skill 4 la jefuit masini, vei primi mai multi bani si mai putin timp de asteptare.");
			else if(PlayerInfo[playerid][pJackSkill] == 400)
			SendClientMessage(playerid, COLOR_YELLOW, "* Acum ai skill 5 la jefuit masini, vei primi mai multi bani si mai putin timp de asteptare.");
			new level = PlayerInfo[playerid][pJackSkill];
			if(level >= 0 && level <= 50)
			{
			    new rand = random(sizeof(SELLCAR1));
			    format(string, sizeof(string), "	Ai vandut masina pentru $%d, acum trebuie sa astepti 20 minute pentru a mai vinde una.", SELLCAR1[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerCash(playerid, SELLCAR1[rand]);
			    PlayerInfo[playerid][pCarTime] = 1200;
				Update(playerid, pCarTimex);
			}
			else if(level >= 51 && level <= 100)
			{
			    new rand = random(sizeof(SELLCAR2));
			    format(string, sizeof(string), "	Ai vandut masina pentru $%d, acum trebuie sa astepti 18 minute pentru a mai vinde una.", SELLCAR2[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerCash(playerid, SELLCAR2[rand]);
			    PlayerInfo[playerid][pCarTime] = 1080;
			    Update(playerid, pCarTimex);
			}
			else if(level >= 101 && level <= 200)
			{
			    new rand = random(sizeof(SELLCAR3));
			    format(string, sizeof(string), "	Ai vandut masina pentru $%d, acum trebuie sa astepti 16 minute pentru a mai vinde una.", SELLCAR3[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerCash(playerid, SELLCAR3[rand]);
			    PlayerInfo[playerid][pCarTime] = 960;
			    Update(playerid, pCarTimex);
			}
			else if(level >= 201 && level <= 400)
			{
			    new rand = random(sizeof(SELLCAR4));
			    format(string, sizeof(string), "	Ai vandut masina pentru $%d, acum trebuie sa astepti 14 minute pentru a mai vinde una.", SELLCAR4[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerCash(playerid, SELLCAR4[rand]);
			    PlayerInfo[playerid][pCarTime] = 840;
			    Update(playerid, pCarTimex);
			}
			else if(level >= 401)
			{
			    new money = 6000;
			    format(string, sizeof(string), "	Ai vandut masina pentru $%d, acum trebuie sa astepti 12 minute pentru a mai vinde una.", money);
    			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerCash(playerid, money);
			    PlayerInfo[playerid][pCarTime] = 720;
			    Update(playerid, pCarTimex);
			}
			GameTextForPlayer(playerid, "~y~Masina vanduta!", 2500, 1);
			CP[playerid] = 0;
		    DisablePlayerCheckpoint(playerid);
		    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		}
		else
		{
		    GameTextForPlayer(playerid, "	Nu esti intr-o masina.", 5000, 1);
		}
	}
    if(CP[playerid] == 25)
	{
	    SetPlayerCheckpoint(playerid,1219.1302, -1813.1627, 15.5826,7.0);//
	    SendClientMessage(playerid,-1,"*Ai nevoie de permis, Du-te la CP sa dai testul DMW!");
		CP[playerid] ++;
		return 1;
	}
	if(CP[playerid] == 233556)
	{
	    SendClientMessage(playerid,-1,"*Scrie /exam pentru a incepe testul DMW!");
		DisablePlayerCheckpoint(playerid);
		CP[playerid] = 0;
		return 1;
	}
	new Float:health;
	new veh = GetPlayerVehicleID(playerid);
	GetVehicleHealth(veh, health);
	if(TakingLeeson[playerid] == 2 && IsAExamCar(veh))
	{
	    if(health < 700)
		{
		    CP[playerid] = 0;
  			TakingLeeson[playerid] =0;
			GivePlayerCash(playerid, - 300);
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			DisablePlayerCheckpoint(playerid);
			SendClientMessage(playerid,0xFF1A00C8,"*Masina este avariata. Ai picat testul si ai fost taxat cu 300$!");
			return 1;
		}
		else if(health < 750)
		{
		    GameTextForPlayer(playerid, "~w~Ai grija poti pica testul!", 1000,4);
		}
		else if(health < 800)
		{
		    GameTextForPlayer(playerid, "~w~Vehicul este avariat ai grija!", 1000,4);
		}
		else if(health < 850)
		{
		    GameTextForPlayer(playerid, "~w~Vehiculul este avariata!", 1000,4);
		}
		else if(health < 900)
		{
		    GameTextForPlayer(playerid, "~w~Vehiculul este lovit!", 1000,4);
		}
		else if(health < 950)
		{
		    GameTextForPlayer(playerid, "~w~Vehiculul este usor zgariata!", 1000,4);
   		}
   		else
		{
		    GameTextForPlayer(playerid, "~w~Te descurci bine!", 1000,4);
   		}
	}
	if(CP[playerid] == 2333)
	{
	    TakingLeeson[playerid] = 2;
	    CP[playerid] = 2335;
		SetPlayerCheckpoint(playerid,1183.0375, -1852.5251, 12.9940,7.0);//2
		return 1;
	}
	if(CP[playerid] == 2335)
	{
		SetPlayerCheckpoint(playerid,1063.0513, -1845.0778, 12.9940,7.0);//3
	    CP[playerid] ++;
		return 1;
	}
	if(CP[playerid] == 2336)
	{
		SetPlayerCheckpoint(playerid,1032.0001, -1797.6718, 12.9940,7.0);//4
	    CP[playerid] ++;
		return 1;
	}
	if(CP[playerid] == 2337)
	{
		SetPlayerCheckpoint(playerid,1037.5310, -1616.0901, 12.9940,7.0);//5
	    CP[playerid] ++;
		return 1;
	}
	if(CP[playerid] == 2338)
	{
		SetPlayerCheckpoint(playerid,1067.0244, -1404.4171, 12.9940,7.0);//6
	    CP[playerid] ++;
		return 1;
	}
	if(CP[playerid] == 2339)
	{
		SetPlayerCheckpoint(playerid,1198.2256, -1394.0341, 12.9940,7.0);//7
	    CP[playerid] ++;
		return 1;
	}
	if(CP[playerid] == 2340)
	{
		SetPlayerCheckpoint(playerid,1202.1218, -1283.8127, 12.9940,7.0);//8
	    CP[playerid] ++;
		return 1;
	}
	if(CP[playerid] == 2341)
	{
		SetPlayerCheckpoint(playerid,1355.6862, -1274.1091, 12.9940,7.0);//9
	    CP[playerid] ++;
		return 1;
	}
	if(CP[playerid] == 2342)
	{
		SetPlayerCheckpoint(playerid,1367.0596, -1240.7219, 12.9940,7.0);//10
	    CP[playerid] ++;
		return 1;
	}
	if(CP[playerid] == 2343)
	{
		SetPlayerCheckpoint(playerid,1453.1199, -1245.0482, 12.9940,7.0);//11
	    CP[playerid] ++;
		return 1;
	}
	if(CP[playerid] == 2344)
	{
		SetPlayerCheckpoint(playerid,1453.5642, -1440.0986, 12.9940,7.0);//12
	    CP[playerid] ++;
		return 1;
	}
	if(CP[playerid] == 2345)
	{
		SetPlayerCheckpoint(playerid,1426.1348, -1728.1082, 12.9940,7.0);//13
	    CP[playerid] ++;
		return 1;
	}
	if(CP[playerid] == 2346)
	{
		SetPlayerCheckpoint(playerid,1387.6582, -1738.7705, 12.9940,7.0);//14
	    CP[playerid] ++;
		return 1;
	}
	if(CP[playerid] == 2347)
	{
		SetPlayerCheckpoint(playerid,1384.0906, -1871.6071, 12.9940,7.0);//15
	    CP[playerid] ++;
		return 1;
	}
	if(CP[playerid] == 2348)
	{
		SetPlayerCheckpoint(playerid,1300.4055, -1850.9200, 12.9940,7.0);//16
	    CP[playerid] ++;
		return 1;
	}
	if(CP[playerid] == 2349)
	{
		SetPlayerCheckpoint(playerid,1270.9585, -1843.5492, 12.9940,7.0);//17
	    CP[playerid] ++;
		return 1;
	}
	if(CP[playerid] == 2350)
	{
		SetPlayerCheckpoint(playerid,1278.7045, -1826.3926, 12.9940,2.0);//18
	    CP[playerid] ++;
		GameTextForPlayer(playerid, "Aproape ai terminat, parcheaza masina!", 2000,5);
		return 1;
	}
	if(CP[playerid] == 2351)
	{
	    ClearChatbox(playerid, 2);
		SendClientMessage(playerid,-1,"{a9c4e4}Acum poti lua un job. Te poti duce la primarie pentru a lua unul.");
		SendClientMessage(playerid,-1,"{a9c4e4}Nu uita de celelalte permise /licenses");
		PlayerInfo[playerid][pCarLic] = 1;
		Update(playerid, pCarLicx);
		CP[playerid] = 0;
		TakingLesson[playerid] =0;
		DisablePlayerCheckpoint(playerid);
		GivePlayerCash(playerid, - 3500);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		GameTextForPlayer(playerid, "-3500$ Passed!", 3000,6);
		SendClientMessage(playerid,0x00FF00C8,"*FELICITARI, ai luat carnetul!");
		return 1;
	}
	//swep
	if(CP[playerid] == 1117)
    {
		SetPlayerCheckpoint(playerid, 1666.0861, -1870.6160, 13.5246, 2);
        CP[playerid] = 69000;
        format(string,sizeof(string), "%s %d [CP] 1",PlayerName(playerid),playerid);
		JobLog(string);
        return 1;
	}
	if(CP[playerid] == 69000)
    {
		SetPlayerCheckpoint(playerid, 1689.4070, -1794.2860, 13.5246, 2);
        CP[playerid] = 69100;
        format(string,sizeof(string), "%s %d [CP] 2",PlayerName(playerid),playerid);
		JobLog(string);
        return 1;
	}
	if(CP[playerid] == 69100)
    {
		SetPlayerCheckpoint(playerid,	1688.8116, -1732.8749, 13.0938, 2);
        CP[playerid] = 69200;
        format(string,sizeof(string), "%s %d [CP] 3",PlayerName(playerid),playerid);
		JobLog(string);
        return 1;
	}

	if(CP[playerid] == 69200)
    {
		SetPlayerCheckpoint(playerid,	1454.4020, -1732.2371, 13.0938, 2);
        CP[playerid] = 69300;
        format(string,sizeof(string), "%s %d [CP] 4",PlayerName(playerid),playerid);
		JobLog(string);
        return 1;
	}

	if(CP[playerid] == 69300)
    {
		SetPlayerCheckpoint(playerid,1389.4584, -1768.7015, 13.0938, 2);
        CP[playerid] = 69400;
        format(string,sizeof(string), "%s %d [CP] 5",PlayerName(playerid),playerid);
		JobLog(string);
        return 1;
	}


	if(CP[playerid] == 69400)
    {
		SetPlayerCheckpoint(playerid,1406.0505, -1873.0901, 13.0938, 2);
        CP[playerid] = 69500;
        format(string,sizeof(string), "%s %d [CP] 6",PlayerName(playerid),playerid);
		JobLog(string);
        return 1;
	}

	if(CP[playerid] == 69500)
    {
		SetPlayerCheckpoint(playerid,1588.2683, -1874.8688, 13.0938, 2);
        CP[playerid] = 69600;
        format(string,sizeof(string), "%s %d [CP] 7",PlayerName(playerid),playerid);
		JobLog(string);
        return 1;
	}

	if(CP[playerid] == 69600)
    {
		SetPlayerCheckpoint(playerid,1607.7823, -1838.8551, 13.0938, 2);
		GameTextForPlayer(playerid,"Ai curatat strada acum Du-te sa iei bani!",5000,3);
        CP[playerid] = 690;
        format(string,sizeof(string), "%s %d [CP] 8",PlayerName(playerid),playerid);
		JobLog(string);
        return 1;
	}
	if(CP[playerid] == 690)
	{
	    GivePlayerCash(playerid,30000);
        DisablePlayerCheckpoint(playerid);
        CP[playerid] = 0;
		if(PlayerInfo[playerid][pPremiumAccount] > 0)	{GivePlayerCash(playerid, 3000);  SendClientMessage(playerid, COLOR_GREY, "Conturile Vip primesc mai mult");	}
		SendClientMessage(playerid,-1,"Felicitari Ai terminat treaba!");
		SendClientMessage(playerid,COLOR_GREEN,"Ai primit 30000!");
        format(string,sizeof(string), "%s %d [CP] Finish",PlayerName(playerid),playerid);
		JobLog(string);
        return 1;
	}
	if(CP[playerid] == 100)
	{
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 495)
	    {
            SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			CP[playerid] = 0;
        	DisablePlayerCheckpoint(playerid);
			SpawnPlayer(playerid);
			return 1;
		}
		SetPlayerCheckpoint(playerid, -1724.0248, 2732.0569, 60.7258,10.0);
		GameTextForPlayer(playerid,"~w~Asteapta sa inceapa cursa!",3000,3);
		TogglePlayerControllable(playerid,0);
	}
	if(CP[playerid] == 101)
	{
		CP[playerid] = 102;
		SetPlayerCheckpoint(playerid, -1773.1907, 2713.4629, 58.9633,10.0);
	}
	if(CP[playerid] == 102)
	{
		CP[playerid] = 103;
		SetPlayerCheckpoint(playerid, -1836.9094, 2640.6882, 52.6566,10.0);
	}
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	PlayerPlaySound(playerid, 1137,0,0,0);//beepout
	if(CP[playerid] == 22)
	{
        CP[playerid] = 0;
	    DisablePlayerRaceCheckpoint(playerid);
 	    GameTextForPlayer(playerid, "Ai ajuns la destinatie!", 3000, 1);
 	    return 1;
	}
	if(CP[playerid] == 300)
	{
		CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid,3,1742.0460,-2493.9355,14.0187,1416.7161,-2494.6421,32.1475,20);
    	return 1;
	}
	if(CP[playerid] == 301)
	{
		CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid,3,1416.7161,-2494.6421,32.147,1067.1268,-2250.6785,82.3130,20);
    	return 1;
	}
	if(CP[playerid] == 302)
	{
		CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid,3,1067.1268,-2250.6785,82.3130, 1056.3936,-1914.2643,88.4096,20);
    	return 1;
	}
	if(CP[playerid] == 303)
	{
		CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid,3,1056.3936,-1914.2643,88.4096,	1244.6002,-1789.7606,56.2366,20);
    	return 1;
	}
	if(CP[playerid] == 304)
	{
		CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid,3,1244.6002,-1789.7606,56.2366,	1448.9181,-1686.3962,59.8053,20);
    	return 1;
	}
	if(CP[playerid] == 305)
	{
		CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid,3,1448.9181,-1686.3962,59.8053,	1694.2358,-1497.7638,66.9590,20);
    	return 1;
	}
	if(CP[playerid] == 306)
	{
		CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid,3,1694.2358,-1497.7638,66.9590,	1721.0808,-1321.4491,94.1045,20);
    	return 1;
	}
	if(CP[playerid] == 307)
	{
		CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid,3,1721.0808,-1321.4491,94.1045,	1839.8062,-1079.3993,117.0262,20);
    	return 1;
	}
	if(CP[playerid] == 308)
	{
		CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid,3,1839.8062,-1079.3993,117.0262,	2020.3508,-1075.5878,127.8175,20);
    	return 1;
	}
	if(CP[playerid] == 309)
	{
		CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid,3,2020.3508,-1075.5878,127.8175, 2233.4810,-1223.3289,142.7646,20);
    	return 1;
	}
	if(CP[playerid] == 310)
	{
		CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid,3,2233.4810,-1223.3289,142.7646, 2433.1838,-1510.4385,125.2089	,20);
    	return 1;
	}
	if(CP[playerid] == 311)
	{
		CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid,3,2433.1838,-1510.4385,125.2089,	2510.9861,-1707.9293,56.2461,20);
    	return 1;
	}
	if(CP[playerid] == 312)
	{
		CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid,3,2510.9861,-1707.9293,56.2461,	2564.9548,-1943.7393,70.6120,20);
    	return 1;
	}
	if(CP[playerid] == 313)
	{
		CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid,3,2564.9548,-1943.7393,70.6120,	2504.7727,-2121.6382,83.1458,20);
    	return 1;
	}
	if(CP[playerid] == 314)
	{
		CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid,3,2504.7727,-2121.6382,83.1458,	2354.6987,-2310.3728,82.1352,20);
    	return 1;
	}
	if(CP[playerid] == 315)
	{
		CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid,3,2354.6987,-2310.3728,82.1352,	2174.3784,-2409.4021,65.2329,20);
    	return 1;
	}
	if(CP[playerid] == 316)
	{
		CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid,3,2174.3784,-2409.4021,65.2329,	1979.3405,-2464.6965,41.7011,20);
    	return 1;
	}
	if(CP[playerid] == 317)
	{
		CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid,3,1979.3405,-2464.6965,41.7011,1670.5957,-2493.8787,14.0605,20);
    	return 1;
	}
	if(CP[playerid] == 318)
	{
		CP[playerid]++;
        SetPlayerRaceCheckpoint(playerid,1,1670.5957,-2493.8787,14.0605, 0.0,  0.0,  0.0,  20);
        return 1;
	}
	if(CP[playerid] == 319)
	{
    	ClearChatbox(playerid, 2);
		PlayerInfo[playerid][pFlyLic] = 1;
		Update(playerid, pFlyLicx);
		CP[playerid] = 0;
		TakingLesson[playerid] =0;
		DisablePlayerRaceCheckpoint(playerid);
		GivePlayerCash(playerid, - 20000);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		GameTextForPlayer(playerid, "-20000$ Passed!", 3000,6);
		SendClientMessage(playerid,-1,"{a9c4e4}Nu uita de celelalte permise /licenses");
		SendClientMessage(playerid,0x00FF00C8,"*FELICITARI, ai luat licenta de zbor!");
    	return 1;
	}
	if(CP[playerid] == 320)
	{
        CP[playerid] ++;
        SetPlayerRaceCheckpoint(playerid, 3, 401.8729,-2021.8424,-0.2336, 217.9448,-2010.7357,-0.2293, 10);
        return 1;
	}
 	if(CP[playerid] == 321)
	{
       CP[playerid] ++;
       SetPlayerRaceCheckpoint(playerid, 3, 217.9448,-2010.7357,-0.2293, -12.0226,-1888.4110,-0.3924, 10);
       return 1;
	}
 	if(CP[playerid] == 322)
	{
 		CP[playerid] ++;
	    SetPlayerRaceCheckpoint(playerid, 3, -12.0226,-1888.4110,-0.3924, -109.9146,-1923.6351,-0.0178, 10);
	    return 1;
   	}
 	if(CP[playerid] == 323)
	{
	  	CP[playerid] ++;
	    SetPlayerRaceCheckpoint(playerid, 3, -109.9146,-1923.6351,-0.0178, 110.7303,-2072.8345,-0.5142, 10);
	    return 1;
   	}
 	if(CP[playerid] == 324)
	{
	    CP[playerid] ++;
	    SetPlayerRaceCheckpoint(playerid, 3, 110.7303,-2072.8345,-0.5142, -15.0842,-2196.6453,-0.2150, 10);
    	return 1;
	}
 	if(CP[playerid] == 325)
	{
	 	CP[playerid] ++;
	    SetPlayerRaceCheckpoint(playerid, 3, -15.0842,-2196.6453,-0.2150, 104.4857,-2260.2151,-0.2999, 10);
	    return 1;
 	}
 	if(CP[playerid] == 326)
	{
    	CP[playerid] ++;
	    SetPlayerRaceCheckpoint(playerid, 3, 104.4857,-2260.2151,-0.2999, 222.8849,-2267.6492,-0.1433, 10);
	    return 1;
	}
 	if(CP[playerid] == 327)
	{
		CP[playerid] ++;
	    SetPlayerRaceCheckpoint(playerid, 3, 222.8849,-2267.6492,-0.1433, 349.5170,-2242.3909,-0.5739, 10);
	    return 1;
 	}
 	if(CP[playerid] == 328)
	{
        CP[playerid] = 329;
	    SetPlayerRaceCheckpoint(playerid, 3, 349.5170,-2242.3909,-0.5739, 444.9005,-2225.7278,-0.3964, 10);
	    return 1;
	}
 	if(CP[playerid] == 329)
	{
        CP[playerid] ++;
	    SetPlayerRaceCheckpoint(playerid, 3, 444.9005,-2225.7278,-0.3964, 529.6323,-2204.0374,0.2555, 10);
	    return 1;
 	}
 	if(CP[playerid] == 330)
	{
     	CP[playerid] ++;
	    SetPlayerRaceCheckpoint(playerid, 3, 529.6323,-2204.0374,0.2555, 591.3519,-2182.2417,-0.1883, 10);
		return 1;
 	}
 	if(CP[playerid] == 331)
	{
		CP[playerid] ++;
	    SetPlayerRaceCheckpoint(playerid, 3, 591.3519,-2182.2417,-0.1883, 709.6509,-2145.7590,-0.2951, 10);
	    return 1;
  	}
 	if(CP[playerid] == 332)
	{
		CP[playerid] ++;
	    SetPlayerRaceCheckpoint(playerid, 3, 709.6509,-2145.7590,-0.2951, 799.3760,-2123.2693,-0.0707, 10);
	    return 1;
  	}
 	if(CP[playerid] == 333)
	{
	  	CP[playerid] ++;
	    SetPlayerRaceCheckpoint(playerid, 3, 799.3760,-2123.2693,-0.0707, 862.3469,-2100.2000,-0.3171, 10);
	    return 1;
   	}
 	if(CP[playerid] == 334)
	{
 		CP[playerid] ++;
	    SetPlayerRaceCheckpoint(playerid, 3, 862.3469,-2100.2000,-0.3171, 877.7070,-2032.1055,-0.4963, 10);
	    return 1;
	}
 	if(CP[playerid] == 335)
	{
	    CP[playerid] ++;
	    SetPlayerRaceCheckpoint(playerid, 3, 877.7070,-2032.1055,-0.4963, 782.6375,-2019.4769,-0.2218, 10);
 		return 1;
	}
 	if(CP[playerid] == 336)
	{
	    CP[playerid] = 337;
	    SetPlayerRaceCheckpoint(playerid, 3, 782.6375,-2019.4769,-0.2218, 663.7577,-2003.5946,-0.6398, 10);
		return 1;
	}
 	if(CP[playerid] == 337)
	{
		CP[playerid] ++;
	    SetPlayerRaceCheckpoint(playerid, 3, 663.7577,-2003.5946,-0.6398, 514.1928,-1965.5811,-0.4063, 10);
	    return 1;
 	}
 	if(CP[playerid] == 338)
	{
    	CP[playerid] ++;
	    SetPlayerRaceCheckpoint(playerid, 3, 514.1928,-1965.5811,-0.4063, 417.5231,-1941.5718,-0.2089, 10);
	    return 1;
	}
 	if(CP[playerid] == 339)
	{
		CP[playerid] ++;
	    SetPlayerRaceCheckpoint(playerid, 3, 417.5231,-1941.5718,-0.2089, 422.4020,-1918.3030,-0.2200, 10);
	    return 1;
	}
 	if(CP[playerid] == 340)
	{
	    DisablePlayerRaceCheckpoint(playerid);
        CP[playerid] = 0;
        PlayerInfo[playerid][pBoatLic] = 1;
        Update(playerid, pBoatLicx);
		SendClientMessage(playerid,-1,"{a9c4e4}Nu uita de celelalte permise /licenses");
		SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Info: {FFFFFF}Felicitari! Ai primit licenta de navigat!");
		RemovePlayerFromVehicle(playerid);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		SetPlayerPos(playerid, 436.4564,-1900.2853,2.8703);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		GivePlayerCash(playerid, -5000);
        return 1;
	}
	if(CP[playerid] == 342)
	{
		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,1494.2529,-2490.1851,14.0286,1706.3286,-2496.4319,20.3764	, 10);
		return 1;
	}
	if(CP[playerid] == 343)
	{
		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,1706.3286,-2496.4319,20.3764,2073.9978,-2493.8071,62.4403	, 10);
		return 1;
	}
	if(CP[playerid] == 344)
	{
		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,2073.9978,-2493.8071,62.4403,2555.5811,-2485.1550,83.9768	, 10);
		return 1;
	}
	if(CP[playerid] == 345)
	{
		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,2555.5811,-2485.1550,83.9768,2749.4539,-2475.6541,79.9651	, 10);
		SendClientMessage(playerid,COLOR_LIGHTRED,"Arunca pamfletele pestre orasul LosSantos acum!");
		SendClientMessage(playerid,-1,"Apasa tasta 2");
		return 1;
	}
	if(CP[playerid] == 346)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,2749.4539,-2475.6541,79.9651,2828.0977,-2043.2323,48.9486	, 10);
		return 1;
	}
	if(CP[playerid] == 347)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,2828.0977,-2043.2323,48.9486,2886.5850,-1616.6516,61.2453	, 10);
		return 1;
	}
	if(CP[playerid] == 348)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,2886.5850,-1616.6516,61.2453,2812.6848,-1324.3114,104.8526	, 10);
		return 1;
	}
	if(CP[playerid] == 349)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,2812.6848,-1324.3114,104.8526,2558.5920,-1113.8190,129.575	, 10);
		return 1;
	}
	if(CP[playerid] == 350)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,2558.5920,-1113.8190,129.575,2252.0698,-1033.7498,110.6822	, 10);
		return 1;
	}
	if(CP[playerid] == 351)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,2252.0698,-1033.7498,110.6822,1847.4465,-1002.1687,77.4141	, 10);
		return 1;
	}
	if(CP[playerid] == 352)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,1847.4465,-1002.1687,77.4141,1508.7177,-955.5582,73.8707	, 10);
		return 1;
	}
	if(CP[playerid] == 353)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,1508.7177,-955.5582,73.8707,1311.9503,-932.9581,64.9198		, 10);
		return 1;
	}
	if(CP[playerid] == 354)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,1311.9503,-932.9581,64.9198,1086.8439,-957.0173,73.6740		, 10);
		return 1;
	}
	if(CP[playerid] == 355)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,1086.8439,-957.0173,73.6740,821.0273,-1028.9167,62.3844		, 10);
		return 1;
	}
	if(CP[playerid] == 356)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,821.0273,-1028.9167,62.3844,555.4081,-1241.7786,44.3883		, 10);
		return 1;
	}
	if(CP[playerid] == 357)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,555.4081,-1241.7786,44.3883,283.9326,-1417.5023,49.6694		, 10);
		return 1;
	}
	if(CP[playerid] == 358)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,283.9326,-1417.5023,49.6694,137.2016,-1569.1832,42.9716		, 10);
		return 1;
	}
	if(CP[playerid] == 359)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,137.2016,-1569.1832,42.9716,130.2863,-1716.0511,45.5262		, 10);
		return 1;
	}
	if(CP[playerid] == 360)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,130.2863,-1716.0511,45.5262,368.3060,-1819.5002,26.7444		, 10);
		return 1;
	}
	if(CP[playerid] == 361)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,368.3060,-1819.5002,26.7444	,579.4827,-1801.3944,49.0033	, 10);
		return 1;
	}
	if(CP[playerid] == 362)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,579.4827,-1801.3944,49.0033	,741.6734,-1778.6406,34.9196	, 10);
		return 1;
	}
	if(CP[playerid] == 363)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,741.6734,-1778.6406,34.9196	,1025.5376,-1819.4841,47.7093	, 10);
		return 1;
	}
	if(CP[playerid] == 364)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,1025.5376,-1819.4841,47.7093,1220.7064,-1847.7670,55.2732	, 10);
		return 1;
	}
	if(CP[playerid] == 365)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,1220.7064,-1847.7670,55.2732,1457.5536,-1872.9706,50.6389	, 10);
		return 1;
	}
	if(CP[playerid] == 366)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,1457.5536,-1872.9706,50.6389,1791.9611,-1845.5729,59.9574	, 10);
		return 1;
	}
	if(CP[playerid] == 367)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,1791.9611,-1845.5729,59.9574,2056.7771,-1869.6968,65.6741	, 10);
		return 1;
	}
	if(CP[playerid] == 368)
	{
		if(OnJob[playerid]!=9) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Arunca Pamfletele!",2200,3);
 		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,2056.7771,-1869.6968,65.6741,2171.9531,-2078.8545,65.9262	, 10);
		return 1;
	}
	if(CP[playerid] == 369)
	{
		GameTextForPlayer(playerid,"~b~~n~~n~~n~~n~~n~~n~Nu mai arunca Pamfletele!",2200,3);
		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,2171.9531,-2078.8545,65.9262,1886.7606,-2487.6631,20.1201	, 10);
		return 1;
	}
	if(CP[playerid] == 370)
	{
		CP[playerid] ++;
		SetPlayerRaceCheckpoint(playerid, 3,1886.7606,-2487.6631,20.1201,1484.7490,-2488.7163,14.0641	, 10);
		return 1;
	}
	if(CP[playerid] == 371)
	{
		CP[playerid] = 372;
		SetPlayerRaceCheckpoint(playerid,4,1484.7490,-2488.7163,14.064, 1410.5046, -2495.3225,14.0,10);
		return 1;
	}
	if(CP[playerid] == 372)
	{
	    new params[20], string[100];
	    CP[playerid] = 0;
	    DisablePlayerRaceCheckpoint(playerid);
	    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai primit 64.000$ pentru Tura.");
	    GivePlayerCash(playerid,64000);
     	format(string,sizeof(string), "%s %d [CMD] -> finish paperboy ",PlayerName(playerid),playerid);
		JobLog(string);
		SetTimerEx("DestroyPapers",1000,false,"i",playerid);
		cmd_over(playerid,params);
		return 1;
	}
	if(CP[playerid] == 374)
	{
	    CP[playerid] = 0;
	    DisablePlayerRaceCheckpoint(playerid);
      	TextDrawSetString(TextdrawInfoBall, "Apasa 2 pentru a incarca~n~mai multe produse!");
		TextDrawShowForPlayer(playerid, TextdrawInfoBall);
		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
   		KillTimer(TimerH[playerid]);
		TimerH[playerid]= SetTimerEx("HidesInfo", 7000, false, "i", playerid);
	    return 1;
	}
	if(CP[playerid] == 373)
	{
  	  	if(IsValidDynamicObject(CrateBoat[0][playerid])) DestroyDynamicObject(CrateBoat[0][playerid]);
	  	if(IsValidDynamicObject(CrateBoat[1][playerid])) DestroyDynamicObject(CrateBoat[1][playerid]);
		if(IsValidDynamicObject(CrateBoat[2][playerid])) DestroyDynamicObject(CrateBoat[2][playerid]);
		GivePlayerCash(playerid,24000);
 	    GameTextForPlayer(playerid, "+24000", 2000, 1);
 	    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai primit 24000 pe produsele tale. Du-te la dockuri sa iei mai multe!");
 	    CP[playerid] = 374;
		SetPlayerRaceCheckpoint(playerid,4,2513.4146, -2713.1296, 0.9201, 2508.0911, -2713.4126, 0.9201,10);
		return 1;
  	}
  	if(CP[playerid] == 375)
	{
  	  	if(IsValidDynamicObject(CrateBoat[0][playerid])) DestroyDynamicObject(CrateBoat[0][playerid]);
	  	if(IsValidDynamicObject(CrateBoat[1][playerid])) DestroyDynamicObject(CrateBoat[1][playerid]);
		if(IsValidDynamicObject(CrateBoat[2][playerid])) DestroyDynamicObject(CrateBoat[2][playerid]);
		GivePlayerCash(playerid,25000);
 	    GameTextForPlayer(playerid, "+25000", 2000, 1);
 	    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai primit 25000 pe produsele tale. Du-te la dockuri sa iei mai multe!");
 	    CP[playerid] = 374;
		SetPlayerRaceCheckpoint(playerid,4,2513.4146, -2713.1296, 0.9201, 2508.0911, -2713.4126, 0.9201,10);
		return 1;
  	}
  	if(CP[playerid] == 376)
	{
  	  	if(IsValidDynamicObject(CrateBoat[0][playerid])) DestroyDynamicObject(CrateBoat[0][playerid]);
	  	if(IsValidDynamicObject(CrateBoat[1][playerid])) DestroyDynamicObject(CrateBoat[1][playerid]);
		if(IsValidDynamicObject(CrateBoat[2][playerid])) DestroyDynamicObject(CrateBoat[2][playerid]);
		GivePlayerCash(playerid,30000);
 	    GameTextForPlayer(playerid, "+30000", 2000, 1);
 	    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai primit 30000 pe produsele tale. Du-te la dockuri sa iei mai multe!");
 	    CP[playerid] = 374;
		SetPlayerRaceCheckpoint(playerid,4,2513.4146, -2713.1296, 0.9201, 2508.0911, -2713.4126, 0.9201,10);
		return 1;
  	}
  	if(CP[playerid] == 377)
	{
  	  	if(IsValidDynamicObject(CrateBoat[0][playerid])) DestroyDynamicObject(CrateBoat[0][playerid]);
	  	if(IsValidDynamicObject(CrateBoat[1][playerid])) DestroyDynamicObject(CrateBoat[1][playerid]);
		if(IsValidDynamicObject(CrateBoat[2][playerid])) DestroyDynamicObject(CrateBoat[2][playerid]);
		GivePlayerCash(playerid,23100);
 	    GameTextForPlayer(playerid, "+23100", 2000, 1);
 	    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai primit 23100 pe produsele tale. Du-te la dockuri sa iei mai multe!");
 	    CP[playerid] = 374;
		SetPlayerRaceCheckpoint(playerid,4,2513.4146, -2713.1296, 0.9201, 2508.0911, -2713.4126, 0.9201,10);
		return 1;
  	}
  	if(CP[playerid] == 378)
	{
  	  	if(IsValidDynamicObject(CrateBoat[0][playerid])) DestroyDynamicObject(CrateBoat[0][playerid]);
	  	if(IsValidDynamicObject(CrateBoat[1][playerid])) DestroyDynamicObject(CrateBoat[1][playerid]);
		if(IsValidDynamicObject(CrateBoat[2][playerid])) DestroyDynamicObject(CrateBoat[2][playerid]);
		GivePlayerCash(playerid,25300);
 	    GameTextForPlayer(playerid, "+25300", 2000, 1);
 	    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai primit 25300 pe produsele tale. Du-te la dockuri sa iei mai multe!");
 	    CP[playerid] = 374;
		SetPlayerRaceCheckpoint(playerid,4,2513.4146, -2713.1296, 0.9201, 2508.0911, -2713.4126, 0.9201,10);
		return 1;
  	}
  	if(CP[playerid] == 379)
	{
  	  	if(IsValidDynamicObject(CrateBoat[0][playerid])) DestroyDynamicObject(CrateBoat[0][playerid]);
	  	if(IsValidDynamicObject(CrateBoat[1][playerid])) DestroyDynamicObject(CrateBoat[1][playerid]);
		if(IsValidDynamicObject(CrateBoat[2][playerid])) DestroyDynamicObject(CrateBoat[2][playerid]);
		GivePlayerCash(playerid,25400);
 	    GameTextForPlayer(playerid, "+25400", 2000, 1);
 	    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai primit 25400 pe produsele tale. Du-te la dockuri sa iei mai multe!");
 	    CP[playerid] = 374;
  		SetPlayerRaceCheckpoint(playerid,4,2513.4146, -2713.1296, 0.9201, 2508.0911, -2713.4126, 0.9201,10);
		return 1;
	}
	if(CP[playerid] == 380)
	{
  	  	if(IsValidDynamicObject(CrateBoat[0][playerid])) DestroyDynamicObject(CrateBoat[0][playerid]);
	  	if(IsValidDynamicObject(CrateBoat[1][playerid])) DestroyDynamicObject(CrateBoat[1][playerid]);
		if(IsValidDynamicObject(CrateBoat[2][playerid])) DestroyDynamicObject(CrateBoat[2][playerid]);
		GivePlayerCash(playerid,25400);
 	    GameTextForPlayer(playerid, "+25400", 2000, 1);
 	    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai primit 25400 pe produsele tale. Du-te la dockuri sa iei mai multe!");
 	    CP[playerid] = 374;
		SetPlayerRaceCheckpoint(playerid,4,2513.4146, -2713.1296, 0.9201, 2508.0911, -2713.4126, 0.9201,10);
		return 1;
	}
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
    SetPlayerPos(playerid, 1382.2604, -1622.6512, 14.2860);
    if(gLogged[playerid] != 1)
	{
   		KickWithMessage(playerid, COLOR_LIGHTRED, "** Acest server necesita login inainte de Spawn(Ai primit Kick) **");
   		return 1;
	}
	return 1;
}

public OnPlayerEditDynamicObject(playerid, STREAMER_TAG_OBJECT objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	if(response == EDIT_RESPONSE_FINAL)//
	{
		if(EditingObjectId[playerid] == 0) return 1;
		SetDynamicObjectPos(GateInfo[EditingObjectId[playerid]][gObiect], x, y, z);
		SetDynamicObjectRot(GateInfo[EditingObjectId[playerid]][gObiect], rx, ry, rz);
        GateInfo[EditingObjectId[playerid]][gPosX] = x;
	    GateInfo[EditingObjectId[playerid]][gPosY] = y;
	    GateInfo[EditingObjectId[playerid]][gPosZ] = z;
	 	GateInfo[EditingObjectId[playerid]][gRotX] = rx;
	 	GateInfo[EditingObjectId[playerid]][gRotY] = ry;
	 	GateInfo[EditingObjectId[playerid]][gRotZ] = rz;
	 	gUpdate(EditingObjectId[playerid],gPosXx);
	 	gUpdate(EditingObjectId[playerid],gPosYx);
	 	gUpdate(EditingObjectId[playerid],gPosZx);
	 	gUpdate(EditingObjectId[playerid],gRotXx);
	 	gUpdate(EditingObjectId[playerid],gRotYx);
	 	gUpdate(EditingObjectId[playerid],gRotZx);
	 	EditingObjectId[playerid] = -1;
	}
	return 1;
}



public OnObjectMoved(objectid)
{
    if(objectid == BoatPirateObject)   // The elevator reached the specified floor.
	{
	    MoveObject(BoatPirateObject,	PirateShipRoots[ruta][0],	PirateShipRoots[ruta][1],	PirateShipRoots[ruta][2],	PirateShipRoots[ruta][3],	PirateShipRoots[ruta][4],	PirateShipRoots[ruta][5],	PirateShipRoots[ruta][6]);
		if(ruta == 23)
	    ruta = 0;
		else
		ruta ++;
 	}
    if(objectid == gFerrisWheel)
    SetTimer("RotateWheel",3*1000,0);
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
    if ( pickupid == exitjail )
	{
 		SetPlayerPos(playerid, 89.0940,1778.5040,17.6406);
	    GameTextForPlayer(playerid, "~w~ Las Ventras Jail N.G.",4000,3);
	    SetPlayerInterior(playerid, 0);
	}

    if ( pickupid == enterjail )
	{
 		SetPlayerPos(playerid, 188.3381,1855.8566,1000.0598);
	    GameTextForPlayer(playerid, "~w~ National Guard Jail.",4000,3);
	    SetPlayerInterior(playerid, 1);
	}
	if(pickupid == blueteamp)
    GameTextForPlayer(playerid, "~b~ENTER~n~Pentru a abandona jocul",3000,3);
	if(pickupid == redteamp)
    GameTextForPlayer(playerid, "~r~ENTER~n~Pentru a abandona jocul",3000,3);

	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
    new vehicleide = GetVehicleModel(vehicleid);
	new string[128];
	new modok = islegalcarmod(vehicleide, componentid);
	if(!modok)
	{
	    if(PlayerInfo[playerid][pAdmin]>7) return 1;
		format(string,sizeof(string),"%s are tunning hack, InvalidVehicleMod!",PlayerName(playerid));
		AdminsBroadCast(-1,string,1);
		new Float:shealth,Float:slx,Float:sly,Float:slz;
        GetPlayerHealth(playerid, shealth);
		GameTextForPlayer(playerid, "~r~TUNNING HACKING!",5000,3);
		if(shealth<26)
		SetPlayerHealth(playerid, shealth-20);
		else
		SetPlayerHealth(playerid, shealth-25);
		GetPlayerPos(playerid, slx, sly, slz);
		SetPlayerPos(playerid, slx, sly, slz+6);
		PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
		return 1;
	}
    if(GetPlayerInterior(playerid) == 0 && PlayerInfo[playerid][pAdmin]<8)
	{
		format(string,sizeof(string),"%s posibil tunning hack, acesta nu se afla la tunning!",PlayerName(playerid));
		AdminsBroadCast(-1,string,4);
		new Float:shealth,Float:slx,Float:sly,Float:slz;
        GetPlayerHealth(playerid, shealth);
		GameTextForPlayer(playerid, "~r~TUNNING HACKING!",5000,3);
		if(shealth<26)
		SetPlayerHealth(playerid, shealth-20);
		else
		SetPlayerHealth(playerid, shealth-25);
		GetPlayerPos(playerid, slx, sly, slz);
		SetPlayerPos(playerid, slx, sly, slz+6);
		PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
		return 1;
	}
    Tele[playerid] = 1;
    PlayerPosX[playerid] = OldPlayerPosX[playerid]+0.2;
	PlayerPosY[playerid] = OldPlayerPosY[playerid]+0.2;
	PlayerPosZ[playerid] = OldPlayerPosZ[playerid]+0.2;
//	SetTimerEx("UpdatePlayerPos", 2000, false, "i", playerid);
    if (!modok)
	{
    	if(warned[playerid] == 0)
		{
       		printf("[invalid_mod - WARNING] %s %d %d %d %d %d", PlayerName(playerid), playerid, vehicleid, vehicleide, componentid);
        	SetVehicleToRespawn(vehicleid);
			warned[playerid] = 1;
		}
		else
		{
			SetVehicleToRespawn(vehicleid);
			format(string, sizeof(string), "{ee5555}Info: {a9c4e4}%s[%d] - posibil tuning hack mod.", PlayerName(playerid), playerid);
       		printf("[invalid_mod - WARNING] %s %d %d %d %d %d", PlayerName(playerid), playerid, vehicleid, vehicleide, componentid);
	        AdminsBroadCast(0xFFFFFFFF, string, 1);
	        //Kick(playerid);
		}
		return 0;
    }

	if(componentid == 1025 || (componentid >= 1073 && componentid <= 1085) || (componentid >= 1096 && componentid <= 1098))
	{
		vInfo[OwnedVeh(vehicleid)][vComponent0] = componentid; // Wheels
    	vUpdate(OwnedVeh(vehicleid), vComponent0x);//
	}

	if((componentid >= 1008 && componentid <= 1010))
	{
		vInfo[OwnedVeh(vehicleid)][vComponent1] = componentid; // Nitro
	    vUpdate(OwnedVeh(vehicleid), vComponent1x);//
	}

	if(componentid == 1087)
	{
		vInfo[OwnedVeh(vehicleid)][vComponent2] = componentid;//hydraulics
	    vUpdate(OwnedVeh(vehicleid), vComponent2x);//
	}

	if((componentid >= 1000 && componentid <= 1003) || (componentid >= 1014 && componentid <= 1016) ||
	componentid == 1023 || (componentid >= 1049 && componentid <= 1050) || componentid == 1058 ||
	componentid == 1060 || (componentid >= 1138 && componentid <= 1139) || (componentid >= 1146 && componentid <= 1147) ||
	componentid == 1158 || (componentid >= 1162 && componentid <= 1164))
	{
	    vInfo[OwnedVeh(vehicleid)][vComponent3] = componentid;//Spoiler
	    vUpdate(OwnedVeh(vehicleid), vComponent3x);
	}

    if((componentid >= 1004 && componentid <= 1005) || (componentid >= 1011 && componentid <= 1012))
	{
		vInfo[OwnedVeh(vehicleid)][vComponent4] = componentid;//Hood
	    vUpdate(OwnedVeh(vehicleid), vComponent4x);//
	}

	if(componentid == 1006 || (componentid >= 1032 && componentid <= 1033) || componentid == 1035 ||
	componentid == 1038 || (componentid >= 1053 && componentid <= 1055) || componentid == 1061 ||
	componentid == 1067 || componentid == 1068 || componentid == 1088 || componentid == 1091 ||
	componentid == 1103 || componentid == 1128 || componentid == 1130 || componentid == 1131)
	{
	    vInfo[OwnedVeh(vehicleid)][vComponent5] = componentid;//Roof
	    vUpdate(OwnedVeh(vehicleid), vComponent5x);//
	}

   	if(componentid == 1007 || componentid == 1017 || componentid == 1026 || componentid == 1027 || componentid == 1030 ||
	componentid == 1031 || componentid == 1036 || (componentid >= 1039 && componentid <= 1042) || componentid == 1047 ||
	componentid == 1048 || componentid == 1051 || componentid == 1052 || componentid == 1056 || componentid == 1057 ||
	componentid == 1062 || componentid == 1063 || (componentid >= 1069 && componentid <= 1072) || componentid == 1090 ||
	(componentid >= 1093 && componentid <= 1095) || componentid == 1099 || componentid == 1101 || componentid == 1102 ||
	(componentid >= 1106 && componentid <= 1108) || (componentid >= 1118 && componentid <= 1122) || componentid == 1124 ||
	componentid == 1133 || componentid == 1134 || componentid == 1137)
 	{

	    vInfo[OwnedVeh(vehicleid)][vComponent6] = componentid;//SideSkirts
	    vUpdate(OwnedVeh(vehicleid), vComponent6x);//
	}

    if(componentid == 1013 || componentid == 1024)
	{
	    vInfo[OwnedVeh(vehicleid)][vComponent7] = componentid;//Lamps
	    vUpdate(OwnedVeh(vehicleid), vComponent7x);//
	}

	if((componentid >= 1018 && componentid <= 1022) || (componentid >= 1028 && componentid <= 1029) || componentid == 1034 ||
	componentid == 1037 || (componentid >= 1043 && componentid <= 1046) || componentid == 1059 || (componentid >= 1064 && componentid <= 1066) ||
	componentid == 1089 || componentid == 1092 || componentid == 1104 || componentid == 1105 || componentid == 1113 || componentid == 1114 ||
	componentid == 1126 || componentid == 1127 || componentid == 1129 || componentid == 1132 || componentid == 1135 || componentid == 1136)
	{
	    vInfo[OwnedVeh(vehicleid)][vComponent8] = componentid;//Exhaust
	    vUpdate(OwnedVeh(vehicleid), vComponent8x);//
	}

    if(componentid == 1086)
	{
	    vInfo[OwnedVeh(vehicleid)][vComponent9] = componentid;//Stereo
	    vUpdate(OwnedVeh(vehicleid), vComponent9x);//
	}

	if(componentid == 1117 || componentid == 1152 || componentid == 1153 || componentid == 1155 || componentid == 1157 || componentid == 1160 ||
	componentid == 1165 || componentid == 1166 || (componentid >= 1169 && componentid <= 1175) || componentid == 1179 || componentid == 1181 ||
	componentid == 1182 || componentid == 1185 || (componentid >= 1188 && componentid <= 1191) || componentid == 1115 || componentid == 1116)
	{
	    vInfo[OwnedVeh(vehicleid)][vComponent10] = componentid;// FrontBumper
	    vUpdate(OwnedVeh(vehicleid), vComponent10x);//
	}


 	if(componentid == 1140 || componentid == 1141 || componentid == 1148 || componentid == 1149 || componentid == 1150 || componentid == 1151 ||
	componentid == 1154 || componentid == 1156 || componentid == 1159 || componentid == 1161 ||	componentid == 1167 || componentid == 1168 ||
	componentid == 1176 || componentid == 1177 || componentid == 1178 || componentid == 1180 || componentid == 1183 || componentid == 1184 ||
	componentid == 1186 || componentid == 1187 || componentid == 1192 || componentid == 1193 ||	componentid == 1109 || componentid == 1110)
	{
		vInfo[OwnedVeh(vehicleid)][vComponent11] = componentid;// RearBumper
	    vUpdate(OwnedVeh(vehicleid), vComponent11x);//
	}

  	if((componentid >= 1143 || componentid == 1145))
	{
	    vInfo[OwnedVeh(vehicleid)][vComponent12] = componentid;// RightVent
	    vUpdate(OwnedVeh(vehicleid), vComponent12x);//
	}

	if((componentid >= 1142 || componentid == 1144))
	{
	    vInfo[OwnedVeh(vehicleid)][vComponent13] = componentid;// LeftVent
	    vUpdate(OwnedVeh(vehicleid), vComponent13x);//
	}

	//if(Total_V_Mods == 0) SendClientMessage(playerid, COLOR_RED, "You cannot add more mods to your vehicle!");


	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
   /* Tele[playerid] = 1;
    PlayerPosX[playerid] = OldPlayerPosX[playerid]+0.2;
	PlayerPosY[playerid] = OldPlayerPosY[playerid]+0.2;
	PlayerPosZ[playerid] = OldPlayerPosZ[playerid]+0.2;
	SetTimerEx("UpdatePlayerPos", 2000, false, "i", playerid);*/
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
 /*   Tele[playerid] = 1;
    PlayerPosX[playerid] = OldPlayerPosX[playerid]+0.2;
	PlayerPosY[playerid] = OldPlayerPosY[playerid]+0.2;
	PlayerPosZ[playerid] = OldPlayerPosZ[playerid]+0.2;
	SetTimerEx("UpdatePlayerPos", 2000, false, "i", playerid);*/
	return 1;
}
public OnEnterExitModShop(playerid, enterexit, interiorid)
{

/*    Tele[playerid] = 1;
    PlayerPosX[playerid] = OldPlayerPosX[playerid]+0.2;
	PlayerPosY[playerid] = OldPlayerPosY[playerid]+0.2;
	PlayerPosZ[playerid] = OldPlayerPosZ[playerid]+0.2;
	SetTimerEx("UpdatePlayerPos", 2000, false, "i", playerid);*/
    return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
    new Menu:Current = GetPlayerMenu(playerid);
    if(Current == myMenu)
	{
	    switch(row)
	    {
	        case 0://caseeeeee0
	        {
				if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] ==6) //triads
				{
					if(PlayerInfo[playerid][pRank] >= 1)
					{
						SetPlayerSkin(playerid, 123);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin 1 Din vestiar.");
			    		TogglePlayerControllable(playerid,1);
       				}
				}
				else if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)//bratva
				{
					if(PlayerInfo[playerid][pRank] >= 1)
					{
						SetPlayerSkin(playerid, 124);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin 1 Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
       				}
				}
		 		else if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)//rifa
				{
					if(PlayerInfo[playerid][pRank] >= 1)
					{
						SetPlayerSkin(playerid, 273);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin 1 Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
       				}
				}
            	else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)//balas
				{
					if(PlayerInfo[playerid][pRank] >= 1)
					{
						SetPlayerSkin(playerid, 103);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin 1 Din vestiar.");
			   			TogglePlayerControllable(playerid,1);
       				}
				}
				else if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)//sevile
				{
					if(PlayerInfo[playerid][pRank] >= 1)
					{
						SetPlayerSkin(playerid, 269);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin 1 Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
       				}
				}
            	else if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)//corleone
				{
					if(PlayerInfo[playerid][pRank] >= 2)
					{
						SetPlayerSkin(playerid, 126);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin 1 Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
       				}
				}
		 	}
		 	case 1://caseeeeee1
		 	{
				if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) //rifa
				{
					if(PlayerInfo[playerid][pRank] >= 3)
					{
						SetPlayerSkin(playerid, 272);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin 2 Din vestiar.");
			    		TogglePlayerControllable(playerid,1);
       				}
				}
				else if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)//triads
				{
					if(PlayerInfo[playerid][pRank] >= 3)
					{
						SetPlayerSkin(playerid, 117);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin 2 Din vestiar.");
			   			TogglePlayerControllable(playerid,1);
       				}
				}
				else if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)///bratva
				{
					if(PlayerInfo[playerid][pRank] >= 3)
					{
						SetPlayerSkin(playerid, 111);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin 2 Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
            	else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)//ballas
				{
					if(PlayerInfo[playerid][pRank] >= 3)
					{
						SetPlayerSkin(playerid, 102);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin 2 Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
				else if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)//sewv
				{
					if(PlayerInfo[playerid][pRank] >= 3)
					{
						SetPlayerSkin(playerid, 271);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin 2 Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
	            else if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)//corleone
				{
					if(PlayerInfo[playerid][pRank] >= 4)
					{
						SetPlayerSkin(playerid, 125);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin 2 Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
		 	}
			case 2://caseeeeee2
			{
				if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) //rfa
				{
					if(PlayerInfo[playerid][pRank] >= 5)
					{
						SetPlayerSkin(playerid, 110);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin 3 Din vestiar.");
			    		TogglePlayerControllable(playerid,1);
       				}
				}
				else if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)//tr
				{
					if(PlayerInfo[playerid][pRank] >= 5)
					{
						SetPlayerSkin(playerid, 120);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin 3 Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
				else if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)///brat
				{
					if(PlayerInfo[playerid][pRank] >= 5)
					{
						SetPlayerSkin(playerid, 112);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin 3 Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
	            else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)//ballas
				{
					if(PlayerInfo[playerid][pRank] >= 5)
					{
						SetPlayerSkin(playerid, 104);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin 3 Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
			 	else if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)//ssee
				{
					if(PlayerInfo[playerid][pRank] >= 5)
					{
						SetPlayerSkin(playerid, 86);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin 3 Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
	            else if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)//corleone
				{
					if(PlayerInfo[playerid][pRank] >= 5)
					{
						SetPlayerSkin(playerid, 125);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin 3 Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
		 	}
		 	case 3://caseeeeee3
			{
				if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) //triads
				{
					if(PlayerInfo[playerid][pRank] >= 8)
					{
						SetPlayerSkin(playerid, 294);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Co-Lider Skin Din vestiar.");
			    		TogglePlayerControllable(playerid,1);
       				}
				}
				else if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)////rifa
				{
					if(PlayerInfo[playerid][pRank] >= 8)
					{
						SetPlayerSkin(playerid, 249);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Co-Lider Skin Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
				else if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)//bratva
				{
					if(PlayerInfo[playerid][pRank] >= 8)
					{
						SetPlayerSkin(playerid, 113);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Co-Lider Skin Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
	            else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)///balas
				{
					if(PlayerInfo[playerid][pRank] >= 8)
					{
						SetPlayerSkin(playerid, 296);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Co-Lider Skin Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
			 	else if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)//sevile
				{
					if(PlayerInfo[playerid][pRank] >= 1)
					{
						SetPlayerSkin(playerid, 270);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Co-Lider Skin Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
	            else if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)//corleone
				{
					if(PlayerInfo[playerid][pRank] >= 8)
					{
						SetPlayerSkin(playerid, 292);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Co-Lider Skin Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
		 	}
 			case 4://caseeeeee4 lider skin
			{
				if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) //triads
				{
					if(PlayerInfo[playerid][pRank] >= 8)
					{
						SetPlayerSkin(playerid, 294);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Lider Skin Din vestiar.");
			    		TogglePlayerControllable(playerid,1);
       				}
				}
				else if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)////rifa
				{
					if(PlayerInfo[playerid][pRank] >= 8)
					{
						SetPlayerSkin(playerid, 249);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Skin Lider Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
				else if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)//bratva
				{
					if(PlayerInfo[playerid][pRank] >= 8)
					{
						SetPlayerSkin(playerid, 113);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Lider Skin Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
	            else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)///balas
				{
					if(PlayerInfo[playerid][pRank] >= 8)
					{
						SetPlayerSkin(playerid, 296);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Lider Skin Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
			 	else if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)//sevile
				{
					if(PlayerInfo[playerid][pRank] >= 1)
					{
						SetPlayerSkin(playerid, 270);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Lider Skin Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
	            else if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)//corleone
				{
					if(PlayerInfo[playerid][pRank] >= 8)
					{
						SetPlayerSkin(playerid, 292);
						SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Lider Skin Din vestiar.");
				   		TogglePlayerControllable(playerid,1);
	       			}
				}
		 	}
    		case 5://caseeeeee5
			{
			    if(Vestiar[playerid] == 0)
			    {
					GivePlayerWeapon(playerid, 24, 54);
					SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Deagle Din vestiar.");
					TogglePlayerControllable(playerid,1);
					Vestiar[playerid] = 1;
				}
				else
				{
				    TogglePlayerControllable(playerid,1);
				    SendClientMessage(playerid, COLOR_RED, "* Ai luat Deagle de curand.");
				}
         	}
   			case 6://caseeeeee6
			{
				SetPlayerArmour(playerid, 50.0);
				SetPlayerHealth(playerid, 100);
				SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Health+Armour Din vestiar.");
		   		TogglePlayerControllable(playerid,1);
		 	}
			case 7://caseeeeee7
			{
				GivePlayerWeapon(playerid, 4, 1);
				SendClientMessage(playerid, COLOR_WHITE, "* Ai luat Meele Weapon Din vestiar.");
		   		TogglePlayerControllable(playerid,1);
		 	}
 			case 8://caseeeeee8
			{
	          	SendClientMessage(playerid, 0x00FF1AC8, "* Ai inchis vestiarul.");
				TogglePlayerControllable(playerid,1);
			}
		}
		TogglePlayerControllable(playerid,1);
		Update(playerid,pSkinx);
	}
	return 1;
}

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
    if(response)
    {
        new string[200];
        format(string,sizeof(string),"%f,%f,%f,    %f,%f,%f,    %f,%f,%f",fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ );
		SendClientMessage(playerid,-1,string);
    }
	return 1;
}
public OnPlayerExitedMenu(playerid)
{
	return 1;
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(PlayerInfo[playerid][pAdmin]>3)
	{
	    SendClientMessage(playerid,COLOR_LIGHTRED,"Ai fost teleportat pe harta!");
    	SetPlayerPosFindZ(playerid, fX, fY, fZ);
	}
	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(gLogged[playerid] == 0) return 1;
	new params[20];
	new string[155],tick = GetTickCount(),dif;
    if(newkeys == KEY_SECONDARY_ATTACK)
	{
		if(IsPlayerInRangeOfPoint(playerid, 6,502.5089,-70.1795,998.7578)) // Iesire echipa
		{
			SetPlayerPos(playerid, 1398.4382, -1881.2725, 13.550);
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    if(Gamble[0] == playerid)
   		    {
			   	Gamble[0]=999;
				CreateSet();
			}
		    if(Gamble[1] == playerid)
		    {
   		    	Gamble[1]=999;
				CreateSet();
			}
    	   	return 1;
		}
       	if(IsPlayerInRangeOfPoint(playerid, 6,1398.4382, -1881.2725, 13.550)) // Iesire echipa
		{
			SetPlayerPos(playerid,502.6491, -68.5320, 998.9185);
			SetPlayerInterior(playerid,11);
			SetPlayerVirtualWorld(playerid,1);
		    TogglePlayerControllable(playerid,0);///asuss
		   	SetTimerEx("freze", 2000, false, "i", playerid);
    	   	return 1;
		}
 	}
	if(newkeys & KEY_FIRE)
	{
	    if(!IsPlayerInAnyVehicle(playerid))
	    {
    		if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DRINK_WINE || GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DRINK_BEER)
 	        PlayerDrunk[playerid] ++;
 		}
	}
 	if(IsPlayerAtPool(playerid))
 	{
 	    if(newkeys & KEY_FIRE)
		{
		    if(Taced[playerid] == 0)
           	{
				SetTimerEx("TacPlayer", 4450, false, "i", playerid);
				SetPlayerArmedWeapon(playerid, 0);
				SetPlayerAttachedObject(playerid,9,338,6,0,0.05,-0.84,0,0,0);
				ApplyAnimation(playerid, "POOL", "POOL_ChalkCue", 4.1,0, 0, 0, 0, 0, 1);//da cu tacul
			}
		}
 		new Float: oX,Float: oY,Float: oZ;
	    GetObjectPos(PoolBall[0], oX, oY, oZ);
	    if(IsPlayerInArea(playerid,509.4183,510.8541, -85.9682,-83.7006)&& Taced[playerid] == 0) return 1;
	    if(!IsPlayerInCircle(playerid,oX, oY,2.5)) return 1;// SendClientMessage(playerid,-1,"Nu esti langa minge");
        if (PRESSED(KEY_FIRE))
	    {
	    	if(IsPlayerInRangeOfPoint(playerid,20,510.8541, -85.9682,999) && Taced[playerid] == 1)	pLastTick[playerid] = tick;
		}
		else if(RELEASED(KEY_FIRE))
		{
		    if(Taced[playerid] == 0) return 1;
		   	dif = tick - pLastTick[playerid];
		   	pLastTick[playerid] = -1;
		   	if(dif < 2000)
		   	{
			   	if(IsValidPlayerObject(playerid,PlayerTac[playerid]))	DestroyPlayerObject(playerid,PlayerTac[playerid]);
				if(IsValidPlayerObject(playerid,PlayerCameraTac[playerid]))	   	DestroyPlayerObject(playerid,PlayerCameraTac[playerid]);
		   	    new	Float:angle,Float:speed;
				if(dif > 1000)
			    dif = 2000 - dif;
			    speed = ((float(dif + 400) / (1000)) * 20.0)/6.8;
				SetPlayerCameraPos(playerid,510.1133,-83.0932,1000.9);
				SetPlayerCameraLookAt(playerid,510.129943,-86.628707,996.955993);
				GetPlayerFacingAngle(playerid, angle);
				PHY_SetObjectVelocity(PoolBall[0], speed * floatsin(-angle, degrees), speed * floatcos(-angle, degrees));
				ApplyAnimation(playerid, "POOL", "POOL_XLong_Shot", 4.1, 0, 1, 1, 0, 0, 1);//fixeaza tinta
				PlayerOnTable=playerid;
				InTargeted[playerid] = 1;
		    	Taced[playerid] = 0;
		        SetPlayerAttachedObject(playerid,9,338,6,0,0,0,0,0,0);
				SetPlayerArmedWeapon(playerid, 7);
			   	BallsOnTable = BallOnTables;
	   			foreach(Player,i)
                if(IsPlayerAtPool(i))
			   	PlayerPlaySound(i,   1130, 510.11218261719, -84.40771484375, 998.86785888672);
			}
		}
 	}
	if(newkeys == KEY_CROUCH)
	{
	    if(!IsPlayerInAnyVehicle(playerid))
	    {
	        for(new p;p<60;p++)
	        {
        		if(IsValidObject(PizzaObj[p]))
				{
					new Float:ox,Float:oy,Float:oz;
					GetObjectPos(PizzaObj[p], ox, oy, oz);
					if(IsPlayerInRangeOfPoint(playerid,3,ox,oy,oz) && ox > 1)
					{
						if(PizzaOfPlayer[playerid]>=5) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Aveti deja 5 cutii!",1500,3);
					    SetObjectPos(PizzaObj[p],0,0,-1003);
					    PizzaOfPlayer[playerid]++;
				 		GameTextForPlayer(playerid,"~b~~n~~n~~n~~n~~n~~n~~n~Ai ridicat cutia de pizza~n~/eatpizza!",3500,3);
     				}
				}
			}
	    }

        if(IsAPizzaCar(GetPlayerVehicleID(playerid)))
        {
            if(IsPlayerInRangeOfPoint(playerid,150,2102.4856,-1806.9812,13.5547)) return GameTextForPlayer(playerid, "~r~Nu poti arunca aici!",4000,5);
            if(GetVehicleSpeed(GetPlayerVehicleID(playerid))>10) return 1;
            if(!IsPlayerInAnyVehicle(playerid)) return 1;
	  		if(OnJob[playerid] != 10)
 			{
 			    DisablePlayerCheckpoint(playerid);
				OnJob[playerid] = 0;
				CP[playerid] = 0;
				VehicleOnJob[GetPlayerVehicleID(playerid)] = 0;
			 	return GameTextForPlayer(playerid, "~w~Du-te la pizzerie~n~sa iei comenzi si pizza",5600,5);
		 	}
		 	if(VehicleOnJob[GetPlayerVehicleID(playerid)]<1)
			{
			    DisablePlayerCheckpoint(playerid);
				CP[playerid] = 0;
				VehicleOnJob[GetPlayerVehicleID(playerid)] = 0;
			 	GameTextForPlayer(playerid, "~w~Nu mai ai pizza~n~Du-te la pizzerie~n~sa iei comenzi si pizza",5600,5);
			 	OnJob[playerid] = 0;
			 	return 1;
			}

			if(NumberPizza[playerid] >=60)
			NumberPizza[playerid] = -1;
			NumberPizza[playerid] ++;
			
			new Float:x, Float:y, Float:z, Float:ang;
			GetXYOfPlayer(playerid, x, y, z,1.5,0);
			GetVehicleZAngle(GetPlayerVehicleID(playerid), ang);
			SetObjectPos(PizzaObj[NumberPizza[playerid]], x, y, z);//1582
			SetTimerEx("DeletePizza",1800000,false,"d",NumberPizza[playerid]);
			
		 	PHY_InitObject(PizzaObj[NumberPizza[playerid] ],1582 );
			PHY_SetObjectVelocity(PizzaObj[NumberPizza[playerid] ] , 10 * floatsin(-ang, degrees), 10 * floatcos(-ang, degrees), 5);
			PHY_SetObjectFriction(PizzaObj[NumberPizza[playerid] ] , 100); // This will stop the object when it touchs the ground.
			PHY_SetObjectGravity(PizzaObj[NumberPizza[playerid] ] , 30);
			PHY_UseColAndreas(PizzaObj[NumberPizza[playerid] ],1);
			PHY_SetObjectZBound(PizzaObj[NumberPizza[playerid] ], z - 0.6, _, 0.0);
   			VehicleOnJob[GetPlayerVehicleID(playerid)] --;
            format(string,sizeof(string),"~b~%d/~w~10 Pizza",VehicleOnJob[GetPlayerVehicleID(playerid)]);
		   	if (IsPlayerInCheckpoint(playerid)&& OnJob[playerid] == 10)
   			{
            	format(string,sizeof(string),"~b~%d/~w~10 Pizza~n~~n~~g~+15000$",VehicleOnJob[GetPlayerVehicleID(playerid)]);
			    GivePlayerCash(playerid,15000);
            	RandomPizzaCP(playerid);
            	format(string,sizeof(string), "%s %d [CMD] -> /finish pizza ",PlayerName(playerid),playerid);
				JobLog(string);
			}
			GameTextForPlayer(playerid, string,4000,5);
			return 1;
		}
	}

	if(!IsPlayerInAnyVehicle(playerid) && (newkeys & KEY_YES))
	{
/*	    if(IsPlayerInRangeOfPoint(playerid, 2,-2334.3909,-1646.5145,483.7031))
        {
            if(moving == 0)
		    {
				rot1 = SetTimer("rot", 1, true);
				format(string, sizeof(string), "%s a pornit caruselul", PlayerName(playerid));
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				return 1;
			}
			else if(moving == 1)
		    {
		        StopObject(bcallCarusel);
				KillTimer(rot1);
				moving = 0;
				StopObject(bcallCarusel);
				format(string, sizeof(string), "%s a oprit caruselul", PlayerName(playerid));
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				return 1;
			}
        }*/

	    new Float:pos[3];
	    GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	    if(pos[1] < -1301.4 && pos[1] > -1303.2417 && pos[0] < 1786.2131 && pos[0] > 1784.1555)    // He is using the elevator button
	        ShowElevatorDialog(playerid);
		else    // Is he in a floor button?
		{
		    if(pos[1] > -1301.4 && pos[1] < -1299.1447 && pos[0] < 1785.6147 && pos[0] > 1781.9902)
		    {
		        // He is most likely using it, check floor:
				new i=20;
				while(pos[2] < GetDoorsZCoordForFloor(i) + 3.5 && i > 0)
				    i --;

				if(i == 0 && pos[2] < GetDoorsZCoordForFloor(0) + 2.0)
				    i = -1;

				if(i <= 19)
				{
					CallElevator(playerid, i + 1);
					GameTextForPlayer(playerid, "~r~Ai chemat liftul!", 3500, 4);
				}
		    }
		}

		if(pos[1] < (Y_ELEVATOR_POS + 1.8) && pos[1] > (Y_ELEVATOR_POS - 1.8) && pos[0] < (X_ELEVATOR_POS + 1.8) && pos[0] > (X_ELEVATOR_POS - 1.8))    // He is using the elevator button
	        ShowElevatorsDialog(playerid);
		else    // Is the player using a floor button?
		{
		    if(pos[1] > (Y_ELEVATOR_POS + 1.81) && pos[1] < (Y_ELEVATOR_POS + 3.8) && pos[0] < (X_ELEVATOR_POS - 1.81) && pos[0] > (X_ELEVATOR_POS - 3.8))
		    {
		        new i = 0;
		        if (pos[2] > (GROUNDD_Z_COORD - 2) && pos[2] < (GROUNDD_Z_COORD + 2))
		        {
		            i = 0;
		        }
		        else i = 1;
		        if (ElevatorsState != ELEVATOR_STATE_MOVING && ElevatorsFloor == i)
		        {
		            GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~r~ZomboTech Lift~n~~r~Este Deja La~n~~r~Acest Etaj!", 3000, 5);
		            return 1;
		        }
				CallElevators(playerid, i);
				GameTextForPlayer(playerid, "~r~Elevator called", 3500, 4);
		    }
		}
	}
	if(newkeys == KEY_ACTION)
	{
	    if(GetVehicleTrailer(GetPlayerVehicleID(playerid)) ==  TccPlayerCar[playerid])
		{
 		    if(IsPlayerInRangeOfPoint(playerid,6,1771.0416, -2049.3328, 12.4985))
		    {
			    if(IsValidDynamicObject(TccSmoke[playerid]))
			    DestroyDynamicObject(TccSmoke[playerid]);
			    DestroyVehicle(TccPlayerCar[playerid]);
				GameTextForPlayer(playerid, "~g~ +25000$", 3000, 1);
				GivePlayerCash(playerid, 25000);
			    return 1;
			}
			else
			{
				if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
				DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
			}
		}
	    if(OnJob[playerid] == 7)
	    {
	        new Float:X,Float:Y,Float:Z;
	        GetVehiclePos(TccPlayerCar[playerid], X,Y,Z);
	        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
			if(!IsPlayerInRangeOfPoint(playerid, 7, X,Y,Z)) return SendClientMessage(playerid,COLOR_RED,"Nu esti langa masina!");
            format(string, sizeof(string),"Du-te la sediu sa parchezi~n~aceasta masina!");
 			TextDrawSetString(TextdrawInfoBall, string);
			TextDrawShowForPlayer(playerid, TextdrawInfoBall);
			TextDrawShowForPlayer(playerid, TextdrawInfoBox);
	   		KillTimer(TimerH[playerid]);
   			TimerH[playerid]= SetTimerEx("HidesInfo", 7000, false, "i", playerid);
   	   		SetPlayerCheckpoint(playerid,1771.0416, -2049.3328, 12.4985,3);
  	  	    CP[playerid] = 26;
    		AttachTrailerToVehicle(TccPlayerCar[playerid], GetPlayerVehicleID(playerid));
    		return 1;
		}
	}
	if(newkeys & KEY_LOOK_BEHIND)
	{
		if(PlayerInfo[playerid][pJob2] == 15 || PlayerInfo[playerid][pJob1] == 15)
		{
    		if(lemns[GetPlayerVehicleID(playerid)] == 0)
			cmd_loadwood(playerid,string);
			else
			cmd_sellwood(playerid,string);
		}
		if(PlayerInfo[playerid][pJob1] == 13 || PlayerInfo[playerid][pJob2] == 13)
        {
		    if(fireman2 == GetPlayerVehicleID(playerid) || fireman1 == GetPlayerVehicleID(playerid) || fireman3 == GetPlayerVehicleID(playerid) || fireman4 == GetPlayerVehicleID(playerid) || fireman5 == GetPlayerVehicleID(playerid) || fireman6 == GetPlayerVehicleID(playerid))
			{
				if(OnJob[playerid] == 0)
				{
				    OnJob[playerid] = 13;
				    format(string, sizeof(string), "* %s este la datorie ca pompier.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                   	CP[playerid] = 2500;
				   	GameTextForPlayer(playerid, "~g~!!~w~Ai inceput~r~Munca~b~Incarca cisterna cu apa~g~!!!...", 4000, 5);
					SetPlayerCheckpoint(playerid,-2058.2168, 81.8098, 28.3615,4);
				    format(string,sizeof(string), "%s %d [CMD] -> /start fireman ",PlayerName(playerid),playerid);
					JobLog(string);
					return 1;
				}
			}
		}
		if(PlayerInfo[playerid][pJob1] == 11 || PlayerInfo[playerid][pJob2] == 11)
        {
            if(farmer0 ==  GetPlayerVehicleID(playerid) || trailerfarm0 ==  GetPlayerVehicleID(playerid) || trailerfarm4 ==  GetPlayerVehicleID(playerid) || trailerfarm3 ==  GetPlayerVehicleID(playerid) || trailerfarm2 ==  GetPlayerVehicleID(playerid) || trailerfarm1 ==  GetPlayerVehicleID(playerid) || farmer1 ==  GetPlayerVehicleID(playerid) || farmer2 ==  GetPlayerVehicleID(playerid) || farmer3 ==  GetPlayerVehicleID(playerid) || farmer4 ==  GetPlayerVehicleID(playerid))
			{
			    if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
			    return cmd_attachtrailertofarm(playerid,string);
			}
			if(CropDust[0] == GetPlayerVehicleID(playerid)  || CropDust[1] == GetPlayerVehicleID(playerid)  || CropDust[2] == GetPlayerVehicleID(playerid)  || CropDust[3] == GetPlayerVehicleID(playerid)  )
			{
			    if(OnJob[playerid] != 11)
			    {
			    	OnJob[playerid] = 11;
			    	PlayerLitter[playerid] = 0;
			    	PlayerReservor[playerid] = 5;
			    	SendClientMessage(playerid,COLOR_LIGHTBLUE,"Fertilizeaza campul! Apasa tasta 2!");
			    	format(string,sizeof(string), "%s %d [CMD] -> farmer plane ",PlayerName(playerid),playerid);
					JobLog(string);
					return 1;
	    		}
	    	}
	    }

	    if(PlayerInfo[playerid][pJob2] == 10|| PlayerInfo[playerid][pJob1] == 10)
		{
	    	if(IsAPizzaCar(GetPlayerVehicleID(playerid)))
	    	{
	    	    if(OnJob[playerid] == 10) return SendClientMessage(playerid,COLOR_LIGHTRED,"Deja lucrezi!");
	    	    if(!IsPlayerInRangeOfPoint(playerid,16,2102.4856,-1806.9812,13.5547)) return GameTextForPlayer(playerid, "~w~~n~Du-te la usa sa~n~preiei niste comenzi",4000,5);
          	    TextDrawSetString(TextdrawInfoBall, "Ai incarcat 10 Pizza~n~Du-te la CP sa livrezi!~n~Apasa H sa arunci pizza");
			    TextDrawShowForPlayer(playerid, TextdrawInfoBall);
				TextDrawShowForPlayer(playerid, TextdrawInfoBox);
				KillTimer(TimerH[playerid]);
				OnJob[playerid] = 10;
				NumberPizza[playerid] = 0;
      			TimerH[playerid] = SetTimerEx("HidesInfo", 9000, false, "i", playerid);
      			VehicleOnJob[GetPlayerVehicleID(playerid)] = 10;
				CP[playerid] = 21;
	            RandomPizzaCP(playerid);
	            format(string,sizeof(string),"~b~%d/~w~10 Pizza",VehicleOnJob[GetPlayerVehicleID(playerid)]);
	            GameTextForPlayer(playerid, string,4000,5);
            	format(string,sizeof(string), "%s %d [CMD] -> /start pizza ",PlayerName(playerid),playerid);
				JobLog(string);
			    return 1;
	    	}
		}
	    if(PlayerInfo[playerid][pJob2] == 8|| PlayerInfo[playerid][pJob1] == 8)
		{
	    	if(truck1 == GetPlayerVehicleID(playerid) || truck2 == GetPlayerVehicleID(playerid) || truck3 == GetPlayerVehicleID(playerid) || truck4 == GetPlayerVehicleID(playerid) || truck5 == GetPlayerVehicleID(playerid) || truck6 == GetPlayerVehicleID(playerid) || truck7 == GetPlayerVehicleID(playerid))
	    	{
	    	    if(!IsPlayerInRangeOfPoint(playerid,12,2508.2090, -2117.9890, 12.8421)&&OnJob[playerid] == 0)
				{
				    CP[playerid] = 22;
					SetPlayerCheckpoint(playerid,2508.2090, -2117.9890, 12.8421,5);
					GameTextForPlayer(playerid,"Incarca Marfa!",2000,3);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid,10,2508.2090, -2117.9890, 12.8421))
				{
				    if(VehicleOnJob[GetPlayerVehicleID(playerid)] >= 400)return GameTextForPlayer(playerid,"~r~Camionul este plin",2000,3);
				    if(OnJob[playerid] == 0)
				    {
				        TextDrawSetString(TextdrawInfoBall, "Du-te la un Biz~n~sa descarci marfa~n~si sa fii platit~n~Bizurile au o iconita pe minimap!");
				        TextDrawShowForPlayer(playerid, TextdrawInfoBall);
						TextDrawShowForPlayer(playerid, TextdrawInfoBox);
				   		KillTimer(TimerH[playerid]);
      		   			TimerH[playerid] = SetTimerEx("HidesInfo", 9000, false, "i", playerid);
				        VehicleOnJob[GetPlayerVehicleID(playerid)] = 400;
				        OnJob[playerid] = 8;
				        SendClientMessage(playerid,COLOR_LIGHTRED,"400/400 produse in camion!");
				        return 1;
				    }
				}
                if(OnJob[playerid] == 8)
  				{
     				if(VehicleOnJob[GetPlayerVehicleID(playerid)]<=0) return GameTextForPlayer(playerid,"~n~~n~~n~~r~Camionul este gol~n~~w~Du-te la sediu sa mai iei marfa",5000,3);
			     	for(new b = 0; b < sizeof(BizzInfo); b++)
					{
						if(IsPlayerInRangeOfPoint(playerid, 10, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]))
						{
				    		if(BizzInfo[b][bProducts] < BizzInfo[b][bMaxProducts])
							{
						    	new ProNeded = BizzInfo[b][bMaxProducts]-BizzInfo[b][bProducts];
						    	if(ProNeded>=VehicleOnJob[GetPlayerVehicleID(playerid)])
								{
									BizzInfo[b][bProducts] += ProNeded;
									bUpdate(b,bProductsx);
									GivePlayerCash(playerid,VehicleOnJob[GetPlayerVehicleID(playerid)]*BizzInfo[b][bPriceProd]);
									BizzInfo[b][bTill] -= VehicleOnJob[GetPlayerVehicleID(playerid)]*BizzInfo[b][bPriceProd]/2;
									bUpdate(b,bTillx);
									SendClientMessage(playerid, COLOR_LIGHTBLUE, "0/400 produse in camion!");
									format(string, sizeof(string),"~g~+$%d.", VehicleOnJob[GetPlayerVehicleID(playerid)]*BizzInfo[b][bPriceProd]);
									GameTextForPlayer(playerid, string, 4000, 1);
									PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    	            VehicleOnJob[GetPlayerVehicleID(playerid)] = 0;
                    	            OnJob[playerid] = 0;
									return 1;
								}
								else
								{
									BizzInfo[b][bProducts] += VehicleOnJob[GetPlayerVehicleID(playerid)];
									bUpdate(b,bProductsx);
									GivePlayerCash(playerid,ProNeded*BizzInfo[b][bPriceProd]);
									BizzInfo[b][bTill] -= ProNeded*BizzInfo[b][bPriceProd]/2;
									bUpdate(b,bTillx);
									format(string, sizeof(string),"~g~+$%d.", ProNeded*BizzInfo[b][bPriceProd]);
									GameTextForPlayer(playerid, string, 4000, 1);
									PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								    VehicleOnJob[GetPlayerVehicleID(playerid)] -= ProNeded;
                    	           	if(VehicleOnJob[GetPlayerVehicleID(playerid)] == 0)
                    	            OnJob[playerid] = 0;
									format(string, sizeof(string),"%d/400 produse in camion!",VehicleOnJob[GetPlayerVehicleID(playerid)]);
									SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
									return 1;
								}
							}
						}
					}//============================================================
					for(new sb = 0; sb < sizeof(SBizzInfo); sb++)
					{
						if(IsPlayerInRangeOfPoint(playerid, 10, SBizzInfo[sb][sbPosX], SBizzInfo[sb][sbPosY], SBizzInfo[sb][sbPosZ]))
						{
				    		if(SBizzInfo[sb][sbProduse] < SBizzInfo[sb][sbMaxProd])
							{
						    	new ProNeded = SBizzInfo[sb][sbMaxProd]-SBizzInfo[sb][sbProduse];
						    	if(ProNeded>=VehicleOnJob[GetPlayerVehicleID(playerid)])
								{
									SBizzInfo[sb][sbProduse] += ProNeded;
									sbUpdate(sb,sbProdusex);
									GivePlayerCash(playerid,VehicleOnJob[GetPlayerVehicleID(playerid)]*SBizzInfo[sb][sbPriceProd]*4);
									SBizzInfo[sb][sbTill] -= VehicleOnJob[GetPlayerVehicleID(playerid)]*SBizzInfo[sb][sbPriceProd]/2;
									sbUpdate(sb,sbTillx);
									SendClientMessage(playerid, COLOR_LIGHTBLUE, "0/400 produse in camion!");
									format(string, sizeof(string),"~g~+$%d.", VehicleOnJob[GetPlayerVehicleID(playerid)]*SBizzInfo[sb][sbPriceProd]*4);
									GameTextForPlayer(playerid, string, 4000, 1);
									PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    	            VehicleOnJob[GetPlayerVehicleID(playerid)] = 0;
                    	            OnJob[playerid] = 0;
				                    format(string,sizeof(string), "%s %d [CMD] -> sellprod ",PlayerName(playerid),playerid);
									JobLog(string);
									return 1;
								}
								else
								{
									SBizzInfo[sb][sbProduse] += VehicleOnJob[GetPlayerVehicleID(playerid)];
									sbUpdate(sb,sbProduse);
									GivePlayerCash(playerid,ProNeded*SBizzInfo[sb][sbPriceProd]*4);
									SBizzInfo[sb][sbTill] -= ProNeded*SBizzInfo[sb][sbPriceProd]/2;
									sbUpdate(sb,sbTillx);
									format(string, sizeof(string),"~g~+$%d.", ProNeded*SBizzInfo[sb][sbPriceProd]*4);
									GameTextForPlayer(playerid, string, 4000, 1);
									PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								    VehicleOnJob[GetPlayerVehicleID(playerid)] -= ProNeded;
                    	           	if(VehicleOnJob[GetPlayerVehicleID(playerid)] == 0)
                    	            OnJob[playerid] = 0;
									format(string, sizeof(string),"%d/400 produse in camion!",VehicleOnJob[GetPlayerVehicleID(playerid)]);
									SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				                    format(string,sizeof(string), "%s %d [CMD] -> sellprod ",PlayerName(playerid),playerid);
									JobLog(string);
									return 1;
								}
							}
						}
					}
				}

   			}
   		}
   		if(PlayerInfo[playerid][pJob2] == 18|| PlayerInfo[playerid][pJob1] == 18)
		{
		    if(fuel9 == GetPlayerVehicleID(playerid) || fuel8 == GetPlayerVehicleID(playerid) || fuel7 == GetPlayerVehicleID(playerid) || fuel0 == GetPlayerVehicleID(playerid) || fuel1 == GetPlayerVehicleID(playerid) || fuel2 == GetPlayerVehicleID(playerid) || fuel3 == GetPlayerVehicleID(playerid) || fuel4 == GetPlayerVehicleID(playerid) || fuel5 == GetPlayerVehicleID(playerid) || fuel6 == GetPlayerVehicleID(playerid))
			{
 				if(capacitate[ GetVehicleTrailer(GetPlayerVehicleID(playerid))] < 1)
 				{
                	cmd_loadfuel(playerid,string);
                    format(string,sizeof(string), "%s %d [CMD] -> loadfuel ",PlayerName(playerid),playerid);
					JobLog(string);
				}
				else
				{
                	cmd_sellfuel(playerid,string);
                    format(string,sizeof(string), "%s %d [CMD] -> sellfuel ",PlayerName(playerid),playerid);
					JobLog(string);

				}
   			}
    	}
	    if(PlayerInfo[playerid][pJob2] == 7|| PlayerInfo[playerid][pJob1] == 7)
		{
 	  	  	if(tcc1 == GetPlayerVehicleID(playerid) || tcc2 == GetPlayerVehicleID(playerid) || tcc3 == GetPlayerVehicleID(playerid) || tcc5 == GetPlayerVehicleID(playerid) || tcc4 == GetPlayerVehicleID(playerid) || tcc6 == GetPlayerVehicleID(playerid) || tcc7 == GetPlayerVehicleID(playerid))
	  	  	{
	  	  	    if(!IsPlayerInRangeOfPoint(playerid,60,1782.7766, -2047.9791, 12.4985)) return SendClientMessage(playerid,COLOR_RED,"Nu esti la sediul T.C.C.!");
				if(CP[playerid] == 22) return SendClientMessage(playerid,COLOR_RED,"Du-te si onoreaza comanda!");
		   	    new randomcp=random(11);
	  	  	    CP[playerid] = 22;
                format(string,sizeof(string), "%s %d [CMD] -> start tcc ",PlayerName(playerid),playerid);
				JobLog(string);
				if(randomcp==0)
				{
		  	  	    if(IsValidDynamicObject(TccSmoke[playerid]))
		  	  	    DestroyDynamicObject(TccSmoke[playerid]);
		  	  	    DestroyVehicle(TccPlayerCar[playerid]);
		  	  	    TccPlayerCar[playerid] = CreateVehicle(402, 1836.4153, -1870.8207, 13.0526, -40.8000, -1, -1, 100);
		  	  	  //  TccSmoke[playerid] = CreateDynamicObject(18726,0,0,-10,0,0,0);
		  	  	    AttachDynamicObjectToVehicle(TccSmoke[playerid],TccPlayerCar[playerid], 0.00000, 1.93680, -1.11330,   0.00000, 0.00000, 0.00000);
					SetVehicleParamsEx(TccPlayerCar[playerid], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON); // ONLY the engine param was changed to VEHICLE_PARAMS_ON (1)
			        SetPlayerCheckpoint(playerid,1836.4153, -1870.8207, 13.0526,3);
					TextDrawHideForPlayer(playerid, TextdrawInfoBall);
					TextDrawHideForPlayer(playerid, TextdrawInfoBox);
		  	  	    format(string, sizeof(string),"Avem o Parcare ilegala~n~Du-te si ridica masina.~n~Apasa CTRL sa remorchezi!");
	      			TextDrawSetString(TextdrawInfoBall, string);
			    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
			   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
	   				KillTimer(TimerH[playerid]);
   					TimerH[playerid]= SetTimerEx("HidesInfo", 8000, false, "i", playerid);
		  	        OnJob[playerid] = 7;
					return 1;
				}
				if(randomcp==1)
				{
		  	  	    if(IsValidDynamicObject(TccSmoke[playerid]))
		  	  	    DestroyDynamicObject(TccSmoke[playerid]);
		  	  	    DestroyVehicle(TccPlayerCar[playerid]);
		  	  	    TccPlayerCar[playerid] = CreateVehicle(411, 2438.9360, -1534.4399, 23.6754, -30.5400, -1, -1, 100);
		  	  	    TccSmoke[playerid] = CreateDynamicObject(18726,0,0,-10,0,0,0);
					UpdateVehicleDamageStatus(TccPlayerCar[playerid], 1, 2, 1, 15); //Setting tires to 15 will pop them all
		  	  	    AttachDynamicObjectToVehicle(TccSmoke[playerid],TccPlayerCar[playerid], 0.00000, 1.93680, -1.11330,   0.00000, 0.00000, 0.00000);
                	SetVehicleParamsEx(TccPlayerCar[playerid], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON); // ONLY the engine param was changed to VEHICLE_PARAMS_ON (1)
				    SetPlayerCheckpoint(playerid,2438.9360, -1534.4399, 23.6754,3);
					TextDrawHideForPlayer(playerid, TextdrawInfoBall);
					TextDrawHideForPlayer(playerid, TextdrawInfoBox);
		  	  	    format(string, sizeof(string),"Avem un accident~n~Du-te si ridica masina.~n~Apasa CTRL sa remorchezi!");
	      			TextDrawSetString(TextdrawInfoBall, string);
			    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
			   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
	   				KillTimer(TimerH[playerid]);
   					TimerH[playerid]= SetTimerEx("HidesInfo", 8000, false, "i", playerid);
		  	        OnJob[playerid] = 7;
					return 1;
				}
				if(randomcp==2)
				{
		  	  	    if(IsValidDynamicObject(TccSmoke[playerid]))
		  	  	    DestroyDynamicObject(TccSmoke[playerid]);
		  	  	    DestroyVehicle(TccPlayerCar[playerid]);
		  	  	    TccPlayerCar[playerid] = CreateVehicle(400, 2007.5920, -1346.1023, 24.0212, -88.8000, -1, -1, 100);
		  	  	   // TccSmoke[playerid] = CreateDynamicObject(18726,0,0,-10,0,0,0);
		  	  	    AttachDynamicObjectToVehicle(TccSmoke[playerid],TccPlayerCar[playerid], 0.00000, 1.93680, -1.11330,   0.00000, 0.00000, 0.00000);
                   	SetVehicleParamsEx(TccPlayerCar[playerid], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON); // ONLY the engine param was changed to VEHICLE_PARAMS_ON (1)
					SetPlayerCheckpoint(playerid,2007.5920, -1346.1023, 24.02,3);
					TextDrawHideForPlayer(playerid, TextdrawInfoBall);
					TextDrawHideForPlayer(playerid, TextdrawInfoBox);
		  	  	    format(string, sizeof(string),"Avem o asigurare neplatita~n~Du-te si ridica masina.~n~Apasa CTRL sa remorchezi!");
	      			TextDrawSetString(TextdrawInfoBall, string);
			    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
			   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
	   				KillTimer(TimerH[playerid]);
   					TimerH[playerid]= SetTimerEx("HidesInfo", 8000, false, "i", playerid);
		  	        OnJob[playerid] = 7;
					return 1;
				}
				if(randomcp==3)
				{
		  	  	    if(IsValidDynamicObject(TccSmoke[playerid]))
		  	  	    DestroyDynamicObject(TccSmoke[playerid]);
		  	  	    DestroyVehicle(TccPlayerCar[playerid]);
		  	  	    TccPlayerCar[playerid] = CreateVehicle(436, 1560.1736, -1747.2618, 13.2723, 0.0000, -1, -1, 100);
		  	  	   // TccSmoke[playerid] = CreateDynamicObject(18726,0,0,-10,0,0,0);
		  	  	    AttachDynamicObjectToVehicle(TccSmoke[playerid],TccPlayerCar[playerid], 0.00000, 1.93680, -1.11330,   0.00000, 0.00000, 0.00000);
                   	SetVehicleParamsEx(TccPlayerCar[playerid], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON); // ONLY the engine param was changed to VEHICLE_PARAMS_ON (1)
					SetVehicleNumberPlate(TccPlayerCar[playerid], "FUCK LSPD!");
					SetPlayerCheckpoint(playerid,  1560.1736, -1747.2618, 13.2723,3);
					TextDrawHideForPlayer(playerid, TextdrawInfoBall);
					TextDrawHideForPlayer(playerid, TextdrawInfoBox);
		  	  	    format(string, sizeof(string),"Avem o inmatriculare obscena~n~Du-te si ridica masina.~n~Apasa CTRL sa remorchezi!");
	      			TextDrawSetString(TextdrawInfoBall, string);
			    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
			   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
	   				KillTimer(TimerH[playerid]);
   					TimerH[playerid]= SetTimerEx("HidesInfo", 8000, false, "i", playerid);
		  	        OnJob[playerid] = 7;
					return 1;
				}
				if(randomcp==4)
				{
		  	  	    if(IsValidDynamicObject(TccSmoke[playerid]))
		  	  	    DestroyDynamicObject(TccSmoke[playerid]);
		  	  	    DestroyVehicle(TccPlayerCar[playerid]);
		  	  	    TccPlayerCar[playerid] = CreateVehicle(533, 1721.3887, -838.8577, 58.1085, -189.4800, -1, -1, 100);
		  	  	    TccSmoke[playerid] = CreateDynamicObject(18726,0,0,-10,0,0,0);
		  	  	    AttachDynamicObjectToVehicle(TccSmoke[playerid],TccPlayerCar[playerid], 0.00000, 1.93680, -1.11330,   0.00000, 0.00000, 0.00000);
                   	SetVehicleParamsEx(TccPlayerCar[playerid], VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON, VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON); // ONLY the engine param was changed to VEHICLE_PARAMS_ON (1)
					SetPlayerCheckpoint(playerid,1721.3887, -838.8577, 58.1085,3);
					TextDrawHideForPlayer(playerid, TextdrawInfoBall);
					TextDrawHideForPlayer(playerid, TextdrawInfoBox);
		  	  	    format(string, sizeof(string),"Avem o masina defecta~n~care blocheaza autostrada~n~Du-te si ridica masina.~n~Apasa CTRL sa remorchezi!");
	      			TextDrawSetString(TextdrawInfoBall, string);
			    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
			   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
	   				KillTimer(TimerH[playerid]);
   					TimerH[playerid]= SetTimerEx("HidesInfo", 8000, false, "i", playerid);
		  	        OnJob[playerid] = 7;
					return 1;
				}
				if(randomcp==5)
				{
		  	  	    if(IsValidDynamicObject(TccSmoke[playerid]))
		  	  	    DestroyDynamicObject(TccSmoke[playerid]);
		  	  	    DestroyVehicle(TccPlayerCar[playerid]);
		  	  	    TccPlayerCar[playerid] = CreateVehicle(600, 1350.2861, -1249.7617, 13.0404, -91.5600, -1, -1, 100);
		  	  	    TccSmoke[playerid] = CreateDynamicObject(18726,0,0,-10,0,0,0);
		  	  	    AttachDynamicObjectToVehicle(TccSmoke[playerid],TccPlayerCar[playerid], 0.00000, 1.93680, -1.11330,   0.00000, 0.00000, 0.00000);
                   	SetVehicleParamsEx(TccPlayerCar[playerid], VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON); // ONLY the engine param was changed to VEHICLE_PARAMS_ON (1)
					SetPlayerCheckpoint(playerid,  1350.2861, -1249.7617, 13.0404,3);
					TextDrawHideForPlayer(playerid, TextdrawInfoBall);
					TextDrawHideForPlayer(playerid, TextdrawInfoBox);
		  	  	    format(string, sizeof(string),"Avem o parcare ilegala~n~Du-te si ridica masina.~n~Apasa CTRL sa remorchezi!");
	      			TextDrawSetString(TextdrawInfoBall, string);
			    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
			   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
	   				KillTimer(TimerH[playerid]);
   					TimerH[playerid]= SetTimerEx("HidesInfo", 8000, false, "i", playerid);
		  	        OnJob[playerid] = 7;
					return 1;
				}
				if(randomcp==6)
				{
		  	  	    if(IsValidDynamicObject(TccSmoke[playerid]))
		  	  	    DestroyDynamicObject(TccSmoke[playerid]);
		  	  	    DestroyVehicle(TccPlayerCar[playerid]);
		  	  	    TccPlayerCar[playerid] = CreateVehicle(413, 1403.6628, -1802.7728, 13.5564, 0.0000, -1, -1, 100);
		  	  	    TccSmoke[playerid] = CreateDynamicObject(18726,0,0,-10,0,0,0);
		  	  	    AttachDynamicObjectToVehicle(TccSmoke[playerid],TccPlayerCar[playerid], 0.00000, 1.93680, -1.11330,   0.00000, 0.00000, 0.00000);
                   	SetVehicleParamsEx(TccPlayerCar[playerid], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON); // ONLY the engine param was changed to VEHICLE_PARAMS_ON (1)
					SetPlayerCheckpoint(playerid,  1403.6628, -1802.7728, 13.5564,3);
					TextDrawHideForPlayer(playerid, TextdrawInfoBall);
					TextDrawHideForPlayer(playerid, TextdrawInfoBox);
		  	  	    format(string, sizeof(string),"Avem o dubita suspecta~n~Du-te si ridica masina.~n~Apasa CTRL sa remorchezi!");
	      			TextDrawSetString(TextdrawInfoBall, string);
			    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
			   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
	   				KillTimer(TimerH[playerid]);
   					TimerH[playerid]= SetTimerEx("HidesInfo", 8000, false, "i", playerid);
		  	        OnJob[playerid] = 7;
					return 1;
				}
				if(randomcp==7)
				{
		  	  	    if(IsValidDynamicObject(TccSmoke[playerid]))
		  	  	    DestroyDynamicObject(TccSmoke[playerid]);
		  	  	    DestroyVehicle(TccPlayerCar[playerid]);
		  	  	    TccPlayerCar[playerid] = CreateVehicle(500, 1876.9894, -2457.3386, 13.5194, 0.0000, -1, -1, 100);
		  	  	    TccSmoke[playerid] = CreateDynamicObject(18726,0,0,-10,0,0,0);
		  	  	    AttachDynamicObjectToVehicle(TccSmoke[playerid],TccPlayerCar[playerid], 0.00000, 1.93680, -1.11330,   0.00000, 0.00000, 0.00000);
                   	SetVehicleParamsEx(TccPlayerCar[playerid], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON); // ONLY the engine param was changed to VEHICLE_PARAMS_ON (1)
					SetPlayerCheckpoint(playerid,  1876.9894, -2457.3386, 13.5194,3);
					TextDrawHideForPlayer(playerid, TextdrawInfoBall);
					TextDrawHideForPlayer(playerid, TextdrawInfoBox);
		  	  	    format(string, sizeof(string),"Avem o masina abandonata pe ~n~aeroport.Du-te si ridica masina.~n~Apasa CTRL sa remorchezi!");
	      			TextDrawSetString(TextdrawInfoBall, string);
			    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
			   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
	   				KillTimer(TimerH[playerid]);
   					TimerH[playerid]= SetTimerEx("HidesInfo", 8000, false, "i", playerid);
		  	        OnJob[playerid] = 7;
					return 1;
				}
				if(randomcp==8)
				{
		  	  	    if(IsValidDynamicObject(TccSmoke[playerid]))
		  	  	    DestroyDynamicObject(TccSmoke[playerid]);
		  	  	    DestroyVehicle(TccPlayerCar[playerid]);
		  	  	    TccPlayerCar[playerid] = CreateVehicle(602, 2528.7180, -2518.7737, 13.2595, 0.0000, -1, -1, 100);
		  	  	    TccSmoke[playerid] = CreateDynamicObject(18726,0,0,-10,0,0,0);
		  	  	    AttachDynamicObjectToVehicle(TccSmoke[playerid],TccPlayerCar[playerid], 0.00000, 1.93680, -1.11330,   0.00000, 0.00000, 0.00000);
                   	SetVehicleParamsEx(TccPlayerCar[playerid], VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON); // ONLY the engine param was changed to VEHICLE_PARAMS_ON (1)
					SetPlayerCheckpoint(playerid, 2528.7180, -2518.7737, 13.25,3);
					TextDrawHideForPlayer(playerid, TextdrawInfoBall);
					TextDrawHideForPlayer(playerid, TextdrawInfoBox);
		  	  	    format(string, sizeof(string),"Avem o masina adusa ilegal in ~n~port. Du-te si ridica masina.~n~Apasa CTRL sa remorchezi!");
	      			TextDrawSetString(TextdrawInfoBall, string);
			    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
			   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
	   				KillTimer(TimerH[playerid]);
   					TimerH[playerid]= SetTimerEx("HidesInfo", 8000, false, "i", playerid);
		  	        OnJob[playerid] = 7;
					return 1;
				}
				if(randomcp==9)
				{
		  	  	    if(IsValidDynamicObject(TccSmoke[playerid]))
		  	  	    DestroyDynamicObject(TccSmoke[playerid]);
		  	  	    DestroyVehicle(TccPlayerCar[playerid]);
		  	  	    TccPlayerCar[playerid] = CreateVehicle(605, 2939.2446, -2052.2729, 3.3200, 67.3200, -1, -1, 100);
		  	  	    TccSmoke[playerid] = CreateDynamicObject(18726,0,0,-10,0,0,0);
		  	  	    AttachDynamicObjectToVehicle(TccSmoke[playerid],TccPlayerCar[playerid], 0.00000, 1.93680, -1.11330,   0.00000, 0.00000, 0.00000);
                   	SetVehicleParamsEx(TccPlayerCar[playerid], VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON); // ONLY the engine param was changed to VEHICLE_PARAMS_ON (1)
					SetPlayerCheckpoint(playerid, 2939.2446, -2052.2729, 3.3200,3);
					TextDrawHideForPlayer(playerid, TextdrawInfoBall);
					TextDrawHideForPlayer(playerid, TextdrawInfoBox);
		  	  	    format(string, sizeof(string),"Avem o masina aruncata in ocean~n~Du-te si ridica masina.~n~Apasa CTRL sa remorchezi!");
	      			TextDrawSetString(TextdrawInfoBall, string);
			    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
			   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
	   				KillTimer(TimerH[playerid]);
   					TimerH[playerid]= SetTimerEx("HidesInfo", 8000, false, "i", playerid);
		  	        OnJob[playerid] = 7;
					return 1;
				}
				if(randomcp==10)
				{
		  	  	    if(IsValidDynamicObject(TccSmoke[playerid]))
		  	  	    DestroyDynamicObject(TccSmoke[playerid]);
  		  	  	    DestroyVehicle(TccPlayerCar[playerid]);
		  	  	    TccPlayerCar[playerid] = CreateVehicle(526,982.6445,-1144.1801,23.8142,221.7200, -1, -1, 100);
		  	  	    TccSmoke[playerid] = CreateDynamicObject(18726,0,0,-10,0,0,0);
		  	  	    AttachDynamicObjectToVehicle(TccSmoke[playerid],TccPlayerCar[playerid], 0.00000, 1.93680, -1.11330,   0.00000, 0.00000, 0.00000);
                   	SetVehicleParamsEx(TccPlayerCar[playerid], VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_ON); // ONLY the engine param was changed to VEHICLE_PARAMS_ON (1)
					SetPlayerCheckpoint(playerid,982.6445,-1144.1801,23.8142,3);
					TextDrawHideForPlayer(playerid, TextdrawInfoBall);
					TextDrawHideForPlayer(playerid, TextdrawInfoBox);
		  	  	    format(string, sizeof(string),"Avem o masina avariata~n~Du-te si ridica masina.~n~Apasa CTRL sa remorchezi!");
	      			TextDrawSetString(TextdrawInfoBall, string);
			    	TextDrawShowForPlayer(playerid, TextdrawInfoBall);
			   		TextDrawShowForPlayer(playerid, TextdrawInfoBox);
	   				KillTimer(TimerH[playerid]);
   					TimerH[playerid]= SetTimerEx("HidesInfo", 8000, false, "i", playerid);
		  	        OnJob[playerid] = 7;
					return 1;
				}
      	  	}
	    }
		if(PlayerInfo[playerid][pJob2] == 5|| PlayerInfo[playerid][pJob1] == 5)
		{
     		if(swep1 == GetPlayerVehicleID(playerid) || swep2 == GetPlayerVehicleID(playerid) || swep3 == GetPlayerVehicleID(playerid) || swep4 == GetPlayerVehicleID(playerid) || swep5 == GetPlayerVehicleID(playerid) || swep6 == GetPlayerVehicleID(playerid))
    		{
    		    if(OnJob[playerid] == 0)
    		    {
    		        OnJob[playerid] = 5;
    		        MoveSweepBack();
          			SetPlayerCheckpoint(playerid, 1622.2544, -1857.7454, 13.5246, 4);
    		        CP[playerid] = 1117;
    		        format(string, sizeof(string), "* %s este la datorie ca Sweeper!", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  	    			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Nu te da jos altfel vei lua treaba de la inceput");
					GameTextForPlayer(playerid,"Ai inceput sa muncesti",3000,3);
					format(string,sizeof(string), "%s %d [CMD] -> /sweep",PlayerName(playerid),playerid);
					JobLog(string);
    		    	return 1;
    		    }
    		    else return SendClientMessage(playerid, COLOR_RED, "Deja muncesti");
  			}
		}

	    if(PlayerInfo[playerid][pJob1] == 12 || PlayerInfo[playerid][pJob2] == 12)
    	{
    	    if(OnJob[playerid]==12) return SendClientMessage(playerid,COLOR_RED,"Deja lucrezi!");
	    	if(cutter == GetPlayerVehicleID(playerid) || cutter2 == GetPlayerVehicleID(playerid) || cutter3 == GetPlayerVehicleID(playerid) || cutter4 == GetPlayerVehicleID(playerid))
	    	{
				OnJob[playerid]=12;
				SendClientMessage(playerid,COLOR_LIGHTBLUE,"Du-te si taie iarba in plus!");
                format(string,sizeof(string), "%s %d [CMD] -> start iarba ",PlayerName(playerid),playerid);
				JobLog(string);
				return 1;
			}
		}
	    if(PlayerInfo[playerid][pJob1] == 14 || PlayerInfo[playerid][pJob2] == 14)
    	{
    	    if(IsPlayerInRangeOfPoint(playerid, 50, 2512.0, -2722.0, 18.0)) return SendClientMessage(playerid,COLOR_RED,"Nu esti la Dockuri!");
	        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 493) //
			{
				if(IsValidDynamicObject(CrateBoat[0][playerid])) DestroyDynamicObject(CrateBoat[0][playerid]);
		  	    if(IsValidDynamicObject(CrateBoat[1][playerid])) DestroyDynamicObject(CrateBoat[1][playerid]);
		  	    if(IsValidDynamicObject(CrateBoat[2][playerid])) DestroyDynamicObject(CrateBoat[2][playerid]);
			    CrateBoat[0][playerid] = CreateDynamicObject(2912, 0.80050, -0.17860, 0.47380,   0.00000, 0.00000, 0.00000);
				CrateBoat[1][playerid] = CreateDynamicObject(2912, 0.00000, -0.17860, 0.47380,   0.00000, 0.00000, 0.00000);
				CrateBoat[2][playerid] = CreateDynamicObject(2912, -0.80050, -0.17860, 0.47380,   0.00000, 0.00000, 0.00000);
				AttachDynamicObjectToVehicle(CrateBoat[0][playerid],GetPlayerVehicleID(playerid), 0.80050, -0.17860, 0.47380,  0.00000, 0.00000, 0.00000);
				AttachDynamicObjectToVehicle(CrateBoat[1][playerid],GetPlayerVehicleID(playerid), 0.00000, -0.17860, 0.47380,  0.00000, 0.00000, 0.00000);
				AttachDynamicObjectToVehicle(CrateBoat[2][playerid],GetPlayerVehicleID(playerid), -0.80050, -0.17860, 0.47380, 0.00000,  0.00000, 0.00000);
                TextDrawSetString(TextdrawInfoBall, "Livreaza produsele~n~La checkpoint!");
				TextDrawShowForPlayer(playerid, TextdrawInfoBall);
				TextDrawShowForPlayer(playerid, TextdrawInfoBox);
	   			KillTimer(TimerH[playerid]);
   				TimerH[playerid]= SetTimerEx("HidesInfo", 7000, false, "i", playerid);
                format(string,sizeof(string), "%s %d [CMD] -> start boat ",PlayerName(playerid),playerid);
				JobLog(string);
			    new randomCP = random(7);
                if(randomCP == 0)
                {
					CP[playerid] = 373;
	   				SetPlayerRaceCheckpoint(playerid,3,2293.5176, 514.8782, 1.5111,2284.0210, 514.8873, 1.5111,10);
     				return 1;
				}
				if(randomCP == 1)
                {
					CP[playerid] = 376;
	   				SetPlayerRaceCheckpoint(playerid,3,3434.2217, -1105.7349, -0.0446,3434.4841, -1100.6288, -0.0446,10);
     				return 1;
				}
				if(randomCP == 2)
                {
					CP[playerid] = 375;
	   				SetPlayerRaceCheckpoint(playerid,3,840.3648, -2080.9939, -0.0204 ,835.5729, -2080.8843, -0.0204,10);
     				return 1;
				}
				if(randomCP == 3)
                {
					CP[playerid] = 377;
	   				SetPlayerRaceCheckpoint(playerid,3,185.3316, -1960.1593, -0.0257 ,185.6929, -1958.2609, -0.0257,10);
     				return 1;
				}
				if(randomCP == 4)
                {
					CP[playerid] = 378;
	   				SetPlayerRaceCheckpoint(playerid,3,32.0001, -1113.1451, -0.0270, 30.2111, -1109.7581, -0.0270,10);
     				return 1;
				}
				if(randomCP == 5)
                {
					CP[playerid] = 379;
	   				SetPlayerRaceCheckpoint(playerid,3,10.5931, -2837.9482, -0.0285,8.1682, -2840.7815, -0.0285,10);
     				return 1;
				}
				if(randomCP == 6)
                {
					CP[playerid] = 380;
	   				SetPlayerRaceCheckpoint(playerid,3,2094.9609, -106.1038, -0.0417 ,2096.4832, -108.1035, -0.0417,10);
     				return 1;
				}
			}
	    }//Detective, Transportator, Mechanic, GarbageMan, Sweeper, Farmer, ArmsDealer, DrugsDeale
	    if(PlayerInfo[playerid][pJob1] == 11||PlayerInfo[playerid][pJob2] == 11)
	    {
	        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 512)
	        {
			    if(PlayerReservor[playerid] < 1) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Nu mai ai ierbicid",700,3);
		        if(SmokeCRopDust[playerid] == 1)
		        {
		            SmokeCRopDust[playerid] = 0;
		  	        if(IsValidDynamicObject(SmokeCropDuster[0][playerid])) DestroyDynamicObject(SmokeCropDuster[0][playerid]);
				    if(IsValidDynamicObject(SmokeCropDuster[1][playerid])) DestroyDynamicObject(SmokeCropDuster[1][playerid]);
				    if(IsValidDynamicObject(SmokeCropDuster[2][playerid])) DestroyDynamicObject(SmokeCropDuster[2][playerid]);
				    if(IsValidDynamicObject(SmokeCropDuster[3][playerid])) DestroyDynamicObject(SmokeCropDuster[3][playerid]);
					GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Smoke OFF",700,3);
					return 1;
	  	        }
	  	        SmokeCRopDust[playerid] = 1;
	  	        if(IsValidDynamicObject(SmokeCropDuster[0][playerid])) DestroyDynamicObject(SmokeCropDuster[0][playerid]);
			    if(IsValidDynamicObject(SmokeCropDuster[1][playerid])) DestroyDynamicObject(SmokeCropDuster[1][playerid]);
			    if(IsValidDynamicObject(SmokeCropDuster[2][playerid])) DestroyDynamicObject(SmokeCropDuster[2][playerid]);
			    if(IsValidDynamicObject(SmokeCropDuster[3][playerid])) DestroyDynamicObject(SmokeCropDuster[3][playerid]);
				SmokeCropDuster[0][playerid] = CreateDynamicObject(18715,0,0,-10,0,0,0);
			    SmokeCropDuster[1][playerid] = CreateDynamicObject(18715,0,0,-10,0,0,0);
				SmokeCropDuster[2][playerid] = CreateDynamicObject(18715,0,0,-10,0,0,0);
			    SmokeCropDuster[3][playerid] = CreateDynamicObject(18715,0,0,-10,0,0,0);
			    AttachDynamicObjectToVehicle(SmokeCropDuster[0][playerid],GetPlayerVehicleID(playerid),-2.76257, 0.56850, -0.17633,   90.00000, 0.00000, 0.00000);
			    AttachDynamicObjectToVehicle(SmokeCropDuster[1][playerid],GetPlayerVehicleID(playerid),2.93240, 0.80879, -0.17633,   90.00000, 0.00000, 0.00000);
				AttachDynamicObjectToVehicle(SmokeCropDuster[2][playerid],GetPlayerVehicleID(playerid),-2.76257, 0.56850, -0.17633,   90.00000, 0.00000, 0.00000);
			    AttachDynamicObjectToVehicle(SmokeCropDuster[3][playerid],GetPlayerVehicleID(playerid),2.93240, 0.80879, -0.17633,   90.00000, 0.00000, 0.00000);
				GameTextForPlayer(playerid,"~b~~n~~n~~n~~n~~n~~n~~n~Smoke ON",700,3);
				return 1;
			}
	    }
	    if(PlayerInfo[playerid][pJob2] == 4 || PlayerInfo[playerid][pJob1] == 4)
	    {
	       	if(IsAnAmbulance(GetPlayerVehicleID(playerid)))
	       	{
	       	    if( OnJob[playerid] != 4)
	       	    {
	       	    	SendClientMessage(playerid, COLOR_WHITE, "* Esti acum on-duty ca medic si vei primi apelurile 112.");
   					format(string, sizeof(string), "Paramedic %s este acum on-duty, folositi /service medic.", PlayerName(playerid));
		    		OOCNews(COLOR_ALLDEPT,string);
  	       	    	OnJob[playerid] = 4;
	       		}
	       		else
	       		{
	       		   	SendClientMessage(playerid, COLOR_WHITE, "* Esti acum off-duty ca medic si nu vei mai primi apelurile 112.");
  	       	    	OnJob[playerid] = 0;
	       		}
	       	}
	    }
	    if(PlayerInfo[playerid][pJob1] == 9 || PlayerInfo[playerid][pJob2] == 9)
    	{
        	if(IsAPaperCar(GetPlayerVehicleID(playerid)))
        	{
	    	   	if(CP[playerid] == 0)
	    	    {
					CP[playerid] = 342;
					OnJob[playerid]=9;
					SetPlayerRaceCheckpoint(playerid, 3,1475.6205,-2448.4932,14.0209,1494.2529,-2490.1851,14.0286	, 10);
					SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai inceput jobul");
					return 1;
				}
                format(string,sizeof(string), "%s %d [CMD] -> start paperboy ",PlayerName(playerid),playerid);
				JobLog(string);
			    if(InPlane[playerid]>0) return cmd_over(playerid,params);
			    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
	            OnJob[playerid] = 9;
		 		TimerPaper[playerid] = SetTimerEx("Cade",100,true,"i",playerid);
  				InPlane[playerid]++;
				SendClientMessage(playerid,COLOR_GREEN,"Ai inceput sa livrezi ziare!");
				return 1;
			}
		}
	}
 	if(PRESSED (KEY_JUMP))
	{
   	    if(!IsPlayerInRangeOfPoint(playerid, 10, 2706.7932,-1747.5876,422.8368)/*gazde*/&&
		   !IsPlayerInRangeOfPoint(playerid, 10, 2707.2332,-1856.4978,422.8368)/**oaspeti*/) return 1;
		if(CanJump[playerid] == 1)
		{
	    	CanJump[playerid] = 0;
			SetPlayerVelocity(playerid, 0.0, 0.0, 0.1); // Forces the player to jump (Z velocity + 0.2)
   			SetTimerEx("CanJumpPlayer", 1300, false, "i", playerid);
   			return 1;
		}
	}
/*	if (PRESSED(KEY_WALK))
	pLastTick[playerid] = tick;

	else if (RELEASED(KEY_WALK))
	{
    	dif = tick - pLastTick[playerid];
    	pLastTick[playerid] = -1;
    	if(dif < 2000)
    	{
		    new Float:x, Float:y, Float:z,Float:bx,Float:by,Float:bz;
	    	GetPlayerPos(playerid, x, y, z);
	    	GetObjectPos(GolfBall, bx, by, bz);
			if(IsPlayerInRangeOfPoint(playerid, 3.2, bx, by, bz))
			{
				new Float:speed,Float:angle, Float:vx, Float:vy, Float:vz;
				if(dif > 1000)
				dif = 2000 - dif;
			    speed = (float(dif + 400) / (1000)) * 15.0;
			    GetPlayerFacingAngle(playerid, angle);
		        vx = speed * floatsin(-angle, degrees),
		        vy = speed * floatcos(-angle, degrees);
		        vz = speed / 2.0;
				PHY_SetObjectVelocity(GolfBall, vx, vy, vz);
   				PlayerPlaySound(playerid, 1130, 0.0, 0.0, 0.0);
			}
		}
	}*/


    if(newkeys == KEY_YES)
 	{
 	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
		    if(VehicleLights[GetPlayerVehicleID(playerid)] == 0)
			{
				VehicleLights[GetPlayerVehicleID(playerid)] = 1;
				GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~Light ON",700,3);
				GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, 1, alarm, doors, bonnet, boot, objective);
			}
			else if(VehicleLights[GetPlayerVehicleID(playerid)] == 1)
			{
				VehicleLights[GetPlayerVehicleID(playerid)] = 0;
				GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Light OFF",700,3);
				GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, 0, alarm, doors, bonnet, boot, objective);
			}
		}
		if (IsPlayerInAnyVehicle(playerid))
		{
		    if(Tele[playerid] == 2)
	    	{
    		    new Float:zangle;
				GetVehicleZAngle(GetPlayerVehicleID(playerid),zangle);
				SetVehicleZAngle(GetPlayerVehicleID(playerid),zangle);
		        format(string,sizeof(string),"%s %d a folosit FLIP Y",PlayerName(playerid),playerid);
		        HackLog(string);
			}
		}
 	    if(IsACop(playerid))
 	    {
 	        if(IsPlayerInAnyVehicle(playerid))
 	        {
 	            if(!IsAnCiaCar(GetPlayerVehicleID(playerid)) && !IsACopCar(GetPlayerVehicleID(playerid)) && !IsAnFbiCar(GetPlayerVehicleID(playerid)) && !IsNgCar(GetPlayerVehicleID(playerid)) && !IsAnNavyCar(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,-1,"Nu esti in masina de politie");
 	            if(RowedPDMenu[playerid] != 4)
 	            {
          			new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid, x, y, z);
					PlayerPlaySound(playerid,21001,x,y,z);
				}
			 	if(RowedPDMenu[playerid] == 0)
 	            {
 	            	TogglePlayerControllable(playerid, 0);
					RowedPDMenu[playerid] = 1;
	 	            TextDrawShowForPlayer(playerid,PDMainMenu);
					TextDrawShowForPlayer(playerid,PDLineUp);
					TextDrawShowForPlayer(playerid,PDLineDown);
					TextDrawShowForPlayer(playerid,PDSsapd);
					TextDrawShowForPlayer(playerid,PDProtect);
					TextDrawSetString(PDOption[playerid],"Selecteaza o optiune");
					TextDrawShowForPlayer(playerid,PDOption[playerid]);
					TextDrawShowForPlayer(playerid,PDBackGround);
					TextDrawShowForPlayer(playerid,PDRowStar1);
					PlayerTextDrawColor(playerid,PDRow1[playerid], -1);
					PlayerTextDrawColor(playerid,PDRow2[playerid], 11796424);
					PlayerTextDrawColor(playerid,PDRow3[playerid], 11796424);
					PlayerTextDrawColor(playerid,PDRow4[playerid], 11796424);
					PlayerTextDrawColor(playerid,PDRow5[playerid], 11796424);
					PlayerTextDrawShow(playerid,PDRow1[playerid]);
					PlayerTextDrawShow(playerid,PDRow2[playerid]);
					PlayerTextDrawShow(playerid,PDRow3[playerid]);
					PlayerTextDrawShow(playerid,PDRow4[playerid]);//15800.This is the Los Santos Police Department; Stay where you all are
					PlayerTextDrawShow(playerid,PDRow5[playerid]);//36000,Officer in need of a backup"
					return 1;
	 	        }
	 	        else
     			{

					TogglePlayerControllable(playerid, 1);
					TextDrawHideForPlayer(playerid,PDMainMenu);
					TextDrawHideForPlayer(playerid,PDLineUp);
					TextDrawHideForPlayer(playerid,PDLineDown);
					TextDrawHideForPlayer(playerid,PDSsapd);
					TextDrawHideForPlayer(playerid,PDProtect);
					TextDrawHideForPlayer(playerid,PDOption[playerid]);
					TextDrawHideForPlayer(playerid,PDBackGround);
					TextDrawHideForPlayer(playerid,PDRowStar1);
					TextDrawHideForPlayer(playerid,PDRowStar2);
					TextDrawHideForPlayer(playerid,PDRowStar3);
					TextDrawHideForPlayer(playerid,PDRowStar4);
					TextDrawHideForPlayer(playerid,PDRowStar5);
					PlayerTextDrawHide(playerid,PDRow1[playerid]);
					PlayerTextDrawHide(playerid,PDRow2[playerid]);
					PlayerTextDrawHide(playerid,PDRow3[playerid]);
					PlayerTextDrawHide(playerid,PDRow4[playerid]);
					PlayerTextDrawHide(playerid,PDRow5[playerid]);
					RowedPDMenu[playerid] = 0;
					return 1;
	     		}
     		}
        }
 	}
    if(HOLDING(128))
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	   	brake[playerid] = 1;
	   	else
   		{
		 	if(GetPlayerCameraTargetActor(playerid) != INVALID_ACTOR_ID)
			{
			 	if(GetPlayerWeapon(playerid) >= 22 && GetPlayerWeapon(playerid) <= 42)
			    {
			        LookAt[playerid] = GetPlayerCameraTargetActor(playerid);
			    	ApplyActorAnimation(GetPlayerCameraTargetActor(playerid), "SHOP", "SHP_HandsUp_Scr",4.0,0,1,1,1,0);
		   		}
	    	}
    	}
	}
	else if ( RELEASED(128) )
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		brake[playerid] = 0;
		if(LookAt[playerid] != 999)
		{
			ClearActorAnimations(LookAt[playerid]);
			LookAt[playerid] = 999;
		}
		if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK)
	    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	}
	if((newkeys==128))
	{
	    if(Tied[playerid] > 0) return TogglePlayerControllable(playerid,0); //unfreeze player
	    if(GetPVarInt(playerid, "UsingAnim") == 1)
	    {
			DeletePVar(playerid,"UsingAnim");
			ClearAnimations(playerid);
		}
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	}
    if ((newkeys==KEY_CROUCH))
    {
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
        {
	       	if(Tele[playerid] == 2)
	        {
		        new Float:x, Float:y, Float:z;
		        GetVehicleVelocity(GetPlayerVehicleID(playerid),x,y,z);
		        SetVehicleVelocity(GetPlayerVehicleID(playerid),x,y,z+0.3);
		        format(string,sizeof(string),"%s %d a folosit VUP H",PlayerName(playerid),playerid);
		        HackLog(string);
		    }
        }
        return 1;
	}

	if(newkeys & KEY_SUBMISSION) // Fix
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
		    if(Tele[playerid] == 2)
			{
            	RepairVehicle(GetPlayerVehicleID(playerid));
  				SetVehicleHealth(GetPlayerVehicleID(playerid),1000.0);
		        format(string,sizeof(string),"%s %d a folosit REPAIR 2",PlayerName(playerid),playerid);
		        HackLog(string);
			}
		}
	}
	if(newkeys & KEY_FIRE) // Turbo
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
		    if(Tele[playerid] == 2)
			{
				new Float:vx, Float:vy, Float:vz;
				AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
				GetVehicleVelocity(GetPlayerVehicleID(playerid), vx, vy, vz);
				SetVehicleVelocity(GetPlayerVehicleID(playerid) ,vx * 1.5,vy * 1.5 ,vz * 1.5);
		        format(string,sizeof(string),"%s %d a folosit SPEED Click",PlayerName(playerid),playerid);
		        HackLog(string);
			}
		}
	}

    if(newkeys == 16 && Injourney[playerid] > 0)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 2.0312, -3.2043, 999.5712))
		{
		    new Float:X, Float:Y, Float:Z;
			GetVehiclePos(Injourney[playerid], X, Y, Z);
			SetPlayerPos(playerid, X+2, Y+2, Z);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			Injourney[playerid] = 0;
		}
	}

	//================================
	if((newkeys==KEY_SECONDARY_ATTACK))
    {
        if(takingselfie[playerid] == 1 && gLogged[playerid] == 1)
		{
		    cmd_iphone(playerid,string);
		    TogglePlayerControllable(playerid,1);
			SetCameraBehindPlayer(playerid);
		    takingselfie[playerid] = 0;
		    ApplyAnimation(playerid, "PED", "ATM", 4.1, 0, 1, 1, 0, 1, 1);
		    return 1;
		}
        if(IsPlayerAtPool(playerid))
 		{

            new Float:ox, Float:oy, Float:oz;
     		GetBallPos(ox, oy, oz);
			if(Gamble[0] == 999 || Gamble[1] == 999) return SendClientMessage(playerid,-1,"Scrie /play pentru a incepe un joc!");
	 		if(Gamble[0] != playerid && Gamble[1] != playerid) return SendClientMessage(playerid,-1,"Este un joc in desfasurare!");
	  		if(Taced[playerid] == 1)
			{
			   	if(IsValidPlayerObject(playerid,PlayerTac[playerid]))	DestroyPlayerObject(playerid,PlayerTac[playerid]);
				if(IsValidPlayerObject(playerid,PlayerCameraTac[playerid]))	   	DestroyPlayerObject(playerid,PlayerCameraTac[playerid]);
			    SetTimerEx("TacPlayer", 4450, false, "i", playerid);
				ApplyAnimation(playerid, "POOL", "POOL_Long_Shot_O", 4.1,0, 0, 0, 0, 0, 1);//da cu tacul
	 			SetPlayerArmedWeapon(playerid, 0);
		        TogglePlayerControllable(playerid,1);
	  	        InTargeted[playerid] = 0;
			   	Taced[playerid] = 0;
		        FirstMove[playerid] = 1;
				CanMove[playerid] = 0;
				SetCameraBehindPlayer(playerid);
				ServerWeapon(playerid, 7, 1);
			    SetPlayerArmedWeapon(playerid, 7);
			    return 1;
			}
		    new Float: oXa,Float: oYa,Float: oZa;
		    GetObjectPos(PoolBall[0], oXa, oYa, oZa);
			if(Taced[playerid] == 0)
			{
			    if(PlayerRound!=playerid) return	GameTextForPlayer(playerid, "~r~~n~Nu este randul tau~n~~w~Asteapta...", 2000, 5);
				if(IsMovingBall()==1) return GameTextForPlayer(playerid, "~n~~n~~n~~w~Asteapta...", 2000, 5);
			    new Float:tsX,Float:tsY,Float:tsZ;
	            GetTeleportObjectRight(playerid,tsX,tsY,tsZ);
	            if(IsAreaInArea(tsX,tsY,509.4183,510.8541, -85.9682,-83.7006)) return 1;
				new Float:X,Float:Y,Float:Z;
				TeleportedPlayerToObjectRight(playerid,X,Y,Z);
	    		SetPlayerPos(playerid,X,Y,Z);
				Taced[playerid] = 1;
	  	        FirstMove[playerid] = 1;
	  	        InTargeted[playerid] = 0;
	  	        PlayerBalls[playerid] = 0;
				SetPlayerLookAt(playerid,ox, oy);
				PlayerOnTable=playerid;
				if(IsValidPlayerObject(playerid,PlayerCameraTac[playerid]))	DestroyPlayerObject(playerid,PlayerCameraTac[playerid]);
			    PlayerCameraTac[playerid] = CreatePlayerObject(playerid, 4, 0,0,0, 0, 0, 0);
			    AttachPlayerObjectToPlayer(playerid, PlayerCameraTac[playerid], playerid, -0.00, 0.0, 0.6, 0.0,0.0, 0);
				AttachCameraToPlayerObject(playerid, PlayerCameraTac[playerid]);
			    ApplyAnimation(playerid, "POOL", "POOL_Med_Start", 4.1,0, 1, 1, 1, 1, 1);//sta sa loveasca
				if(IsValidPlayerObject(playerid,PlayerTac[playerid]))	DestroyPlayerObject(playerid,PlayerTac[playerid]);
				PlayerTac[playerid] = CreatePlayerObject(playerid,338, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
				AttachPlayerObjectToPlayer(playerid,PlayerTac[playerid], playerid,   0.0, 0.29954 ,0.0333, 0.000000, 90.000000, 93.000);
  	   			CanMove[playerid] = 0;//
				ServerWeapon(playerid, 7, 1);
			    SetPlayerArmedWeapon(playerid, 7);
			    TogglePlayerControllable(playerid,1);
			 	cmd_dasadsdasadsds(playerid,params);
			    return 1;
	  		}
  		}
        if(IsPlayerInRangeOfPoint(playerid, 2, 2580.7917,-1475.5614,-48.8995)|| IsPlayerInRangeOfPoint(playerid, 2, 3050.2822,-1115.9280,13.2429) || IsPlayerInRangeOfPoint(playerid, 2, 1544.2753,-1666.2375,801.0859))
	    {
     		new Float:health;
		    GetPlayerHealth(playerid,health);
		    if(health >= 100.0) return SendClientMessage(playerid,COLOR_RED,"Nu iti este foame momentan!");
		    if (health < 75.0)
	        SetPlayerHealth(playerid, health+25);
	        else
	        SetPlayerHealth(playerid, 100);
			SBizzInfo[16][sbTill] += 25;
			sbUpdate(16,sbTillx);
			SBizzInfo[16][sbProduse] --;
			sbUpdate(16,sbProdusex);
	    }
        if(IsAtCandySprunk(playerid))
        {
     		new Float:health = GetPlayerHealth(playerid,health);
		    if(health >= 100.0) return SendClientMessage(playerid,COLOR_RED,"Nu iti este foame momentan!");
            GivePlayerCash(playerid,-25);
        	SendClientMessage(playerid, COLOR_GREEN, "*Ai platit 25$ la Tonomat");
			SBizzInfo[16][sbTill] += 25;
			sbUpdate(16,sbTillx);
			SBizzInfo[16][sbProduse] --;
			sbUpdate(16,sbProdusex);
		}
		new Float:X, Float:Y, Float:Z;
        GetPlayerPos(playerid, X, Y, Z);
		if(Z<= 600)
		{
			InteriorPosx[playerid] = X;
			InteriorPosy[playerid] = Y;
			InteriorPosz[playerid] = Z;
		}
		if(Gambling[playerid] == G_STATE_READY)
		{
            CancelSelectTextDraw(playerid);
        	TextDrawHideForPlayer(playerid,TextAddcoin);
	    	TextDrawHideForPlayer(playerid,TextDealcoin);
            ExitPlayerFromSlotMachine(playerid);
            return 1;
      	}
        for(new i = 0; i < MAX_HOUSES; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid,3, HouseInfo[i][hPosX1], HouseInfo[i][hPosY1], HouseInfo[i][hPosZ1]))
   			{
   			    if(GetPlayerVirtualWorld(playerid) != 0)
   			    {
   			        EnteredHouse[playerid] = 0;
     				SetPlayerPos(playerid, HouseInfo[GetPlayerVirtualWorld(playerid)][hPosX], HouseInfo[GetPlayerVirtualWorld(playerid)][hPosY], HouseInfo[GetPlayerVirtualWorld(playerid)][hPosZ]);
     	   			SetPlayerVirtualWorld(playerid, 0);
				  	SetPlayerInterior(playerid, 0);
     				return 1;
				}
			}
		}
        for(new i = 0; i < MAX_BIZ; i++)
		{
 			if (IsPlayerInRangeOfPoint(playerid,1.4,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ]))
  			{
  			    if(BizzInfo[i][bLocked] == 1) return SCM(playerid,COLOR_RED,"Bizul este incuiat");
				SetPlayerPos(playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]);
				SetPlayerInterior(playerid, BizzInfo[i][bInterior]);
				SetPlayerVirtualWorld(playerid,i);
				TogglePlayerControllable(playerid, 0);
    			SetTimerEx("freze", 1000, 0, "i", playerid);
    			return 1;
			}
		}
		if (IsPlayerInRangeOfPoint(playerid,1.2,BizzInfo[GetPlayerVirtualWorld(playerid)][bExitX], BizzInfo[GetPlayerVirtualWorld(playerid)][bExitY], BizzInfo[GetPlayerVirtualWorld(playerid)][bExitZ]))
		{
			SetPlayerPos(playerid,BizzInfo[GetPlayerVirtualWorld(playerid)][bEntranceX],BizzInfo[GetPlayerVirtualWorld(playerid)][bEntranceY],BizzInfo[GetPlayerVirtualWorld(playerid)][bEntranceZ]);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid,0);
		}
  	   	for(new i = 0; i < MAX_HOUSES; i++)
		{
		    if(IsPlayerInRangeOfPoint(playerid,2, HouseInfo[i][hPosX], HouseInfo[i][hPosY], HouseInfo[i][hPosZ]))
		    {
		        if(HouseInfo[i][hOwned] == 0)
		        {
    	            if(GetPlayerCash(playerid) >= HouseInfo[i][hValue])
		            {
		        		format(string, sizeof(string), "{F6F6F6}Vrei sa cumperi aceasta casa pentru {00BC00}$%d{F6F6F6}?", HouseInfo[i][hValue]);
						ShowPlayerDialog(playerid, 300, DIALOG_STYLE_MSGBOX, "{00BC00}Meniul {F6F6F6}Casei", string, "Cumpara", "Pleaca");
	                	HouseRequested[playerid] = i;
	                	return 1;
	                }
	                else
	                {
	                    format(string, sizeof(string), "Ai nevoie de %d $ .Acum ai %d",HouseInfo[i][hValue]-GetPlayerCash(playerid),GetPlayerCash(playerid));
						SendClientMessage(playerid,-1,string);
	                	return 1;
					}
				}
				else
				{
				    if(strmatch(HouseInfo[i][hOwner], PlayerName(playerid)) || PlayerInfo[playerid][pHouse] == i)
				    {
				        SetPlayerInterior(playerid, HouseInfo[i][hInt]);
				        SetPlayerPos(playerid, HouseInfo[i][hPosX1], HouseInfo[i][hPosY1], HouseInfo[i][hPosZ1]);
				        SetPlayerVirtualWorld(playerid, i);
				        EnteredHouse[playerid] = i;
						TogglePlayerControllable(playerid, 0);
					    SetTimerEx("freze", 1000, 0, "i", playerid);
				        return 1;
				    }
				    if(HouseInfo[i][hLock] == 0)
			        {
			    		SetPlayerInterior(playerid, HouseInfo[i][hInt]);
			    		SetPlayerPos(playerid, HouseInfo[i][hPosX1], HouseInfo[i][hPosY1], HouseInfo[i][hPosZ1]);
				    	SetPlayerVirtualWorld(playerid, i);
				    	EnteredHouse[playerid] = i;
	                	return 1;
			    	}
			    	else if(HouseInfo[i][hLock] != 0 && HouseInfo[i][hPrice] != 0)
					{
					    HouseRequested[playerid] = i;
					    ShowPlayerDialog(playerid, 314, DIALOG_STYLE_LIST, "{00BC00}Meniul {F6F6F6}Casei", "{00BC00}1. {F6F6F6}Cumpara casa\n{00BC00}2. {F6F6F6}Intra prin efractie", "Alege", "Iesi");
	    				House[playerid] = i; //return ShowPlayerDialog(playerid, 313, DIALOG_STYLE_MSGBOX, "{F6F6F6}Incuietoarea este slabita..", "{F6F6F6}Ai fortat usa dar n-ai putut sa intri.\n{F6F6F6}Sunt sanse sa poti intra in casa prin efractie. Vrei sa intri?", "Intra", "Pleaca");
	                	return 1;
					}
					else if(HouseInfo[i][hLock] != 0 && HouseInfo[i][hPrice] == 0)
					{
					    House[playerid] = i;
						ShowPlayerDialog(playerid, 313, DIALOG_STYLE_MSGBOX, "{F6F6F6}Poti intra prin efractie..", "{F6F6F6}Ai incercat clanta usii si ai observat ca se poate distruge usor.\n{F6F6F6}Sunt sanse sa poti intra prin efractie. Esti sigur ca vrei sa faci asta?", "Da", "Nu");
	                	return 1;
					}
				}
			}
 		}
 		for(new i=0;i<16;i++)
 	   	{
			if(IsPlayerInRangeOfPoint(playerid, 1.0,CamInfo[i][rPosX],CamInfo[i][rPosY],CamInfo[i][rPosZ]))
			{
    			if(PlayerInfo[playerid][pHotel] == i && strcmp(PlayerName(playerid), CamInfo[PlayerInfo[playerid][pHotel]][rOwner], true) == 0)
    			{
			        SetPlayerInterior(playerid, CamInfo[i][rInterior]);
			        SetPlayerPos(playerid, CamInfo[i][rIntX], CamInfo[i][rIntY], CamInfo[i][rIntZ]);
			        SetPlayerVirtualWorld(playerid, i);
					format(string, sizeof(string), "~w~Camera %d",i);
					GameTextForPlayer(playerid, string, 2500, 3);
			        return 1;
			    }
			    else if(CamInfo[i][rLocked] == 0)
			    {
			   		SetPlayerInterior(playerid, CamInfo[i][rInterior]);
			   		SetPlayerPos(playerid, CamInfo[i][rIntX], CamInfo[i][rIntY], CamInfo[i][rIntZ]);
			        SetPlayerVirtualWorld(playerid, i);
	  				format(string, sizeof(string), "~r~Camera %d",i);
					GameTextForPlayer(playerid, string, 2500, 3);
					return 1;
			   	}
			   	else if(CamInfo[i][rLocked] == 1) return GameTextForPlayer(playerid, "~r~Locked", 2500, 3);
			}
		}
		new bluee = GetPlayerVirtualWorld(playerid);
		if(IsPlayerInRangeOfPoint(playerid, 2.0,CamInfo[bluee][rIntX], CamInfo[bluee][rIntY], CamInfo[bluee][rIntZ]))
		{
		    SetTimerEx("freze", 1000, 0, "i", playerid);
	  		TogglePlayerControllable(playerid, 0);
		    SetPlayerPos(playerid, CamInfo[bluee][rPosX],CamInfo[bluee][rPosY],CamInfo[bluee][rPosZ]);
		 	SetPlayerVirtualWorld(playerid, 0);
		    SetPlayerInterior(playerid, 0);
		    return 1;
		}
		//====================================panelpd
		if(IsACop(playerid))
 	    {
 	        if(IsPlayerInAnyVehicle(playerid))
 	        {
          		new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
 	            if(RowedPDMenu[playerid] >= 6)
 	            {
					PlayerPlaySound(playerid,4202,0,0,0);//beepout
	 				RowedPDMenu[playerid] = 1;
	 	            TextDrawShowForPlayer(playerid,PDMainMenu);
					TextDrawShowForPlayer(playerid,PDLineUp);
					TextDrawShowForPlayer(playerid,PDLineDown);
					TextDrawShowForPlayer(playerid,PDSsapd);
					TextDrawShowForPlayer(playerid,PDProtect);
					TextDrawSetString(PDOption[playerid],"Selecteaza o optiune");
					TextDrawShowForPlayer(playerid,PDOption[playerid]);
					TextDrawShowForPlayer(playerid,PDBackGround);
					TextDrawShowForPlayer(playerid,PDRowStar1);
					PlayerTextDrawColor(playerid,PDRow1[playerid], -1);
					PlayerTextDrawColor(playerid,PDRow2[playerid], 11796424);
					PlayerTextDrawColor(playerid,PDRow3[playerid], 11796424);
					PlayerTextDrawColor(playerid,PDRow4[playerid], 11796424);
					PlayerTextDrawColor(playerid,PDRow5[playerid], 11796424);
					PlayerTextDrawShow(playerid,PDRow1[playerid]);
					PlayerTextDrawShow(playerid,PDRow2[playerid]);
					PlayerTextDrawShow(playerid,PDRow3[playerid]);
					PlayerTextDrawShow(playerid,PDRow4[playerid]);//15800.This is the Los Santos Police Department; Stay where you all are
					PlayerTextDrawShow(playerid,PDRow5[playerid]);//36000,Officer in need of a backup"
					return 1;
	 	        }
 	            if(RowedPDMenu[playerid] < 6)
 	            {
				    if(CanUsePd[playerid] == 0) return 1;
 			        if(RowedPDMenu[playerid]==0) return 1;
 		            CanUsePd[playerid] = 0;
				    SetTimerEx("UsePdA",100, false, "i", playerid);
					PlayerPlaySound(playerid,4203,0,0,0);//beepin
	        		if(RowedPDMenu[playerid]==1)
	        		{
	            		RowedPDMenu[playerid]=6;
						TextDrawHideForPlayer(playerid,PDMainMenu);
						TextDrawHideForPlayer(playerid,PDRowStar1);
						TextDrawHideForPlayer(playerid,PDRowStar2);
						TextDrawHideForPlayer(playerid,PDRowStar3);
						TextDrawHideForPlayer(playerid,PDRowStar4);
						TextDrawHideForPlayer(playerid,PDRowStar5);
						PlayerTextDrawHide(playerid,PDRow1[playerid]);
						PlayerTextDrawHide(playerid,PDRow2[playerid]);
						PlayerTextDrawHide(playerid,PDRow3[playerid]);
						PlayerTextDrawHide(playerid,PDRow4[playerid]);
						PlayerTextDrawHide(playerid,PDRow5[playerid]);
						new wanted=0,strong[500];
						foreach(Player,i)
					 	{
						    if(PlayerInfo[i][pWanted] > 0)
						    {
						        if(wanted>=8) return 1;
					  			format(string, sizeof(string), "~w~%s[%d]:~y~Wanted ~w~%d ~y~Motiv: ~w~%s~n~", PlayerName(i),i,PlayerInfo[i][pWanted],PlayerInfo[i][pCrima]);
								strcat(strong,string);
						  		wanted ++;
							}
						}
						format(string,sizeof(string),"~w~Currents Wanted %d~n~%s",wanted,strong);
						TextDrawSetString(PDOption[playerid],string);
						TextDrawShowForPlayer(playerid,PDOption[playerid]);
						return 1;
					}
					if(RowedPDMenu[playerid]==2)
	        		{
	            		RowedPDMenu[playerid]=6;
						TextDrawHideForPlayer(playerid,PDMainMenu);
						TextDrawHideForPlayer(playerid,PDRowStar1);
						TextDrawHideForPlayer(playerid,PDRowStar2);
						TextDrawHideForPlayer(playerid,PDRowStar3);
						TextDrawHideForPlayer(playerid,PDRowStar4);
						TextDrawHideForPlayer(playerid,PDRowStar5);
						PlayerTextDrawHide(playerid,PDRow1[playerid]);
						PlayerTextDrawHide(playerid,PDRow2[playerid]);
						PlayerTextDrawHide(playerid,PDRow3[playerid]);
						PlayerTextDrawHide(playerid,PDRow4[playerid]);
						PlayerTextDrawHide(playerid,PDRow5[playerid]);
						new jailed=0,strong[500];
						foreach(Player,i)
					 	{
						    if(PlayerInfo[i][pJail] != 0)
						    {
						        if(x>=8) return 1;
					 			format(string, sizeof(string), "~w~[%d]%s:~y~Timp ramas ~w~%d~n~", i,PlayerName(i),PlayerInfo[i][pJailTime]);
								strcat(strong,string);
						  		jailed ++;
							}
      					}
						format(string,sizeof(string),"~w~Currents Jailed %d~n~%s",jailed,strong);
						TextDrawSetString(PDOption[playerid],string);
						TextDrawShowForPlayer(playerid,PDOption[playerid]);
						return 1;
					}
					if(RowedPDMenu[playerid]==3)
	        		{
	            		RowedPDMenu[playerid]=6;
						TextDrawHideForPlayer(playerid,PDMainMenu);
						TextDrawHideForPlayer(playerid,PDRowStar1);
						TextDrawHideForPlayer(playerid,PDRowStar2);
						TextDrawHideForPlayer(playerid,PDRowStar3);
						TextDrawHideForPlayer(playerid,PDRowStar4);
						TextDrawHideForPlayer(playerid,PDRowStar5);
						PlayerTextDrawHide(playerid,PDRow1[playerid]);
						PlayerTextDrawHide(playerid,PDRow2[playerid]);
						PlayerTextDrawHide(playerid,PDRow3[playerid]);
						PlayerTextDrawHide(playerid,PDRow4[playerid]);
						PlayerTextDrawHide(playerid,PDRow5[playerid]);
						TextDrawSetString(PDOption[playerid],"Police Radar");
						PlayerInfo[playerid][pRadar] = 1;
						TextDrawShowForPlayer(playerid,PDOption[playerid]);
						return 1;
					}
					if(RowedPDMenu[playerid]==4)
	        		{
						PlaySoundForPlayersInRange(15800, 50.0, x,y,z);
						if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1)
					 		format(string, sizeof(string), "[L.S.P.D.- Ramai unde esti!o< ]",PlayerName(playerid));
						if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2)
     				 		format(string, sizeof(string), "[F.B.I.- Ramai unde esti!o< %s]",PlayerName(playerid));
						if(PlayerInfo[playerid][pMember] == 17||PlayerInfo[playerid][pLeader] == 17)
					 		format(string, sizeof(string), "[C.I.A.- Ramai unde esti!o< %s]",PlayerName(playerid));
						if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
     				 		format(string, sizeof(string), "[N.G.- Ramai unde esti!< %s]",PlayerName(playerid));
						if(PlayerInfo[playerid][pMember] == 11||PlayerInfo[playerid][pLeader] == 11)
					 		format(string, sizeof(string), "[NAVY.SEAL- Ramai unde esti!< %s]",PlayerName(playerid));
						ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
	            		RowedPDMenu[playerid] = 4;
		 	            TextDrawShowForPlayer(playerid,PDMainMenu);
						TextDrawShowForPlayer(playerid,PDLineUp);
						TextDrawShowForPlayer(playerid,PDLineDown);
						TextDrawShowForPlayer(playerid,PDSsapd);
						TextDrawShowForPlayer(playerid,PDProtect);
						TextDrawSetString(PDOption[playerid],"Selecteaza o optiune");
						TextDrawShowForPlayer(playerid,PDOption[playerid]);
						TextDrawShowForPlayer(playerid,PDBackGround);
						PlayerTextDrawColor(playerid,PDRow1[playerid], 11796424);
						PlayerTextDrawColor(playerid,PDRow2[playerid], 11796424);
						PlayerTextDrawColor(playerid,PDRow3[playerid], 11796424);
						PlayerTextDrawColor(playerid,PDRow4[playerid], -1);
						PlayerTextDrawColor(playerid,PDRow5[playerid], 11796424);
						PlayerTextDrawShow(playerid,PDRow1[playerid]);
						PlayerTextDrawShow(playerid,PDRow2[playerid]);
						PlayerTextDrawShow(playerid,PDRow3[playerid]);
						PlayerTextDrawShow(playerid,PDRow4[playerid]);//15800.This is the Los Santos Police Department; Stay where you all are
						PlayerTextDrawShow(playerid,PDRow5[playerid]);//36000,Officer in need of a backup"
						TextDrawShowForPlayer(playerid,PDRowStar4);
						return 1;
					}
					if(RowedPDMenu[playerid]==5)
	        		{
						PlaySoundForPlayersInRange(36000, 50.0, x,y,z);
	            		RowedPDMenu[playerid] = 5;
		 	            TextDrawShowForPlayer(playerid,PDMainMenu);
						TextDrawShowForPlayer(playerid,PDLineUp);
						TextDrawShowForPlayer(playerid,PDLineDown);
						TextDrawShowForPlayer(playerid,PDSsapd);
						TextDrawShowForPlayer(playerid,PDProtect);
						TextDrawSetString(PDOption[playerid],"Selecteaza o optiune");
						TextDrawShowForPlayer(playerid,PDOption[playerid]);
						TextDrawShowForPlayer(playerid,PDBackGround);
						PlayerTextDrawColor(playerid,PDRow1[playerid], 11796424);
						PlayerTextDrawColor(playerid,PDRow2[playerid], 11796424);
						PlayerTextDrawColor(playerid,PDRow3[playerid], 11796424);
						PlayerTextDrawColor(playerid,PDRow4[playerid], 11796424);
						PlayerTextDrawColor(playerid,PDRow5[playerid], -1);
						PlayerTextDrawShow(playerid,PDRow1[playerid]);
						PlayerTextDrawShow(playerid,PDRow2[playerid]);
						PlayerTextDrawShow(playerid,PDRow3[playerid]);
						PlayerTextDrawShow(playerid,PDRow4[playerid]);//15800.This is the Los Santos Police Department; Stay where you all are
						PlayerTextDrawShow(playerid,PDRow5[playerid]);//36000,Officer in need of a backup"
						TextDrawShowForPlayer(playerid,PDRowStar5);
						if(NeedBackUp[playerid] == 0)
						{
						    NeedBackUp[playerid] = 1;
							PlayerPlaySound(playerid,36000, 0,0,0);
							if(PlayerInfo[playerid][pMember]==1 || PlayerInfo[playerid][pLeader]==1)
							format(string, sizeof(string), "<< Officer %s are nevoie de intariri.Aveti un CP pe minimap>>",PlayerName(playerid));
							else if(PlayerInfo[playerid][pMember]==2||PlayerInfo[playerid][pLeader]==2 || PlayerInfo[playerid][pMember]==17||PlayerInfo[playerid][pLeader]==17)
						 	format(string, sizeof(string), "<< Agentul %s are nevoie de intariri.Aveti un CP pe minimap>>",PlayerName(playerid));
							if(PlayerInfo[playerid][pMember]==3 || PlayerInfo[playerid][pLeader]==3 || PlayerInfo[playerid][pMember]==11 || PlayerInfo[playerid][pLeader]==11)
							format(string, sizeof(string), "<< Soldat %s are nevoie de intariri.Aveti un CP pe minimap>>",PlayerName(playerid));
	     					foreach(Player,i)
							{
								if(IsACop(i))
								{
	      							SendClientMessage(i,COLOR_ALLDEPT, string);
								    if(i!=playerid)
								    {
	      								new Float:xx, Float:yy, Float:zz;
										GetPlayerPos(i, xx, yy, zz);
										PlayerPlaySound(i,36000, 0,0,0);
										if(CP[i]==0 || CP[i] == 24)
										{
											SetPlayerCheckpoint(i,x,y,z,5);
											CP[i] = 24;
										}
									}
								}
							}
							return 1;
						}
						if(NeedBackUp[playerid] == 1)
						{
						    NeedBackUp[playerid] = 0;
						    if(PlayerInfo[playerid][pMember]==1 || PlayerInfo[playerid][pLeader]==1)
							format(string, sizeof(string), "<< Officer %s nu mai are nevoie de intariri>>",PlayerName(playerid));
							else if(PlayerInfo[playerid][pMember]==2||PlayerInfo[playerid][pLeader]==2 || PlayerInfo[playerid][pMember]==17||PlayerInfo[playerid][pLeader]==17)
						 	format(string, sizeof(string), "<< Agentul %s nu mai are nevoie de intariri>>",PlayerName(playerid));
							if(PlayerInfo[playerid][pMember]==3 || PlayerInfo[playerid][pLeader]==3 || PlayerInfo[playerid][pMember]==11 || PlayerInfo[playerid][pLeader]==11)
							format(string, sizeof(string), "<< Soldat %s nu mai are nevoie de intariri>>",PlayerName(playerid));
	     					foreach(Player,i)
							{
								PlayerPlaySound(playerid,15803, 0,0,0);
								if(IsACop(i))
								{
	      							SendClientMessage(i,COLOR_ALLDEPT, string);
								    if(i!=playerid)
								    {
	      								new Float:xx, Float:yy, Float:zz;
										GetPlayerPos(i, xx, yy, zz);
										PlayerPlaySound(i,15803, 0,0,0);//7870
										if(CP[i]==24)
										{
											DisablePlayerCheckpoint(i);
											CP[i] = 0;
										}
									}
								}
							}
							return 1;
						}
					}
				}
			}
		}
		
	    if(IsPlayerInRangeOfPoint(playerid,4.0,1169.0155,-1343.2283,26.6365)) //
		{
			GameTextForPlayer(playerid, "~b~Spital L.S.", 3000, 1);
			SetPlayerPos(playerid,1173.7932,-1361.1276,13.9779); //
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
		if(IsPlayerInRangeOfPoint(playerid,4.0,1173.7932,-1361.1276,13.9779)) //
		{
			GameTextForPlayer(playerid, "~b~Spital Roof", 3000, 1);
			SetPlayerPos(playerid,1169.0155,-1343.2283,26.6365); //
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, -692.3555, 939.5546, 13.6357))
		{
			SetPlayerPos(playerid, 1521.3135, -50.7414, 1002.1310);
			SetPlayerInterior(playerid, 2);
		    TogglePlayerControllable(playerid,0);///asuss
           	SetTimerEx("freze", 1000, false, "i", playerid);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 1521.3135,-50.7414,1002.1310))
		{
			SetPlayerPos(playerid, -692.3555, 939.5546, 13.6357);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 2, 1527.4830,-47.9267,1002.1310))// presinte
		{
			if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7)
			{
			    TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 1000, false, "i", playerid);
				SetPlayerPos(playerid, -688.6441,945.4567,1006.2507);
		   		SetPlayerInterior(playerid, 5);
		   		SetPlayerVirtualWorld(playerid, 1);
			}
			else return GameTextForPlayer(playerid,"~r~Nu ai cheie!",4000,4);
		}

		if (IsPlayerInRangeOfPoint(playerid, 2, -688.6441,945.4567,1006.2507))//presinte
		{
			SetPlayerPos(playerid,  1527.4830,-47.9267,1002.1310);
			SetPlayerInterior(playerid, 2);
			SetPlayerVirtualWorld(playerid, 0);
		    TogglePlayerControllable(playerid,0);///asuss
            SetTimerEx("freze", 1000, false, "i", playerid);
		}
		
		if (IsPlayerInRangeOfPoint(playerid, 2, 1520.6053,-47.8213,1002.1310))
		{
			SetPlayerPos(playerid, -695.4579,915.7996,1002.1573);//2 camera
			SetPlayerInterior(playerid, 6);
		    TogglePlayerControllable(playerid,0);///asuss
            SetTimerEx("freze", 1000, false, "i", playerid);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2,-695.4579,915.7996,1002.1573))//2 camer
		{
			SetPlayerPos(playerid,  1520.6053,-47.8213,1002.1310);
			SetPlayerInterior(playerid, 2);
		    TogglePlayerControllable(playerid,0);///asuss
            SetTimerEx("freze", 1000, false, "i", playerid);
		}
			
		if (IsPlayerInRangeOfPoint(playerid, 3, -684.4442, 939.6513, 13.6920))
		{
			if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7)
			{
			    TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 1038.2289, -3.4352, 1001.2590);
		   		SetPlayerInterior(playerid, 3);
			}
			else return GameTextForPlayer(playerid,"~r~Nu ai cheie!",4000,4);
		}
		if (IsPlayerInRangeOfPoint(playerid, 4,1038.2289, -3.4352, 1001.2590))//presedentie
		{
			SetPlayerPos(playerid,  -684.4442, 939.6513, 13.6920);
			SetPlayerInterior(playerid, 0);
		    TogglePlayerControllable(playerid,0);///asuss
            SetTimerEx("freze", 1000, false, "i", playerid);
		}

        if (IsPlayerInRangeOfPoint(playerid, 2,207.5976,-111.4295,1005.2578))//binco
		{
			SetPlayerPos(playerid,2244.3318,-1665.1820,15.4766);
	   		SetPlayerInterior(playerid,0);//15
		 	SetPlayerVirtualWorld(playerid, 0);
		    TogglePlayerControllable(playerid,0);///asuss
            SetTimerEx("freze", 1000, false, "i", playerid);
  		}
		if (IsPlayerInRangeOfPoint(playerid, 2,2244.3318,-1665.1820,15.4766))//binco
		{
			SetPlayerPos(playerid,207.5976,-111.4295,1005.2578);
	   		SetPlayerInterior(playerid,15);//15
		 	SetPlayerVirtualWorld(playerid, 0);
			GameTextForPlayer(playerid, "~p~Binco",3000,1);
		    TogglePlayerControllable(playerid,0);///asuss
            SetTimerEx("freze", 1000, false, "i", playerid);
  		}

  		if (IsPlayerInRangeOfPoint(playerid, 2,161.3050,-96.4684,1001.8047))//zip
		{
			SetPlayerPos(playerid,1457.3949,-1138.0740,23.9931);
	   		SetPlayerInterior(playerid,0);//18
		 	SetPlayerVirtualWorld(playerid, 0);
		    TogglePlayerControllable(playerid,0);///asuss
            SetTimerEx("freze", 1000, false, "i", playerid);
  		}
		if (IsPlayerInRangeOfPoint(playerid, 2,1457.3949,-1138.0740,23.9931))//zip
		{
			SetPlayerPos(playerid,161.3050,-96.4684,1001.8047);
	   		SetPlayerInterior(playerid,18);//18
		 	SetPlayerVirtualWorld(playerid, 0);
			GameTextForPlayer(playerid, "~p~ZIP",3000,1);
		    TogglePlayerControllable(playerid,0);///asuss
            SetTimerEx("freze", 1000, false, "i", playerid);
  		}

		if (IsPlayerInRangeOfPoint(playerid, 2,207.0688,-139.7202,1003.5078))//prolaps
		{
			SetPlayerPos(playerid,499.6341,-1359.9327,16.3138);
	   		SetPlayerInterior(playerid,0);//3
		 	SetPlayerVirtualWorld(playerid, 0);
		    TogglePlayerControllable(playerid,0);///asuss
            SetTimerEx("freze", 1000, false, "i", playerid);
  		}
		if (IsPlayerInRangeOfPoint(playerid, 2,499.6341,-1359.9327,16.3138))//prolaps
		{
			SetPlayerPos(playerid,207.0688,-139.7202,1003.5078);
	   		SetPlayerInterior(playerid,3);//3
			GameTextForPlayer(playerid, "~b~prolaps",3000,1);
		 	SetPlayerVirtualWorld(playerid, 0);
		    TogglePlayerControllable(playerid,0);///asuss
            SetTimerEx("freze", 1000, false, "i", playerid);
  		}

  		if (IsPlayerInRangeOfPoint(playerid, 2,227.4578,-7.5893,1002.2109))//victim
		{
			SetPlayerPos(playerid,461.3676,-1500.9510,31.0589);
	   		SetPlayerInterior(playerid,0);//5
		 	SetPlayerVirtualWorld(playerid, 0);
		    TogglePlayerControllable(playerid,0);///asuss
            SetTimerEx("freze", 1000, false, "i", playerid);
  		}
		if (IsPlayerInRangeOfPoint(playerid, 2,461.3676,-1500.9510,31.0589))//victim
		{
			SetPlayerPos(playerid,227.4578,-7.5893,1002.2109);
	   		SetPlayerInterior(playerid,5);//5
		 	SetPlayerVirtualWorld(playerid, 0);
			GameTextForPlayer(playerid, "~r~victim",3000,1);
		    TogglePlayerControllable(playerid,0);///asuss
            SetTimerEx("freze", 1000, false, "i", playerid);
  		}

  		if (IsPlayerInRangeOfPoint(playerid, 2,204.3780,-168.1855,1000.5234))//Didier sachs
		{
			SetPlayerPos(playerid,1099.1587,-1605.2975,13.6078);
	   		SetPlayerInterior(playerid,0);//5
		 	SetPlayerVirtualWorld(playerid, 0);
		    TogglePlayerControllable(playerid,0);///asuss
            SetTimerEx("freze", 1000, false, "i", playerid);
  		}
		if (IsPlayerInRangeOfPoint(playerid, 2,1099.1587,-1605.2975,13.6078))//Didier sachs
		{
			SetPlayerPos(playerid,204.3780,-168.1855,1000.5234);
	   		SetPlayerInterior(playerid,14);//5
		 	SetPlayerVirtualWorld(playerid, 0);
			GameTextForPlayer(playerid, "~y~Didier sachs",3000,1);
		    TogglePlayerControllable(playerid,0);///asuss
            SetTimerEx("freze", 1000, false, "i", playerid);
  		}

		//====================================panelpd
	    //===================================houses===========================
	    if (IsPlayerInRangeOfPoint(playerid, 2,-813.6746, 1002.4321, 1000.9717))
		{
			if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7)
		    {
                SetPlayerPos(playerid,2150.3838, 1602.8372, 1002.0436);
	   			SetPlayerInterior(playerid,1);
		        TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
		    }
		}
		if (IsPlayerInRangeOfPoint(playerid, 2,2150.3838, 1602.8372, 1002.0436))
		{
			if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7)
		    {
                SetPlayerPos(playerid,-813.6746, 1002.4321, 1000.9717);
	   			SetPlayerInterior(playerid,2);
		        TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
		    }
		}
        if(IsPlayerInRangeOfPoint(playerid, 3, 2064.9307, -1583.6982, 13.5006)) // CRACK HOUSE intare
		{
   			SetPlayerPos(playerid, 318.564971,1118.209960,1083.882812);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid,5);
			GameTextForPlayer(playerid, "~g~Casa~w~de Droguri",5000,1);
   			SetTimerEx("freze", 1300, 0, "i", playerid);
			TogglePlayerControllable(playerid, 0);
   		}
		if(IsPlayerInRangeOfPoint(playerid, 3, 318.564971,1118.209960,1083.882812))
  		{
			SetPlayerPos(playerid, 2064.9307, -1583.6982, 13.5006);// droguri iesire
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid,0);
			GameTextForPlayer(playerid, "~r~Los~w~Santos",5000,1);
   			SetTimerEx("freze", 1300, 0, "i", playerid);
	   		TogglePlayerControllable(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3,2695.6235,-1704.6960,11.8438))
		{
		    GameTextForPlayer(playerid, "~w~Welcome to the 8ball Track", 5000, 1);
		    SetPlayerInterior(playerid,7);
   			SetTimerEx("freze", 1300, 0, "i", playerid);
	   		TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid,-1408.6389, -254.6014, 1043.6563);
		}
		if (IsPlayerInRangeOfPoint(playerid, 8,-2111.5686,-443.9720,38.7344))
		{
		    GameTextForPlayer(playerid, "~w~Welcome to the Dirt Track", 5000, 1);
		    SetPlayerInterior(playerid,4);
   			SetTimerEx("freze", 1300, 0, "i", playerid);
	   		TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid,-1443.0554,-581.1879,1055.0472);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3,-2080.3079,-406.0309,38.7344))
		{
		    GameTextForPlayer(playerid, "~w~Welcome to the Stunting Track", 5000, 1);
		    SetPlayerInterior(playerid,14);
   			SetTimerEx("freze", 1300, 0, "i", playerid);
	   		TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid,-1464.7732,1557.5533,1052.5313);
		}
        if (IsPlayerInRangeOfPoint(playerid,10,1099.3762,1601.5387,12.5469))
		{
			GameTextForPlayer(playerid, "~p~"#SERVERNAME"-~n~~r~~h~Destruction Stadium ~n~~g~Las Venturas", 5000, 1);
			SetPlayerInterior(playerid, 15);
			SetPlayerPos(playerid,-1390.0785,930.2457,1041.5313);
   			SetTimerEx("freze", 1300, 0, "i", playerid);
	   		TogglePlayerControllable(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3,-1408.6389, -254.6014, 1043.6563))
		{
		    GameTextForPlayer(playerid, "~w~Welcome to the 8ball Track", 5000, 1);
		    SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,2695.6235,-1704.6960,11.8438);
   			SetTimerEx("freze", 1300, 0, "i", playerid);
	   		TogglePlayerControllable(playerid, 0);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 8,-1443.0554,-581.1879,1055.0472))
		{
		    GameTextForPlayer(playerid, "~w~Welcome to the Dirt Track", 5000, 1);
		    SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,-2111.5686,-443.9720,38.7344);
   			SetTimerEx("freze", 1300, 0, "i", playerid);
	   		TogglePlayerControllable(playerid, 0);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 3,-1464.7732,1557.5533,1052.5313))
		{
		    GameTextForPlayer(playerid, "~w~Welcome to the Stunting Track", 5000, 1);
		    SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,-2080.3079,-406.0309,38.7344);
   			SetTimerEx("freze", 1300, 0, "i", playerid);
	   		TogglePlayerControllable(playerid, 0);
		}
        if (IsPlayerInRangeOfPoint(playerid,10,-1390.0785,930.2457,1041.5313))
		{
			GameTextForPlayer(playerid, "~p~"#SERVERNAME"-~n~~r~~h~Destruction Stadium ~n~~g~Las Venturas", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,1099.3762,1601.5387,12.5469);
   			SetTimerEx("freze", 1300, 0, "i", playerid);
	   		TogglePlayerControllable(playerid, 0);
		}

		if(IsPlayerInRangeOfPoint(playerid, 3, -978.2239, 1053.1096, 1344.0459))//blue
  		{
            if(PaintBallPlaying[playerid] != 1) return GameTextForPlayer(playerid, "~r~Aici nu este~n~Iesirea echipei tale",3000,1);
            PaintBallPlaying[playerid] = 0;
            SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, SBizzInfo[10][sbPosX],SBizzInfo[10][sbPosY],SBizzInfo[10][sbPosZ]);//paint exit paint
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid,0);
			GameTextForPlayer(playerid, "~r~Los~w~Santos",5000,1);
   			SetTimerEx("freze", 1300, 0, "i", playerid);
	   		TogglePlayerControllable(playerid, 0);
	   		format(string,sizeof(string),"%s a parasit jocul!",PlayerName(playerid));
            PainBallBroadCast(COLOR_LIGHTBLUE,string);
	        ResetPlayerWeapons(playerid);
			SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
    		PaintScore[playerid] = 0;
    		SCM(playerid,-1,"Ai parasit echipa albastra");
    		SetPlayerArmour(playerid, 0);
        	SetPlayerHealth(playerid, 100);
 		}
 		if(IsPlayerInRangeOfPoint(playerid, 3, -1128.5309, 1066.1880, 1344.7362))//red
  		{
            if(PaintBallPlaying[playerid] != 2) return GameTextForPlayer(playerid, "~r~Aici nu este~n~Iesirea echipei tale",3000,1);
            PaintBallPlaying[playerid] = 0;
            SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, SBizzInfo[10][sbPosX],SBizzInfo[10][sbPosY],SBizzInfo[10][sbPosZ]);//paint exit paint
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid,0);
			GameTextForPlayer(playerid, "~r~Los~w~Santos",5000,1);
   			SetTimerEx("freze", 1300, 0, "i", playerid);
	   		TogglePlayerControllable(playerid, 0);
	   		format(string,sizeof(string),"%s a parasit jocul!",PlayerName(playerid));
            PainBallBroadCast(COLOR_LIGHTBLUE,string);
	        ResetPlayerWeapons(playerid);
			SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
    		PaintScore[playerid] = 0;
    		SCM(playerid,-1,"Ai parasit echipa rosie");
    		SetPlayerArmour(playerid, 0);
        	SetPlayerHealth(playerid, 100);
 		}

       	if(IsPlayerInRangeOfPoint(playerid, 3.0,-2118.4675,-1412.1925,1.2866)) // enter
		{
		    if(ticket[playerid] != 2) return SendClientMessage(playerid,COLOR_RED,"Nu esti imbracat in costumul de baie");
			GameTextForPlayer(playerid, "~b~/jump", 3000, 1);
			SetPlayerPos(playerid,-2118.6863,-1410.8334,6.1873); //
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0,-2124.2693,-1412.8988,1.2866)) // ra
		{
			if(ticket[playerid] != 2) return SendClientMessage(playerid,COLOR_RED,"Nu esti imbracat in costumul de baie");
			GameTextForPlayer(playerid, "~b~/jump", 3000, 1);
			SetPlayerPos(playerid,-2124.2676,-1411.2166,11.1614); // ra
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0,-2130.0542,-1413.2365,1.2866)) // r2
		{
			if(ticket[playerid] != 2) return SendClientMessage(playerid,COLOR_RED,"Nu esti imbracat in costumul de baie");
			GameTextForPlayer(playerid, "~b~/jump", 3000, 1);
			SetPlayerPos(playerid,-2129.8684,-1410.8207,16.1457); // r2
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0,-2136.7864,-1413.0447,1.2866)) // r3
		{
			if(ticket[playerid] != 2) return SendClientMessage(playerid,COLOR_RED,"Nu esti imbracat in costumul de baie");
			GameTextForPlayer(playerid, "~b~/jump", 3000, 1);
			SetPlayerPos(playerid,-2136.4282,-1410.9100,21.0505); // r3
		}
        if(IsPlayerInRangeOfPoint(playerid, 5,1275.2297, -1665.3538, 20.9244)) //
		{
            	casino[playerid] = 1;
            	GameTextForPlayer(playerid, "~y~Caligula's Casino", 3000, 1);
				SetPlayerPos(playerid,2233.9297, 1713.4061, 1012.3330); //
   				SetTimerEx("freze", 1300, 0, "i", playerid);
	   			TogglePlayerControllable(playerid, 0);
			 	SetPlayerVirtualWorld(playerid, 0);
			    SetPlayerInterior(playerid, 1);
			    format(string, sizeof(string), " Caligula's Casino\nJackpot in valoare de:\n%d$",JackpotCaligula);
//    			Update3DTextLabelText(Caligulas, 0x0033FFC8, string);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2,2233.9297, 1713.4061, 1012.3330)) //
		{
            	casino[playerid] = 1;
            	GameTextForPlayer(playerid, "~b~ Los Santos", 3000, 1);
				SetPlayerPos(playerid,1275.2297, -1665.3538, 20.9244); //
	   			TogglePlayerControllable(playerid, 1);
			 	SetPlayerVirtualWorld(playerid, 0);
			    SetPlayerInterior(playerid, 0);
		}

		if(IsPlayerInRangeOfPoint(playerid, 6,2744.0635,-1803.4783,422.8368)|| // Iesire echipa
		IsPlayerInRangeOfPoint(playerid, 6,2753.0398,-1737.0667,424.3867)|| //  iesire spectatori
		IsPlayerInRangeOfPoint(playerid, 6,2752.8113,-1766.7589,422.8368)|| //  iesire spectatori
		IsPlayerInRangeOfPoint(playerid, 6,2752.6770,-1796.5997,422.8368)|| // iesire spectatori
		IsPlayerInRangeOfPoint(playerid, 6,2753.0300,-1823.8799,422.8368)|| // iesire spectatori
		IsPlayerInRangeOfPoint(playerid, 6,2753.0315,-1853.1445,422.8368)|| // iesire spectatori
		IsPlayerInRangeOfPoint(playerid, 6,2661.8376,-1877.3860,422.4941)|| // iesire spectatori
		IsPlayerInRangeOfPoint(playerid, 6,2661.8628,-1847.9832,422.8368)|| //  iesire spectatori
		IsPlayerInRangeOfPoint(playerid, 6,2661.9160,-1818.5420,422.8368)|| //  iesire spectatori
		IsPlayerInRangeOfPoint(playerid, 6,2662.6323,-1789.4681,422.8368)|| //  iesire spectatori
		IsPlayerInRangeOfPoint(playerid, 6,2661.8352,-1760.0023,422.8368)) // ,iesire spectatori
		{/////
			SetPlayerPos(playerid,2727.9675,-1828.3961,11.8438);
			SetPlayerInterior(playerid,0);
			TeamBall[playerid] = 0;
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerToTeamColor(playerid);
			SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
			if(OaspetiOnline()==0&&GazdeOnline()==0)
			{
			    RecreateBall();
			    Oaspeti = 0;
			    Gazde = 0;
			   	format(string,40,"Oaspeti\n%d",Oaspeti);
				SetDynamicObjectMaterialText(OaspetiPanou,0,string,OBJECT_MATERIAL_SIZE_256x256,"Arial", 75, 1, 0xFFFFFFFF,1, 1);
   				format(string,40,"Gazde\n%d",Gazde);
				SetDynamicObjectMaterialText(GazdePanou,0,string,OBJECT_MATERIAL_SIZE_256x256,"Arial", 75, 1, 0xFFFFFFFF,1, 1);
			}
			return 1;
		}

		if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK)
	    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);

	    if (IsPlayerInRangeOfPoint(playerid, 2,2389.1899, 2465.9829, 10.9065))
		{
		    if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7)
		    {
		        TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
		   		SetPlayerPos(playerid,-810.6700, 1020.0967, 1001.0224);
	   			SetPlayerInterior(playerid,2);
	   		}
	   		else  GameTextForPlayer(playerid, "~w~Nu ai Cheia",5000,1);
   		}

	 	if (IsPlayerInRangeOfPoint(playerid, 2,-810.6700, 1020.0967, 1001.0224))
		{
		    SetPlayerPos(playerid,2389.1899, 2465.9829, 10.9065);
		    SetPlayerInterior(playerid,0);
		}
    	if (IsPlayerInRangeOfPoint(playerid, 2,-2699.7634, 310.3145, 1051.8579))
		{
		    if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7)
		    {
		   		SetPlayerPos(playerid,-1665.4164, 84.8433, 1001.0304);
		        TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
	   		}
	   		else return GameTextForPlayer(playerid, "~w~Nu ai Cheia",5000,1);
 		}

 		if (IsPlayerInRangeOfPoint(playerid, 2,-2691.0952,311.8199,1051.8579))
		{
     		SetPlayerPos(playerid,-2765.0615,375.9101,6.3430);
       		TogglePlayerControllable(playerid,0);///asuss
     		SetPlayerInterior(playerid,0);
           	SetTimerEx("freze", 2000, false, "i", playerid);
 		}
 		if (IsPlayerInRangeOfPoint(playerid, 2,-2765.0615,375.9101,6.3430))
		{
     		SetPlayerPos(playerid,-2691.0952,311.8199,1051.8579);
     		SetPlayerInterior(playerid,1);
       		TogglePlayerControllable(playerid,0);///asuss
           	SetTimerEx("freze", 2000, false, "i", playerid);
 		}

	 	if (IsPlayerInRangeOfPoint(playerid, 2,-1665.4164, 84.8433, 1001.0304))
		{
			SetPlayerPos(playerid, -2699.7634, 310.3145, 1051.8579);
		    TogglePlayerControllable(playerid,0);///asuss
	       	SetTimerEx("freze", 2000, false, "i", playerid);
 		}

 		if (IsPlayerInRangeOfPoint(playerid, 2, 2421.4893, -1219.9133, 25.6265))//pigpen
		{
 			SetPlayerPos(playerid,1204.7136, -13.2697, 1000.9765); // strip
		   	TogglePlayerControllable(playerid,0);///asuss
	       	SetTimerEx("freze", 1000, false, "i", playerid);
	       	SetPlayerInterior(playerid,2);
		   	GameTextForPlayer(playerid, "~w~Strip Club",5000,1);
 		}
 		if (IsPlayerInRangeOfPoint(playerid, 2,1204.7136, -13.2697, 1000.9765))//pigpen
		{
 			SetPlayerPos(playerid, 2421.4893, -1219.9133, 25.6265); // strip
		   	TogglePlayerControllable(playerid,0);///asuss
	       	SetTimerEx("freze", 1000, false, "i", playerid);
	       	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~Strip Club",5000,1);
 		}
        if (IsPlayerInRangeOfPoint(playerid, 2, 1488.9806, -1720.4487, 8.5766))//bm
		{
		  	if(IsACop(playerid)) return GameTextForPlayer(playerid, "~n~~n~~r~Politistii nu ~n~au ce cauta aici",3000,4);
   		   	SetPlayerPos(playerid, 296.7969, -111.4779, 1001.7153);
		   	SetPlayerInterior(playerid,6);
		   	TogglePlayerControllable(playerid,0);///asuss
	       	SetTimerEx("freze", 1000, false, "i", playerid);
		   	GameTextForPlayer(playerid, "~w~Black Market",5000,1);
	 	}
	 	if (IsPlayerInRangeOfPoint(playerid, 2, 296.7969, -111.4779, 1001.7153))//bm
		{
		   	SetPlayerPos(playerid, 1488.9806, -1720.4487, 8.5766);
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
	 	}
        if (IsPlayerInRangeOfPoint(playerid,3,1481.0463,-1770.3093,18.7958))//intrare primarie
		{
		    SetPlayerInterior(playerid,3);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid,387.7978,173.8582,1008.3828);
		    TogglePlayerControllable(playerid,0);///
           	SetTimerEx("freze", 1000, false, "i", playerid);
			GameTextForPlayer(playerid, "~w~Primaria", 5000, 1);
		}
		if (IsPlayerInRangeOfPoint(playerid,3,1099.2592,-1632.8492,13.6130))//lotto
  		{
		   	SetPlayerPos(playerid,834.2526, 7.3963, 1004.3554);
		   	SetPlayerInterior(playerid,3);
		   	TogglePlayerControllable(playerid,0);///asuss
           	SetTimerEx("freze", 2000, false, "i", playerid);
		   	SetPlayerVirtualWorld(playerid,5);
		   	GameTextForPlayer(playerid, "~w~Loterie",5000,1);
  		}
		if (IsPlayerInRangeOfPoint(playerid,3,834.2526, 7.3963, 1004.3554))//lotto
  		{
  			if(GetPlayerVirtualWorld(playerid) == 5)
	    	{
	   			SetPlayerPos(playerid,1099.2592,-1632.8492,13.6130);
	   			SetPlayerInterior(playerid,0);
		  		SetPlayerVirtualWorld(playerid,0);
		   		GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
 			}
		}
		if (IsPlayerInRangeOfPoint(playerid,2,1564.4384,-1668.1627,16.1974))//pd do
		{
		    if(!IsACop(playerid)) return GameTextForPlayer(playerid, "~r~Nu esti Politist", 2000, 1);
	        SetPlayerPos(playerid,1564.5609,-1670.3633,16.1974);
			SetPlayerInterior(playerid, 0);
	        SetPlayerVirtualWorld(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid,2,1564.5609,-1670.3633,16.1974))//pd od
		{
		    if(!IsACop(playerid)) return GameTextForPlayer(playerid, "~r~Nu esti Politist", 2000, 1);
	    	SetPlayerPos(playerid,1564.4384,-1668.1627,16.1974);
			SetPlayerInterior(playerid, 0);
	        SetPlayerVirtualWorld(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid,3,387.7978,173.8582,1008.3828))//iesire  primarie
		{
		    SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid, 0);
			GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
			SetPlayerPos(playerid,1481.0463,-1770.3093,18.7958);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3, 1560.3110,-1675.6733,16.1974))
		{
		    SetPlayerPos(playerid, 1554.1682,-1675.8226,16.1974);
		    GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
		    SetPlayerInterior(playerid,0);
		    SetPlayerFacingAngle(playerid, 270);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3, 1554.1682 ,-1675.8226, 16.1974))
		{
		    //PDenter
		    SetPlayerPos(playerid, 1560.3110,-1675.6733,16.1974);
		    GameTextForPlayer(playerid, "~b~Los Santos Police Departament",5000,1);
		    SetPlayerInterior(playerid,0);
		    SetPlayerFacingAngle(playerid, 270);
		}

    	if (IsPlayerInRangeOfPoint(playerid, 3,2673.6550,-610.8187,-71.3486))
		{
		    TogglePlayerControllable(playerid,0);///
           	SetTimerEx("freze", 1000, false, "i", playerid);
		    SetPlayerPos(playerid, 1459.1333,-1012.2750,26.6393);
		    GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
		    SetPlayerInterior(playerid, 0);
		}//bancals
		if (IsPlayerInRangeOfPoint(playerid, 3, 1459.1333,-1012.2750,26.6393))
		{
		    TogglePlayerControllable(playerid,0);///
            SetTimerEx("freze", 2000, false, "i", playerid);
		    SetPlayerPos(playerid, 2673.6550,-610.8187,-71.3486);
		    GameTextForPlayer(playerid, "~w~Banca Los Santos",5000,1);
		    SendClientMessage(playerid,COLOR_LIGHTBLUE,"[BANK]: Folositi comenzile /withdraw /balance /deposit sau /bank");
		    SetPlayerInterior(playerid, 1);
		}//bancals
		if (IsPlayerInRangeOfPoint(playerid, 3,-1749.3287,868.2448,25.0859))
		{
		    TogglePlayerControllable(playerid,0);///
            SetTimerEx("freze", 2000, false, "i", playerid);
		    SetPlayerPos(playerid, 3439.4658,1198.3929,1000.9185);
		    GameTextForPlayer(playerid, "~w~Banca San Fierro",5000,1);
		    SendClientMessage(playerid,COLOR_LIGHTBLUE,"[BANK]: Folositi comenzile /withdraw /balance /deposit sau /bank");
		    SetPlayerInterior(playerid, 1);
		}//bancasf
		if (IsPlayerInRangeOfPoint(playerid, 3, 3439.4658,1198.3929,1000.9185))
		{
		    TogglePlayerControllable(playerid,0);///
            SetTimerEx("freze", 2000, false, "i", playerid);
  		    SetPlayerPos(playerid, -1749.3287,868.2448,25.0859);
		    GameTextForPlayer(playerid, "~w~San Fierro",5000,1);
		    SetPlayerInterior(playerid, 0);
		}//bancasf
		if (IsPlayerInRangeOfPoint(playerid, 3,2196.0256,1677.0201,12.3672))
		{
		    TogglePlayerControllable(playerid,0);///
            SetTimerEx("freze", 2000, false, "i", playerid);
		    SetPlayerPos(playerid, 172.6915,-860.1678,2100.8774);
		    SendClientMessage(playerid,COLOR_LIGHTBLUE,"[BANK]: Folositi comenzile /withdraw /balance /deposit sau /bank");
		    GameTextForPlayer(playerid, "~w~Banca Las Venturas",5000,1);
		    SetPlayerInterior(playerid, 1);
		}//bancalv
		if (IsPlayerInRangeOfPoint(playerid, 3, 172.6915,-860.1678,2100.8774))
		{
		    TogglePlayerControllable(playerid,0);///
            SetTimerEx("freze", 2000, false, "i", playerid);
 		    SetPlayerPos(playerid, 2196.0256,1677.0201,12.3672);
		    GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
		    SetPlayerInterior(playerid, 0);
		}//bancalv
		if (IsPlayerInRangeOfPoint(playerid,5, 207.731,-109.06,1005.132))//Binco de la Gym
		{
      		SetPlayerPos(playerid,2244.2517,-1665.4854,15.4766);
       		SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
       		GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
		}
		if (IsPlayerInRangeOfPoint(playerid,5,2244.2517,-1665.4854,15.4766 ))//Binco de la Gym
		{
      		SetPlayerPos(playerid,207.731,-109.06,1005.132);
       		SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 15);
       		GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
		}
	    //==================factiuni
	    if(IsPlayerInRangeOfPoint(playerid,5,370.6547, 199.0063, 1014.2126)) //roof taxi
		{
		    SetPlayerPos(playerid,-1977.4102, 164.0129, 37.0542);
		 	SetPlayerVirtualWorld(playerid, 0);
		    SetPlayerInterior(playerid, 0);
        }
        if(IsPlayerInRangeOfPoint(playerid,5,-1977.4102, 164.0129, 37.0542 )) //
		{
		    if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
		    {
           	 	SetPlayerPos(playerid,370.6547, 199.0063, 1014.2126); //
		 		SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerInterior(playerid, 3);
		 		TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
           	}
           	else GameTextForPlayer(playerid, "~r~Locked", 3000, 1);
		}
 		if (IsPlayerInRangeOfPoint(playerid, 2, -1968.7578,162.1992,28.5566))
		{
		    if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
			{
				//LA Yellow Cab Co.
				TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 371.4523,180.2195,1014.1875);
				GameTextForPlayer(playerid, "~w~HQ Taxi Cab. Co.",5000,1);
		 		SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid,3);
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 1, 371.4523,180.2195,1014.1875 ))
		{
		    if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
			{
				SetPlayerPos(playerid,-1968.7578,162.1992,28.5566);
				GameTextForPlayer(playerid, "~r~San Fierro",5000,1);
		 		SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid,0);
			}
			else  GameTextForPlayer(playerid, "~r~Locked", 3000, 1);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2,-2463.2512,131.7909,35.1719))
		{
			//triads hq
			if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
			{
			    TogglePlayerControllable(playerid,0);///asuss
				SetPlayerPos(playerid, 756.3008,-16.4745,1000.5859);
				GameTextForPlayer(playerid, "~w~Triads HQ",5000,1);
	           	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerInterior(playerid,6);
			}
			else if(hqlock[triadslock] == 0)
			{
			    TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 2000, false, "i", playerid);
			    SetPlayerPos(playerid, 756.3008,-16.4745,1000.5859);
				GameTextForPlayer(playerid, "~w~Triads HQ",5000,1);
				SetPlayerInterior(playerid,6);
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 2,-2488.6260,129.5912,25.8672))
		{
			//triads hq2
			if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
			{
			    TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 774.1513,-50.4770,1000.5859);
				GameTextForPlayer(playerid, "~w~Triads HQ",5000,1);
				SetPlayerInterior(playerid,6);
			}
			else if(hqlock[triadslock] == 0)
			{
			    TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
			    SetPlayerPos(playerid, 774.1513,-50.4770,1000.5859);
				GameTextForPlayer(playerid, "~w~Triads HQ",5000,1);
				SetPlayerInterior(playerid,6);
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 2, 756.3008,-16.4745,1000.5859))
		{
			//triads hq1
			SetPlayerPos(playerid,-2463.2512,131.7909,35.1719);
			GameTextForPlayer(playerid, "~w~San Fierro",5000,1);
			SetPlayerInterior(playerid,0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2, 774.1513,-50.4770,1000.5859))
		{
			//triads hq2
			SetPlayerPos(playerid, -2488.6260,129.5912,25.8672);
			GameTextForPlayer(playerid, "~w~San Fierro",5000,1);
			SetPlayerInterior(playerid,0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2,1879.1915,2339.5664,10.9799))
		{
			//rifaaaaaaaaaaaaaa
			if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
			{
			    TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 973.1266,8.4620,1001.1484);
				GameTextForPlayer(playerid, "~w~ Rifa HQ",5000,1);
				SetPlayerInterior(playerid,3);
			}
			else if(hqlock[rifalock] == 0)
			{
			    SetPlayerPos(playerid, 973.1266,8.4620,1001.1484);
				GameTextForPlayer(playerid, "~w~Rifa HQ",5000,1);
				SetPlayerInterior(playerid,3);
				TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 2, 973.1266,8.4620,1001.1484))
		{
			//rifaaaaqa
			SetPlayerPos(playerid, 1879.1915,2339.5664,10.9799);
			GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
			SetPlayerInterior(playerid,0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 2, 1455.2557,750.8950,11.0234))
		{
			//braaaatttttvvvvaaaa
			if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
			{
			    TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 966.2404,-52.9617,1001.1246);
				GameTextForPlayer(playerid, "~w~ Bratva HQ",5000,1);
				SetPlayerInterior(playerid,3);

			}
			else if(hqlock[bratvalock] == 0)
			{
			    TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
			    SetPlayerPos(playerid, 966.2404,-52.9617,1001.1246);
				GameTextForPlayer(playerid, "~w~Bratva HQ",5000,1);
				SetPlayerInterior(playerid,3);
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2, 966.2404,-52.9617,1001.1246))
		{
			//balratva
			SetPlayerPos(playerid, 1455.2557,750.8950,11.0234);
			GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
			SetPlayerInterior(playerid,0);
  		}
		else if (IsPlayerInRangeOfPoint(playerid, 2, 1530.2097,751.2466,11.0234))
		{
			//braaaatttttvvvvaaaa
			if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
			{
			    TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 942.0474,-50.6103,1001.1246);
				GameTextForPlayer(playerid, "~w~ Bratva HQ",5000,1);
				SetPlayerInterior(playerid,3);
    		}
			else if(hqlock[bratvalock] == 0)
			{
			    TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
			    SetPlayerPos(playerid, 942.0474,-50.6103,1001.1246);
				GameTextForPlayer(playerid, "~w~Bratva HQ",5000,1);
			    SetPlayerInterior(playerid,3);
    		}
			else
			{
			    GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2, 942.0474,-50.6103,1001.1246))
		{
			//balratva
			SetPlayerPos(playerid, 1530.2097,751.2466,11.0234);
			GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
			SetPlayerInterior(playerid,0);
   		}
		if (IsPlayerInRangeOfPoint(playerid, 2, -2664.2512,-2.2201,6.1328))
		{
			//balasssss
			if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
			{
			    TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 442.0318,-49.6267,999.6718);
				GameTextForPlayer(playerid, "~w~Ballas HQ",5000,1);
				SetPlayerInterior(playerid,6);
			}
			else if(hqlock[ballaslock] == 0)
			{
			    TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
			    SetPlayerPos(playerid, 442.0318,-49.6267,999.6718);
				GameTextForPlayer(playerid, "~w~Ballas HQ",5000,1);
				SetPlayerInterior(playerid,6);
    		}
			else
			{
			    GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 2, 442.0318,-49.6267,999.6718))
		{
			//balassssss
			SetPlayerPos(playerid, -2664.2512,-2.2201,6.1328);
			GameTextForPlayer(playerid, "~w~San Fierro",5000,1);
			SetPlayerInterior(playerid,0);
   		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 2495.5991,-1691.1394,14.7656))
		{
			//sevile
			if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
			{
			    TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid,455.1571,-22.0538,1000.1328);
				GameTextForPlayer(playerid, "~w~Sevile HQ",5000,1);
				SetPlayerInterior(playerid,1);
    		}
			else if(hqlock[sevillelock] == 0)
			{
			    TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 2000, false, "i", playerid);
			    SetPlayerPos(playerid, 455.1571,-22.0538,1000.1328);
				GameTextForPlayer(playerid, "~w~Sevile HQ",5000,1);
				SetPlayerInterior(playerid,1);
    		}
			else
			{
			    GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
   		}
		if(IsPlayerInRangeOfPoint(playerid, 2, 455.1571,-22.0538,1000.1328))
		{
			//Lsevuleeeesevile
			SetPlayerPos(playerid, 2495.5991,-1691.1394,14.7656);
			GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
			SetPlayerInterior(playerid,0);
   		}
   		if (IsPlayerInRangeOfPoint(playerid, 1,691.4825,-1276.0240,13.5607))
		{
			//corleone
			if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
			{
			    TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, -795.9264,492.0940,1367.3646);
				GameTextForPlayer(playerid, "~w~Corleone HQ",5000,1);
				SetPlayerInterior(playerid,1);
			}
			else if(hqlock[crllock] == 0)
			{
			    TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 2000, false, "i", playerid);
			    SetPlayerPos(playerid, -795.9264,492.0940,1367.3646);
				GameTextForPlayer(playerid, "~w~Corleone HQ",5000,1);
				SetPlayerInterior(playerid,1);
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 2, -795.9264,492.0940,1367.3646))
		{
			//bcorleone
			SetPlayerPos(playerid, 691.4825,-1276.0240,13.5607);
			GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
			SetPlayerInterior(playerid,0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2,725.3525,-1276.1927,13.6484))
		{
			//corleone
			if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
			{
			    TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, -794.8885,489.4286,1376.1953);
				GameTextForPlayer(playerid, "~w~Corleone HQ",5000,1);
				SetPlayerInterior(playerid,1);
			}
			else if(hqlock[crllock] == 0)
			{
			    TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 2000, false, "i", playerid);
			    SetPlayerPos(playerid, -794.8885,489.4286,1376.1953);
				GameTextForPlayer(playerid, "~w~Corleone HQ",5000,1);
				SetPlayerInterior(playerid,1);
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 2, -794.8885,489.4286,1376.1953))
		{
			//bcorleone
			SetPlayerPos(playerid, 725.3525,-1276.1927,13.6484);
			GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
			SetPlayerInterior(playerid,0);
		}
    	if(IsPlayerInRangeOfPoint(playerid,5,-2661.4934, 1424.5613, 23.9330)) // Hitmen
		{
		    if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
		    {
		        SetPlayerPos(playerid,2549.2068, -1294.8296, 1061.0876); //
  		        TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 2000, false, "i", playerid);
				GameTextForPlayer(playerid, "~w~Hitman HQ",5000,1);
				SetPlayerInterior(playerid,2);
		    }
		    else if(hqlock[hitlock] == 0)
			{
			    SetPlayerPos(playerid,2549.2068, -1294.8296, 1061.0876); //
		        TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
				GameTextForPlayer(playerid, "~w~Hitman HQ",5000,1);
				SetPlayerInterior(playerid,2);
		    }
		    else
			{
			    GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
    	}
    	if(IsPlayerInRangeOfPoint(playerid,5,2549.2068, -1294.8296, 1061.0876)) // Hitmen
		{
	        SetPlayerPos(playerid,-2661.4934, 1424.5613, 23.9330); //
			GameTextForPlayer(playerid, "~w~Hitman Roof",5000,1);
			SetPlayerInterior(playerid,0);
    	}
		if (IsPlayerInRangeOfPoint(playerid, 2,-2624.4858,1412.6831,7.0938))
		{
			//hitman
			if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
			{
			    TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 2581.3142,-1284.9015,1054.6406);
				GameTextForPlayer(playerid, "~w~Hitman HQ",5000,1);
				SetPlayerInterior(playerid,2);
    		}
			else if(hqlock[hitlock] == 0)
			{
			    TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
			    SetPlayerPos(playerid, 2581.3142,-1284.9015,1054.6406);
				GameTextForPlayer(playerid, "~w~Hitman HQ",5000,1);
				SetPlayerInterior(playerid,2);
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 2, 2581.3142,-1284.9015,1054.6406))
		{
			//hitman
			SetPlayerPos(playerid, -2624.4858,1412.6831,7.0938);
			GameTextForPlayer(playerid, "~w~San Fierro",5000,1);
			SetPlayerInterior(playerid,0);
   		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 1074.2305,-648.6993,2293.0093))
		{
			SetPlayerPos(playerid, 1087.0326,-348.8392,3002.5972);
	   		SetPlayerInterior(playerid, 0);
	   		TogglePlayerControllable(playerid,0);///asuss
   	    	SetTimerEx("freze", 2000, false, "i", playerid);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 1087.0326,-348.8392,3002.5972))
		{
			SetPlayerPos(playerid,1074.2305,-648.6993,2293.0093);
			SetPlayerInterior(playerid, 1);
			TogglePlayerControllable(playerid,0);///asuss
	       	SetTimerEx("freze", 2000, false, "i", playerid);
		}
		//entermyfbi
		if (IsPlayerInRangeOfPoint(playerid, 2, 3011.7295,-1074.1414,13.2092))
		{
			if(IsACop(playerid))
			{
			    TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 2574.9780,-1475.0042,-48.8995);
		   		SetPlayerInterior(playerid,1);
			}
			else
			{
			    GameTextForPlayer(playerid,"~r~Nu ai cheie!",4000,4);
			    SendClientMessage(playerid, 0x421AE6C8, "Nu esti membru al Pentagonului,Poti depune o cerere");
			}
		}
		//exitmyfbi
		if (IsPlayerInRangeOfPoint(playerid, 2, 2574.9780,-1475.0042,-48.8995))
		{
		   	SetPlayerPos(playerid, 3011.7295,-1074.1414,13.2092);//muie
		    TogglePlayerControllable(playerid,0);///asuss
	       	SetTimerEx("freze", 2000, false, "i", playerid);
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
		}
       	//entermyfbispate
		if (IsPlayerInRangeOfPoint(playerid, 2, 3049.4546,-1073.2767,13.2429))
		{
			if(IsACop(playerid))
			{
			    TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 2594.9470,-1512.9175,-48.9141);
		   		SetPlayerInterior(playerid, 1);
			}
			else
			{
			    GameTextForPlayer(playerid,"~r~Nu ai cheie!",4000,4);
			    SendClientMessage(playerid, 0x421AE6C8, "Nu esti membru al Pentagonului,Poti depune o cerere");
			}
			}
		//enterpentagon1
		if (IsPlayerInRangeOfPoint(playerid, 2,2588.6191,-1497.2255,-48.9141))
		{
			if(IsACop(playerid))
			{
				SetPlayerPos(playerid, 2588.4851,-1495.9608,-48.9141);
		   		SetPlayerInterior(playerid, 1);
		   		TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 2000, false, "i", playerid);
			}
			else
			{
			    GameTextForPlayer(playerid,"~r~Nu ai cheie!",4000,4);
			    SendClientMessage(playerid, 0x421AE6C8, "Nu esti membru al Pentagonului, F.B.I./ C.I.A. Poti depune o cerere");
			}
		}
		//exitpentagon1
		if (IsPlayerInRangeOfPoint(playerid, 2, 2588.4851,-1495.9608,-48.9141))
		{
			if(IsACop(playerid))
			{
			    TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 2588.6191,-1497.2255,-48.9141);
		   		SetPlayerInterior(playerid, 1);
			}
			else
			{
			    GameTextForPlayer(playerid,"~r~Nu ai cheie!",4000,4);
			    SendClientMessage(playerid, 0x421AE6C8, "Nu esti membru al Pentagonului, F.B.I./ C.I.A. Poti depune o cerere");
			}
		}
		//exitpentagon2
		if (IsPlayerInRangeOfPoint(playerid, 2, 2594.5850,-1498.2766,-48.9141))
		{
			if(IsACop(playerid))
			{
			    TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid,  2593.1201,-1498.3282,-48.9141);
		   		SetPlayerInterior(playerid, 1);
			}
			else
			{
			    GameTextForPlayer(playerid,"~r~Nu ai cheie!",4000,4);
			    SendClientMessage(playerid, 0x421AE6C8, "Nu esti membru al Pentagonului, F.B.I./ C.I.A. Poti depune o cerere");
			}
		}
		//enrterpentagon2
		if (IsPlayerInRangeOfPoint(playerid, 2,  2593.1201,-1498.3282,-48.9141))
		{
			if(IsACop(playerid))
			{
				SetPlayerPos(playerid, 2594.5850,-1498.2766,-48.9141);
		   		SetPlayerInterior(playerid, 1);
		   		TogglePlayerControllable(playerid,0);///asuss
       	    	SetTimerEx("freze", 2000, false, "i", playerid);
			}
			else
			{
			    GameTextForPlayer(playerid,"~r~Nu ai cheie!",4000,4);
			    SendClientMessage(playerid, 0x421AE6C8, "Nu esti membru al Pentagonului, F.B.I./ C.I.A. Poti depune o cerere");
			}
		}
			//exitmyfbispate
		if (IsPlayerInRangeOfPoint(playerid, 2, 2594.9470,-1512.9175,-48.9141))
		{
	   		SetPlayerPos(playerid, 3049.4546,-1073.2767,13.2429);
	   		SetPlayerInterior(playerid,0);
	   		GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
		   	TogglePlayerControllable(playerid,0);///asuss
       	    SetTimerEx("freze", 2000, false, "i", playerid);
		}

		if (IsPlayerInRangeOfPoint(playerid, 2,-2699.7634, 310.3145, 1051.8579))
		{
		    if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7)
		    {
		   		SetPlayerPos(playerid,-1665.4164, 84.8433, 1001.0304);

	   		}
	   		else
	   		{
	   		    GameTextForPlayer(playerid, "~w~Nu ai Cheia",5000,1);
	   		}
 		}
	 	if (IsPlayerInRangeOfPoint(playerid, 2,-1665.4164, 84.8433, 1001.0304))
		{
			SetPlayerPos(playerid, -2699.7634, 310.3145, 1051.8579);
 		}
	 	if (IsPlayerInRangeOfPoint(playerid, 2,2389.1899, 2465.9829, 10.9065))
		{
		    if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7)
		    {
	            TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 2000, false, "i", playerid);
		   		SetPlayerPos(playerid,-810.6700, 1020.0967, 1001.0224);
	 			SetPlayerInterior(playerid,2);
		  	}
			else
			{
			    GameTextForPlayer(playerid, "~w~Nu ai Cheia",5000,1);
			}
	 	}
	 	if (IsPlayerInRangeOfPoint(playerid, 2,-810.6700, 1020.0967, 1001.0224))//guvern intrare
  		{
		    SetPlayerPos(playerid,2389.1899, 2465.9829, 10.9065);
		    SetPlayerInterior(playerid,0);
	   		TogglePlayerControllable(playerid,0);///asuss
   	    	SetTimerEx("freze", 2000, false, "i", playerid);
		}

		if (IsPlayerInRangeOfPoint(playerid, 2,772.0728, -4.8557, 1000.7330))//gym intrare
  		{
		    SetPlayerPos(playerid,2228.8613, -1722.4380, 13.6485);
		    SetPlayerInterior(playerid,0);
	   		TogglePlayerControllable(playerid,0);///asuss
   	    	SetTimerEx("freze", 500, false, "i", playerid);
		}

		if (IsPlayerInRangeOfPoint(playerid, 2,2228.8613, -1722.4380, 13.6485 ))//gym intrare
  		{
		    SetPlayerPos(playerid,772.0728, -4.8557, 1000.7330);
		    SetPlayerInterior(playerid,5);
	   		TogglePlayerControllable(playerid,0);///asuss
   	    	SetTimerEx("freze", 1500, false, "i", playerid);
		}


	 	if (IsPlayerInRangeOfPoint(playerid, 2,2389.1899, 2465.9829, 10.9065))//guvern intrare
  		{
		    SetPlayerPos(playerid,-810.6700, 1020.0967, 1001.0224);
		    SetPlayerInterior(playerid,0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 3049.2251,-1106.1395,13.2429))
		{
			if(IsACop(playerid))
			{
				SetPlayerPos(playerid, 1575.7328,-1683.7001,797.5059);
		   		SetPlayerInterior(playerid, 1);
		   		TogglePlayerControllable(playerid,0);///asuss
	          	SetTimerEx("freze", 2000, false, "i", playerid);
			}
			else
			{
			    GameTextForPlayer(playerid,"~r~Nu ai cheie!",4000,4);
			    SendClientMessage(playerid, 0x421AE6C8, "Nu esti membru al Pentagonului,Poti depune o cerere");
			}
		}
		//jailng
		if (IsPlayerInRangeOfPoint(playerid, 2, 229.1133,1857.2292,999.9670))
		{
			if(IsACop(playerid))
			{
			    TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 231.0823,1857.3624,999.9921);
		   		SetPlayerInterior(playerid, 1);
			}
			else
			{
			    GameTextForPlayer(playerid,"~r~Nu ai cheie!",4000,4);
			    SendClientMessage(playerid, 0x421AE6C8, "Nu esti membru GOV,Poti depune o cerere");
			}
		}

		if (IsPlayerInRangeOfPoint(playerid, 2, 2269.7620,-74.1592,26.7724))
		{
		    TogglePlayerControllable(playerid,0);///asuss
            SetTimerEx("freze", 2000, false, "i", playerid);
		   	SetPlayerPos(playerid, 472.8519, -131.3247, 999.6735);
		   	SetPlayerInterior(playerid,5);
		   	GameTextForPlayer(playerid, "~w~GPL Center",5000,1);
 		}
 		if (IsPlayerInRangeOfPoint(playerid, 2, 472.8519, -131.3247, 999.6735))
		{
		   	SetPlayerPos(playerid, 2269.7620,-74.1592,26.7724);
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~Palmino Creek",5000,1);
 		}
 		//paypaoint
 		if(IsPlayerInRangeOfPoint(playerid, 2, 834.2526, 7.3963, 1004.3554))
		{
		    if(GetPlayerVirtualWorld(playerid) == 3)
		    {
		   		SetPlayerPos(playerid,1411.8394, -1699.6229, 13.5635);
		   		SetPlayerInterior(playerid,0);
		  		SetPlayerVirtualWorld(playerid,0);
		   		GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
 			}
 		}
		if(IsPlayerInRangeOfPoint(playerid, 2, 1411.8394, -1699.6229, 13.5635))
		{
		   	SetPlayerPos(playerid,834.2526, 7.3963, 1004.3554 );
		   	SetPlayerInterior(playerid,3);
		   	TogglePlayerControllable(playerid,0);///asuss
           	SetTimerEx("freze", 2000, false, "i", playerid);
		   	SetPlayerVirtualWorld(playerid,3);
		   	GameTextForPlayer(playerid, "~w~Pay Point",5000,1);
 		}
		//bm intrare
		if (IsPlayerInRangeOfPoint(playerid, 2, 1488.9806, -1720.4487, 8.5766))
		{
		   	if(IsACop(playerid))
			{
				SetTimerEx("DealStanceAnim", 4000, false, "i", 0);
   				GameTextForPlayer(playerid, "~r~Politistii nu ~n~au ce cauta aici",5000,4);
	   			return 1;
			}
			else
			{
				SetTimerEx("DealStanceAnim", 4000, false, "i", 0);
			   	SetPlayerPos(playerid, 296.7969, -111.4779, 1001.7153);
			   	SetPlayerInterior(playerid,6);
			   	TogglePlayerControllable(playerid,0);///asuss
	           	SetTimerEx("freze", 2000, false, "i", playerid);
			   	GameTextForPlayer(playerid, "~w~Black Market",5000,1);
  			}
 		}
 		if (IsPlayerInRangeOfPoint(playerid, 2, 296.7969, -111.4779, 1001.7153))
		{
			SetTimerEx("DealStanceAnim", 4000, false, "i", 0);
		   	SetPlayerPos(playerid, 1488.9806, -1720.4487, 8.5766);
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
 		}
//============blow hair
    	if (IsPlayerInRangeOfPoint(playerid, 2, 2071.7239,-1793.9116,13.5469))
		{
		   	SetPlayerPos(playerid, 412.1062, -54.1122, 1002.2984);
		   	SetPlayerInterior(playerid,12);
		   	GameTextForPlayer(playerid, "~w~Hair Cut LS",5000,1);
 		}
 		if (IsPlayerInRangeOfPoint(playerid, 2, 2506.6675,2121.0513,10.8400))
		{
		   	SetPlayerPos(playerid, 411.9517, -22.6402, 1002.0261);
		   	SetPlayerInterior(playerid,2);
		   	GameTextForPlayer(playerid, "~w~Hair Cut LV",5000,1);
 		}
		if (IsPlayerInRangeOfPoint(playerid, 2, -2571.0171,246.4084,10.2293))
		{
		   	SetPlayerPos(playerid, 418.7580, -84.2257, 1002.2984);
		   	SetPlayerInterior(playerid,3);
		   	GameTextForPlayer(playerid, "~w~Hair Cut SF",5000,1);
 		}
 		if (IsPlayerInRangeOfPoint(playerid, 2,412.1062, -54.1122, 1002.2984 ))
		{
		   	SetPlayerPos(playerid,2071.7239,-1793.9116,13.5469);
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
 		}
 		if (IsPlayerInRangeOfPoint(playerid, 2, 411.9517, -22.6402, 1002.0261))
		{
		   	SetPlayerPos(playerid, 2506.6675,2121.0513,10.8400);
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
 		}
 		else if (IsPlayerInRangeOfPoint(playerid, 2,418.7580, -84.2257, 1002.2984 ))
		{
		   	SetPlayerPos(playerid,-2571.0171,246.4084,10.2293 );
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~San Fierro",5000,1);
 		}
 		//blowwwww

 		if (IsPlayerInRangeOfPoint(playerid, 2, -2491.9268,-38.8020,25.7656))
		{
		   	SetPlayerPos(playerid, -205.0658, -26.9289, 1002.4214);
	 	  	SetPlayerInterior(playerid,16);
		   	GameTextForPlayer(playerid, "~w~Blow SF",5000,1);
 		}
 		if (IsPlayerInRangeOfPoint(playerid, 2, 2101.2866,2122.0024,10.8203))
		{
		   	SetPlayerPos(playerid, -204.6275, -8.7002, 1001.6688);
		   	SetPlayerInterior(playerid,17);
		   	GameTextForPlayer(playerid, "~w~Blow LV",5000,1);
 		}
 		if (IsPlayerInRangeOfPoint(playerid, 2, -205.0658, -26.9289, 1001.4214 ))
		{
		   	SetPlayerPos(playerid,-2491.9268,-38.8020,25.7656);
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~San Fierro",5000,1);
 		}
 		if (IsPlayerInRangeOfPoint(playerid, 2, -204.6275, -8.7002, 1001.6688))
		{
		   	SetPlayerPos(playerid,2101.2866,2122.0024,10.8203 );
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
 		}
//==========================
//jailng
		if (IsPlayerInRangeOfPoint(playerid, 2, 231.0823,1857.3624,999.9921))
		{
			if(IsACop(playerid))
			{
			    TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 229.1133,1857.2292,999.9670);
		   		SetPlayerInterior(playerid, 1);
			}
			else
			{
			    GameTextForPlayer(playerid,"~r~Nu ai cheie!",4000,4);
			    SendClientMessage(playerid, 0x421AE6C8, "Nu esti membru GOV,Poti depune o cerere");
			}
		}
		//exitspate
		if (IsPlayerInRangeOfPoint(playerid, 2, 1575.7328,-1683.7001,797.5059))
		{
		   	SetPlayerPos(playerid,  3049.2251,-1106.1395,13.2429);
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
	  		TogglePlayerControllable(playerid,0);///asuss
   	    	SetTimerEx("freze", 2000, false, "i", playerid);
 		}
		//entermycng
		if (IsPlayerInRangeOfPoint(playerid, 2, 269.0694,2090.2737,17.7107))
		{
			if(IsACop(playerid))
			{
			    TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 245.6201,220.8071,1042.1980);
		   		SetPlayerInterior(playerid, 1);
			}
			else
			{
			    GameTextForPlayer(playerid,"~r~Nu ai cheie!",4000,4);
			    SendClientMessage(playerid, 0x421AE6C8, "Nu esti membru National Guard,Poti depune o cerere");
			    GameTextForPlayer(playerid, "~w~National Guard",5000,1);
			}
		}
        //entermynavyspate
		if (IsPlayerInRangeOfPoint(playerid, 2,-1525.4347,414.6520,7.1875))
		{
			if(IsACop(playerid))
			{
			    TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 1294.6783,-49.3955,1492.9476);
		   		SetPlayerInterior(playerid, 1);
			}
			else
			{
			    GameTextForPlayer(playerid,"~r~Nu ai cheie!",4000,4);
			    SendClientMessage(playerid, 0x421AE6C8, "Nu esti membru al Portavionului,Poti depune o cerere");
			    GameTextForPlayer(playerid, "~w~Navy hq",5000,1);
			}
		}
			//exitmynavy
		else if (IsPlayerInRangeOfPoint(playerid, 2, 1294.6783,-49.3955,1492.9476))
		{
		   	SetPlayerPos(playerid,  -1525.4347,414.6520,7.1875);
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~San Fierro",5000,1);
 		}

	//entermynavyspate2
		if (IsPlayerInRangeOfPoint(playerid, 2, -1476.3385,350.8630,7.1875))
		{
			if(IsACop(playerid))
			{
			    TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 1307.4773,-7.5831,1492.9476);
		   		SetPlayerInterior(playerid, 1);
			}
			else
			{
			    GameTextForPlayer(playerid,"~r~Nu ai cheie!",4000,4);
			    SendClientMessage(playerid, 0x421AE6C8, "Nu esti membru al Portavionului,Poti depune o cerere");
			    GameTextForPlayer(playerid, "~w~Navy hq",5000,1);
			}
		}
		//exitmynavy2
		if (IsPlayerInRangeOfPoint(playerid, 2, 1307.4773,-7.5831,1492.9476))
		{
		    TogglePlayerControllable(playerid,0);///asuss
           	SetTimerEx("freze", 2000, false, "i", playerid);
		   	SetPlayerPos(playerid,  -1476.3385,350.8630,7.1875);
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~San Fierro",5000,1);
 		}
		//exitmycng
		if (IsPlayerInRangeOfPoint(playerid, 2, 245.6201,220.8071,1042.1980))
		{
		    TogglePlayerControllable(playerid,0);///asuss
           	SetTimerEx("freze", 2000, false, "i", playerid);
		   	SetPlayerPos(playerid,  269.0694,2090.2737,17.7107);
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
 		}
		//exitmyjail
		if (IsPlayerInRangeOfPoint(playerid, 2, 115.8380,1820.8313,18.2494))
		{
		    TogglePlayerControllable(playerid,0);///asuss
           	SetTimerEx("freze", 2000, false, "i", playerid);
		   	SetPlayerPos(playerid, 268.3089,1853.1877,999.9921);
		   	SetPlayerInterior(playerid, 1);
		   	GameTextForPlayer(playerid, "~w~N.G. Jail",5000,1);
 		}
		//exitmyjail
		if (IsPlayerInRangeOfPoint(playerid, 2, 268.3089,1853.1877,999.9921))
		{
		    TogglePlayerControllable(playerid,0);///asuss
           	SetTimerEx("freze", 2000, false, "i", playerid);
		   	SetPlayerPos(playerid, 115.8380,1820.8313,18.2494);
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
 		}
 		//enter
		if (IsPlayerInRangeOfPoint(playerid, 2, 3012.0420,-1115.3168,13.2092))
		{
			if(IsACop(playerid))
			{
			    TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 1535.9542,-1693.2446,801.0859);
		   		SetPlayerInterior(playerid, 1);
			}
			else
			{
			    GameTextForPlayer(playerid,"~r~Nu ai cheie!",4000,4);
			    SendClientMessage(playerid, 0x421AE6C8, "Nu esti membru al Pentagonului,Poti depune o cerere");
			    GameTextForPlayer(playerid, "~w~CIA Department",5000,1);
			}
		}
		 //exitm
		if (IsPlayerInRangeOfPoint(playerid, 2,  1535.9542,-1693.2446,801.0859))
		{
		   	SetPlayerPos(playerid, 3012.0420,-1115.3168,13.2092);
		   	SetPlayerInterior(playerid,0);
	   		TogglePlayerControllable(playerid,0);///asuss
    	  	SetTimerEx("freze", 2000, false, "i", playerid);
		   	GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
 		}
		//entercantina
		if (IsPlayerInRangeOfPoint(playerid, 1, 1540.4993,-1673.2883,801.0859))
		{
			if(IsACop(playerid))
			{
			    TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 1540.2297,-1671.7662,801.0859);
		   		SetPlayerInterior(playerid, 1);
			}
			else
			{
			    GameTextForPlayer(playerid,"~r~Nu ai cheie!",4000,4);
			    SendClientMessage(playerid, 0x421AE6C8, "Nu esti membru al Pentagonului,Poti depune o cerere");
			}
		}
		//exitcantina
		if (IsPlayerInRangeOfPoint(playerid, 1, 1540.2297,-1671.7662,801.0859))
		{
			if(IsACop(playerid))
			{
			    TogglePlayerControllable(playerid,0);///asuss
            	SetTimerEx("freze", 2000, false, "i", playerid);
				SetPlayerPos(playerid, 1540.4993,-1673.2883,801.0859);
		   		SetPlayerInterior(playerid, 1);
			}
			else
			{
			    GameTextForPlayer(playerid,"~r~Nu ai cheie!",4000,4);
			    SendClientMessage(playerid, 0x421AE6C8, "Nu esti membru al Pentagonului,Poti depune o cerere");
			}
		}
    	if (IsPlayerInRangeOfPoint(playerid, 2.5, 1570.3828,-1333.8882,16.4844))
		{
		    //Next to PD building
		    SetPlayerPos(playerid, 1545.0068,-1366.5094,327.2868);
		    GameTextForPlayer(playerid, "~w~Roof of News building",5000,1);
		    SetPlayerInterior(playerid,0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2.5, 1548.8167,-1366.2247,326.2109))
		{
		    //Next to PD building
		    SetPlayerPos(playerid, 1572.1115,-1332.5288,16.4844);
		    GameTextForPlayer(playerid, "~w~News building",5000,1);
		    SetPlayerInterior(playerid,0);
		}

		//hair
		else if (IsPlayerInRangeOfPoint(playerid, 2, 2071.7239,-1793.9116,13.5469))
		{
		   	SetPlayerPos(playerid, 412.1062, -54.1122, 1002.2984);
		   	SetPlayerInterior(playerid,12);
		   	GameTextForPlayer(playerid, "~w~Hair Cut LS",5000,1);
 		}
		else if (IsPlayerInRangeOfPoint(playerid, 2, 2506.6675,2121.0513,10.8400))
		{
		   	SetPlayerPos(playerid, 411.9517, -22.6402, 1002.0261);
		   	SetPlayerInterior(playerid,2);
		   	GameTextForPlayer(playerid, "~w~Hair Cut LV",5000,1);
 		}
 		else if (IsPlayerInRangeOfPoint(playerid, 2, -2571.0171,246.4084,10.2293))
		{
		   	SetPlayerPos(playerid, 418.7580, -84.2257, 1002.2984);
		   	SetPlayerInterior(playerid,3);
		   	GameTextForPlayer(playerid, "~w~Hair Cut SF",5000,1);
 		}
		//
 		else if (IsPlayerInRangeOfPoint(playerid, 2,412.1062, -54.1122, 1002.2984 ))
		{
		   	SetPlayerPos(playerid,2071.7239,-1793.9116,13.5469);
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
		}
 		else if (IsPlayerInRangeOfPoint(playerid, 2, 411.9517, -22.6402, 1002.0261))
		{
		   	SetPlayerPos(playerid, 2506.6675,2121.0513,10.8400);
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
 		}
 		else if (IsPlayerInRangeOfPoint(playerid, 2,418.7580, -84.2257, 1002.2984 ))
		{
		   	SetPlayerPos(playerid,-2571.0171,246.4084,10.2293 );
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~San Fierro",5000,1);
 		}
 		//blowwwww
 		else if (IsPlayerInRangeOfPoint(playerid, 2, -2491.9268,-38.8020,25.7656))
		{
		   	SetPlayerPos(playerid, -205.0658, -26.9289, 1002.4214);
		   	SetPlayerInterior(playerid,16);
		   	GameTextForPlayer(playerid, "~w~Blow SF",5000,1);
 		}
 		else if (IsPlayerInRangeOfPoint(playerid, 2, 2101.2866,2122.0024,10.8203))
		{
		   	SetPlayerPos(playerid, -204.6275, -8.7002, 1001.6688);
		   	SetPlayerInterior(playerid,17);
		   	GameTextForPlayer(playerid, "~w~Blow LV",5000,1);
 		}
 		else if (IsPlayerInRangeOfPoint(playerid, 2, -205.0658, -26.9289, 1001.4214 ))
		{
		   	SetPlayerPos(playerid,-2491.9268,-38.8020,25.7656);
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~San Fierro",5000,1);
 		}
 		else if (IsPlayerInRangeOfPoint(playerid, 2, -204.6275, -8.7002, 1001.6688))
		{
		   	SetPlayerPos(playerid,2101.2866,2122.0024,10.8203 );
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
 		}
 		else if (IsPlayerInRangeOfPoint(playerid, 2, 952.0294,-985.5319,38.9423))//ls
		{
		   	SetPlayerPos(playerid,-203.9535,-42.3592,1002.2734 );
		   	SetPlayerInterior(playerid,3);
		   	GameTextForPlayer(playerid, "~w~Blow LS",5000,1);
 		}
 		else if (IsPlayerInRangeOfPoint(playerid, 2,-203.9535,-42.3592,1002.2734  ))//ls
		{
		   	SetPlayerPos(playerid,952.0294,-985.5319,38.9423);
		   	SetPlayerInterior(playerid,0);
		   	GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
 		}
 		//helper
 		else if (IsPlayerInRangeOfPoint(playerid, 2, 1478.6334,-1758.1818,29.8731))
		{
			SetPlayerPos(playerid, 1496.1453,-1774.1139,33.4243);
	   		SetPlayerInterior(playerid, 0);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 2,  1496.1453,-1774.1139,33.4243))
		{
			if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
			{
				SetPlayerPos(playerid,1478.6334,-1758.1818,29.8731);
		   		SetPlayerInterior(playerid, 0);
			}
		}
		//===================adminspark------------------------------------------------
		else if (IsPlayerInRangeOfPoint(playerid, 2, 1074.2305,-648.6993,2293.0093))
		{
			SetPlayerPos(playerid, 1087.0326,-348.8392,3002.5972);
	   		SetPlayerInterior(playerid, 0);
		}

		else if (IsPlayerInRangeOfPoint(playerid, 2, 1087.0326,-348.8392,3002.5972))
		{
			SetPlayerPos(playerid,1074.2305,-648.6993,2293.0093);
	   		SetPlayerInterior(playerid, 1);
		}

	}
	if(IsAtTheStadion(playerid))
	{
		if (PRESSED(KEY_HANDBRAKE))
  		pLastTick[playerid] = tick;

		else if (RELEASED(KEY_HANDBRAKE))
		{
	    	dif = tick - pLastTick[playerid];
	    	pLastTick[playerid] = -1;
	    	if(dif < 2000)
	    	{
			    new Float:ox, Float:oy, Float:oz,Float:x, Float:y, Float:z;
		    	GetBallPos(ox, oy, oz);
		    	GetPlayerPos(playerid, x, y, z);
		    	if(IsPlayerInRangeOfPoint(playerid, 1.2, ox, oy, z) && floatabs(oz - z) < 1.8)
		    	{
		        	new Float:speed,Float:angle,Float:vx, Float:vy, Float:vz;
					if(dif > 1000)
				    dif = 2000 - dif;
			        speed = (float(dif + 400) / (1000)) * 20.0;
			        if(BallHolder != -1)
			        {
				        DestroyBall();
				        CreateBall();
			    	    SetObjectPos(Ball, ox, oy, oz);
			    	    BallHolder = -1;
			    	}
			        GetPlayerFacingAngle(playerid, angle);
			        vx = speed * floatsin(-angle, degrees),
			        vy = speed * floatcos(-angle, degrees);
			        vz = speed / 5.2;
					PHY_SetObjectVelocity(Ball, vx, vy, vz);
					if(oz > BallSpawn[2] + (1.0 - 0.875))
				    ApplyAnimation(playerid, "WAYFARER", "WF_Fwd", 4.0, 0, 0, 0, 0, 0);
					else if(dif > 300)
					ApplyAnimation(playerid, "FIGHT_D", "FightD_1", 4.1, 0, 1, 1, 0, 0);
					PlayerPlaySound(playerid, 1130, 0.0, 0.0, 0.0);
					LastTouch = playerid;
				}
			}
		}

		if (PRESSED(KEY_WALK))
		pLastTick[playerid] = tick;

		else if (RELEASED(KEY_WALK))
		{
	    	dif = tick - pLastTick[playerid];
	    	pLastTick[playerid] = -1;
	    	if(dif < 2000)
	    	{
			    new Float:ox, Float:oy, Float:oz,Float:x, Float:y, Float:z;
     			GetBallPos(ox, oy, oz);
		    	GetPlayerPos(playerid, x, y, z);
		    	if(IsPlayerInRangeOfPoint(playerid, 1.2, ox, oy, z) && floatabs(oz - z) < 1.8)
		    	{
		        	new Float:speed,Float:angle, Float:vx, Float:vy, Float:vz;
					if(dif > 1000)
				    dif = 2000 - dif;
			        speed = (float(dif + 400) / (1000)) * 15.0;
			        if(BallHolder != -1)
			        {
				        DestroyBall();
				        CreateBall();
				        SetObjectPos(Ball, ox, oy, oz);
				        BallHolder = -1;
				    }
			        GetPlayerFacingAngle(playerid, angle);
			        vx = speed * floatsin(-angle, degrees),
			        vy = speed * floatcos(-angle, degrees);
			        vz = speed / 1.3;
					PHY_SetObjectVelocity(Ball, vx, vy, vz);
					if(oz > BallSpawn[2] + (1.0 - 0.875))
				    ApplyAnimation(playerid, "WAYFARER", "WF_Fwd", 4.0, 0, 0, 0, 0, 0);
					else if(dif > 300)
					ApplyAnimation(playerid, "FIGHT_D", "FightD_1", 4.1, 0, 1, 1, 0, 0);
					PlayerPlaySound(playerid, 1130, 0.0, 0.0, 0.0);
					LastTouch = playerid;
					return 1;
				}
			}
		}

		if (PRESSED(KEY_SECONDARY_ATTACK))
		pLastTick[playerid] = tick;

		else if (RELEASED(KEY_SECONDARY_ATTACK))
		{
		    dif = tick - pLastTick[playerid];
		    pLastTick[playerid] = -1;
		    if(dif < 2000)
	    	{
			    new Float:ox, Float:oy, Float:oz,Float:x, Float:y, Float:z;
		    	GetBallPos(ox, oy, oz);
		    	GetPlayerPos(playerid, x, y, z);
		    	if(IsPlayerInRangeOfPoint(playerid, 1.2, ox, oy, z) && floatabs(oz - z) < 1.8)
		    	{
			        new Float:speed, Float:angle, Float:vx, Float:vy, Float:vz;
					if(dif > 1000)
				    dif = 2000 - dif;
			        speed = (float(dif + 400) / (1000)) * 40.0;//16.0;
			        if(BallHolder != -1)
			        {
			        	DestroyBall();
				        CreateBall();
				        SetObjectPos(Ball, ox, oy, oz);
				        BallHolder = -1;
				    }
			        GetPlayerFacingAngle(playerid, angle);
			        vx = speed * floatsin(-angle, degrees),
			        vy = speed * floatcos(-angle, degrees);
			        vz = speed / 5.0;
					PHY_SetObjectVelocity(Ball, vx, vy, vz);

					if(oz > BallSpawn[2] + (1.0 - 0.875))
					ApplyAnimation(playerid, "WAYFARER", "WF_Fwd", 4.0, 0, 0, 0, 0, 0);
					else if(dif > 300)
					ApplyAnimation(playerid, "FIGHT_D", "FightD_1", 4.1, 0, 1, 1, 0, 0);
					PlayerPlaySound(playerid, 1130, 0.0, 0.0, 0.0);
					LastTouch = playerid;
				}
			}
		}

		if(PRESSED(KEY_FIRE))
		{
		    new Float:ox, Float:oy, Float:oz,Float:x, Float:y, Float:z;
			GetBallPos(ox, oy, oz);
			if(BallHolder == playerid)
			{DestroyBall();CreateBall();SetObjectPos(Ball, ox, oy, oz);BallHolder = -1;}
			else
			{
				GetPlayerPos(playerid, x, y, z);
				if(IsPlayerInRangeOfPoint(playerid, 1.2, ox, oy, z) && oz < z && (z - oz) < 1.2)
				{
				    GetObjectRot(Ball, ox, oy, oz);
				    AttachObjectToPlayer(Ball, playerid, 0.0, 0.6, -0.875, ox, oy, oz);
					if(BallHolder != -1)  PlayerPlaySound(BallHolder, 1130, 0.0, 0.0, 0.0);
					PlayerPlaySound(playerid, 1130, 0.0, 0.0, 0.0);
					BallHolder = playerid;
					LastTouch = playerid;
				}
			}
			ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
		}
	}
	///=====================hq============================

	if(newkeys == KEY_NO && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
	    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_RED,"Nu esti sofer");
	    if(IsABike(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"Bicicleta nu are motor");
		if(instart[playerid] == 1) return 1;
		if(Codel[playerid] == 0) return SendClientMessage(playerid,COLOR_LIGHTBLUE,"introduceti codul (/checkcode)");
	    if(DealerVeh(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_LIGHTBLUE,"Nu poti porni aceasta masina");
		if(IsARentableAir(GetPlayerVehicleID(playerid)) && HireCar[playerid] != GetPlayerVehicleID(playerid)) return SendClientMessage(playerid,-1," Trebuie sa inchiriezi vehiculul inainte de a porni motorul /rentbike");
		if(FrenodeMano[GetPlayerVehicleID(playerid)] == 1) return SendClientMessage(playerid,0xFF444499," Nu poti porni masina cu frana de mana trasa!");
		if(Refueling[playerid] == 1) return SendClientMessage(playerid,COLOR_RED," Vehiculul se alimenteaza");
		if(VehicleEngine[GetPlayerVehicleID(playerid)] == 0)
		{
			SetTimerEx("StartingTheVehicle",2500,0,"i",playerid);
			instart[playerid] = 1;
			GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Incerci sa pornesti~n~ motorul",1500,3);
			return 1;
	   	}
		else
		{
			new Float:health;
			GetVehicleHealth(GetPlayerVehicleID(playerid), health);
			if(health < 350) SetVehicleHealth(GetPlayerVehicleID(playerid), 350);
		 	instart[playerid] = 0;
			GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
			VehicleEngine[GetPlayerVehicleID(playerid)] = 0;
			VehicleLights[GetPlayerVehicleID(playerid)] = 0;
			format(string, sizeof(string), "* %s opreste motorul.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
		}
		return 1;
	}
	if ( newkeys==KEY_ANALOG_UP )//numpad 8 <>
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
        {
	    	PlayerInfo[playerid][pradio] = 0;
	    	StopAudioStreamForPlayer(playerid);
	    	GameTextForPlayer(playerid, "~r~Radio oprit!", 2000, 3);
 		}
	}

	if ( newkeys==KEY_ANALOG_LEFT )//numpad 4<<<
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
        {
        	if(PlayerInfo[playerid][pradio] == 9)
            {
               	PlayAudioStreamForPlayer(playerid, "http://radioromanian.net/popular.pls");
                PlayerInfo[playerid][pradio] = 8;
            }
            else if(PlayerInfo[playerid][pradio] == 8)
            {
               	PlayAudioStreamForPlayer(playerid, "http://radioromanian.net/manele.pls");
                PlayerInfo[playerid][pradio] = 7;
            }
            else if(PlayerInfo[playerid][pradio] == 7)
            {
                PlayAudioStreamForPlayer(playerid, "http://k007.kiwi6.com/hotlink/cqr9x5604n/Asculta_Live_Radio_Amy_-_Radio_Manele_Mix.pls");
                PlayerInfo[playerid][pradio] = 6;
            }
            else if(PlayerInfo[playerid][pradio] == 6)
            {
                PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls");
                PlayerInfo[playerid][pradio] = 5;
            }
            else if(PlayerInfo[playerid][pradio] == 5)
            {
                PlayAudioStreamForPlayer(playerid, "http://www.radiozu.ro/live.m3u");
                PlayerInfo[playerid][pradio] = 4;
            }
            else if(PlayerInfo[playerid][pradio] == 4)
            {
                PlayAudioStreamForPlayer(playerid, "http://stream.profm.ro:8012/profm.mp3");
                PlayerInfo[playerid][pradio] = 3;
            }
            else if(PlayerInfo[playerid][pradio] == 3)
            {
                PlayAudioStreamForPlayer(playerid, "http://k007.kiwi6.com/hotlink/ydli4zscei/live.m3u");
                PlayerInfo[playerid][pradio] = 2;
            }
            else if(PlayerInfo[playerid][pradio] == 2)
            {
                PlayAudioStreamForPlayer(playerid, "http://80.86.106.136/listen.pls");
                PlayerInfo[playerid][pradio] = 1;
            }
            else if(PlayerInfo[playerid][pradio] == 1)
            {
        	    PlayerInfo[playerid][pradio] = 0;
        	    StopAudioStreamForPlayer(playerid);
            }
            else if(PlayerInfo[playerid][pradio] == 0)
            {
         	   	PlayAudioStreamForPlayer(playerid, "http://s6.myradiostream.com:5654");
                PlayerInfo[playerid][pradio] = 10;
            }
            else if(PlayerInfo[playerid][pradio] == 10)
            {
                PlayAudioStreamForPlayer(playerid, "http://radioromanian.net/hiphop.pls");
                PlayerInfo[playerid][pradio] = 9;
            }
	    }
    }
    if(newkeys==KEY_ANALOG_RIGHT)//numpad 6>>>
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
        {
            if(PlayerInfo[playerid][pradio] == 0)
            {
                PlayAudioStreamForPlayer(playerid, "http://bbq.to/"#SERVERNAME"_KissFM_d92c.pls");
                PlayerInfo[playerid][pradio] = 1;
            }
            else if(PlayerInfo[playerid][pradio] == 1)
            {
                PlayAudioStreamForPlayer(playerid, "http://k007.kiwi6.com/hotlink/ydli4zscei/live.m3u");
                PlayerInfo[playerid][pradio] = 2;
            }
            else if(PlayerInfo[playerid][pradio] == 2)
            {
                PlayAudioStreamForPlayer(playerid, "http://stream.profm.ro:8012/profm.mp3");
                PlayerInfo[playerid][pradio] = 3;
            }
            else if(PlayerInfo[playerid][pradio] == 3)
            {
                PlayAudioStreamForPlayer(playerid, "http://www.radiozu.ro/live.m3u");
                PlayerInfo[playerid][pradio] = 4;
            }
            else if(PlayerInfo[playerid][pradio] == 4)
            {
                PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls");
                PlayerInfo[playerid][pradio] = 5;
            }
            else if(PlayerInfo[playerid][pradio] == 5)
            {
                PlayAudioStreamForPlayer(playerid, "http://k007.kiwi6.com/hotlink/cqr9x5604n/Asculta_Live_Radio_Amy_-_Radio_Manele_Mix.pls");
                PlayerInfo[playerid][pradio] = 6;
            }
            else if(PlayerInfo[playerid][pradio] == 6)
            {
                PlayAudioStreamForPlayer(playerid, "http://radioromanian.net/manele.pls");
                PlayerInfo[playerid][pradio] = 7;
            }
            else if(PlayerInfo[playerid][pradio] == 7)
            {
               	PlayAudioStreamForPlayer(playerid, "http://radioromanian.net/popular.pls");
                PlayerInfo[playerid][pradio] = 8;
            }
            else if(PlayerInfo[playerid][pradio] == 8)
            {
                PlayAudioStreamForPlayer(playerid, "http://radioromanian.net/hiphop.pls");
                PlayerInfo[playerid][pradio] = 9;
            }
            else if(PlayerInfo[playerid][pradio] == 9)
            {
                PlayAudioStreamForPlayer(playerid, "http://s6.myradiostream.com:5654");
                PlayerInfo[playerid][pradio] = 10;
            }
            else if(PlayerInfo[playerid][pradio] == 10)
            {
                StopAudioStreamForPlayer(playerid);
                PlayerInfo[playerid][pradio] = 0;
        	}
        }
	}
	if(newkeys & KEY_FIRE && oldkeys & KEY_CROUCH && IsCbugWeapon(playerid))
	{
		P_CBUG_TICKS[playerid] ++;
		if(P_CBUG_TICKS[playerid] > C_BUG_TIME)
    	{
     		format(string, sizeof(string), "Jucatorul %s%d abuzeaza de C-Bug!", PlayerName(playerid),playerid);
            AdminsBroadCast(COLOR_RED, string,1);
			HackLog(string);
			P_CBUG_TICKS[playerid] = 0;
			new Float:Health;
			GetPlayerHealth(playerid,Health);
			SetPlayerHealth(playerid,Health-25);
			return 1;
		}
	}

	return 1;
}
CheckFireArm(weaponid)
{
	switch(weaponid)
	{
		case 16..39, 41..43: return 1;
        default: return 0;
	}
    return 0;
}
IsCbugWeapon(playerid)
{
    new weaponID = GetPlayerWeapon(playerid);
    if(weaponID == 22 || weaponID == 24 || weaponID == 25 || weaponID == 27)
    return 1;
	return 0;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	printf("FAILED RCON LOGIN BY IP %s USING PASSWORD %s",ip, password);
    new pip[16];
    for(new i = GetPlayerPoolSize(); i != -1; --i) //Loop through all players
    {
   		GetPlayerIp(i, pip, sizeof(pip));
        if(!strcmp(ip, pip, true)) //If a player's IP is the IP that failed the login
        {
            if(!success)
            {
            	Attemping[i]++;
				if(Attemping[i]>1&&PlayerInfo[i][pAdmin]<7)
				{
        			SendClientMessage(i, 0xFFFFFFFF, "Invalid Password"); //Send a message
            		Kick(i); //They are now banned.
       			}
       			else
       			{
        			SendClientMessage(i, 0xFFFFFFFF, "Invalid Password"); //Send a message
            		Kick(i); //They are now banned.
       			}
 			}
       	}
	}
	return 1;
}
public StartingTheVehicle(playerid)
{
	new string[155];
 	if(!IsPlayerInAnyVehicle(playerid)) return 1;
   	new RandomStart, Float:health;
   	GetVehicleHealth(GetPlayerVehicleID(playerid), health);
	RandomStart = random(13);
    if(health<350)
    {
 		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	    SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
	    VehicleEngine[GetPlayerVehicleID(playerid)] = 0;
        VehicleLights[GetPlayerVehicleID(playerid)] = 0;
	    format(string, sizeof(string), "*Motorul este defect %s.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SendClientMessage(playerid,-1,"Poti folosi cheia sa repari motorul, /repaircar");
		instart[playerid] = 0;
	    TogglePlayerControllable(playerid, 1);
		return 1;
	}
    switch(RandomStart)
    {
    	case 0,1,2,3,4,5,6,7,8,9,10,11,12:
        {
			GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
            SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
            format(string, sizeof(string), "*Motorul a pornit %s.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			instart[playerid] = 0;
	        VehicleLights[GetPlayerVehicleID(playerid)] = 1;
	        VehicleEngine[GetPlayerVehicleID(playerid)] = 1;
            TogglePlayerControllable(playerid, 1);
			return 1;
 		}
        case 13:
  		{
	    	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	        SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
	      	VehicleEngine[GetPlayerVehicleID(playerid)] = 0;
	        format(string, sizeof(string), "*Motorul nu vrea sa porneasca %s.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			instart[playerid] = 0;
	       	VehicleLights[GetPlayerVehicleID(playerid)] = 0;
			TogglePlayerControllable(playerid, 1);
			return 1;
       	}
    }
	return 1;
}
public Spectator()
{
	foreach(Player,playerid)
	{
		new string[155];
    	if(SpectatedID[playerid] != 999 && SpectatedID[playerid] != 998)
		{
		    new Float:health,Float:health2;
            if (!ProxDetectorPlayer(18.0, playerid, SpectatedID[playerid]))
            {
				if(IsPlayerInAnyVehicle(SpectatedID[playerid]))
				PlayerSpectateVehicle(playerid, GetPlayerVehicleID(SpectatedID[playerid]));
				else
				PlayerSpectatePlayer(playerid, SpectatedID[playerid]);
			}
			SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(SpectatedID[playerid]));
			SetPlayerInterior(playerid, GetPlayerInterior(SpectatedID[playerid]));
		    GetPlayerHealth(SpectatedID[playerid], health);
		    GetVehicleHealth(GetPlayerVehicleID(SpectatedID[playerid]),health2);
			format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~b~%s(ID:%d) health:%.1f~n~~r~VehHP: %.1f",PlayerName(SpectatedID[playerid]),SpectatedID[playerid],health,health2);
			GameTextForPlayer(playerid, string, 3500, 3);
		}
	}
	return 1;
}


public OnPlayerAirbreak(playerid)
{
	new string[155];
	if(gLogged[playerid] == 0) return 1;
	if(PlayerInfo[playerid][pAdmin] > 0) return 1;

   	hack[playerid]++;
	format(string, sizeof(string), "["#SERVERNAME"]: %s (%d) posibil AirBrake, A primit kick.", PlayerName(playerid), playerid, playerid);
    foreach(Player,i)
	{
	    hack[playerid] ++;
  		if(PlayerInfo[i][pAdmin] > 0 || PlayerInfo[i][pHelper] > 0 || IsPlayerAdmin(i))
		SendClientMessage(i,-1, string);
		format(string, sizeof(string), "~b~["#SERVERNAME"]: %s (%d) posibil AirBr", PlayerName(playerid), playerid);
		HackLog(string);
		TogglePlayerControllable(playerid, 0);
	    SetTimerEx("freze", 2000, 0, "i", playerid);
		TogglePlayerControllable(playerid, 0);
		ClearAnimations(playerid);
	    if(hack[playerid] > 5)
	    {
	        hack[playerid] = 0;
	    	format(string, sizeof(string), "["#SERVERNAME"]: %s (%d) a primit kick motiv AirBr", PlayerName(playerid), playerid);
		    HackLog(string);
		    SendClientMessage(playerid,-1,string);
			KickWithMessage(playerid,-1,string);
    	}
 	}
 	return 1;
}
public UsePdA(playerid)
{
    CanUsePd[playerid] = 1;
	return 1;
}

public PHY_OnObjectCollideWithWall(objectid, wallid)
{
	if(IsAPoolBall(objectid)&&IsWall(wallid))
	foreach(Player,i)
	if(IsPlayerAtPool(i))
	PlayerPlaySound(i, 1136, 510.11218261719, -84.40771484375, 998.86785888672);
}
public PHY_OnObjectCollideWithObject(object1, object2)
{
	if(IsAPoolBall(object1) && IsAPoolBall(object2))
	foreach(Player,i)
	if(IsPlayerAtPool(i))
	PlayerPlaySound(i, 1131, 510.11218261719, -84.40771484375, 998.86785888672);
}
public PHY_OnObjectUpdate(objectid)
{
 	new name[MAX_PLAYER_NAME], string[128];
	GetPlayerName(LastTouch, name, sizeof name);
    if((
	IsObjectInSphere(objectid,509.61123657,-85.79737091,998.86785889,0.09) ||
	IsObjectInSphere(objectid,510.67373657,-84.84423065,998.86785889,0.09) ||
	IsObjectInSphere(objectid,510.61914062,-83.88769531,998.86785889,0.09) ||
    IsObjectInSphere(objectid,509.61077881,-83.89227295,998.86785889,0.09) ||
	IsObjectInSphere(objectid,510.61825562,-85.80107880,998.86785889,0.09) ||
	IsObjectInSphere(objectid,509.55642700,-84.84602356,998.86785889,0.09)) && objectid == PoolBall[0])
	{
	    PHY_SetObjectVelocity(PoolBall[0],0.0,0.0);
		SetObjectPos(PoolBall[0], 510.11218261719, -84.40771484375, 998.86785888672);
 		format(string,sizeof(string),"%s a bagat mingea Alba in gaura",PlayerName(PlayerOnTable));
		foreach(Player,i)
		if(IsPlayerAtPool(i))
		{
			PlayerPlaySound(i,  1135, 510.11218261719, -84.40771484375, 998.86785888672);
			SendClientMessage(i,-1,string);
  		}
		if(Gamble[0] == PlayerOnTable)
		{
     		PlayerRound = Gamble[1];
		 	GameTextForPlayer(Gamble[1], "~b~~h~~n~~n~Este randul tau", 3000, 5);
			return 1;
		}
        if(Gamble[1] == PlayerOnTable)
     	{
     		PlayerRound = Gamble[0];
		 	GameTextForPlayer(Gamble[0], "~b~~h~~n~~n~Este randul tau", 3000, 5);
			return 1;
		}
		return 1;
	}
	if((
	IsObjectInSphere(objectid,509.61123657,-85.79737091,998.86785889,0.09) ||
	IsObjectInSphere(objectid,510.67373657,-84.84423065,998.86785889,0.09) ||
	IsObjectInSphere(objectid,510.61914062,-83.88769531,998.86785889,0.09) ||
    IsObjectInSphere(objectid,509.61077881,-83.89227295,998.86785889,0.09) ||
	IsObjectInSphere(objectid,510.61825562,-85.80107880,998.86785889,0.09) ||
	IsObjectInSphere(objectid,509.55642700,-84.84602356,998.86785889,0.09)) && objectid == PoolBall[5])
	{
	 	if(BallOnTables<=1)
		format(string,sizeof(string),"Joc incheiat, se aranjeaza o masa noua. De %s",PlayerName(PlayerOnTable));
		else
	    format(string,sizeof(string),"%s a bagat mingea Neagra in gaura. Joc incheiat",PlayerName(PlayerOnTable));
		foreach(Player,i)
		{
   		    BallType[i] = 0;
			if(IsPlayerAtPool(i))
			{
    			PlayerPlaySound(i,  1135, 510.11218261719, -84.40771484375, 998.86785888672);
				SendClientMessage(i,-1,string);
			}
		}
		CreateSet();
	    CreateSet();
	    Gamble[0] = 999;
	    Gamble[1] = 999;
		PlayerRound=999;
		PlayerOnTable=999;
		return 1;
	}
	if((
	IsObjectInSphere(objectid,509.61123657,-85.79737091,998.86785889,0.09) ||
	IsObjectInSphere(objectid,510.67373657,-84.84423065,998.86785889,0.09) ||
	IsObjectInSphere(objectid,510.61914062,-83.88769531,998.86785889,0.09) ||
    IsObjectInSphere(objectid,509.61077881,-83.89227295,998.86785889,0.09) ||
	IsObjectInSphere(objectid,510.61825562,-85.80107880,998.86785889,0.09) ||
	IsObjectInSphere(objectid,509.55642700,-84.84602356,998.86785889,0.09) ))
	{
	    if(FirstBall==0)
	    {
	    	if(IsABrokeBall(objectid))
			{
  				GameTextForPlayer(PlayerOnTable, "~w~~n~+1", 2000, 5);
	 			format(string,sizeof(string),"%s a bagat primul. El ia Spartele",PlayerName(PlayerOnTable));
				BallType[PlayerOnTable]=1;
				if(Gamble[1]==PlayerOnTable)
   				BallType[Gamble[0]]=2;
				else if(Gamble[0]==PlayerOnTable)
   				BallType[Gamble[1]]=2;
			}
			if(IsAFullBall(objectid))
 			{
  				GameTextForPlayer(PlayerOnTable, "~w~~n~+1", 2000, 5);
			 	format(string,sizeof(string),"%s a bagat primul. El ia Plinele",PlayerName(PlayerOnTable));
				BallType[PlayerOnTable]=2;
				if(Gamble[1]==PlayerOnTable)
   				BallType[Gamble[0]]=1;
				else if(Gamble[0]==PlayerOnTable)
   				BallType[Gamble[1]]=1;
			}
		    SetObjectPos(objectid,0,0,-1);
		    PHY_SetObjectVelocity(objectid,0.0,0.0);
            BallOnTables--;
			foreach(Player,i)
			if(IsPlayerAtPool(i))
			{
    			PlayerPlaySound(i,  1135, 510.11218261719, -84.40771484375, 998.86785888672);
				SendClientMessage(i,-1,string);
			}
			FirstBall=1;
		    return 1;
		}
    	if(IsABrokeBall(objectid))
		format(string,sizeof(string),"%s a bagat mingea Sparta",PlayerName(PlayerOnTable));
	   	if(IsAFullBall(objectid))
 		format(string,sizeof(string),"%s a bagat mingea Plina",PlayerName(PlayerOnTable));
	    SetObjectPos(objectid,0,0,-1);
	    PHY_SetObjectVelocity(objectid,0.0,0.0);
        BallOnTables--;
		foreach(Player,i)
		{
			if(IsPlayerAtPool(i))
			{
    			PlayerPlaySound(i,  1135, 510.11218261719, -84.40771484375, 998.86785888672);
				SendClientMessage(i,-1,string);
			}
  			if(IsABrokeBall(objectid))
  			{
  			    if(BallType[i]==2)
  			    PlayerBalls[i]++;
  			    if(BallType[i]==1)
  				GameTextForPlayer(i, "~w~~n~+1", 2000, 5);
			}
			if(IsAFullBall(objectid))
			{
  			    if(BallType[i]==1)
  			    PlayerBalls[i]++;
  			    if(BallType[i]==2)
			 	GameTextForPlayer(i, "~w~~n~+1", 2000, 5);
			}
		}
	}

	new Float:x, Float:y, Float:z,goal;
	GetBallPos(x, y, z);
	if(!(2669.03 < x < 2745.12 && -1864.08 < y < -1740.54))
	{

		format(string, sizeof string, "OUT din %s", name);
	    RecreateBall();
	   	foreach(Player,i)
	    if(IsAtTheStadion(i))
	    SendClientMessage(i,-1, string);
	}
	else if(2701.92 < x < 2711.89 && -1747.10 < y < -1741.60 && (goal = 2))// Gazde
	{
	    PHY_SetObjectZBound(Ball, _, 425.6 , 0.5);
	    if(z > 425.6)
	    {
	        RecreateBall();
	        if(TeamBall[LastTouch] == 1)//gazde
 	        {
	        	new Float:mindist = FLOAT_INFINITY, Float:dist,closest;
	        	for(new i; i < sizeof Corners; i++)
	        	{
	        	    dist = (x - Corners[i][0]) * (x - Corners[i][0]) + (y - Corners[i][1]) * (y - Corners[i][1]);
					if(dist < mindist)
					{
					    mindist = dist;
					    closest = i;
					}
	        	}
				format(string, sizeof string, "Corner din %s", name);
	        	foreach(Player,i)
	        	if(IsAtTheStadion(i))
	        	SendClientMessage(i,-1, string);
	        	SetObjectPos(Ball, Corners[closest][0], Corners[closest][1], Corners[closest][2]);
	    	}
	    	else
	    	{
				format(string, sizeof string, "OUT din %s", name);
			 	foreach(Player,i)
		        if(IsAtTheStadion(i))
		        SendClientMessage(i,-1, string);
     		    SetObjectPos(Ball,2711.9583,-1751.2297,422.8372);
     		}
	    }
	    else if(!Goal)
	    {
	        Goal = 1;
            Oaspeti++;
           	format(string,12,"Oaspeti\n%d",Oaspeti);
      		SetDynamicObjectMaterialText(OaspetiPanou,0,string,OBJECT_MATERIAL_SIZE_256x256,"Arial", 75, 1, 0xFFFFFFFF,1, 1);
            if(TeamBall[LastTouch] == 1)//gazde
			format(string, sizeof string, "%s a dat Auto-Gol la Gazde", name);
			else
			format(string, sizeof string, "%s a dat Gol la Gazde", name);
			GameTextForPlayer(LastTouch,"~y~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~GOOL!!!",1500,3);
           	foreach(Player,i)
	        if(IsAtTheStadion(i))
	        SendClientMessage(i,-1, string);
	        #pragma unused goal
	    }
	}
	else if(       (2701.92 < x < 2711.87 && -1862.75 < y < -1857.30 && (goal = 1))   )//Oaspeti
	{
	    PHY_SetObjectZBound(Ball, _, 425.6 , 0.5);
	    if(z > 425.6)
	    {
 	        RecreateBall();
 	        if(TeamBall[LastTouch] == 2)//oaspeti
 	        {
		        new Float:mindist = FLOAT_INFINITY,Float:dist, closest;
		        for(new i; i < sizeof Corners; i++)
		        {
		            dist = (x - Corners[i][0]) * (x - Corners[i][0]) + (y - Corners[i][1]) * (y - Corners[i][1]);
					if(dist < mindist)
					{
					    mindist = dist;
					    closest = i;
					}
		        }
				format(string, sizeof string, "Corner din %s", name);
		        foreach(Player,i)
		        if(IsAtTheStadion(i))
		        SendClientMessage(i,-1, string);
		        SetObjectPos(Ball, Corners[closest][0], Corners[closest][1], Corners[closest][2]);
     		}
     		else
     		{
				format(string, sizeof string, "OUT din %s", name);
			 	foreach(Player,i)
		        if(IsAtTheStadion(i))
		        SendClientMessage(i,-1, string);
     		    SetObjectPos(Ball,2701.9048,-1852.9053,422.8372);
     		}
	    }
	    else if(!Goal)
	    {
	        Goal = 1;
            Gazde ++;
         	format(string,12,"Gazde\n%d",Gazde);
      		SetDynamicObjectMaterialText(GazdePanou,0,string,OBJECT_MATERIAL_SIZE_256x256,"Arial", 75, 1, 0xFFFFFFFF,1, 1);
			if(TeamBall[LastTouch] == 2)//oaspeti
			format(string, sizeof string, "%s a dat Auto-Gol la Oaspeti", name);
			else
			format(string, sizeof string, "%s a dat Gol la Oaspeti", name);
			GameTextForPlayer(LastTouch,"~b~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~GOOL!!!",1500,3);
            foreach(Player,i)
	        if(IsAtTheStadion(i))
	        SendClientMessage(i,-1, string);
	        #pragma unused goal
	    }
	}
	else if(Goal)
	{
	    Goal = 0;
	    PHY_SetObjectZBound(Ball, _, FLOAT_INFINITY, 0.5);
	}

	return 1;
}
forward PropOnPlayerUpdate();
public PropOnPlayerUpdate()
{
	new string[188];
	foreach(Player, playerid)
	{
	if(gLogged[playerid] == 0) return 1;
    if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
 	{
		if(ServerRestarting!=4)
		{
 		    new vehicle = GetPlayerVehicleID(playerid);
		    if(!IsABike(vehicle))
	 	    {
		 		if(IsADiesel(vehicle))
		  		{
			 		if(VehicleEngine[vehicle] == 0)
     		 			format(string, sizeof(string), "~g~Engine:~r~ N");
      		  		else
      		 			format(string, sizeof(string), "~g~Engine:~w~ Y");
			    	TextDrawSetString(Textdraw72[playerid], string);
			    	TextDrawShowForPlayer(playerid,Textdraw72[playerid]);
     	  		}
		  		else
		  		{
	      			if(VehicleEngine[vehicle] == 0)
  			 			format(string, sizeof(string), "~b~Engine:~r~ N");
     		  		else
      		 			format(string, sizeof(string), "~b~Engine:~w~ Y");
			    	TextDrawSetString(Textdraw72[playerid], string);
			    	TextDrawShowForPlayer(playerid,Textdraw72[playerid]);
     	  		}
		  		if(IsADiesel(vehicle))
				{
			 		if(VehicleLights[vehicle] == 1)
    		 			format(string, sizeof(string), "~g~Lights:~w~ Y");
      				else
 				 		format(string, sizeof(string), "~g~Lights:~r~ N");
				    TextDrawSetString(Textdraw71[playerid], string);
				    TextDrawShowForPlayer(playerid,Textdraw71[playerid]);
    	  		}
		  		else
		  		{
		  			if(VehicleLights[vehicle] == 1)
  			 			format(string, sizeof(string), "~b~Lights:~w~ Y");
         	  		else
  				 		format(string, sizeof(string), "~b~Lights:~r~ N");
				    TextDrawSetString(Textdraw71[playerid], string);
				    TextDrawShowForPlayer(playerid,Textdraw71[playerid]);
    	  		}
		  		if(IsADiesel(vehicle))
				{
					if(FrenodeMano[vehicle] == 1 || brake[playerid] == 1)
  						format(string, sizeof(string), "~g~Brake:~w~ Y");
					else
     			 		format(string, sizeof(string), "~g~Brake:~r~ N");
    				TextDrawSetString(Textdraw70[playerid], string);
				    TextDrawShowForPlayer(playerid,Textdraw70[playerid]);
  			  	}
			  	else
			  	{
			  		if(FrenodeMano[vehicle] == 1 || brake[playerid] == 1)
  						format(string, sizeof(string), "~b~Brake:~w~ Y");
      	   			else
     			 		format(string, sizeof(string), "~b~Brake:~r~ N");
				    TextDrawSetString(Textdraw70[playerid], string);
				    TextDrawShowForPlayer(playerid,Textdraw70[playerid]);
  			  	}
       		}//bike


   		    if(IsADiesel(vehicle))
				format(string,sizeof(string),"~g~Model: ~w~%s",		GetVehicleName(GetVehicleModel(vehicle)));
			else
				format(string,sizeof(string),"~b~Model: ~w~%s",		GetVehicleName(GetVehicleModel(vehicle)));
			TextDrawSetString(Modelcar[playerid], string);
			TextDrawShowForPlayer(playerid,Modelcar[playerid]);

			new kmh = GetVehicleSpeed(vehicle);
		    if(IsADiesel(vehicle))
	  		{
		 		if(kmh >= 0 && kmh <= 120)
  		   			format(string, 64, "~g~KM/h: ~w~~h~%d", kmh);
   				else if(kmh >= 121 && kmh <= 200)
   					format(string, 64, "~g~KM/h: ~y~%d", kmh);
   				else if(kmh >= 201)
   					format(string, 64, "~g~KM/h: ~r~%d", kmh);
			}
			else
			{
			    if(kmh >= 0 && kmh <= 120)
   					format(string, 64, "~b~KM/h: ~w~~h~%d", kmh);
   				else if(kmh >= 121 && kmh <= 200)
   					format(string, 64, "~b~KM/h: ~y~%d", kmh);
   				else if(kmh >= 201)
   					format(string, 64, "~b~KM/h: ~r~%d", kmh);
	 		}
   			TextDrawSetString(Textdraw39[playerid], string);
			TextDrawShowForPlayer(playerid,Textdraw39[playerid]);

	 		new zone[MAX_ZONE_NAME];
		   	GetPlayer2DRadarZone(playerid, zone, MAX_ZONE_NAME);
  			if(IsADiesel(vehicle))
    			format(string,sizeof(string),"~g~GPS: ~w~%s",zone);
    		else
				format(string,sizeof(string),"~b~GPS: ~w~%s",zone);
			TextDrawSetString(Gpscar[playerid], string);
			TextDrawShowForPlayer(playerid,Gpscar[playerid]);

   			new Float:LPosX, Float:LPosY, Float:LPosZ;
			GetPlayerPos(playerid, LPosX, LPosY, LPosZ);
			if(IsADiesel(vehicle))
				format(string,sizeof(string),"~g~Height: ~w~%.2f",LPosZ);
			else
			    format(string,sizeof(string),"~b~Height: ~w~%.2f",LPosZ);
			TextDrawSetString(heights[playerid], string);
			TextDrawShowForPlayer(playerid,heights[playerid]);

			new Float:L_VehHealth;
			GetVehicleHealth(GetPlayerVehicleID(playerid), L_VehHealth);
	  	    if(IsADiesel(vehicle))
			{
			    if(L_VehHealth < 450)
   					format(string,sizeof(string),"~g~Health: ~r~%.2f",L_VehHealth);
				else
   				    format(string,sizeof(string),"~g~Health: ~w~%.2f",L_VehHealth);
			}
			else
			{
		 		if(L_VehHealth < 450)
     				format(string,sizeof(string),"~b~Health: ~r~%.2f",L_VehHealth);
				else
   				    format(string,sizeof(string),"~b~Health: ~w~%.2f",L_VehHealth);
			}
			TextDrawSetString(Healthveh[playerid], string);
			TextDrawShowForPlayer(playerid,Healthveh[playerid]);

			new Float: Pos[4],keys, ud, lr;
			GetPlayerKeys(playerid, keys, ud, lr);
			GetVehicleVelocity(GetPlayerVehicleID(playerid), Pos[0], Pos[1], Pos[2]);
			if(IsADiesel(GetPlayerVehicleID(playerid)))
	  		{
				if(keys == KEY_JUMP) TextDrawSetString(sState[playerid], "~w~R ~g~N D");
				else if(keys == KEY_SPRINT) TextDrawSetString(sState[playerid], "~g~R N ~w~D");
				if(Pos[0] == 0.0 && Pos[1] == 0.0 && Pos[2] == 0.0)
				TextDrawSetString(sState[playerid], "~g~R ~w~N ~g~D");
			}
			else
			{
				if(keys == KEY_JUMP) TextDrawSetString(sState[playerid], "~w~R ~b~N D");
				else if(keys == KEY_SPRINT) TextDrawSetString(sState[playerid], "~b~R N ~w~D");
				if(Pos[0] == 0.0 && Pos[1] == 0.0 && Pos[2] == 0.0)
				TextDrawSetString(sState[playerid], "~b~R ~w~N ~b~D");
   			}
			TextDrawShowForPlayer(playerid,sState[playerid]);

			if(IsAPlane(vehicle) || IsABike(vehicle))
			{
				format(string, sizeof(string), "~b~NO FUEL: ~w~~h~N/A");
				TextDrawSetString(Textdraw40[playerid], string);
			}
			else
		  	{
				if(gGas[vehicle] > 10)
			 	{
			   		if(IsADiesel(vehicle))
	               	format(string, sizeof(string), "~g~Diesel: ~w~~h~%d L",gGas[vehicle]);
	 				else
	 	           	format(string, sizeof(string), "~b~Benzina: ~w~~h~%d L",gGas[vehicle]);
				}
				else
			    format(string, sizeof(string), "~r~LOW: ~r~~h~%d L",gGas[vehicle]);
		        TextDrawSetString(Textdraw40[playerid], string);
			}
			TextDrawShowForPlayer(playerid,Textdraw40[playerid]);

    		if(switched[vehicle] == 1)
			{
			    if(GasCar[vehicle] > 10)
			    {
	           		if(IsADiesel(vehicle))
   	            	format(string, sizeof(string), "~b~Gas: ~w~~h~%d L",GasCar[vehicle]);
					else
	            	format(string, sizeof(string), "~b~Gas: ~w~~h~%d L",GasCar[vehicle]);
				}
				else
			    format(string, sizeof(string), "~r~LOW: ~r~~h~%d L",GasCar[vehicle]);
			    TextDrawSetString(td_fuel[playerid],string);
				TextDrawShowForPlayer(playerid,td_fuel[playerid]);
			}

            if(gGas[vehicle] < 1 && switched[vehicle] == 0)
 			{
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~Nu mai este benzina",1500,3);
				GetVehicleParamsEx(vehicle,engine,lights,alarm,doors,bonnet,boot,objective);
		    	SetVehicleParamsEx(vehicle,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
		    	VehicleEngine[vehicle] = 0;
		    	VehicleLights[vehicle] = 0;
			}
			if(GasCar[vehicle] < 1 && switched[vehicle] == 1)
 			{
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~Nu mai este Gaz",1500,3);
				GetVehicleParamsEx(vehicle,engine,lights,alarm,doors,bonnet,boot,objective);
		    	SetVehicleParamsEx(vehicle,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
		    	VehicleEngine[vehicle] = 0;
		    	VehicleLights[vehicle] = 0;
			}
			if(IsADiesel(vehicle))
   	    		format(string, sizeof(string), "~g~ODO:~w~ %.2f Km", VehicleKM[vehicle]);//afisam cati kilometrii are parcursi
			else
   				format(string, sizeof(string), "~b~ODO:~w~ %.2f Km", VehicleKM[vehicle]);//afisam cati kilometrii are parcursi
			TextDrawSetString(Textdraw69[playerid], string);
		    TextDrawShowForPlayer(playerid,Textdraw69[playerid]);
		    vInfo[OwnedVeh(vehicle)][vVodo] =  VehicleKM[vehicle];
  		

			if(IsADiesel(vehicle))
	   		{
	   			if(PlayerInfo[playerid][pradio] == 1)
          			format(string, sizeof(string), "~g~Radio:~w~ Kiss FM~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
				else if(PlayerInfo[playerid][pradio] == 2)
		    		format(string, sizeof(string), "~g~Radio:~w~ Europe FM~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
    			else if(PlayerInfo[playerid][pradio] == 3)
        			format(string, sizeof(string), "~g~Radio:~w~ Pro FM~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
    			else if(PlayerInfo[playerid][pradio] == 4)
           			format(string, sizeof(string), "~g~Radio:~w~ Radio ZU~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
    			else if(PlayerInfo[playerid][pradio] == 5)
		   			format(string, sizeof(string), "~g~Radio:~w~ Magic FM~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
		   		else if(PlayerInfo[playerid][pradio] == 6)
	    			format(string, sizeof(string), "~g~Radio:~w~Gangsta~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
				else if(PlayerInfo[playerid][pradio] == 7)
	    			format(string, sizeof(string), "~g~Radio:~w~ Romania Manele~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
				else if(PlayerInfo[playerid][pradio] == 8)
		    		format(string, sizeof(string), "~g~Radio:~w~ Romania Populara~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
				else if(PlayerInfo[playerid][pradio] == 9)
	    			format(string, sizeof(string), "~g~Radio:~w~ Romania HipHop~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
				else if(PlayerInfo[playerid][pradio] == 10)
	    			format(string, sizeof(string), "~g~Radio:~w~ "#SERVERNAME" Radio~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
				else if(PlayerInfo[playerid][pradio] == 0)
	    			format(string, sizeof(string), "~g~Radio:~r~ OFF~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
		   	}
			else
			{
				if(PlayerInfo[playerid][pradio] == 1)
        			format(string, sizeof(string), "~b~Radio:~w~ Kiss FM~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
  				else if(PlayerInfo[playerid][pradio] == 2)
	   				format(string, sizeof(string), "~b~Radio:~w~ Europa FM~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
				else if(PlayerInfo[playerid][pradio] == 3)
	    			format(string, sizeof(string), "~b~Radio:~w~ Pro FM~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
				else if(PlayerInfo[playerid][pradio] == 4)
		  			format(string, sizeof(string), "~b~Radio:~w~ Radio ZU~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
				else if(PlayerInfo[playerid][pradio] == 5)
		  			format(string, sizeof(string), "~b~Radio:~w~ Magic FM~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
				else if(PlayerInfo[playerid][pradio] == 6)
		   			format(string, sizeof(string), "~b~Radio:~w~Gangsta~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
				else if(PlayerInfo[playerid][pradio] == 7)
		   			format(string, sizeof(string), "~b~Radio:~w~ Romania Manele~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
				else if(PlayerInfo[playerid][pradio] == 8)
		   			format(string, sizeof(string), "~b~Radio:~w~ Romania Populara~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
				else if(PlayerInfo[playerid][pradio] == 9)
		   			format(string, sizeof(string), "~b~Radio:~w~ Romania HipHop~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
				else if(PlayerInfo[playerid][pradio] == 10)
	   				format(string, sizeof(string), "~b~Radio:~w~ "#SERVERNAME" Radio~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
				else if(PlayerInfo[playerid][pradio] == 0)
		   			format(string, sizeof(string), "~b~Radio:~r~ OFF~n~~n~~n~~n~~n~~n~~n~~n~~n~");//afisam
    		}
    		TextDrawSetString(Textdraw160[playerid], string);
		   	TextDrawShowForPlayer(playerid,Textdraw160[playerid]);
		}
	}
	new year,month,day,hours,minutes,seconds;
    gettime(hours, minutes, seconds);
	getdate(year, month, day),
	format(string, sizeof string, "~w~%d/%s%d/%s%d", day, ((month < 10) ? ("0") : ("")), month, (year < 10) ? ("0") : (""), year);
	TextDrawSetString(Date, string);
	format(string, sizeof string, "~w~%s%d:%s%d:%s%d", (hours < 10) ? ("0") : (""), hours, (minutes < 10) ? ("0") : (""), minutes, (seconds < 10) ? ("0") : (""), seconds);
	TextDrawSetString(Time2, string);
	}
	return 1;
}
public OnPlayerUpdate(playerid)
{
	if (ServerRestarting == 4) return 1;
	if(gLogged[playerid] == 0) return 1;
    new string[155],keys, ud, lr,vehicle = GetPlayerVehicleID(playerid);
	GetPlayerKeys(playerid, keys, ud, lr);


  	if(InTargeted[playerid] == 1)
	{
    	if(IsMovingBall()==0)
  		{
        	if(Taced[playerid] == 0)
			{
	  	       	InTargeted[playerid] = 0;
				Taced[playerid] = 0;
		       	FirstMove[playerid] = 1;
				ServerWeapon(playerid, 7, 1);
			    SetPlayerArmedWeapon(playerid, 7);
				CanMove[playerid] = 0;
				RemovePlayerAttachedObject(playerid,9);
				if(IsValidPlayerObject(playerid,PlayerCameraTac[playerid]))
				DestroyPlayerObject(playerid,PlayerCameraTac[playerid]);
				SetCameraBehindPlayer(playerid);
		       	TogglePlayerControllable(playerid,1);
				ClearAnimations(playerid);
				if(BallOnTables +PlayerBalls[PlayerOnTable] == BallsOnTable)
				{
					if(Gamble[0] == PlayerOnTable)
					{
     				    PlayerRound = Gamble[1];
		 				GameTextForPlayer(Gamble[1], "~b~~h~~n~~n~Este randul tau", 3000, 5);
						return 1;
					}
                    if(Gamble[1] == PlayerOnTable)
     				{
     				    PlayerRound = Gamble[0];
		 				GameTextForPlayer(Gamble[0], "~b~~h~~n~~n~Este randul tau", 3000, 5);
						return 1;
					}
				}
			}
		}
    }
    if(lr == KEY_RIGHT)
	{
	    if(takingselfie[playerid] == 1 && gLogged[playerid] == 1)
	    {
			GetPlayerPos(playerid,lX[playerid],lY[playerid],lZ[playerid]);
			static Float: n1X, Float: n1Y;
	    	if(Degree[playerid] >= 360) Degree[playerid] = 0;
	    	Degree[playerid] += Speeed;
	    	n1X = lX[playerid] + Radius * floatcos(Degree[playerid], degrees);
	    	n1Y = lY[playerid] + Radius * floatsin(Degree[playerid], degrees);
	    	SetPlayerCameraPos(playerid, n1X, n1Y, lZ[playerid] + Height);
	    	SetPlayerCameraLookAt(playerid, lX[playerid], lY[playerid], lZ[playerid]+1);
	    	SetPlayerFacingAngle(playerid, Degree[playerid] - 90.0);
	    	return 1;
		}
	}
	if(lr == KEY_LEFT)
	{
	    if(takingselfie[playerid] == 1 && gLogged[playerid] == 1)
	    {
	    	GetPlayerPos(playerid,lX[playerid],lY[playerid],lZ[playerid]);
			static Float: n1X, Float: n1Y;
	    	if(Degree[playerid] >= 360) Degree[playerid] = 0;
	    	Degree[playerid] -= Speeed;
	    	n1X = lX[playerid] + Radius * floatcos(Degree[playerid], degrees);
	    	n1Y = lY[playerid] + Radius * floatsin(Degree[playerid], degrees);
	    	SetPlayerCameraPos(playerid, n1X, n1Y, lZ[playerid] + Height);
	    	SetPlayerCameraLookAt(playerid, lX[playerid], lY[playerid], lZ[playerid]+1);
	    	SetPlayerFacingAngle(playerid, Degree[playerid] - 90.0);
	    	return 1;
		}
	}

    if(Taced[playerid] == 1)
    {
  	    new params[12];
        new Float: oX,Float: oY,Float: oZ;
 	    GetObjectPos(PoolBall[0], oX, oY, oZ);
	    if(lr == KEY_LEFT)
	    {
	        if(FirstMove[playerid] == 1)
	        CanMove[playerid] = 0;
	        if(CanMove[playerid] == 1) return 1;
	        if(IsPlayerInArea(playerid,509.4183,510.8341,-85.9882,-83.7006))
            return	cmd_dasadsdasadsds(playerid,params);
      		FirstMove[playerid] = 0;
			CanMove[playerid] = 0;
            SetPlayerLookAt(playerid,oX, oY);
	        SetCameraBehindPlayer(playerid);
	        AttachCameraToPlayerObject(playerid, PlayerCameraTac[playerid]);
 	    	new Float:X,Float:Y,Float:Z;
		  	TeleportedPlayerToObjectLeft(playerid,X,Y,Z);
		  	SetPlayerPos(playerid,X,Y,Z);
		  	return 1;
		}
		if(lr == KEY_RIGHT)
	    {
	        if(FirstMove[playerid] == 1)
	        CanMove[playerid] = 0;
	        if(CanMove[playerid] == 2) return 1;
	        if(IsPlayerInArea(playerid,509.4183,510.8541, -85.9682,-83.7006))
			return cmd_joprtjhjhfghtr(playerid,params);
    		FirstMove[playerid] = 0;
      		CanMove[playerid] = 1;
			CanMove[playerid] = 0;
            SetPlayerLookAt(playerid,oX, oY);
	        SetCameraBehindPlayer(playerid);
	        AttachCameraToPlayerObject(playerid, PlayerCameraTac[playerid]);
	        new Float:X,Float:Y,Float:Z;
 	    	TeleportedPlayerToObjectRight(playerid,X,Y,Z);
 	    	SetPlayerPos(playerid,X,Y,Z);
		  	return 1;
 		}
	}

	if(WarStarted >= 1)
	{
	    new ftext[64], ftext1[64];
	    if(WarF == 5) strmid(ftext, "Rifa Gang", 0, 64, 64);
	    if(WarF == 6) strmid(ftext, "Triads", 0, 64, 64);
		if(WarF == 16) strmid(ftext,"Corleone Famigla", 0, 64, 64);
		if(WarF == 13) strmid(ftext,"Russian Bratva", 0, 64, 64);
		if(WarF == 14) strmid(ftext,"Ballas Gang", 0, 64, 64);
	 	if(WarF == 15) strmid(ftext,"Sevile Gang", 0, 64, 64);

	 	if(WarF1 == 5) strmid(ftext1, "Rifa Gang", 0, 64, 64);
	    if(WarF1 == 6) strmid(ftext1, "Triads", 0, 64, 64);
	    if(WarF1 == 16) strmid(ftext1,"Corleone Famigla", 0, 64, 64);
		if(WarF1 == 13) strmid(ftext1,"Russian Bratva", 0, 64, 64);
		if(WarF1 == 14) strmid(ftext1,"Ballas Gang", 0, 64, 64);
	 	if(WarF1 == 15) strmid(ftext1,"Sevile Gang", 0, 64, 64);

		format(string,sizeof(string),"~b~WAR~n~~b~Time: ~w~%d: %d~n~~y~%s ~w~vs~y~ %s~n~~b~Score:   ~w~%d -  %d",turftimer/60,turftimer-turftimer/60*60,ftext,ftext1, WarPoints[WarF],WarPoints[WarF1]);
		TextDrawSetString(Textwarevent,string);
		TextDrawShowForPlayer(playerid,Textwarevent);
	}
	for(new g=0;g<Total_Gang_Created;g++)
 	{
		if(IsPlayerInArea(playerid,GangInfo[g][zMinX],GangInfo[g][zMaxX],GangInfo[g][zMinY],GangInfo[g][zMaxY]))
		{
		    format(string, sizeof(string),"~n~~b~Turf ID: %d ~w~Faction: %d",GangInfo[g][zID],GangInfo[g][zOwner]);
	   		TextDrawSetString(Textdraw47[playerid], string);
		}
	}


    if(RowedPDMenu[playerid] !=0)
   	{
	    new Float:x, Float:y, Float:z;
	    GetPlayerPos(playerid, x, y, z);
	    if(CanUsePd[playerid] == 0) return 1;
 	    if(ud == KEY_UP)
	    {
	        if(RowedPDMenu[playerid]==0) return 1;
            CanUsePd[playerid] = 0;
		    SetTimerEx("UsePdA",100, false, "i", playerid);
	        if(RowedPDMenu[playerid]==2)
	        {
	            RowedPDMenu[playerid]=1;
				PlayerPlaySound(playerid,21000,x,y,z);
				PlayerTextDrawColor(playerid,PDRow1[playerid], -1);
				PlayerTextDrawColor(playerid,PDRow2[playerid], 11796424);
				PlayerTextDrawShow(playerid,PDRow1[playerid]);
				PlayerTextDrawShow(playerid,PDRow2[playerid]);
				TextDrawShowForPlayer(playerid,PDRowStar1);
				TextDrawHideForPlayer(playerid,PDRowStar2);
	   	        return 1;
			}
			if(RowedPDMenu[playerid]==3)
	        {
	            RowedPDMenu[playerid]=2;
				PlayerPlaySound(playerid,21000,x,y,z);
				PlayerTextDrawColor(playerid,PDRow2[playerid], -1);
				PlayerTextDrawColor(playerid,PDRow3[playerid], 11796424);
				PlayerTextDrawShow(playerid,PDRow2[playerid]);
				PlayerTextDrawShow(playerid,PDRow3[playerid]);
				TextDrawShowForPlayer(playerid,PDRowStar2);
				TextDrawHideForPlayer(playerid,PDRowStar3);
   	   	        return 1;
			}
			if(RowedPDMenu[playerid]==4)
	        {
	            RowedPDMenu[playerid]=3;
				PlayerPlaySound(playerid,21000,x,y,z);
				PlayerTextDrawColor(playerid,PDRow3[playerid], -1);
				PlayerTextDrawColor(playerid,PDRow4[playerid], 11796424);
				PlayerTextDrawShow(playerid,PDRow4[playerid]);
				PlayerTextDrawShow(playerid,PDRow3[playerid]);
				TextDrawShowForPlayer(playerid,PDRowStar3);
				TextDrawHideForPlayer(playerid,PDRowStar4);
	   	        return 1;
			}
			if(RowedPDMenu[playerid]==5)
	        {
	            RowedPDMenu[playerid]=4;
				PlayerPlaySound(playerid,21000,x,y,z);
				PlayerTextDrawColor(playerid,PDRow4[playerid], -1);
				PlayerTextDrawColor(playerid,PDRow5[playerid], 11796424);
				PlayerTextDrawShow(playerid,PDRow5[playerid]);
				PlayerTextDrawShow(playerid,PDRow4[playerid]);
				TextDrawShowForPlayer(playerid,PDRowStar4);
				TextDrawHideForPlayer(playerid,PDRowStar5);
	   	        return 1;
			}
	    }
		if(ud == KEY_DOWN)
	    {
	        if(RowedPDMenu[playerid]==0) return 1;
            CanUsePd[playerid] = 0;
		    SetTimerEx("UsePdA", 100, false, "i", playerid);
     	    if(RowedPDMenu[playerid]==1)
	   	    {
	   	        RowedPDMenu[playerid]=2;
				PlayerPlaySound(playerid,21000,x,y,z);
				PlayerTextDrawColor(playerid,PDRow1[playerid], 11796424);
				PlayerTextDrawColor(playerid,PDRow2[playerid], -1);
				PlayerTextDrawShow(playerid,PDRow1[playerid]);
				PlayerTextDrawShow(playerid,PDRow2[playerid]);
				TextDrawShowForPlayer(playerid,PDRowStar2);
				TextDrawHideForPlayer(playerid,PDRowStar1);
	   	        return 1;
	     	}
	     	if(RowedPDMenu[playerid]==2)
	   	    {
	   	        RowedPDMenu[playerid]=3;
				PlayerPlaySound(playerid,21000,x,y,z);
				PlayerTextDrawColor(playerid,PDRow2[playerid], 11796424);
				PlayerTextDrawColor(playerid,PDRow3[playerid], -1);
				PlayerTextDrawShow(playerid,PDRow3[playerid]);
				PlayerTextDrawShow(playerid,PDRow2[playerid]);
				TextDrawShowForPlayer(playerid,PDRowStar3);
				TextDrawHideForPlayer(playerid,PDRowStar2);
	   	        return 1;
	     	}
	     	if(RowedPDMenu[playerid]==3)
	   	    {
	   	        RowedPDMenu[playerid]=4;
				PlayerPlaySound(playerid,21000,x,y,z);
				PlayerTextDrawColor(playerid,PDRow3[playerid], 11796424);
				PlayerTextDrawColor(playerid,PDRow4[playerid], -1);
				PlayerTextDrawShow(playerid,PDRow4[playerid]);
				PlayerTextDrawShow(playerid,PDRow3[playerid]);
				TextDrawShowForPlayer(playerid,PDRowStar4);
				TextDrawHideForPlayer(playerid,PDRowStar3);
	   	        return 1;
	     	}
	     	if(RowedPDMenu[playerid]==4)
	   	    {
	   	        RowedPDMenu[playerid]=5;
				PlayerPlaySound(playerid,21000,x,y,z);
				PlayerTextDrawColor(playerid,PDRow4[playerid], 11796424);
				PlayerTextDrawColor(playerid,PDRow5[playerid], -1);
				PlayerTextDrawShow(playerid,PDRow5[playerid]);
				PlayerTextDrawShow(playerid,PDRow4[playerid]);
				TextDrawShowForPlayer(playerid,PDRowStar5);
				TextDrawHideForPlayer(playerid,PDRowStar4);
	   	        return 1;
	     	}
		}
	}

    NewPlayerVirtualWorld[playerid] = GetPlayerVirtualWorld(playerid);
    if(NewPlayerVirtualWorld[playerid] != PlayerVirtualWorld[playerid])
    {
		OnPlayerVirtualWorldChange(playerid, NewPlayerVirtualWorld[playerid], PlayerVirtualWorld[playerid]);
        PlayerVirtualWorld[playerid] = NewPlayerVirtualWorld[playerid];
  	}


	if(PlayerInfo[playerid][pServieta] != 2)
    {
		if(GetTickCount() - armedbody_pTick[playerid] > 113)
		{
			new weaponid[13],weaponammo[13],pArmedWeapon;
			pArmedWeapon = GetPlayerWeapon(playerid);
			GetPlayerWeaponData(playerid,1,weaponid[1],weaponammo[1]);
			GetPlayerWeaponData(playerid,2,weaponid[2],weaponammo[2]);
			GetPlayerWeaponData(playerid,4,weaponid[4],weaponammo[4]);
			GetPlayerWeaponData(playerid,5,weaponid[5],weaponammo[5]);
			#if ARMEDBODY_USE_HEAVY_WEAPON
			GetPlayerWeaponData(playerid,7,weaponid[7],weaponammo[7]);
			#endif
			if(weaponid[1] && weaponammo[1] > 0)
			{
				if(pArmedWeapon != weaponid[1])
				{
					if(!IsPlayerAttachedObjectSlotUsed(playerid,0))
					SetPlayerAttachedObject(playerid,0,GetWeaponModel(weaponid[1]),1, 0.199999, -0.139999, 0.030000, 0.500007, -115.000000, 0.000000, 1.000000, 1.000000, 1.000000);
				}
				else
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid,0))
					RemovePlayerAttachedObject(playerid,0);
				}
			}
			else if(IsPlayerAttachedObjectSlotUsed(playerid,0))
			RemovePlayerAttachedObject(playerid,0);
			if(weaponid[2] && weaponammo[2] > 0)
			{
				if(pArmedWeapon != weaponid[2])
				{
					if(!IsPlayerAttachedObjectSlotUsed(playerid,1))
					SetPlayerAttachedObject(playerid,1,GetWeaponModel(weaponid[2]),8, -0.079999, -0.039999, 0.109999, -90.100006, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
				}
				else
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid,1))
					RemovePlayerAttachedObject(playerid,1);
				}
			}
			else if(IsPlayerAttachedObjectSlotUsed(playerid,1))
			{
				RemovePlayerAttachedObject(playerid,1);
			}
			if(weaponid[4] && weaponammo[4] > 0)
			{
				if(pArmedWeapon != weaponid[4])
				{
					if(!IsPlayerAttachedObjectSlotUsed(playerid,2))
					SetPlayerAttachedObject(playerid,2,GetWeaponModel(weaponid[4]),7, 0.000000, -0.100000, -0.080000, -95.000000, -10.000000, 0.000000, 1.000000, 1.000000, 1.000000);
				}
				else
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid,2))
					RemovePlayerAttachedObject(playerid,2);
				}
			}
			else if(IsPlayerAttachedObjectSlotUsed(playerid,2))
			RemovePlayerAttachedObject(playerid,2);
			if(weaponid[5] && weaponammo[5] > 0)
			{
				if(pArmedWeapon != weaponid[5])
				{
					if(!IsPlayerAttachedObjectSlotUsed(playerid,3))
					SetPlayerAttachedObject(playerid,3,GetWeaponModel(weaponid[5]),1, 0.200000, -0.119999, -0.059999, 0.000000, 206.000000, 0.000000, 1.000000, 1.000000, 1.000000);
				}
				else
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid,3))
					RemovePlayerAttachedObject(playerid,3);
				}
			}
			else if(IsPlayerAttachedObjectSlotUsed(playerid,3))
			{
				RemovePlayerAttachedObject(playerid,3);
			}
			#if ARMEDBODY_USE_HEAVY_WEAPON
			if(weaponid[7] && weaponammo[7] > 0)
			{
				if(pArmedWeapon != weaponid[7])
				{
					if(!IsPlayerAttachedObjectSlotUsed(playerid,4))
					SetPlayerAttachedObject(playerid,4,GetWeaponModel(weaponid[7]),1,-0.100000, 0.000000, -0.100000, 84.399932, 112.000000, 10.000000, 1.099999, 1.000000, 1.000000);
				}
				else
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid,4))
					RemovePlayerAttachedObject(playerid,4);
				}
			}
			else if(IsPlayerAttachedObjectSlotUsed(playerid,4))
			RemovePlayerAttachedObject(playerid,4);
			#endif
			armedbody_pTick[playerid] = GetTickCount();
		}
	}

	if(noclipdata[playerid][cameramode] == CAMERA_MODE_FLY)
	{
		if(noclipdata[playerid][mode] && (GetTickCount() - noclipdata[playerid][lastmove] > 100))
	    MoveCamera(playerid);
		if(noclipdata[playerid][udold] != ud || noclipdata[playerid][lrold] != lr)
		{
			if((noclipdata[playerid][udold] != 0 || noclipdata[playerid][lrold] != 0) && ud == 0 && lr == 0)
			{   // All keys have been released, stop the object the camera is attached to and reset the acceleration multiplier
				StopDynamicObject(noclipdata[playerid][flyobject]);
				noclipdata[playerid][mode]      = 0;
				noclipdata[playerid][accelmul]  = 0.0;
			}
			else
			{
				noclipdata[playerid][mode] = GetMoveDirectionFromKeys(ud, lr);
				MoveCamera(playerid);
			}
		}
		noclipdata[playerid][udold] = ud; noclipdata[playerid][lrold] = lr; // Store current keys pressed for comparison next update
		return 0;
	}

   	for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
	  	if(IsPlayerInRangeOfPoint(playerid, 5.0, Roadblocks[i][sXx], Roadblocks[i][sYy], Roadblocks[i][sZz]) && Roadblocks[i][sMod] == 1)
  		{
       	    new panels,tires;
       	    GetVehicleDamageStatus(vehicle, panels, doors, lights, tires);
          	UpdateVehicleDamageStatus(vehicle, panels, doors, lights, 15);
       	}
   	}

    if(GetPlayerWeapon(playerid) == 38 || GetPlayerWeapon(playerid) == 37 || GetPlayerWeapon(playerid) == 35)
	{
	    if(IsPlayerConnected(playerid))
        {
		    if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] == 0)
		    {
		    	Kick(playerid);
		    	SetPlayerArmedWeapon(playerid, 0);
			    format(string, sizeof(string), "["#SERVERNAME"]: %s (%d) a primit kick motiv Weapon Hack", PlayerName(playerid), playerid);
				AdminsBroadCast(-1,string,3);
			    HackLog(string);
				KickWithMessage(playerid,-1,string);
		    	return 1;
			}
		}
	}

	if(PlayerInfo[playerid][pAdmin] == 0)
	{
		new AnimLib[30], AnimName[30];
		GetAnimationName(GetPlayerAnimationIndex(playerid), AnimLib, sizeof(AnimLib), AnimName, sizeof(AnimName));
		if(GetPlayerSped(playerid) > 60 && strcmp(AnimLib, "SWIM", true) == 0 && strcmp(AnimName, "SWIM_crawl", true) == 0)
		{
		    hack[playerid]++;
		    if(hack[playerid] > 26)
		    {
  				format(string, sizeof(string), "["#SERVERNAME"]: %s (%d) posibil hack fly. A primit kick", PlayerName(playerid), playerid);
  				HackLog(string);
            	foreach(Player,i)
		    	{
		    	    if(PlayerInfo[i][pAdmin] > 0 || PlayerInfo[i][pHelper] > 0 || IsPlayerAdmin(i))
					SendClientMessage(i,-1, string);
					new Float:slx, Float:sly, Float:slz;
			    	format(string, sizeof(string), "["#SERVERNAME"]: %s (%d) a primit kick motiv Hack Fly", PlayerName(playerid), playerid);
				    HackLog(string);
				    if(PlayerInfo[i][pAdmin] > 0 || PlayerInfo[i][pHelper] > 0 || IsPlayerAdmin(i))
					SendClientMessage(i,-1, string);
				    GetPlayerPos(playerid, slx, sly, slz);
					SetPlayerPos(playerid, slx, sly, slz+5);
					PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
					TogglePlayerControllable(playerid, 0);
				    SetTimerEx("freze", 2000, 0, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					ClearAnimations(playerid);
				    hack[playerid] = 0;
   					KickWithMessage(playerid,-1,string);
   					return 1;
				}
			}
		}
	}
	return 1;
}
public DealStanceAnim(playerid)
{
	ApplyActorAnimation(playerid, "DEALER", "DEALER_IDLE", 4.0, 0, 1, 1, 1, -1);
	return 1;
}
public CancelAnim(playerid)
{
	ClearActorAnimations(playerid);
	return 1;
}
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	new string[155];
    if( hittype == BULLET_HIT_TYPE_PLAYER ) // Bullet Crashing uses just this hittype
    {
        if( !( -20.0 <= fX <= 20.0 ) || !( -20.0 <= fY <= 20.0 ) || !( -20.0 <= fZ <= 20.0 ) ) // a valid offset, it's impossible that a offset bigger than 20 is legit (less than 0 is impossible, but still, let's check for it, just for the future)
        {
			format(string, sizeof(string), "["#SERVERNAME"]: %s (%d) a primit kick. Motiv: hack crash.", PlayerName(playerid), playerid);
			AdminsBroadCast(-1,string,2);
			HackLog(string);
			SendClientMessage(playerid,-1,string);
   			SetTimerEx("kiked", 100, false, "i", playerid);
            return 0; // let's desynchronize that bullet, so players won't crash
        }
    }
    new Float:x, Float:y, Float:z;
    for(new a=0;a<MAX_ACTORS;a++)
    {
		GetActorPos(a, x, y, z);
		if(IsPlayerInRangeOfPoint(playerid,28,x,y,z))
		{
		    if(GetActorVirtualWorld(a) == GetPlayerVirtualWorld(playerid))
		    {
 				ApplyActorAnimation(a, "ped", "cower", 3.0, 1, 0, 0, 0, 0);
				KillTimer(AnimTime);
				AnimTime = SetTimerEx("CancelAnim", 6000, false, "i", a);
 			}
 		}
 	}
    return 1;
}
public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid)
{
    /*new string[128], weaponname[24];
    GetWeaponName(weaponid, weaponname, sizeof (weaponname));
    if(amount<1)
    {
    	format(string, sizeof(string), "%s posibil invulnerability hack, mai putin de 1hp damage(%.2f) de la %s cu %s",PlayerName(damagedid),amount,PlayerName(playerid), weaponname);
    	AdminsBroadCast(0xFFFFFFFF, string,2);
    	HackLog(string);
		return 1;
	}
*/

	if(Tazer[playerid] == 1 && GetPlayerWeapon(playerid) == 23)
	{
	    if(IsPlayerInAnyVehicle(damagedid))
	    {
		    TogglePlayerControllable(playerid,0);
	    	GameTextForPlayer(damagedid,"~r~ENGINE TAZED",9000,4);
			SetTimerEx("freze", 600, false, "i", playerid);
	    	Tazed[damagedid] = 10;
	    }
	    else
	    {
	    	new Float:health;
    		GetPlayerHealth(damagedid,health);
	    	if(Tazed[damagedid] > 0) return 1;
	    	new Float:x, Float:y, Float:z;
	    	GetPlayerPos(damagedid, x, y, z);
	    	GameTextForPlayer(damagedid,"~r~BEING TAZED",9000,4);
	    	ClearAnimations(damagedid);
	    	TogglePlayerControllable(damagedid, 0);
	    	ApplyAnimation(damagedid,"PED","KO_skid_front",4.1,0,1,1,1,0);
	    	ApplyAnimation(damagedid,"PED","KO_skid_front",4.1,0,1,1,1,0);
	    	SetTimerEx("TazedRemove", 3000, 0, "i", damagedid);
	    	Tazed[damagedid] = 10;
		}
	}

  	if(damagedid == INVALID_PLAYER_ID||!CheckFireArm(GetPlayerWeapon(playerid))||GetPlayerTargetPlayer(playerid) != INVALID_PLAYER_ID) return 1;
    new count = GetPVarInt(playerid, "aimcount"), ticks = GetPVarInt(playerid, "aimtick"), currtick = GetTickCount();
    if(currtick - ticks <= 10000 && count + 1 >= MAX_AIM_TICKS)
	{
    	new msg[144];
    	format(msg, sizeof(msg), "%s[%i]este suspect in folosirea Aim / Joypad.", PlayerName(playerid), playerid);
    	AdminsBroadCast(-1,msg,1);
		HackLog(msg);
	}
	return 1;
}

public TazedRemove(playerid)
{
	TogglePlayerControllable(playerid, 1);
	ClearAnimations(playerid);
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	new string[155];

   	if(dialogid == 1111)
	{
		if(!response) return 1;
  		if(listitem == 0)
               	SetPlayerSkin(playerid,18);
		if(listitem == 1)
				SetPlayerSkin(playerid,45);

		if(listitem == 2)
   				SetPlayerSkin(playerid,97);

		if(listitem == 3)
   	         	SetPlayerSkin(playerid,146);

		if(listitem == 4)
           		SetPlayerSkin(playerid,154);

		if(listitem == 5)
    		 	SetPlayerSkin(playerid,252);

		if(listitem == 6)
    		    SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
	}

	if(dialogid == 1112)
	{
		if(!response) return 1;
  		if(listitem == 0)
               	SetPlayerSkin(playerid,138);
		if(listitem == 1)
				SetPlayerSkin(playerid,45);

		if(listitem == 2)
   				SetPlayerSkin(playerid,140);

		if(listitem == 3)
   	         	SetPlayerSkin(playerid,145);

		if(listitem == 4)
           		SetPlayerSkin(playerid,251);

		if(listitem == 5)
    		 	SetPlayerSkin(playerid,92);

		if(listitem == 6)
    		    SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
	}

	if(dialogid == 9998)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
                PlayAudioStreamForPlayer(playerid, "http://80.86.106.136/listen.pls");
                SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
			if(listitem == 1)
			{
                PlayAudioStreamForPlayer(playerid, "http://k007.kiwi6.com/hotlink/ydli4zscei/live.m3u");
                SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
			if(listitem == 2)
			{
                PlayAudioStreamForPlayer(playerid, "http://stream.profm.ro:8012/profm.mp3");
                SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
			if(listitem == 3)
			{
                PlayAudioStreamForPlayer(playerid, "http://www.radiozu.ro/live.m3u");
                SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
			if(listitem == 4)
			{
                PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls");
                SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
			if(listitem == 5)
			{
                PlayAudioStreamForPlayer(playerid, "http://k007.kiwi6.com/hotlink/cqr9x5604n/Asculta_Live_Radio_Amy_-_Radio_Manele_Mix.pls");
                SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
			if(listitem == 6)
			{
  				PlayAudioStreamForPlayer(playerid, "http://radioromanian.net/manele.pls");
  				SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
			if(listitem == 7)
			{
                PlayAudioStreamForPlayer(playerid, "http://radioromanian.net/popular.pls");
                SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
			if(listitem == 8)
			{
			    PlayAudioStreamForPlayer(playerid, "http://radioromanian.net/hiphop.pls");
			    SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
 			if(listitem == 9)
			{
			 	PlayAudioStreamForPlayer(playerid, "http://s6.myradiostream.com:5654");
			}
			if(listitem == 10)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Daca Radioul nu se aude puteti descarca clientul de pe forum sectiunea -informatii");
			}
	    }
	    else
	    {
	        RemovePlayerAttachedObject(playerid, 6);
	        StopAudioStreamForPlayer(playerid);
	    }
	}

    if(dialogid == DIALOG_LOGIN)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	new ghour, gminute, gsecond;
			gettime(ghour, gminute, gsecond);
			SetPlayerTime(playerid, ghour, gminute); // Noodggdfdffff
			if(!response)
			return 	Kick(playerid);
            if(strlen(inputtext) >= 3 && strlen(inputtext) <= 20)
     		{
     		    if(strfind(inputtext, "'", true) != -1)
     		    {
					cache_get_field_content(0, "LastLogin", temp), strmid(PlayerInfo[playerid][pLastLogin], temp, 0, 255, 255);

		         	format(string,sizeof(string),"{1580EA}\tWelcome, {F23A0D}%s{1580EA}!\n\nScrieti parola contul pentru a va loga\n\n {FFFFFF}*Last login: %s *",PlayerName(playerid), PlayerInfo[playerid][pLastLogin]);
					ShowPlayerDialog(playerid,DIALOG_LOGIN,DIALOG_STYLE_PASSWORD,"Login",string,"Logare","");
				}
     		    new tmppass[64];
      			mysql_real_escape_string(inputtext, tmppass);
      			if(strlen(tmppass) < 3)
     		    {
					cache_get_field_content(0, "LastLogin", temp), strmid(PlayerInfo[playerid][pLastLogin], temp, 0, 255, 255);
		         	format(string,sizeof(string),"{1580EA}\tWelcome, {F23A0D}%s{1580EA}!\n\nScrieti parola contul pentru a va loga\n\n {FFFFFF}*Last login: %s *",PlayerName(playerid), PlayerInfo[playerid][pLastLogin]);
					ShowPlayerDialog(playerid,DIALOG_LOGIN,DIALOG_STYLE_PASSWORD,"Login",string,"Logare","");
				}
				OnPlayerLogin(playerid,tmppass);
    		}
      		else
      		{
      		    cache_get_field_content(0, "LastLogin", temp), strmid(PlayerInfo[playerid][pLastLogin], temp, 0, 255, 255);

	         	format(string,sizeof(string),"{1580EA}\tWelcome, {F23A0D}%s{1580EA}!\n\nScrieti parola contul pentru a va loga\n\n {FFFFFF}*Last login: %s *",PlayerName(playerid), PlayerInfo[playerid][pLastLogin]);
				ShowPlayerDialog(playerid,DIALOG_LOGIN,DIALOG_STYLE_PASSWORD,"Login",string,"Logare","");
    		}
		}
	}

	if(dialogid == DIALOG_REGISTER)
	{
	    if(!response)	return Kick(playerid);

		if(strlen(inputtext) >= 3 && strlen(inputtext) <= 20)
		{
		    new tmppass[64];
		    mysql_real_escape_string(inputtext, tmppass);
		    if(strlen(tmppass) < 3)
			{
	    		new ghour, gminute, gsecond;
				gettime(ghour, gminute, gsecond);
				SetPlayerTime(playerid, ghour, gminute); // Noodggdfdffff
			    cache_get_field_content(0, "LastLogin", temp), strmid(PlayerInfo[playerid][pLastLogin], temp, 0, 255, 255);
	         	format(string,sizeof(string),"{1580EA}Welcome, {95A3FF}%s{1580EA}!\n\nScrieti parola contul pentru a va loga\n\n {FFFFFF}Last login: %s *",PlayerName(playerid), PlayerInfo[playerid][pLastLogin]);
           		ShowPlayerDialog(playerid,DIALOG_LOGIN,DIALOG_STYLE_PASSWORD,"Login",string,"Logare","Iesi");
			}
			OnPlayerRegister(playerid,tmppass);
		}
		else
 		{
		    ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "{FFFFFF}Character Gender", "{FFFFFF}Scrieti parola contului dumneavostra", "Register", "Cancel");
      	}
	}

	if(dialogid == DIALOG_SEX)
	{
	    if(response)
	    {
	        PlayerInfo[playerid][pSex] = 1;
	        Update(playerid,pSexx);
	        RegistrationStep[playerid] = 1;
	        Update(playerid, pLoginDatex);
			ShowPlayerDialog(playerid, DIALOG_AGE, DIALOG_STYLE_INPUT, "{FFFFFF}Character Age", "{FFFFFF}OK, deci esti barbat.\n\nAcum, cati ani ai?(7-50)", "Next", "Back");
			return 1;
     	}
     	else
     	{
     	    PlayerInfo[playerid][pSex] = 2;
	        Update(playerid,pSexx);
	        Update(playerid, pLoginDatex);
	        RegistrationStep[playerid] = 1;
	        ShowPlayerDialog(playerid, DIALOG_AGE, DIALOG_STYLE_INPUT, "{FFFFFF}Character Age", "{FFFFFF}OK, deci esti femeie.\n\nAcum, cati ani ai?(7-50)", "Next", "Back");
	        return 1;
      	}
	}

	if(dialogid == DIALOG_AGE)
	{
    	if(response)
    	{
  		 	new age = strval(inputtext);
  		 	if(age > 6 && age < 101)
  		 	{
				PlayerInfo[playerid][pAge] = age;
				Update(playerid, pAgex);

				RegistrationStep[playerid] = 2;
                format(string, 256, "{FFFFFF}OK, deci ai %d ani. Care este EMail-ul tau?",age);
				ShowPlayerDialog(playerid, DIALOG_EMAIL, DIALOG_STYLE_INPUT, "{FFFFFF}Email", string, "Next", "Back");
			}
			else return ShowPlayerDialog(playerid, DIALOG_AGE, DIALOG_STYLE_INPUT, "{FFFFFF}Character Age", "{FFFFFF}Cati ani ai?", "Next", "");
		}
		if(!response)	return ShowPlayerDialog(playerid, DIALOG_AGE, DIALOG_STYLE_INPUT, "{FFFFFF}Character Age", "{FFFFFF}Cati ani ai?", "Next", "");

	}

	if(dialogid == DIALOG_EMAIL)
	{
		if(response)
    	{
       		if(strlen(inputtext) < 4 || strlen(inputtext) > 151)
		   	{
		   		SendClientMessage(playerid, COLOR_ERROR, "{FFFFFF}Emailul nu poate avea mai putin de 4 caractere sau maimult de 150");
			  	ShowPlayerDialog(playerid,DIALOG_EMAIL,DIALOG_STYLE_INPUT,"{FFFFFF}Email","{FFFFFF}Te rog reintrodu adresa Email","Next","");
			  	return 1;
			}
			if(strfind(inputtext, "@", true) == -1)
		 	{
		 	    SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Info: {FFFFFF}Acela nu este un Email corect!");
			  	ShowPlayerDialog(playerid,DIALOG_EMAIL,DIALOG_STYLE_INPUT,"{FFFFFF}Email","{FFFFFF}Te rog reintrodu adresa Email","Next","");
			  	return 1;
			}
			else
       		{
				strmid(PlayerInfo[playerid][pEmail], inputtext, 0, strlen(inputtext), 999);
				Update(playerid, pEmailx);
				format(string, sizeof(string), "{FFFFFF}Ok deci emailul tau este %s. Care este Orasul tau", inputtext);
				ShowPlayerDialog(playerid, DIALOG_REGISTER_ORAS, DIALOG_STYLE_INPUT,"Oras", string, "Next", "");
				return 1;
			}
		}
	 	if(!response)	return 	ShowPlayerDialog(playerid, DIALOG_EMAIL, DIALOG_STYLE_INPUT, "{FFFFFF}Email", "{FFFFFF}Care este EMail-ul tau?", "Next", "");

	}
	//===============================
	if(dialogid == DIALOG_REGISTER_ORAS)
	{
	   	if(response)
    	{
       		if(strlen(inputtext) < 2 || strlen(inputtext) > 151)
		   	{
		   		format(string, sizeof(string), "{FFFFFF}Orasul nu trebuie sa fie mai mic de 2 litere sau mai mare de 150");
				ShowPlayerDialog(playerid, DIALOG_REGISTER_ORAS, DIALOG_STYLE_INPUT,"Oras", string, "Next", "");
			  	return 1;
			}
 			else
       		{
				strmid(PlayerInfo[playerid][pOrigin], inputtext, 0, strlen(inputtext), 999);
				Update(playerid, pOriginx);
		    	SendClientMessage(playerid,COLOR_LIGHTBLUE,"Registration Complete");
		    	RegistrationStep[playerid] = 0;
				TutorialTime[playerid] = 1;
				format(string,sizeof(string), "%s",PlayerName(playerid));
			    TextDrawSetString(NameText[playerid], string);
				TextDrawShowForPlayer(playerid, NameText[playerid]);
			    TextDrawShowForPlayer(playerid, Textdraw45);
				TextDrawShowForPlayer(playerid, Time2);
				TextDrawShowForPlayer(playerid, Date);
				TextDrawHideForPlayer(playerid, TextdrawIntro1);
				TextDrawHideForPlayer(playerid, TextdrawIntro2);
				TextDrawHideForPlayer(playerid, TextdrawIntro3);
				TextDrawHideForPlayer(playerid, TextdrawIntro4);
				TextDrawHideForPlayer(playerid, TextMostAcc);
				TextDrawHideForPlayer(playerid, TextBannedAcc);
				TextDrawHideForPlayer(playerid, TextNewAcc);
				TextDrawHideForPlayer(playerid, TextTotalAcc);
				TextDrawHideForPlayer(playerid, BlindFold);
			    StopAudioStreamForPlayer(playerid);
    			ClearChatbox(playerid, 10);
				SetPlayerCameraPos(playerid,1395.6365, -1768.7408, 79.7407);
				SetPlayerCameraLookAt(playerid, 1461.6523, -1710.1768, 46.0865);
				ClearChatbox(playerid, 10);
 	   			TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~b~Bun venit pe "#SERVERNAME" Romania RPG ~n~~n~~n~~y~Tutorial Step 1/6", 5000, 5);
				SendClientMessage(playerid, COLOR_WHITE, "Povestea spune ca te-ai nascut intr-un stat cu o viata extrem de complicata, "#SERVERNAME"!");
				SendClientMessage(playerid, COLOR_WHITE, "Tatal tau a fost nevoit sa paraseasca Tara fugind de politie, acesta a fost victima unei inscenari...");
				SetPlayerPos(playerid,  1461.6523, -1710.1768, 56.0865);
				return 1;
			}
		}
	 	if(!response) return ShowPlayerDialog(playerid, DIALOG_REGISTER_ORAS, DIALOG_STYLE_INPUT,"{FFFFFF}Oras", "{FFFFFF}Care este orasul tau", "Next", "");
   	}


   	if(dialogid == 3333)
	{
 		if(!response) return SendClientMessage(playerid,-1,"O zi buna");
	    if(response)
	    {
	  	    if(listitem == 0)//gazde
			{
  			    foreach(Player,i)
	   			{
			        if(GazdeOnline()>OaspetiOnline()) return SendClientMessage(playerid,-1,"Gzdele au prea multi membri Du-te la Gazde!");
		        	if(IsAtTheStadion(i) || TeamBall[i] !=0 ||i==playerid)
		        	{
		        		format(string,sizeof(string),"%s s-a alaturat Gazdelor",PlayerName(playerid));
		        		SendClientMessage(i,-1, string);
					}
				}
	        	SetPlayerPos(playerid,2717.1650,-1743.8617,422.8368);//gazde
	        	TeamBall[playerid] = 1;//gazde
				SetPlayerSkin(playerid,107);
				SetPlayerVirtualWorld(playerid,3);
			    SetPlayerColor(playerid,color_15);
			}
			if(listitem == 1)//oaspet
			{
			    foreach(Player,i)
			    {
   		      		if(OaspetiOnline()>GazdeOnline()) return SendClientMessage(playerid,-1,"Oaspetii au prea multi membri Du-te la Gazde!");
		        	if(IsAtTheStadion(i) || TeamBall[i] !=0 ||i==playerid)
		        	{
		        		format(string,sizeof(string),"%s s-a alaturat Oaspetilor",PlayerName(playerid));
		        		SendClientMessage(i,-1, string);
					}
				}
				SetPlayerSkin(playerid,104);
		       	SetPlayerPos(playerid,2696.2241,-1861.2040,422.8368);//oaspeti
		      	TeamBall[playerid] = 2;//gazde
				SetPlayerVirtualWorld(playerid,3);
			    SetPlayerColor(playerid,color_14);
			}

			if(listitem == 2)//spectatori
			{
			    foreach(Player,i)
				{
   					if(IsAtTheStadion(i) || TeamBall[i] !=0 ||i==playerid)
		        	{
		        		format(string,sizeof(string),"%s s-a alaturat Spectatorilor");
		        		SendClientMessage(i,-1, string);
					}
				}
				SetPlayerVirtualWorld(playerid,3);
	        	TeamBall[playerid] = 3; //spec
				SetPlayerPos(playerid,2750.0173,-1803.0859,425.375);//spec
			}
			new strong[500];
			strcat(strong, "Apasa WALK pentru a arunca mingea ~n~\
							Apasa CLICK DREAPTA pentru a pasa mingea ~n~\
							Apasa CLICK pentru a lua mingea ~n~\
							Apasa Enter pentru a suta mingea ~n~\
							Apasa tastele de sus cand mingea la nivelul capului~n~\
							Tine apasat tastele de sus pentru bara de putere");
      		TextDrawSetString(TextdrawInfoBall, strong);
		    TextDrawShowForPlayer(playerid, TextdrawInfoBall);
		   // TextDrawShowForPlayer(playerid, TextdrawInfoBox);
   			KillTimer(TimerH[playerid]);
   			TimerH[playerid]= SetTimerEx("HidesInfo", 7000, false, "i", playerid);
			TogglePlayerControllable(playerid, 0);
			SetTimerEx("freze", 500, 0, "i", playerid);
			SetPlayerToTeamColor(playerid);
		}
	}
	if(dialogid == DIALOG_IDD)
    {
        if(!response)
            return 0;
        if(FloorRequestedBys[listitem] != INVALID_PLAYER_ID || IsFloorInsQueue(listitem))
            GameTextForPlayer(playerid, "~r~Etajul este in folosinta", 3500, 4);
		else if(DidPlayerSRequestElevator(playerid))
		    GameTextForPlayer(playerid, "~r~Liftul este in funtiune", 3500, 4);
		else
	        CallElevators(playerid, listitem);
		return 1;
    }
	if(dialogid == DIALOG_ID)
	{
        if(!response)
            return 0;

        if(FloorRequestedBy[listitem] != INVALID_PLAYER_ID || IsFloorInQueue(listitem))
            GameTextForPlayer(playerid, "~r~Etajul este deja folosit", 3500, 4);
		else if(DidPlayerRequestElevator(playerid))
		    GameTextForPlayer(playerid, "~r~Ai chemat deja liftul", 3500, 4);
		else
	        CallElevator(playerid, listitem);

		return 1;
    }

	if(dialogid == 25)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    ResetPlayerWeapons(playerid);
	            ServerWeapon(playerid, 4, 1);//knife
	            ServerWeapon(playerid, 24, 200);//dealge
	            ServerWeapon(playerid, 29, 500);//mp5
	            ServerWeapon(playerid, 4, 1);
			    /*1:Knife, Desert Eagle, MP5, Sniper
			    2:Knife, SDPistol, MP5, Sniper
   			    3:Knife, Desert Eagle, AK47, MP5, Sniper
        	    4:Knife, SDPistol, M4, AK47, Sniper
			    5:Knife, Desert Eagle, M4, AK47, Sniper*/
			}
			if(listitem == 1)
			{
			    ResetPlayerWeapons(playerid);
	            ServerWeapon(playerid, 4, 1);//knife
	            ServerWeapon(playerid, 34, 200);//dealge
	            ServerWeapon(playerid, 29, 500);//mp5
	            ServerWeapon(playerid, 23, 100);//silent
			}
			if(listitem == 2)
			{
			    ResetPlayerWeapons(playerid);
	            ServerWeapon(playerid, 4, 1);//knife
	            ServerWeapon(playerid, 34, 200);//dealge
	            ServerWeapon(playerid, 30, 500);//ak47
	            ServerWeapon(playerid, 29, 500);//mp5
	            ServerWeapon(playerid, 34, 100);//sniper
			}
			if(listitem == 3)
			{
			    ResetPlayerWeapons(playerid);
	            ServerWeapon(playerid, 4, 1);//knife
	            ServerWeapon(playerid, 23, 100);//silent
	            ServerWeapon(playerid, 31, 400);//m4a1
	            ServerWeapon(playerid, 30, 500);//ak47
	            ServerWeapon(playerid, 34, 100);//sniper
			}
			if(listitem == 4)
			{
			    ResetPlayerWeapons(playerid);
	            ServerWeapon(playerid, 4, 1);//knife
	            ServerWeapon(playerid, 34, 200);//dealge
	            ServerWeapon(playerid, 31, 400);//m4a1
	            ServerWeapon(playerid, 30, 500);//ak47
	            ServerWeapon(playerid, 34, 100);//sniper
			}
		}
	}
	if(dialogid == 27)
	{
	    if(!response) return SendClientMessage(playerid,COLOR_LIGHTBLUE,"O zi buna!");

	}
    if(dialogid == 29)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    if(PlayerInfo[playerid][pIphone] == 1) return SendClientMessage(playerid, COLOR_RED, "Ai deja iPhone, /iphone");
			    {
			        if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid,-1,"nu ai bani");
                    PlayerInfo[playerid][pIphone] = 1;
                    Update(playerid, pIphonex);
                    PlayerInfo[playerid][pBaterie] = 100;
 					Update(playerid, pBateriex);
                    SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat iPhone, scrie /iphone");
                    SendClientMessage(playerid, COLOR_WHITE, "Poti incarca telefonul intr-o masina cu /charge ");
                    GivePlayerCash(playerid, -5000);
                    new randphone = 1000 + random(8999);//minimum 1000  max 9999
					PlayerInfo[playerid][pPhoneNumber] = randphone;
					Update(playerid, pPhoneNumberx);
					format(string,sizeof(string),"Noul tau numar de telefon este %d", PlayerInfo[playerid][pPhoneNumber]);
     				SendClientMessage(playerid,-1,string);
				}
			}
			if(listitem == 1)
 	        ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "Casti Meniu", "Casti Albe\nCasti Negre\nCasti Rosii\nCasti Albastre", "Cumpara", "Cancel");
 	    }
	    else return SendClientMessage(playerid, COLOR_WHITE, "Ai inchis meniul");
	}
	if(dialogid == 30)
	{
	    if(listitem == 0)
		{
	     	if(GetPlayerCash(playerid) < 3000) return SendClientMessage(playerid,-1,"nu ai bani");
       	    PlayerInfo[playerid][pCasti] = 19421;
			Update(playerid, pCastix);
			GivePlayerCash(playerid, -3000);
			SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat casti albe");
		}
		if(listitem == 1)
		{
            if(GetPlayerCash(playerid) < 3000) return SendClientMessage(playerid,-1,"nu ai bani");
		    PlayerInfo[playerid][pCasti] = 19422;
			Update(playerid, pCastix);
			GivePlayerCash(playerid,-3000);
			SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat casti negre");
		}
		if(listitem == 2)
		{
		    if(GetPlayerCash(playerid) < 3000) return SendClientMessage(playerid,-1,"nu ai bani");
		    PlayerInfo[playerid][pCasti] = 19423;
			Update(playerid, pCastix);
  			GivePlayerCash(playerid, -3000);
  			SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat casti rosii");
		}
		if(listitem == 3)
		{
		  	if(GetPlayerCash(playerid) < 3000) return SendClientMessage(playerid,-1,"nu ai bani");
		    PlayerInfo[playerid][pCasti] = 19424;
			Update(playerid, pCastix);
			GivePlayerCash(playerid, -3000);
			SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat casti albastre");
		}
	}
    if(dialogid == 28)
	{
		if(!response) return SendClientMessage(playerid,COLOR_LIGHTBLUE,"O zi buna!");
		new skin = GetPlayerSkin(playerid);
        if(listitem == 0)
		{
		    if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid,COLOR_RED,"Nu ai bani");
   			RemovePlayerAttachedObject(playerid, 7);
	        GivePlayerCash(playerid, -5000);
	        SendClientMessage(playerid, 0xFFFFFFFF, "Ti-ai schimbat frizura pentru {3EFF33}5000$.");
	        SendClientMessage(playerid, 0xFFFFFFFF, "Click dreapta!.");
		   	SetPlayerAttachedObject(playerid, 7, 19077, 2, SkinOffSett[skin][0], SkinOffSett[skin][1], SkinOffSett[skin][2], SkinOffSett[skin][3], SkinOffSett[skin][4], SkinOffSett[skin][5], SkinOffSett[skin][8], SkinOffSett[skin][8], SkinOffSett[skin][8]);
			PlayerInfo[playerid][pHair] = 1;
			Update(playerid, pHairx);
		}
		else if(listitem == 1)
		{
		    if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid,COLOR_RED,"Nu ai bani");
	        GivePlayerCash(playerid, -5000);
	        RemovePlayerAttachedObject(playerid, 7);
            SendClientMessage(playerid, 0xFFFFFFFF, "Ti-ai schimbat frizura pentru {3EFF33}5000$.");
            SendClientMessage(playerid, 0xFFFFFFFF, "Click dreapta!.");
            SetPlayerAttachedObject(playerid, 7, 18975, 2, SkinOffSett[skin][0], SkinOffSett[skin][1], SkinOffSett[skin][2], SkinOffSett[skin][3], SkinOffSett[skin][4], SkinOffSett[skin][5], SkinOffSett[skin][8], SkinOffSett[skin][8], SkinOffSett[skin][8]);
   			PlayerInfo[playerid][pHair] = 2;
			Update(playerid, pHairx);
		}
		else if(listitem == 2)
		{
		    if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid,COLOR_RED,"Nu ai bani");
	        RemovePlayerAttachedObject(playerid, 7);
            SendClientMessage(playerid, 0xFFFFFFFF, "Ti-ai schimbat frizura pentru {3EFF33}5000$.");
            SendClientMessage(playerid, 0xFFFFFFFF, "Click dreapta!.");
   			PlayerInfo[playerid][pHair] = 3;
			Update(playerid, pHairx);
		}
		else if(listitem == 3)
		{
			GivePlayerCash(playerid, -5000);
	  		RemovePlayerAttachedObject(playerid, 7);
            SendClientMessage(playerid, 0xFFFFFFFF, "Ti-ai schimbat frizura pentru {3EFF33}5000$.");
            SetPlayerAttachedObject(playerid, 7, 19136, 2, SkinOffSett[skin][0], SkinOffSett[skin][1], SkinOffSett[skin][2], SkinOffSett[skin][3], SkinOffSett[skin][4], SkinOffSett[skin][5], SkinOffSett[skin][8], SkinOffSett[skin][8], SkinOffSett[skin][8]);
            PlayerInfo[playerid][pHair] = 4;
  			Update(playerid, pHairx);
		}
		else if(listitem == 4)
		{
		    if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid,COLOR_RED,"Nu ai bani");
	        GivePlayerCash(playerid, -5000);
	        RemovePlayerAttachedObject(playerid, 7);
            SendClientMessage(playerid, 0xFFFFFFFF, "Ti-ai schimbat frizura pentru {3EFF33}5000$.");
            SendClientMessage(playerid, 0xFFFFFFFF, "Click dreapta!.");
            SetPlayerAttachedObject(playerid, 7, 19274, 2, SkinOffSett[skin][0], SkinOffSett[skin][1], SkinOffSett[skin][2], SkinOffSett[skin][3], SkinOffSett[skin][4], SkinOffSett[skin][5], SkinOffSett[skin][8], SkinOffSett[skin][8], SkinOffSett[skin][8]);
      		PlayerInfo[playerid][pHair] = 5;
			Update(playerid, pHairx);
		}
		else if(listitem == 5)
		{
		    if(GetPlayerCash(playerid) < 4000) return SendClientMessage(playerid,COLOR_RED,"Nu ai bani");
	  	    GivePlayerCash(playerid, -4000);
	  	    SendClientMessage(playerid, 0xFFFFFFFF, "Te-ai tuns pentru {3EFF33}4000$.");
	  	    SendClientMessage(playerid, 0xFFFFFFFF, "Click dreapta!.");
            RemovePlayerAttachedObject(playerid, 7);
			PlayerInfo[playerid][pHair] = 0;
			Update(playerid, pHairx);
		}
 	}
    if(dialogid == 26)
	{
	    if(response)
	    {
       		if(!strlen(inputtext))
			return ShowPlayerDialog(playerid, 26, DIALOG_STYLE_INPUT, "{FFFFFF}Nu ai scirs nimic","{FFFFFF}PPoti da skip daca nu stii numele Exact","OK","SKIP ->");
            if(!strcmp(inputtext, PlayerName(playerid),  true))
			return ShowPlayerDialog(playerid, 26, DIALOG_STYLE_INPUT, "{FFFFFF}Nu te poti adauga singur","{FFFFFF}PPoti da skip daca nu stii numele Exact","OK","SKIP ->");

			mysql_format(handle, query, sizeof(query), "SELECT * FROM `players` WHERE `username` = '%s'", inputtext);
			new Cache:result = mysql_query(handle,query);
			mysql_query(handle,query);
			if(cache_num_rows() > 0)
			{
				if(IsPlayerConnected(ReturnUser(inputtext)))
				{
					format(string,100,"%s a spus ca l-ai adus pe server",PlayerName(playerid));
					SendClientMessage(ReturnUser(inputtext),COLOR_LIGHTBLUE,string);
	 			}
	        	format(string,100,"%s te-a adus pe server.Multumim pentru Referral",inputtext);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(query,sizeof(query),"UPDATE `players` SET `Players` = `Players` + 1 WHERE `username`='%s'",inputtext);
	      		mysql_tquery(handle, query);
			   	PlayerInfo[playerid][pAchievement8] = 1;
	    		Update(playerid, pAchievement8x);
				cache_delete(result);
			}
			else return ShowPlayerDialog(playerid, 26, DIALOG_STYLE_INPUT, "{FFFFFF}Acest Cont nu exista","Poti da skip daca nu stii numele Exact","OK","SKIP ->");
    		return 1;
      	}
   		else
   		{
   		    SendClientMessage(playerid,-1,"Ai refuzat sa specifici numele playerului care te-a adus.");
   		    SendClientMessage(playerid,-1,"Distractie placuta in continuare");
   		    mysql_format(handle, query, 500, "UPDATE `players` SET `Players` = `Players` + 1 WHERE `username`='Mr.Zeth'");
            mysql_tquery(handle, query);
   		    mysql_format(handle, query, 500, "UPDATE `players` SET `Players` = `Players` + 1 WHERE `username`='Lightman'");
      		mysql_tquery(handle, query);
			PlayerInfo[playerid][pAchievement8] = 1;
    		Update(playerid, pAchievement8x);
   		}
	}


    if(dialogid == 1916 && response) return ShowPlayerDialog(playerid, 1216, DIALOG_STYLE_LIST, "Magazin de Artificii", "{ffffff}1. Pocnitori cu zgomot (4)\t\t{9c65ff}250$\n{ffffff}2. Pocnitori cu iluminare (4)\t\t{9c65ff}340$\n{ffffff}3. Bombe fumigene (3)\t\t\t{9c65ff}500$\n{ffffff}4. Rachete explozibile (3)\t\t{9c65ff}830$\n{ffffff}5. Tun explozive (10)\t\t\t{9c65ff}9999$", "Alege", "Cancel");
	if(dialogid == 1219 && response) return PColor[playerid] = listitem + 1;
	if(dialogid == 1216 && response)
	{
  		switch(listitem)
		{
			case 0:
			{
	   			if(GetPlayerMoney(playerid) < 250) return SendClientMessage(playerid,-1,"{ffffff}Nu dispuneti de suma necesara de bani!");
				PlayerInfo[playerid][pAmmoWork] = 1;
				Update(playerid,pAmmoWorkx);
				PlayerInfo[playerid][pFireworks]  = 4;
  				Update(playerid,pFireworksx);
				GivePlayerMoney(playerid, -250);
				SendClientMessage(playerid,-1,"{63cf00}Ati procurat un set de pocnitori cu zgomot!");
				SendClientMessage(playerid,-1,"{319aff}Folositi {ffcf00}/blow{319aff} pentru lansarea artificiului.");
			}
			case 1:
			{
				if(GetPlayerMoney(playerid) < 340) return SendClientMessage(playerid,-1,"{ffffff}Nu dispuneti de suma necesara de bani!");
				PlayerInfo[playerid][pAmmoWork] = 2;
				Update(playerid,pAmmoWorkx);
				PlayerInfo[playerid][pFireworks]  = 4;
  				Update(playerid,pFireworksx);
				GivePlayerMoney(playerid, -340);
				SendClientMessage(playerid,-1,"{63cf00}Ati procurat un set de pocnitori cu iluminare!");
				SendClientMessage(playerid,-1,"{319aff}Folositi {ffcf00}/blow{319aff} pentru lansarea artificiului.");
			}
			case 2:
			{
				if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid, -1, "{ffffff}Nu dispuneti de suma necesara de bani!");
                PlayerInfo[playerid][pAmmoWork] = 3;
				Update(playerid,pAmmoWorkx);
				PlayerInfo[playerid][pFireworks]  = 3;
  				Update(playerid,pFireworksx);
				GivePlayerMoney(playerid, -500);
				SendClientMessage(playerid,-1,"{63cf00}Ati procurat un set de bombe fumigene!");
				SendClientMessage(playerid,-1,"{319aff}Folositi {ffcf00}/blow{319aff} pentru lansarea artificiului.");
			}
			case 3:
			{
				if(GetPlayerMoney(playerid) < 830) return SendClientMessage(playerid,-1,"{ffffff}Nu dispuneti de suma necesara de bani!");
				PlayerInfo[playerid][pAmmoWork] = 4;
				Update(playerid,pAmmoWorkx);
				PlayerInfo[playerid][pFireworks] = 3;
  				Update(playerid,pFireworksx);
				GivePlayerMoney(playerid, -830);
                PColor[playerid] = 1;
				SendClientMessage(playerid,-1,"{63cf00}Ati procurat un set de rachete explozibile!");
				SendClientMessage(playerid,-1,"{319aff}Folositi {ffcf00}/blow{319aff} pentru lansarea artificiului.");
				ShowPlayerDialog(playerid, 1219, DIALOG_STYLE_LIST, "Alegeti culoarea", "{ffffff}Alb\n{0000ff}Albastru-Inchis\n{38ff00}Verde\n{ff0015}Rosu\n{66ff00}Verde-Deschis\n{00b2ff}Albastru-Deschis\n{a900ff}Mov", "Alege", "");
			}
			case 4:
			{
				if(GetPlayerMoney(playerid) < 9999) return SendClientMessage(playerid,-1,"{ffffff}Nu dispuneti de suma necesara de bani!");
				PlayerInfo[playerid][pAmmoWork] = 5;
				Update(playerid,pAmmoWorkx);
				PlayerInfo[playerid][pFireworks] = 3;
  				Update(playerid,pFireworksx);
				GivePlayerMoney(playerid, -9999);
				SendClientMessage(playerid,-1,"{63cf00}Ati procurat un Tun exploziv!");
				SendClientMessage(playerid,-1,"{319aff}Folositi {ffcf00}/blow{319aff} pentru lansarea artificiului.");
			}
		}
	}
 	if(dialogid == 324)
    {
        if(!response) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFFFFF}Ai inchis meniul!");
	    new Pret;
	    new b = GetPlayerVirtualWorld(playerid);
      	switch(listitem)
		{
  	    	case 0:
 	    	{
 	    	    Pret = 499;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,2,1);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat Golf pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
    	   	}
 	    	case 1:
 	    	{
 	    	    Pret = 699;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid)< Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,3,1);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat Pulan pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 2:
 	    	{
 	    	    Pret = 99;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,4,1);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat Cutit pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 3:
 	    	{
                Pret = 229;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,5,1);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat Bata pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 4:
 	    	{
                Pret = 449;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,6,1);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat Lopata pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 5:
 	    	{
                Pret = 99;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,7,1);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat Tac pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 6:
 	    	{
                Pret = 1199;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,8,1);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat Katana pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 7:
 	    	{
                Pret = 3999;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,9,1);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat Drujba pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 8:
 	    	{
                Pret = 349;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,15,1);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat Baston pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 9:
 	    	{
                Pret = 4999;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,16,5);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat HE Grenade pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 10:
 	    	{
                Pret = 4999;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,17,10);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat Smoke Grenade pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 11:
 	    	{
                Pret = 999;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,22,90);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat Glock pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 12:
 	    	{
                Pret = 2999;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,24,120);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat Deagle pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 13:
 	    	{
                Pret = 1299;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,23,120);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat USP Silencer pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 14:
 	    	{
                Pret = 999;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,25,90);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat ShootGun pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 15:
 	    	{
                Pret = 2299;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,29,190);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat MP5 pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 16:
 	    	{
                Pret = 499;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,31,190);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat M4A1 pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 17:
 	    	{
                Pret = 1199;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,33,90);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat Country Rifle pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 18:
 	    	{
                Pret = 349;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,41,290);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat Spray pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 19:
 	    	{
                Pret = 449;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,42,300);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat Extinctor pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
 	    	case 20:
 	    	{
                Pret = 4999;
 	    	    if(IsACop(playerid)&&b==2) Pret = 1;
 	    	    if(GetPlayerMoney(playerid) < Pret) return SendClientMessage(playerid,COLOR_RED,"{ffffff}Nu dispuneti de suma necesara de bani!");
 	    	    if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti permis de port arma, /licenses");
 	    	    ServerWeapon(playerid,46,50);
 	    	    format(string,sizeof(string),"~r~-%d$",Pret);
 	    	    GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,- Pret);
				BizzInfo[b][bTill] += Pret;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	    	    format(string,sizeof(string),"[GunShop] Ai cumparat Parasuta pentru %d$",Pret);
 	    	    SendClientMessage(playerid,-1,string);
 	    	}
  		}
  		ApplyActorAnimation(BizActor[b],"SHOP","SHP_Gun_Grab",4.0,0,0,0,0,0);
		ApplyAnimation(playerid,"INT_SHOP","shop_shelf",4.0,0,0,0,0,0);
  	}

  	if(dialogid == 50)
	{
		if(!response) return SendClientMessage(playerid,-1,"Ai inchis vestiarul!");
		if(listitem == 0)
		{
			if(PlayerInfo[playerid][pRank] < 1) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
		   	ResetPlayerWeapons(playerid);
			ServerWeapon(playerid, 3, 1);
			ServerWeapon(playerid, 24, 150);
			ServerWeapon(playerid, 41, 500);
			format(string, sizeof(string), "* %s isi pune echipamentul standard de cadet.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
 		else if (listitem == 1)
		{
        	if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
			{
   				ResetPlayerWeapons(playerid);
				ServerWeapon(playerid, 3, 1);
				ServerWeapon(playerid, 24, 200);
				ServerWeapon(playerid, 41, 650);
				ServerWeapon(playerid, 25, 25);
    			format(string, sizeof(string), "* %s isi pune echipamentul standard de ofiter.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			}
		}
  		else if (listitem == 2)
		{
			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
		    ResetPlayerWeapons(playerid);
		 	ServerWeapon(playerid, 43, 85);
			ServerWeapon(playerid, 24, 150);
   			format(string, sizeof(string), "* %s isi ia instrumentele pentru detectiv.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 3)
		{
			if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
			ResetPlayerWeapons(playerid);
			ServerWeapon(playerid, 3, 1);
			ServerWeapon(playerid, 24, 150);
			ServerWeapon(playerid, 41, 650);
   			format(string, sizeof(string), "* %s se echipeaza in hainele de motociclist.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 4)
		{
			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
			ResetPlayerWeapons(playerid);
   			ServerWeapon(playerid, 3, 1);
			ServerWeapon(playerid, 24, 200);
			ServerWeapon(playerid, 41, 850);
			ServerWeapon(playerid, 17, 5);
			ServerWeapon(playerid, 29, 175);
   			format(string, sizeof(string), "* %s isi ia uniforma SWAT si echipamentul standard", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 5)
		{
			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
			ResetPlayerWeapons(playerid);
   			ServerWeapon(playerid, 3, 1);
			ServerWeapon(playerid, 24, 225);
			ServerWeapon(playerid, 41, 950);
			ServerWeapon(playerid, 17, 10);
			ServerWeapon(playerid, 31, 150);
			ServerWeapon(playerid, 29, 200);
			format(string, sizeof(string), "* %s isi ia uniforma SWAT si echipamentul mediu.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
  		else if (listitem == 6)
		{
			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
   			ResetPlayerWeapons(playerid);
	  		ServerWeapon(playerid, 3, 1);
			ServerWeapon(playerid, 24, 250);
			ServerWeapon(playerid, 41, 1250);
			ServerWeapon(playerid, 16, 10);
			ServerWeapon(playerid, 27, 100);
			ServerWeapon(playerid, 31, 250);
			ServerWeapon(playerid, 29, 350);
			format(string, sizeof(string), "* %s isi ia uniforma SWAT si echipamentul greu.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
  		else if (listitem == 7)
		{
			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
	    	ResetPlayerWeapons(playerid);
		    ServerWeapon(playerid, 3, 1);
		    ServerWeapon(playerid, 23, 200);
		    ServerWeapon(playerid, 34, 100);
		    ServerWeapon(playerid, 41, 2000);
			format(string, sizeof(string), "* %s isi ia uniforma SWAT si echipamentul de elita.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 8)
  		{
			if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
			SetPlayerArmour(playerid, 100);
            SetPlayerHealth(playerid, 100);
			format(string, sizeof(string), "* %s isi ia vesta antiglont si mananca niste gogosi.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 9)
		{
			if(PlayerInfo[playerid][pRank] < 4) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
		    ResetPlayerWeapons(playerid);
		    ServerWeapon(playerid, 3, 1);
   		 	ServerWeapon(playerid, 23, 250);
	    	ServerWeapon(playerid, 33, 25);
			format(string, sizeof(string), "* %s isi ia echipamentul si uniforma ceremoniala.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
  		}
		else if (listitem == 10)
		{
			ResetPlayerWeapons(playerid);
			ServerWeapon(playerid, 3, 1);
			ServerWeapon(playerid, 24, 150);
			ServerWeapon(playerid, 41, 250);
			ServerWeapon(playerid, 25, 50);
			format(string, sizeof(string), "* %s isi ia echipamentul standard de ofiter.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 11)
		{
  			if(PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
	        ResetPlayerWeapons(playerid);
		   	ServerWeapon(playerid, 3, 1);
			ServerWeapon(playerid, 24, 200);
			ServerWeapon(playerid, 41, 850);
			ServerWeapon(playerid, 17, 5);
			ServerWeapon(playerid, 27, 50);
			ServerWeapon(playerid, 31, 125);
			ServerWeapon(playerid, 29, 200);
			ServerWeapon(playerid, 34, 25);
			format(string, sizeof(string), "* %s isi ia echipamentul standard de ofiter.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
  		}
	}
	if(dialogid == 51)
	{
		if(!response) return SendClientMessage(playerid,-1,"Ai inchis vestiarul!");
		if(listitem == 0)
		{
			if(PlayerInfo[playerid][pRank] < 1) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
		   	ResetPlayerWeapons(playerid);
			ServerWeapon(playerid, 3, 1);
			ServerWeapon(playerid, 24, 150);
			ServerWeapon(playerid, 41, 500);
			format(string, sizeof(string), "* %s isi pune echipamentul standard de cadet.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
 		else if (listitem == 1)
		{
        	if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
			{
   				ResetPlayerWeapons(playerid);
				ServerWeapon(playerid, 3, 1);
				ServerWeapon(playerid, 24, 200);
				ServerWeapon(playerid, 41, 650);
				ServerWeapon(playerid, 25, 25);
    			format(string, sizeof(string), "* %s isi pune echipamentul standard de agent.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			}
		}
  		else if (listitem == 2)
		{
			if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
		    ResetPlayerWeapons(playerid);
		 	ServerWeapon(playerid, 43, 85);
			ServerWeapon(playerid, 24, 150);
   			format(string, sizeof(string), "* %s isi ia instrumentele de urmarire.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 3)
		{
			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
			ResetPlayerWeapons(playerid);
			ServerWeapon(playerid, 43, 125);
   			ServerWeapon(playerid, 4, 1);
	    	ServerWeapon(playerid, 23, 250);
	    	ServerWeapon(playerid, 46, 1);
			ServerWeapon(playerid, 17, 35);
   			format(string, sizeof(string), "* %s se echipeaza in echipament sub acoperire.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 4)
		{
			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
			ResetPlayerWeapons(playerid);
			ServerWeapon(playerid, 3, 1);
   			ServerWeapon(playerid, 24, 200);
		    ServerWeapon(playerid, 41, 850);
   			ServerWeapon(playerid, 17, 10);
	    	ServerWeapon(playerid, 29, 300);
		    ServerWeapon(playerid, 31, 150);
   			ServerWeapon(playerid, 46, 1);
   			format(string, sizeof(string), "* %s isi ia ehipamentul tactic de orientare standard", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 5)
		{
			if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
			ResetPlayerWeapons(playerid);
  			ServerWeapon(playerid, 24, 225);
    		ServerWeapon(playerid, 41, 999);
	    	ServerWeapon(playerid, 17, 15);
	    	ServerWeapon(playerid, 29, 325);
    		ServerWeapon(playerid, 31, 200);
    		ServerWeapon(playerid, 46, 1);
    		ServerWeapon(playerid, 34, 15);
			format(string, sizeof(string), "* %s isi ia echipamentul tactic de orientare si mediu.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
  		else if (listitem == 6)
		{
			if(PlayerInfo[playerid][pRank] < 4) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
   			ResetPlayerWeapons(playerid);
		 	ServerWeapon(playerid, 3, 1);
	    	ServerWeapon(playerid, 24, 275);
	    	ServerWeapon(playerid, 41, 1250);
	    	ServerWeapon(playerid, 16, 5);
	    	ServerWeapon(playerid, 27, 100);
	    	ServerWeapon(playerid, 29, 400);
    		ServerWeapon(playerid, 31, 200);
    		ServerWeapon(playerid, 46, 1);
    		ServerWeapon(playerid, 34, 25);
			format(string, sizeof(string), "* %s isi ia echipamentul tactic de orientare si greu.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
  		else if (listitem == 7)
		{
			if(PlayerInfo[playerid][pRank] < 1) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
	    	ResetPlayerWeapons(playerid);
			ServerWeapon(playerid, 3, 1);
		  	ServerWeapon(playerid, 23, 150);
		  	ServerWeapon(playerid, 34, 50);
	   		ServerWeapon(playerid, 46, 1);
	   		ServerWeapon(playerid, 41, 1500);
			format(string, sizeof(string), "* %s isi ia echipamentul tactic de orientare si de elita.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 8)
  		{
			if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
			SetPlayerArmour(playerid, 100);
            SetPlayerHealth(playerid, 100);
			format(string, sizeof(string), "* %s isi ia vesta antiglont si mananca niste gogosi.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 9)
		{
			if(PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
		    ResetPlayerWeapons(playerid);
			ServerWeapon(playerid, 41, 400);
			ServerWeapon(playerid, 24, 175);
			ServerWeapon(playerid, 3, 1);
			ServerWeapon(playerid, 29, 250);
			ServerWeapon(playerid, 25, 75);
			format(string, sizeof(string), "* %s isi ia echipamentul standard.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
  		}
		else if (listitem == 10)
		{
			ResetPlayerWeapons(playerid);
		   	ServerWeapon(playerid, 3, 1);
		   	ServerWeapon(playerid, 24, 250);
			ServerWeapon(playerid, 41, 850);
			ServerWeapon(playerid, 16, 3);
			ServerWeapon(playerid, 27, 50);
			ServerWeapon(playerid, 29, 300);
			ServerWeapon(playerid, 31, 100);
			ServerWeapon(playerid, 46, 1);
			ServerWeapon(playerid, 34, 25);
			format(string, sizeof(string), "* %s isi ia echipamentul standard de agent.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 11)
		{
  			if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
	        ResetPlayerWeapons(playerid);
  			ServerWeapon(playerid, 3, 1);
  			ServerWeapon(playerid, 24, 50);
			ServerWeapon(playerid, 41, 250);
 			ServerWeapon(playerid, 25, 25);
			ServerWeapon(playerid, 29, 125);
			ServerWeapon(playerid, 33, 50);
			format(string, sizeof(string), "* %s isi ia echipamentul de ceremonie.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
  		}
	}

   	if(dialogid == 52)
	{
 		if(!response) return SendClientMessage(playerid,-1,"Ai inchis Vestiarul");
       	if (listitem == 0)
		{
  			if(PlayerInfo[playerid][pRank] < 1) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
        	ResetPlayerWeapons(playerid);
			ServerWeapon(playerid, 24, 175);
			ServerWeapon(playerid, 3, 1);
			ServerWeapon(playerid, 25, 25);
			ServerWeapon(playerid, 41, 200);
			ServerWeapon(playerid, 31, 50);
			format(string, sizeof(string), "* %s isi ia echipamentul standard privat.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 1)
		{
  			if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
			ResetPlayerWeapons(playerid);
			SetPlayerSkin(playerid, 287);
	       	ServerWeapon(playerid, 41, 300);
			ServerWeapon(playerid, 24, 125);
			ServerWeapon(playerid, 3, 1);
			ServerWeapon(playerid, 29, 100);
			ServerWeapon(playerid, 25, 25);
			ServerWeapon(playerid, 31, 150);
			ServerWeapon(playerid, 17, 5);
			format(string, sizeof(string), "* %s isi ia echipamentul standard de sergent.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 2)
		{
  			if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
	    	ResetPlayerWeapons(playerid);
	    	ServerWeapon(playerid, 43, 100);
	    	ServerWeapon(playerid, 23, 125);
	    	ServerWeapon(playerid, 4, 1);
			format(string, sizeof(string), "* %s isi ia echipamentul de urmarire.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 3)
		{
  			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
	    	ResetPlayerWeapons(playerid);
			ServerWeapon(playerid, 43, 125);
	    	ServerWeapon(playerid, 4, 1);
	    	ServerWeapon(playerid, 23, 150);
	    	ServerWeapon(playerid, 46, 1);
			ServerWeapon(playerid, 17, 10);
			ServerWeapon(playerid, 34, 50);
			format(string, sizeof(string), "* %s isi ia echipamentul de spion.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 4)
		{
   			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
  			ResetPlayerWeapons(playerid);
		    ServerWeapon(playerid, 3, 1);
		    ServerWeapon(playerid, 24, 150);
		    ServerWeapon(playerid, 41, 700);
		    ServerWeapon(playerid, 17, 10);
	    	ServerWeapon(playerid, 29, 175);
	    	ServerWeapon(playerid, 31, 225);
	    	ServerWeapon(playerid, 34, 10);
	    	ServerWeapon(playerid, 46, 1);
			format(string, sizeof(string), "* %s isi ia echipament standard cu uniforma trupelor speciale.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 5)
		{
  			if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
			ResetPlayerWeapons(playerid);
	    	ServerWeapon(playerid, 3, 1);
	    	ServerWeapon(playerid, 24, 175);
	    	ServerWeapon(playerid, 41, 850);
	    	ServerWeapon(playerid, 17, 13);
	    	ServerWeapon(playerid, 29, 200);
	   		ServerWeapon(playerid, 31, 250);
    		ServerWeapon(playerid, 46, 1);
    		ServerWeapon(playerid, 34, 15);
			format(string, sizeof(string), "* %s isi ia echipament mediu cu uniforma trupelor speciale.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 6)
		{
			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
   		   	ResetPlayerWeapons(playerid);
	    	ServerWeapon(playerid, 3, 1);
	    	ServerWeapon(playerid, 24, 200);
	    	ServerWeapon(playerid, 41, 1000);
	    	ServerWeapon(playerid, 16, 5);
	    	ServerWeapon(playerid, 27, 50);
	    	ServerWeapon(playerid, 29, 250);
    		ServerWeapon(playerid, 31, 300);
    		ServerWeapon(playerid, 46, 1);
    		ServerWeapon(playerid, 34, 25);
    		ServerWeapon(playerid, 36, 3);
			format(string, sizeof(string), "* %s isi ia echipament greu cu uniforma trupelor speciale.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 7)
		{
  			if(PlayerInfo[playerid][pRank] < 1) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
	    	ResetPlayerWeapons(playerid);
	    	ServerWeapon(playerid, 4, 1);
	    	ServerWeapon(playerid, 23, 200);
	    	ServerWeapon(playerid, 34, 75);
			ServerWeapon(playerid, 46, 1);
			ServerWeapon(playerid, 41, 1500);
    		ServerWeapon(playerid, 39, 5);
			format(string, sizeof(string), "* %s isi ia echipament de elita cu uniforma trupelor speciale.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 8)
		{
  			if(PlayerInfo[playerid][pRank] < 1) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
			SetPlayerArmour(playerid, 100);
        	SetPlayerHealth(playerid, 100);
			format(string, sizeof(string), "* %s isi ia vesta antiglont si mananca gogosi.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 9)
		{
  			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
			ResetPlayerWeapons(playerid);
			ServerWeapon(playerid, 41, 300);
			ServerWeapon(playerid, 24, 125);
			ServerWeapon(playerid, 3, 1);
			ServerWeapon(playerid, 29, 100);
			ServerWeapon(playerid, 25, 25);
			ServerWeapon(playerid, 31, 150);
			ServerWeapon(playerid, 17, 5);
			format(string, sizeof(string), "* %s isi ia echipamentul de sergent.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 10)
		{
  			if(PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
			ResetPlayerWeapons(playerid);
			ServerWeapon(playerid, 3, 1);
			ServerWeapon(playerid, 24, 200);
			ServerWeapon(playerid, 41, 700);
			ServerWeapon(playerid, 16, 3);
			ServerWeapon(playerid, 27, 50);
			ServerWeapon(playerid, 29, 175);
			ServerWeapon(playerid, 31, 250);
			ServerWeapon(playerid, 46, 1);
			ServerWeapon(playerid, 34, 20);
			format(string, sizeof(string), "* %s isi echipamentul standard de sergent.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
		else if (listitem == 11)
		{
  			if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu ai rankul destul de mare");
			ResetPlayerWeapons(playerid);
			ServerWeapon(playerid, 3, 1);
			ServerWeapon(playerid, 24, 50);
			ServerWeapon(playerid, 41, 500);
			ServerWeapon(playerid, 25, 25);
			ServerWeapon(playerid, 29, 75);
			ServerWeapon(playerid, 31, 100);
			ServerWeapon(playerid, 33, 45);
			format(string, sizeof(string), "* %s isi ia uniforma ceremoniala.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
	}

	if(dialogid == 359)
    {
        if(!response) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFFFFF}Ai inchis meniul!");
   		new Float:ZAngle,Float:X,Float:Y,Float:Z;
		if(strmatch(vInfo[OwnedVeh(GetPlayerVehicleID(playerid))][vOwner], PlayerName(playerid)))
		{
  			GetVehiclePos(GetPlayerVehicleID(playerid), X, Y, Z);
			GetVehicleZAngle(GetPlayerVehicleID(playerid), ZAngle);
	    	format(string, sizeof(string), "Numarul masinii a fost schimbat in: %s", inputtext);
	    	SendClientMessage(playerid, 0xFFFFFFFF, string);
     		strmid(vInfo[OwnedVeh(GetPlayerVehicleID(playerid))][vPlate], inputtext, 0, 32, 32);
			SetVehicleNumberPlate(GetPlayerVehicleID(playerid), inputtext);
			vUpdate(OwnedVeh(GetPlayerVehicleID(playerid)), vPlatex);
	  		new oldveh = GetPlayerVehicleID(playerid);
		    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
    		SetVehiclePos(oldveh, X, Y, Z);
	    	SetVehicleZAngle(oldveh, ZAngle);
			SendClientMessage(playerid,COLOR_WHITE,"{1580EA}Vehicul: {FFFFFF}Numarul masinii a fost schimbat !");
			PutPlayerInVehicle(playerid, oldveh, 0);
			GameTextForPlayer(playerid, "~r~ -10000$", 5000, 1);
			GivePlayerCash(playerid,- 10000);
			SBizzInfo[17][sbTill] += 10000;
			sbUpdate(17,sbTillx);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			return 1;
		}
        return 1;
    }
	if(dialogid == 20000)
	{
	    if(!response) return SendClientMessage(playerid,-1,"Ai inchis Decodorul");
        if(listitem == 0)
        {
            new checking;
            new carid = GetPlayerVehicleID(playerid);
			if(OwnedVeh(GetPlayerVehicleID(playerid)))
			checking = vInfo[OwnedVeh(GetPlayerVehicleID(playerid))][vCarCode];
			else
			checking = VehiclePass[GetPlayerVehicleID(playerid)];
            foreach(Player,i)
			{
			    if(IsACop(i))
				PlayCrimeReportForPlayer(playerid, i, 17);
			}
			if(DecodeTimeW[playerid]>0)
			{
				SendClientMessage(playerid,COLOR_RED,"Ai folosit decodorul prea des, ai fost intercepatat de politie");
   				SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) +1);
   				format(string,sizeof(string),"Furt masina");
                format(PlayerInfo[playerid][pCrima], 128, string);
                Update(playerid,pCrimax);
   			}
			PlayCrimeReportForPlayer(playerid, playerid, 17);
		    ShowDecoder(playerid);
		    Decoding[playerid] = 1;
		    DecodeTimeW[playerid] = 300;
			Digits = GetDigits(checking);
 			if(Masked[playerid] == 1)
 			format(string, sizeof(string), "* Necunoscut foloseste decodorul si incearca sa sparga codul masinii");
		    else
			format(string, sizeof(string), "* %s foloseste decodorul si incearca sa sparga codul masinii", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
 			DecoderTimer = SetTimerEx("DecodePassword",20,true,"ii",playerid, carid);
			SendClientMessage(playerid, COLOR_GREY,"*Decodorul introduce cifre la intamplare pana gaseste combinatia, mai multe cifre mai mult timp!");
		}
		else if(listitem == 1)
		{
			RemovePlayerFromVehicle(playerid);
			TogglePlayerControllable(playerid, 1);
		}
	}
	if(dialogid == 34)
	{
	    if(!response) return 1;
	    if(isnull(inputtext)) return ShowPlayerDialog(playerid,34, DIALOG_STYLE_INPUT, "{FFFF00}SMS", "{FFFFFF}\tScrie ID-ul playerului\n{FF4D00}\tNu ai scris nimic!", "{FFFFFF}Ok", "{FFFFFF}Cancel");
		if(!IsPlayerConnected(strval(inputtext))) return	ShowPlayerDialog(playerid,34, DIALOG_STYLE_INPUT, "{FFFF00}SMS", "{FFFFFF}Scrie ID-ul playerului\n{FF4D00}INVALID PLAYER ID!", "{FFFFFF}Ok", "{FFFFFF}Cancel");
	    ReceiverID[playerid] = strval(inputtext);
	    ShowPlayerDialog(playerid,35,DIALOG_STYLE_INPUT,"{FFFF00}Mesaj","{FFFFFF}\tScrie mesajul dorit","{FFFFFF}Trimite","{FFFFFF}Sterge");
	 	return 1;
	}
	if(dialogid == 35)
	{
	    if(!response) return 1;
		format(string, sizeof(string), "{FFFF00}Mesaj de la {FFFFFF}%s(%d)",PlayerName(playerid),playerid);
		SendClientMessage(ReceiverID[playerid], COLOR_YELLOW, string);
		format(string, sizeof(string), "{FFFF00}Mesaj Nou: {FFFFFF}%s",inputtext);
		SendClientMessage(ReceiverID[playerid], COLOR_YELLOW, string);
		format(string, sizeof(string), "{FFFF00}Mesajul tau:{FFFFFF} %s,{FFFF00} catre %s",inputtext,PlayerName(ReceiverID[playerid]));
		SendClientMessage(playerid, COLOR_YELLOW, string);
		return 1;
	}

	if(dialogid == 37)
	{
        if(!response) return 1;
	    if(response)
	    {
	        if(listitem == 0)//my contacts
			{
                new nameee[128],strong[500];
				mysql_format(handle, query, 500,"SELECT * FROM `friendlist` WHERE `username`='%s'",PlayerName(playerid));
				new Cache:Result = mysql_query(handle,query);
    			FriendsData[playerid][TotalFriends] = 0;
                if(cache_num_rows()>0)
		        {
					for(new i=0;i<cache_get_row_count()-1;i++)
				    {
				     	cache_get_field_content(i, "fr_name", temp);
						format(nameee, 128, temp);
     					if(IsPlayerOnline(nameee))
     					{
     					    PlayerFr[playerid][FriendsData[playerid][TotalFriends] ] = ReturnUser(nameee);
	                    	format(string,sizeof(string),"{49ec4e} •  {ffffff}%s - {49ec4e}ONLINE\n", PlayerName(PlayerFr[playerid][FriendsData[playerid][TotalFriends] ]));
						}
						else
                        {
							format(string,sizeof(string),"{ec4949} •  {ffffff}%s - {ec4949}OFFLINE\n", nameee);
                            PlayerFr[playerid][FriendsData[playerid][TotalFriends] ] = -1;
       					}
						strcat(strong,string);
				        FriendsData[playerid][TotalFriends]++;
					}
    				format(string,sizeof(string)," •  Police\n •  Medic\n •  Mechanic\n •  Pizza\n");
		        	strcat(strong,string);
					ShowPlayerDialog(playerid, 38, DIALOG_STYLE_LIST, "Prietenii tai:", strong, "Select", "back");
    			    cache_delete(Result);
				}
		        else
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, "Prietenii tai:","Lista ta este goala!", "Close","");
		        cache_delete(Result);
		        return 1;
   			}
   			if(listitem == 1)//
			{
			    ShowPlayerDialog(playerid,39, DIALOG_STYLE_INPUT, "{49ec4e}Adaugare contact", "{ffffff}Scrie ID-ul playerului", "{ffffff}Add", "{ffffff}Back");
			}
			if(listitem == 2)//
			{
			    ShowPlayerDialog(playerid,40, DIALOG_STYLE_INPUT, "{ec4949}Stergere contact", "{ffffff}Scrie Numele Exact", "{ffffff}Delete", "{ffffff}Back");
	  		}
 		}
	}

	if(dialogid == 40)
	{
	    if(!response) return ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Contacte:", "My Contacts\nAdd Contact\nDelete Contact", "Select", "Back");
		if(!strlen(inputtext))
		{
			ShowPlayerDialog(playerid,40, DIALOG_STYLE_INPUT, "{ec4949}Nu ai scris numele", "{ffffff}Scrie Numele Exact/ ID-ul", "{ffffff}Delete", "{ffffff}Back");
			return 1;
		}
		mysql_format(handle, query, 500,"SELECT * FROM `FriendList` WHERE `fr_name`='%s' AND `username`='%s'",(inputtext),PlayerName(playerid));
  		new Cache:Result = mysql_query(handle,query);
  		if(cache_num_rows() > 0)
		{
       		mysql_format(handle, query, 500,"DELETE FROM FriendList WHERE fr_name = '%s' AND username = '%s' ",(inputtext),PlayerName(playerid));
            mysql_tquery(handle, query);

            format(string,sizeof(string),"%s te-a scos de la prieteni",PlayerName(playerid));
			if(IsPlayerConnected(ReturnUser(inputtext)))      		SendClientMessage(ReturnUser(inputtext),-1,string);
   			format(string,sizeof(string),"L-ai sters pe %s de la prieteni",(inputtext));
            SendClientMessage(playerid,-1,string);
            cache_delete(Result);
     	}
    	else return SendClientMessage(playerid,-1,"Nu exista nimeni cu numele asta in lista ta");
	}

	if(dialogid == 427)
	{
		if(response)
		{
            switch (SelectCharID[playerid])
			{
				case 1: //PD
				{
			    	if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 310);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);//250
	   					PlayerInfo[playerid][pPdSkin] = GetPlayerSkin(playerid);
					}
    				else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 302);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);//305
	   					PlayerInfo[playerid][pPdSkin] =GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 311);
						SelectCharPlace[playerid] = 4;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);//60
	   					PlayerInfo[playerid][pPdSkin] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 4)
					{
						SetPlayerSkin(playerid, 300);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);//304
	   					PlayerInfo[playerid][pPdSkin] = GetPlayerSkin(playerid);
					}
     			}
     			case 2: //SRI
				{
				    if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 163);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 164);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 286);
						SelectCharPlace[playerid] = 4;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 4)
					{
						SetPlayerSkin(playerid, 165);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				}
				case 3: //NG
				{
				    if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 285);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 284);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 287);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				}
				case 4: //F/P
				{
  			   	    if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 164);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 255);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}

				    else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 228);
						SelectCharPlace[playerid] = 4;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 4)
					{
						SetPlayerSkin(playerid, 171);
						SelectCharPlace[playerid] = 5;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 5)
					{
						SetPlayerSkin(playerid, 57);
						SelectCharPlace[playerid] = 6;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 6)
					{
						SetPlayerSkin(playerid, 295);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				}
    			case 10: // Taxi Cab Company
				{
				    if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 7);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 142);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 61);
						SelectCharPlace[playerid] = 4;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 4)
					{
						SetPlayerSkin(playerid, 255);
						SelectCharPlace[playerid] = 5;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 5)
					{
						SetPlayerSkin(playerid, 253);
						SelectCharPlace[playerid] = 6;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 6)
					{
						SetPlayerSkin(playerid, 37);
						SelectCharPlace[playerid] = 7;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 7)
					{
						SetPlayerSkin(playerid, 44);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				}
				case 5: // Dallas Crime Family
				{
					if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 173);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 174);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 175);
						SelectCharPlace[playerid] = 4;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 4)
					{
						SetPlayerSkin(playerid, 110);
						SelectCharPlace[playerid] = 5;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 5)
					{
						SetPlayerSkin(playerid, 109);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
   				}
				case 6: // Falcone Famiglia
				{
   					if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 123);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 117);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 118);
						SelectCharPlace[playerid] = 4;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 4)
					{
						SetPlayerSkin(playerid, 120);
						SelectCharPlace[playerid] = 5;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 5)
					{
						SetPlayerSkin(playerid, 208);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				}
				case 7: // mayor
				{
				    if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 294);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 228);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 113);
						SelectCharPlace[playerid] = 4;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 4)
					{
						SetPlayerSkin(playerid, 186);
						SelectCharPlace[playerid] = 5;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 5)
					{
						SetPlayerSkin(playerid, 227);
						SelectCharPlace[playerid] = 6;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 6)
					{
						SetPlayerSkin(playerid, 295);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				}
				case 8: // hitman
				{

					if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 127);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 186);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 117);
						SelectCharPlace[playerid] = 4;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 4)
					{
						SetPlayerSkin(playerid, 20);
						SelectCharPlace[playerid] = 5;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 5)
					{
						SetPlayerSkin(playerid, 21);
						SelectCharPlace[playerid] = 6;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 6)
					{
						SetPlayerSkin(playerid, 22);
						SelectCharPlace[playerid] = 7;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 7)
					{
						SetPlayerSkin(playerid, 25);
						SelectCharPlace[playerid] = 8;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 8)
					{
						SetPlayerSkin(playerid, 28);
						SelectCharPlace[playerid] = 9;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 9)
					{
						SetPlayerSkin(playerid, 36);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				}
				case 11: // School Instructors
				{
    				if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 295);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
    				else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 287);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
    				else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 285);
						SelectCharPlace[playerid] = 4;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
    				else if(SelectCharPlace[playerid] == 4)
					{
						SetPlayerSkin(playerid, 71);
						SelectCharPlace[playerid] = 5;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
    				else if(SelectCharPlace[playerid] == 5)
					{
						SetPlayerSkin(playerid, 240);
						SelectCharPlace[playerid] = 6;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
    				else if(SelectCharPlace[playerid] == 6)
					{
						SetPlayerSkin(playerid, 185);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				}
    			case 9: // News Reporters
				{
                    if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 59);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 58);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 57);
						SelectCharPlace[playerid] = 4;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 4)
					{
						SetPlayerSkin(playerid, 60);
						SelectCharPlace[playerid] = 5;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 5)
					{
						SetPlayerSkin(playerid, 187);
						SelectCharPlace[playerid] = 6;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 6)
					{
						SetPlayerSkin(playerid, 185);
						SelectCharPlace[playerid] = 7;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 7)
					{
						SetPlayerSkin(playerid, 189);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				}
				case 12: //Bonanno
				{
				    if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 147);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 208);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 229);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				}
    			case 13: //Orleans
				{
				    if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 113);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 112);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 111);
						SelectCharPlace[playerid] = 4;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 4)
					{
						SetPlayerSkin(playerid, 240);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				}
    			case 14: //15 Avenue Families
				{
                    if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 103);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 102);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 104);
						SelectCharPlace[playerid] = 4;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 4)
					{
						SetPlayerSkin(playerid, 296);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				}
    			case 15: //Sacra Corona Unita
				{
                    if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 270);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 269);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 271);
						SelectCharPlace[playerid] = 4;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 4)
					{
						SetPlayerSkin(playerid, 106);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
    			}
    			case 16: //crl
				{
                    if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 292);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 126);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 125);
						SelectCharPlace[playerid] = 4;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
					else if(SelectCharPlace[playerid] == 4)
					{
						SetPlayerSkin(playerid, 124);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
    			}
				case 17: //SRI
				{
				    if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 163);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 164);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 285);
						SelectCharPlace[playerid] = 4;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				    else if(SelectCharPlace[playerid] == 4)
					{
						SetPlayerSkin(playerid, 166);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = GetPlayerSkin(playerid);
					}
				}
				default:
				{
				    if(SelectCharPlace[playerid]==sizeof(CivMalePeds))
					{
						SetPlayerSkin(playerid, CivMalePeds[SelectCharPlace[playerid]-1][0]);
						SelectCharPlace[playerid] =1; ChosenSkin[playerid] = CivMalePeds[SelectCharPlace[playerid]-1][0];
					}
					else
					{
						SetPlayerSkin(playerid, CivMalePeds[SelectCharPlace[playerid]-1][0]);
						SelectCharPlace[playerid] ++;
						ChosenSkin[playerid] = CivMalePeds[SelectCharPlace[playerid]-1][0];
					}
				}
  			}
		  	ShowPlayerDialog(playerid, 427, DIALOG_STYLE_MSGBOX,"{FFFFFF}Clothes:", "{FFFFFF}Apasa 'Next' pentru a schimba hainele.\nApasa 'Done' sa cumperi aceste haine.","{FFFFFF}Next", "{FFFFFF}Done");
		}
		if(!response)
		{
			PlayerInfo[playerid][pSkin] = GetPlayerSkin(playerid);
			Update(playerid, pSkinx);
			Update(playerid, pPdSkinx);
			if(Clothings[playerid] == 1)
			{
				SetCameraBehindPlayer(playerid);
   				SetTimerEx("freze", 500, 0, "i", playerid);
				TogglePlayerControllable(playerid, 0);
				SetPlayerPos(playerid,InteriorPosx[playerid],InteriorPosy[playerid],InteriorPosz[playerid]);
    			SetPlayerVirtualWorld(playerid, virtualworld[playerid]);
				SetPlayerInterior(playerid,interiorplayer[playerid]);
		    	GivePlayerCash(playerid, -2000);
    			GameTextForPlayer(playerid, "-2.000$!", 3000,4);
     			SendClientMessage(playerid,0x04FBFBC8, "Ai cumparat haine noi");
				return 1;
			}
			else SpawnPlayer(playerid);
		}
	}

//	PlayerInfo[para1][pSkin] = ChosenSkin[para1];
//			Update(para1,pSkinx);

	if(dialogid == 43)
 	{
 	    if(!response)
 	    {
		    SCM(playerid,-1,"Nu ai votat!");
		    return 1;
		}
		if(IsPlayerConnected(ReturnUser(Participant[listitem])) && gLogged[ReturnUser(Participant[listitem])] != 0  )
		{
		    PlayerInfo[ReturnUser(Participant[listitem])][pDice]++;
		    Update(ReturnUser(Participant[listitem]),pDicex);
			format(string,sizeof(string),"L-ai votat pe %s",Participant[listitem]);
			SCM(playerid,-1,string);
			PlayerInfo[playerid][pAchievement11] = 1;
	    	Update(playerid, pAchievement11x);
			return 1;
		}
		else
		{
		    format(query,sizeof(query),"UPDATE `players` SET `Dice` = `Dice` + 1 WHERE `username`='%s'",Participant[listitem]);
	      	mysql_tquery(handle, query);
			format(string,sizeof(string),"L-ai votat pe %s",Participant[listitem]);
			SCM(playerid,-1,string);
			PlayerInfo[playerid][pAchievement11] = 1;
	    	Update(playerid, pAchievement11x);
	    	return 1;
		}
	}
	if(dialogid == 42)
	{
 		if(!response) return SCM(playerid,-1,"Ai renuntat la inscriere");
 		PlayerInfo[playerid][pDice]=1;
 		Update(playerid,pDicex);
 		SCM(playerid,-1,"Te-ai inscris in alegeri!");
 		return 1;
	}
	if(dialogid == 41)
	{
		if(!response) return 1;// They pressed the first button.
		if(listitem==0)// The first item listed
  		{
    		if(GetPlayerCash(playerid) < 10) return SendClientMessage(playerid, 0xFFFFFF, "Nu aveti bani");
	        GivePlayerCash(playerid, -10);
        	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
        }
        if(listitem==1)// The first item listed
  		{
    		if(GetPlayerCash(playerid) < 20) return SendClientMessage(playerid, 0xFFFFFF, "Nu aveti bani");
   	  		GivePlayerCash(playerid, -20);
        	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
	 	    PlayerDrunk[playerid] += 1;
  		}
        if(listitem==2)// The first item listed
  		{
    		if(GetPlayerCash(playerid) < 25) return SendClientMessage(playerid, 0xFFFFFF, "Nu aveti bani");
	     	GivePlayerCash(playerid, -25);
       		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
   	  	}
        if(listitem==3)// The first item listed
  		{
    		if(GetPlayerCash(playerid) < 25) return SendClientMessage(playerid, 0xFFFFFF, "Nu aveti bani");
	     	GivePlayerCash(playerid, -25);
       		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
   	  	}
        if(listitem==4)// The first item listed
  		{
    		if(GetPlayerCash(playerid) < 30) return SendClientMessage(playerid, 0xFFFFFF, "Nu aveti bani");
	     	GivePlayerCash(playerid, -30);
       		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
	 	    PlayerDrunk[playerid] += 1;
   	  	}
        if(listitem==5)// The first item listed
  		{
    		if(GetPlayerCash(playerid) < 10) return SendClientMessage(playerid, 0xFFFFFF, "Nu aveti bani");
   	  		GivePlayerCash(playerid, -10);
        	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
	 	    PlayerDrunk[playerid] += 1;
  		}
        if(listitem==6)// The first item listed
  		{
    		if(GetPlayerCash(playerid) < 52) return SendClientMessage(playerid, 0xFFFFFF, "Nu aveti bani");
   	  		GivePlayerCash(playerid, -52);
        	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
	 	    PlayerDrunk[playerid] += 1;
  		}
        if(listitem==7)// The first item listed
  		{
    		if(GetPlayerCash(playerid) < 40) return SendClientMessage(playerid, 0xFFFFFF, "Nu aveti bani");
	     	GivePlayerCash(playerid, -40);
       		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
	   		PlayerDrunk[playerid] += 1;
   	  	}
  	}


	if(dialogid == 39)
	{
	    if(!response) return ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Contacte:", "My Contacts\nAdd Contact\nDelete Contact", "Select", "Back");
		if(!strlen(inputtext))
		{
			ShowPlayerDialog(playerid,39, DIALOG_STYLE_INPUT, "{ec4949}Nu ai scris ID-ul", "{ffffff}Scrie ID-ul playerului", "{ffffff}Ok", "{ffffff}Back");
			return 1;
		}
		new giveplayerid = ReturnUser(inputtext);
		if(giveplayerid == playerid) return ShowPlayerDialog(playerid,39, DIALOG_STYLE_INPUT, "{ec4949}Nu te poti adauga singur", "{ffffff}Scrie ID-ul playerului", "{ffffff}Ok", "{ffffff}Back");
	    if(giveplayerid == INVALID_PLAYER_ID) return ShowPlayerDialog(playerid,39, DIALOG_STYLE_INPUT, "Invalid ID", "Scrie ID-ul playerului", "Ok", "Back");
	    mysql_format(handle, query, 500,"SELECT * FROM `FriendList` WHERE `username`='%s' AND `fr_name`='%s'",PlayerName(playerid),PlayerName(giveplayerid));
		new Cache:Result = mysql_query(handle,query);
		if(cache_num_rows() == 0)
  		{
		  	mysql_format(handle, query, 500,"INSERT INTO `FriendList`(`username`, `fr_name`) VALUES ('%s','%s')",PlayerName(playerid),PlayerName(giveplayerid));
		  	mysql_tquery(handle, query);
		  	format(string,sizeof(string),"L-ai adaugat pe %s la prieteni",PlayerName(giveplayerid));
		    SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		    if(IsPlayerConnected(giveplayerid))
		    {
      	        format(string,sizeof(string),"%s te-a adaugat la prieteni",PlayerName(playerid));
		        SendClientMessage(giveplayerid,COLOR_LIGHTBLUE,string);
	    	}
		}
		else
		{
			format(string,sizeof(string),"%s se afla deja in lista ta de prieteni",PlayerName(giveplayerid));
		    SendClientMessage(playerid,-1,string);
	    }
    	cache_delete(Result);
	}



	if(dialogid == 38)
	{
        if(!response) return 1;
        if(response)
        {
            if(listitem==FriendsData[playerid][TotalFriends]+0) return  SendClientMessage(playerid,COLOR_LIGHTRED,"Police");
            if(listitem==FriendsData[playerid][TotalFriends]+1) return  SendClientMessage(playerid,COLOR_LIGHTRED,"Medic");
            if(listitem==FriendsData[playerid][TotalFriends]+2) return  SendClientMessage(playerid,COLOR_LIGHTRED,"Mehanic");
            if(listitem==FriendsData[playerid][TotalFriends]+3) return  SendClientMessage(playerid,COLOR_LIGHTRED,"Pizza");
            if(PlayerFr[playerid][listitem] == -1) return SendClientMessage(playerid,COLOR_LIGHTRED,"Player Offline!");
       		format(string, sizeof(string),"Player %s[ID:%d], Ai dat click pe el",PlayerName(PlayerFr[playerid][listitem]),PlayerFr[playerid][listitem]);
			SendClientMessage(playerid,-1,string);
			format(string, sizeof(string),"Prietenul tau %s[%d] a dat click pe tine",PlayerName(playerid),playerid);
			SCM(PlayerFr[playerid][listitem],-1,string);
		}
	}

  	if(dialogid == 33)
    {
        if(!response )return 1;
        ReceiverID[playerid] = strval(inputtext);
        if(strval(inputtext) == playerid)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "  Numar ocupat!");
			Mobile[playerid] = 999;
			return 1;
		}
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    if(IsPlayerConnected(i))
			{
				if(i == strval(inputtext))
				{
					Mobile[playerid] = strval(inputtext); //caller connecting
					if(IsPlayerConnected(strval(inputtext)))
					{
					    if(strval(inputtext) != INVALID_PLAYER_ID)
					    {
					        if(PhoneOnline[strval(inputtext)] > 0)
					        {
					            SendClientMessage(playerid, COLOR_GREY, "   Acel jucator are telefonul inchis !");
					            return 1;
					        }
							if (Mobile[strval(inputtext)] == 999)
							{
								format(string, sizeof(string), "Telefonul tau suna.");
								SendClientMessage(strval(inputtext), COLOR_YELLOW, string);
    							PlayerPlaySound(strval(inputtext), 1138, 0.0, 0.0, 0.0);
								format(string, sizeof(string), "* Telefonul lui %s incepe sa sune.", PlayerName(strval(inputtext)));
								SendClientMessage(strval(inputtext),-1,"/pickup pentru a raspunde si /hangup pentru a inchide");
								ProxDetector(30.0, strval(inputtext), string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								CellTime[playerid] = 1;
								return 1;
							}
						}
					}
				}
			}
		}
	 	return 1;
    }
	if(dialogid == 32)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
                PlayAudioStreamForPlayer(playerid, "http://80.86.106.136/listen.pls");
                SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
			if(listitem == 1)
			{
                PlayAudioStreamForPlayer(playerid, "http://k007.kiwi6.com/hotlink/ydli4zscei/live.m3u");
                SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
			if(listitem == 2)
			{
                PlayAudioStreamForPlayer(playerid, "http://stream.profm.ro:8012/profm.mp3");
                SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
			if(listitem == 3)
			{
                PlayAudioStreamForPlayer(playerid, "http://www.radiozu.ro/live.m3u");
                SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
			if(listitem == 4)
			{
                PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls");
                SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
			if(listitem == 5)
			{
                PlayAudioStreamForPlayer(playerid, "http://k007.kiwi6.com/hotlink/cqr9x5604n/Asculta_Live_Radio_Amy_-_Radio_Manele_Mix.pls");
                SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
			if(listitem == 6)
			{
  				PlayAudioStreamForPlayer(playerid, "http://radioromanian.net/manele.pls");
  				SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
			if(listitem == 7)
			{
                PlayAudioStreamForPlayer(playerid, "http://radioromanian.net/popular.pls");
                SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
			if(listitem == 8)
			{
			    PlayAudioStreamForPlayer(playerid, "http://radioromanian.net/hiphop.pls");
			    SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
 			if(listitem == 9)
			{
			 	PlayAudioStreamForPlayer(playerid, "http://s6.myradiostream.com:5654");
				SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pCasti], 2, 0.06, 0.016865, 0.00000,	90, 0,	270, 1.000000, 1.000000, 1.000000 );
			}
			if(listitem == 10)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Daca Radioul nu se aude puteti descarca clientul de pe forum sectiunea -informatii");
			}
	    }
	    else
	    {
	        RemovePlayerAttachedObject(playerid, 6);
	        StopAudioStreamForPlayer(playerid);
	    }
	}
  	if(dialogid == 31)
	{
	    if(!response) return SendClientMessage(playerid,-1,"O zi buna");
		if(response)
		{
		    new b = GetPlayerVirtualWorld(playerid), Float:health,price;
			GetPlayerHealth(playerid,health);
  			if(listitem == 0)//
		    {
		        price = 130;
		        if(health>=100) return SendClientMessage(playerid,COLOR_RED,"Ai mancat destul");
		        if(GetPlayerCash(playerid) < price) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		    	PlayerInfo[playerid][pServieta] = 1;
				Update(playerid, pServietax);
				format(string,sizeof(string),"~r~-%d",price);
				GameTextForPlayer(playerid, string, 2000, 1);
				if (health < 75.0)	SetPlayerHealth(playerid, health+25);
				else				SetPlayerHealth(playerid, 100);
				format(string, sizeof(string), "%s mananca Pizza Casei", PlayerName(playerid));
				ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			    ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.0, 0, 0, 0, 0, 0);
				GivePlayerCash(playerid,- price);
				BizzInfo[b][bTill] += price;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
		    if(listitem == 1)//
		    {
		        price = 170;
		        if(health>=100) return SendClientMessage(playerid,COLOR_RED,"Ai mancat destul");
		        if(GetPlayerCash(playerid) < price) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		    	PlayerInfo[playerid][pServieta] = 1;
				Update(playerid, pServietax);
				format(string,sizeof(string),"~r~-%d",price);
				GameTextForPlayer(playerid, string, 2000, 1);
				if (health < 75.0)	SetPlayerHealth(playerid, health+25);
				else				SetPlayerHealth(playerid, 100);
				format(string, sizeof(string), "%s mananca Pizza Carnivora", PlayerName(playerid));
				ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			    ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.0, 0, 0, 0, 0, 0);
				GivePlayerCash(playerid,- price);
				BizzInfo[b][bTill] += price;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
		    if(listitem == 2)//
		    {
		        price = 170;
		        if(health>=100) return SendClientMessage(playerid,COLOR_RED,"Ai mancat destul");
		        if(GetPlayerCash(playerid) < price) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		    	PlayerInfo[playerid][pServieta] = 1;
				Update(playerid, pServietax);
				format(string,sizeof(string),"~r~-%d",price);
				GameTextForPlayer(playerid, string, 2000, 1);
				if (health < 75.0)	SetPlayerHealth(playerid, health+25);
				else				SetPlayerHealth(playerid, 100);
				format(string, sizeof(string), "%s mananca Pizza Taraneasca", PlayerName(playerid));
				ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			    ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.0, 0, 0, 0, 0, 0);
				GivePlayerCash(playerid,- price);
				BizzInfo[b][bTill] += price;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
		    if(listitem == 3)//
		    {
		        price = 130;
		        if(health>=100) return SendClientMessage(playerid,COLOR_RED,"Ai mancat destul");
		        if(GetPlayerCash(playerid) < price) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		    	PlayerInfo[playerid][pServieta] = 1;
				Update(playerid, pServietax);
				format(string,sizeof(string),"~r~-%d",price);
				GameTextForPlayer(playerid, string, 2000, 1);
				if (health < 75.0)	SetPlayerHealth(playerid, health+25);
				else				SetPlayerHealth(playerid, 100);
				format(string, sizeof(string), "%s mananca Pizza Margherita", PlayerName(playerid));
				ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			    ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.0, 0, 0, 0, 0, 0);
				GivePlayerCash(playerid,- price);
				BizzInfo[b][bTill] += price;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
		    if(listitem == 4)//
		    {
		        price = 140;
		        if(health>=100) return SendClientMessage(playerid,COLOR_RED,"Ai mancat destul");
		        if(GetPlayerCash(playerid) < price) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		    	PlayerInfo[playerid][pServieta] = 1;
				Update(playerid, pServietax);
				format(string,sizeof(string),"~r~-%d",price);
				GameTextForPlayer(playerid, string, 2000, 1);
				if (health < 75.0)	SetPlayerHealth(playerid, health+25);
				else				SetPlayerHealth(playerid, 100);
				format(string, sizeof(string), "%s mananca Pizza Funghi", PlayerName(playerid));
				ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			    ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.0, 0, 0, 0, 0, 0);
				GivePlayerCash(playerid,- price);
				BizzInfo[b][bTill] += price;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
		    if(listitem == 5)//
		    {
		        price = 145;
		        if(health>=100) return SendClientMessage(playerid,COLOR_RED,"Ai mancat destul");
		        if(GetPlayerCash(playerid) < price) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		    	PlayerInfo[playerid][pServieta] = 1;
				Update(playerid, pServietax);
				format(string,sizeof(string),"~r~-%d",price);
				GameTextForPlayer(playerid, string, 2000, 1);
				if (health < 75.0)	SetPlayerHealth(playerid, health+25);
				else				SetPlayerHealth(playerid, 100);
				format(string, sizeof(string), "%s mananca Pizza Prosciutto", PlayerName(playerid));
				ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			    ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.0, 0, 0, 0, 0, 0);
				GivePlayerCash(playerid,- price);
				BizzInfo[b][bTill] += price;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
		    if(listitem == 6)//
		    {
		        price = 165;
		        if(health>=100) return SendClientMessage(playerid,COLOR_RED,"Ai mancat destul");
		        if(GetPlayerCash(playerid) < price) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		    	PlayerInfo[playerid][pServieta] = 1;
				Update(playerid, pServietax);
				format(string,sizeof(string),"~r~-%d",price);
				GameTextForPlayer(playerid, string, 2000, 1);
				if (health < 75.0)	SetPlayerHealth(playerid, health+25);
				else				SetPlayerHealth(playerid, 100);
				format(string, sizeof(string), "%s mananca Pizza Diavolo", PlayerName(playerid));
				ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			    ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.0, 0, 0, 0, 0, 0);
				GivePlayerCash(playerid,- price);
				BizzInfo[b][bTill] += price;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
		    if(listitem == 7)//
		    {
		        price = 155;
		        if(health>=100) return SendClientMessage(playerid,COLOR_RED,"Ai mancat destul");
		        if(GetPlayerCash(playerid) < price) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		    	PlayerInfo[playerid][pServieta] = 1;
				Update(playerid, pServietax);
				format(string,sizeof(string),"~r~-%d",price);
				GameTextForPlayer(playerid, string, 2000, 1);
				if (health < 75.0)	SetPlayerHealth(playerid, health+25);
				else				SetPlayerHealth(playerid, 100);
				format(string, sizeof(string), "%s mananca Pizza Romana", PlayerName(playerid));
				ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			    ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.0, 0, 0, 0, 0, 0);
				GivePlayerCash(playerid,- price);
				BizzInfo[b][bTill] += price;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
		    if(listitem == 8)//
		    {
		        price = 160;
		        if(health>=100) return SendClientMessage(playerid,COLOR_RED,"Ai mancat destul");
		        if(GetPlayerCash(playerid) < price) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		    	PlayerInfo[playerid][pServieta] = 1;
				Update(playerid, pServietax);
				format(string,sizeof(string),"~r~-%d",price);
				GameTextForPlayer(playerid, string, 2000, 1);
				if (health < 75.0)	SetPlayerHealth(playerid, health+25);
				else				SetPlayerHealth(playerid, 100);
				format(string, sizeof(string), "%s mananca Pizza Quattro Stagioni", PlayerName(playerid));
				ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			    ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.0, 0, 0, 0, 0, 0);
				GivePlayerCash(playerid,- price);
				BizzInfo[b][bTill] += price;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
		    if(listitem == 9)//
		    {
		        price = 170;
		        if(health>=100) return SendClientMessage(playerid,COLOR_RED,"Ai mancat destul");
		        if(GetPlayerCash(playerid) < price) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		    	PlayerInfo[playerid][pServieta] = 1;
				Update(playerid, pServietax);
				format(string,sizeof(string),"~r~-%d",price);
				GameTextForPlayer(playerid, string, 2000, 1);
				if (health < 75.0)	SetPlayerHealth(playerid, health+25);
				else				SetPlayerHealth(playerid, 100);
				format(string, sizeof(string), "%s mananca Pizza Rustica", PlayerName(playerid));
				ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			    ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.0, 0, 0, 0, 0, 0);
				GivePlayerCash(playerid,- price);
				BizzInfo[b][bTill] += price;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
		    if(listitem == 10)//
		    {
		        price = 165;
		        if(health>=100) return SendClientMessage(playerid,COLOR_RED,"Ai mancat destul");
		        if(GetPlayerCash(playerid) < price) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		    	PlayerInfo[playerid][pServieta] = 1;
				Update(playerid, pServietax);
				format(string,sizeof(string),"~r~-%d",price);
				GameTextForPlayer(playerid, string, 2000, 1);
				if (health < 75.0)	SetPlayerHealth(playerid, health+25);
				else				SetPlayerHealth(playerid, 100);
				format(string, sizeof(string), "%s mananca Pizza Capricioasa", PlayerName(playerid));
				ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			    ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.0, 0, 0, 0, 0, 0);
				GivePlayerCash(playerid,- price);
				BizzInfo[b][bTill] += price;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
  	    	ApplyActorAnimation(BizActor[b], "INT_SHOP", "shop_cashier",4.0,0,1,1,1,0);
			ApplyAnimation(playerid,"INT_SHOP","shop_shelf",4.0,0,0,0,0,0);
    	}
    }

	if(dialogid == 18)
	{
	    if(!response) return SendClientMessage(playerid,-1,"O zi buna");
		if(response)
		{
		    new b = GetPlayerVirtualWorld(playerid);
  			if(listitem == 0)//Servieta t1000$
		    {
		        if(PlayerInfo[playerid][pServieta] == 1)  return SendClientMessage(playerid,COLOR_LIGHTRED,"Ai deja Servieta");
		        if(GetPlayerCash(playerid) < 1000) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		    	PlayerInfo[playerid][pServieta] = 1;
				Update(playerid, pServietax);
				SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat Servieta pentru 1000$, foloseste /briefcase");
				GameTextForPlayer(playerid, "~r~ -1000$", 5000, 1);
				GivePlayerCash(playerid,- 1000);
				BizzInfo[b][bTill] += 1000;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
			if(listitem == 1)//Carte de telefon 1000$
		    {
		        if(PlayerInfo[playerid][pAchievement6] == 1)  return SendClientMessage(playerid,COLOR_LIGHTRED,"Ai deja Carte de Telefon");
		        if(GetPlayerCash(playerid) < 1000) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		    	PlayerInfo[playerid][pAchievement6] = 1;
				Update(playerid, pAchievement6x);
				SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat Carte de Telefon pentru 1000$, foloseste /number");
				GameTextForPlayer(playerid, "~r~ -1000$", 5000, 1);
				GivePlayerCash(playerid,- 1000);
				BizzInfo[b][bTill] += 1000;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
			if(listitem == 2)//Zaruri 500$
		    {
		        if(PlayerInfo[playerid][pAchievement10] == 1)  return SendClientMessage(playerid,COLOR_LIGHTRED,"Ai deja zaruri");
		        if(GetPlayerCash(playerid) < 500) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		    	PlayerInfo[playerid][pAchievement10] = 1;
				Update(playerid, pAchievement10x);
				SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat Zaruri pentru 500$, foloseste /dice");
				GameTextForPlayer(playerid, "~r~ -500$", 5000, 1);
				GivePlayerCash(playerid,- 500);
				BizzInfo[b][bTill] += 500;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
			if(listitem == 3)//CD-Player 2000$
		    {
		        if(PlayerInfo[playerid][pCDPlayer] == 1)  return SendClientMessage(playerid,COLOR_LIGHTRED,"Ai deja CD-Player");
		    	PlayerInfo[playerid][pCDPlayer] = 1;
				Update(playerid, pCDPlayerx);
				SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat CD-Player pentru 2000$, foloseste /music");
				GameTextForPlayer(playerid, "~r~ -2000$", 5000, 1);
				GivePlayerCash(playerid,- 2000);
				BizzInfo[b][bTill] += 2000;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
			if(listitem == 4)//Cheie 5000$
		    {
		        if(PlayerInfo[playerid][pCheie] == 1)  return SendClientMessage(playerid,COLOR_LIGHTRED,"Ai deja Cheie");
		        if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		    	PlayerInfo[playerid][pCheie] = 1;
				Update(playerid, pCheiex);
				SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat Cheie pentru 5000$, foloseste /repaircar");
				GameTextForPlayer(playerid, "~r~ -5000$", 5000, 1);
				GivePlayerCash(playerid,- 5000);
				BizzInfo[b][bTill] += 5000;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
			if(listitem == 5)//Ochelari 4000$
		    {
		        if(PlayerInfo[playerid][pGlasses] == 1)  return SendClientMessage(playerid,COLOR_LIGHTRED,"Ai deja ochelari");
		        if(GetPlayerCash(playerid) < 4000) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		    	PlayerInfo[playerid][pGlasses] = 1;
				Update(playerid, pCheiex);
				SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat Ochelari pentru 4000$, foloseste /glasses");
				GameTextForPlayer(playerid, "~r~ -4000$", 5000, 1);
				GivePlayerCash(playerid,- 4000);
				BizzInfo[b][bTill] += 4000;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
			if(listitem == 6)//Camera 3000
		    {
		        if(GetPlayerCash(playerid) < 3000) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
				ServerWeapon(playerid,43,50);
				SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat un aparat foto si un film cu 50 de poze pentru 3000");
				GameTextForPlayer(playerid, "~r~ -3000$", 5000, 1);
				GivePlayerCash(playerid,- 3000);
				BizzInfo[b][bTill] += 3000;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
			if(listitem == 7)//Loz In plic1000
		    {
		        if(GetPlayerCash(playerid) < 1000) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
   				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new prize, symb1[32], symb2[32], symb3[32];
				new randcard1 = random(10);//minimum 1000  max 9999
				new randcard2 = random(10);//minimum 1000  max 9999
				new randcard3 = random(10);//minimum 1000  max 9999
				if(randcard1 >= 5)							{format(symb1, sizeof(symb1), "~b~]");	randcard1 = 1;}
				else if(randcard1 <= 4 && randcard1 >= 2)	{format(symb1, sizeof(symb1), "~g~]");	randcard1 = 2;}
				else if(randcard1 < 2)						{format(symb1, sizeof(symb1), "~y~]");	randcard1 = 3;}

				if(randcard2 >= 5)							{format(symb2, sizeof(symb2), "~b~]");	randcard2 = 1;}
				else if(randcard2 <= 4 && randcard2 >= 2)   {format(symb2, sizeof(symb2), "~g~]");	randcard2 = 2;}
				else if(randcard2 < 2)						{format(symb2, sizeof(symb2), "~y~]");	randcard2 = 3;}

				if(randcard3 >= 5)							{format(symb3, sizeof(symb3), "~b~]");	randcard3 = 1;}
				else if(randcard3 <= 4 && randcard3 >= 2)	{format(symb3, sizeof(symb3), "~g~]");	randcard3 = 2;}
				else if(randcard3 < 2)						{format(symb3, sizeof(symb3), "~y~]");	randcard3 = 3;}

				if(randcard1 == randcard2 && randcard1 == randcard3)
				{
					if(randcard1 > 5)							prize = 2500;
      				if(randcard1 <= 4 && randcard1 >= 2)		prize = 1500;
    				if(randcard1 < 2)							prize = 500;
    				GivePlayerCash(playerid,prize);
					BizzInfo[b][bTill] += prize;
					bUpdate(b,bTillx);
					BizzInfo[b][bProducts] --;
					bUpdate(b,bProductsx);
					format(string,sizeof(string),"Ai castigat %d",prize);
					SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
					format(string, sizeof(string), "%s %s %s",symb1,symb2,symb3);
				}
				else
    			format(string, sizeof(string), "%s %s %s ~n~~n~~w~~r~$0",symb1,symb2,symb3);
    			GameTextForPlayer(playerid, string, 3000, 3);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
			if(listitem == 8)//Hamburger 70$
   		    {
		        if(GetPlayerCash(playerid) < 70) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
                if(Hamburgers[playerid] >= 4) return SendClientMessage(playerid, COLOR_GREY, "{ee5555}24/7: {a9c4e4}Ai prea multi hamburgeri la tine! /EatHamburger pentru a manca!");
				GivePlayerCash(playerid, -70);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD4, "Ai cumparat un Hamburger, /EatHamburger pentru a manca.");
				format(string, sizeof(string), "~r~-$%d", 70);
				GameTextForPlayer(playerid, string, 5000, 1);
                Hamburgers[playerid] ++;
				BizzInfo[b][bTill] += 70;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
		    }
			if(listitem == 9)//Moneda 500$
			{
		        if(PlayerInfo[playerid][pAchievement12] == 1)  return SendClientMessage(playerid,COLOR_LIGHTRED,"Ai deja Moneda");
		        if(GetPlayerCash(playerid) < 500) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
				PlayerInfo[playerid][pAchievement12] = 1;
				Update(playerid, pAchievement12x);
				SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat o Moneda pentru 500$, foloseste /coin");
				GameTextForPlayer(playerid, "~r~ -500$", 5000, 1);
				GivePlayerCash(playerid,- 500);
				BizzInfo[b][bTill] += 500;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
   		    }
			if(listitem == 10)//Canistr 7000$
		    {
		        if(GetPlayerCash(playerid) < 7000) return SendClientMessage(playerid,-1,"Nu ai suficienti bani");
		        if(PlayerInfo[playerid][pCanistra] == 1)  return SendClientMessage(playerid,COLOR_LIGHTRED,"Ai deja Canistra");
				PlayerInfo[playerid][pCanistra] = 1;
				Update(playerid, pCanistrax);
				SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat canistra pentru 7000$.");
				SendClientMessage(playerid, COLOR_WHITE, "Foloseste /checkcan, /fillcan si /fillcar!");
				GameTextForPlayer(playerid, "~r~ -7000$", 5000, 1);
				GivePlayerCash(playerid,- 7000);
				BizzInfo[b][bTill] += 7000;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
			if(listitem == 11)//Ceas 3000$
		    {
		        if(GetPlayerCash(playerid) < 3000) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new rand = random(4)+1,fftext[20];
			    if(rand == 1) fftext = "Rolex";
			    if(rand == 2) fftext = "Fossil";
			    if(rand == 3) fftext = "TAG";
			    if(rand == 4) fftext = "Omega";
			    if(rand == 5) fftext = "Cartier";
				format(string,sizeof(string),"Ai cumparat un Ceas %s pentru 3000$",fftext);
				SendClientMessage(playerid,-1,string);
				PlayerInfo[playerid][pCeas] = rand;
				Update(playerid, pCeasx);
				GameTextForPlayer(playerid, "~r~ -3000$", 5000, 1);
				GivePlayerCash(playerid,- 3000);
				BizzInfo[b][bTill] += 3000;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }//
			if(listitem == 12)//Spray Can 1000$
		    {
		        if(GetPlayerCash(playerid) < 1000) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
				ServerWeapon(playerid,41,1000);
				SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat un Spray pentru 1000$.");
				GameTextForPlayer(playerid, "~r~ -1000$", 5000, 1);
				GivePlayerCash(playerid,- 1000);
				BizzInfo[b][bTill] += 1000;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
			if(listitem == 13)//Cigarretes1400$
		    {
		        if(GetPlayerCash(playerid) < 1400) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		        if(Cigarretes[playerid] >= 48)  return SendClientMessage(playerid,COLOR_LIGHTRED,"Ai deja 4 pachete");
				Cigarretes[playerid] += 12;
				SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat 12 tigari pentru 1400$.");
				GameTextForPlayer(playerid, "~r~ -1400$", 5000, 1);
				GivePlayerCash(playerid,- 1400);
				BizzInfo[b][bTill] += 1400;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
			if(listitem == 14)//ehicle GPS AddOn6000
		    {
		        if(GetPlayerCash(playerid) < 6000) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		        if(PlayerInfo[playerid][pGPS] == 1)  return SendClientMessage(playerid,COLOR_LIGHTRED,"Ai deja un GPS");
				PlayerInfo[playerid][pGPS] = 1;
				Update(playerid, pGPSx);
				SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat un GPS pentru 6000$. /gps si /gpfind in masina");
				GameTextForPlayer(playerid, "~r~ -6000$", 5000, 1);
				GivePlayerCash(playerid,- 6000);
				BizzInfo[b][bTill] += 6000;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }
		    if(listitem == 15)//Condom 500$
		    {
		        if(GetPlayerCash(playerid) < 500) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		        if(Condom[playerid] >= 20)  return SendClientMessage(playerid,COLOR_LIGHTRED,"Ai deja 20 ce faci cu atatea?");
				Condom[playerid] += 5;
				SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat 5 prezervative pentru 500$.");
				GameTextForPlayer(playerid, "~r~ -500$", 5000, 1);
				GivePlayerCash(playerid,- 500);
				BizzInfo[b][bTill] += 500;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    }// funie 2000 bandana
		    if(listitem == 16)//funie 2000$
		    {
		        if(GetPlayerCash(playerid) < 2000) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		        if(PlayerInfo[playerid][pFunie] >= 3)  return SendClientMessage(playerid,COLOR_LIGHTRED,"Ai deja Funie");
				PlayerInfo[playerid][pFunie] ++;
				Update(playerid,pFuniex);
				SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat Funie pentru 2000$, foloseste /tie in masina pe un player.");
				GameTextForPlayer(playerid, "~r~ -2000$", 5000, 1);
				GivePlayerCash(playerid,- 2000);
				BizzInfo[b][bTill] += 2000;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
		    if(listitem == 17)//funie 2000$
		    {
		        if(GetPlayerCash(playerid) < 2000) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		        if(PlayerInfo[playerid][pScarf] >= 3)  return SendClientMessage(playerid,COLOR_LIGHTRED,"Ai deja Bandana");
				PlayerInfo[playerid][pScarf] ++;
				Update(playerid,pScarfx);
				SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat Bandana pentru 2000$, foloseste /fold in masina pe un player.");
				GameTextForPlayer(playerid, "~r~ -2000$", 5000, 1);
				GivePlayerCash(playerid,- 2000);
				BizzInfo[b][bTill] += 2000;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
		    if(listitem == 18)//undita 6000$
		    {
		        if(GetPlayerCash(playerid) < 6000) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		        if(PlayerInfo[playerid][pAchievement9] == 1)  return SendClientMessage(playerid,COLOR_LIGHTRED,"Ai deja undita, /fish");
				PlayerInfo[playerid][pAchievement9] = 1;
				Update(playerid,pAchievement9x);
				SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat undita pentru 6000$./fish langa apa");
				GameTextForPlayer(playerid, "~r~ -6000$", 5000, 1);
				GivePlayerCash(playerid,- 6000);
				BizzInfo[b][bTill] += 6000;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
		  /*  if(listitem == 16)//Laser 6000$
		    {
		        if(GetPlayerCash(playerid) < 6000) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
		        if(PlayerInfo[playerid][pLaser] == 1)  return SendClientMessage(playerid,COLOR_LIGHTRED,"Ai deja Laser");
				PlayerInfo[playerid][pLaser] = 1;
				Update(playerid,pLaserx);
				SendClientMessage(playerid, COLOR_WHITE, "Ai cumparat Laser pentru 6000$.");
				GameTextForPlayer(playerid, "~r~ -6000$", 5000, 1);
				GivePlayerCash(playerid,- 6000);
				BizzInfo[b][bTill] += 6000;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}*/
  	    	ApplyActorAnimation(BizActor[b], "INT_SHOP", "shop_cashier",4.0,0,1,1,1,0);
			ApplyAnimation(playerid,"INT_SHOP","shop_shelf",4.0,0,0,0,0,0);
		}
	}
	if(dialogid == 21)
	{
	    if(!response) return SendClientMessage(playerid,-1,"O zi buna");
		if(response)
		{
		    new b = GetPlayerVirtualWorld(playerid);
  			if(listitem == 0)//McChicken 35
			{
			    if(GetPlayerCash(playerid) < 36) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 90.0)
		        SetPlayerHealth(playerid, health+10);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -35$", 5000, 1);
				GivePlayerCash(playerid,- 35);
				BizzInfo[b][bTill] += 35;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Burger Shoot] Ai cumparat McChicken pentru 35$");
			}
  			if(listitem == 1)//McToast Sandwich 35
			{
			    if(GetPlayerCash(playerid) < 36) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 85.0)
		        SetPlayerHealth(playerid, health+15);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -35$", 5000, 1);
				GivePlayerCash(playerid,- 35);
				BizzInfo[b][bTill] += 35;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Burger Shoot] Ai cumparat McToast pentru 35$");
			}
  			if(listitem == 2)//Chicken Grill 135
			{
			    if(GetPlayerCash(playerid) < 140) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 75.0)
		        SetPlayerHealth(playerid, health+25);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -135$", 5000, 1);
				GivePlayerCash(playerid,- 135);
				BizzInfo[b][bTill] += 135;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Burger Shoot] Ai cumparat Chicken Grill pentru 135$");
			}
  			if(listitem == 3)//CBO 80
			{
			    if(GetPlayerCash(playerid) < 81) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 85.0)
		        SetPlayerHealth(playerid, health+15);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -80$", 5000, 1);
				GivePlayerCash(playerid,- 80);
				BizzInfo[b][bTill] += 80;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Burger Shoot] Ai cumparat CBO pentru 80$");
			}
  			if(listitem == 4)//Chicken McNuggets 75
			{
			    if(GetPlayerCash(playerid) < 76) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 85.0)
		        SetPlayerHealth(playerid, health+15);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -75$", 5000, 1);
				GivePlayerCash(playerid,- 75);
				BizzInfo[b][bTill] += 75;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Burger Shoot] Ai cumparat Chicken McNuggets pentru 75$");
			}
  			if(listitem == 5)//Quarter Pounder 85
			{
			    if(GetPlayerCash(playerid) < 87) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 75.0)
		        SetPlayerHealth(playerid, health+25);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -85$", 5000, 1);
				GivePlayerCash(playerid,- 85);
				BizzInfo[b][bTill] +=85;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Burger Shoot] Ai cumparat Quarter Pounder pentru 85$");
			}
  			if(listitem == 6)//McVeggie 95
			{
			    if(GetPlayerCash(playerid) < 96) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 85.0)
		        SetPlayerHealth(playerid, health+15);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -95$", 5000, 1);
				GivePlayerCash(playerid,- 95);
				BizzInfo[b][bTill] +=95;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Burger Shoot] Ai cumparat McVeggie pentru 95$");
			}
  			if(listitem == 7)//McBites 60
			{
			    if(GetPlayerCash(playerid) < 61) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 85.0)
		        SetPlayerHealth(playerid, health+15);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -60$", 5000, 1);
				GivePlayerCash(playerid,- 60);
				BizzInfo[b][bTill] +=60;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Burger Shoot] Ai cumparat McBites pentru 60$");
			}
  			if(listitem == 8)//Double Chesseburger 40
			{
			    if(GetPlayerCash(playerid) < 41) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 85.0)
		        SetPlayerHealth(playerid, health+15);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -40$", 5000, 1);
				GivePlayerCash(playerid,- 40);
				BizzInfo[b][bTill] +=40;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Burger Shoot] Ai cumparat Double Chesseburger pentru 40$");
   			}
  	    	ApplyActorAnimation(BizActor[b], "INT_SHOP", "shop_cashier",4.0,0,1,1,1,0);
			ApplyAnimation(playerid,"INT_SHOP","shop_shelf",4.0,0,0,0,0,0);
		}
	}
	if(dialogid == 22)
	{
	    if(!response) return SendClientMessage(playerid,-1,"O zi buna");
	    new b = GetPlayerVirtualWorld(playerid);
  		if(listitem == 0)// Vibrator Mov 10
		{
		    if(GetPlayerCash(playerid) < 100) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			GivePlayerCash(playerid,-100);
			BizzInfo[b][bTill] += 100;
			bUpdate(b,bTillx);
			BizzInfo[b][bProducts] --;
			bUpdate(b,bProductsx);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "{ee5555}Sex Shop: {a9c4e4}Ai cumparat un vibrator mov!");
			SendClientMessage(playerid,-1,"Foloseste /usedildo!");
			SendClientMessage(playerid, COLOR_GRAD4, string);
		    format(string, sizeof(string), "~r~-$%d", 100);
			GameTextForPlayer(playerid, string, 5000, 1);
			ServerWeapon(playerid, 10, 1);
 		}
  		if(listitem == 1)// Vibrator alb 11  Vibrator Mov 10
		{
		    if(GetPlayerCash(playerid) < 76) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			BizzInfo[b][bTill] += 75;
			bUpdate(b,bTillx);
			BizzInfo[b][bProducts] --;
			bUpdate(b,bProductsx);
			format(string, sizeof(string), "~r~-$%d", 75);
			GameTextForPlayer(playerid, string, 5000, 1);
			GivePlayerCash(playerid,-75);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "{ee5555}Sex Shop: {a9c4e4}Ai cumparat un vibrator alb!");
			SendClientMessage(playerid,-1,"Foloseste /usedildo!");
			SendClientMessage(playerid, COLOR_GRAD4, string);
			ServerWeapon(playerid, 11, 1);
  		}
  		if(listitem == 2)// Vibrator Mare 12 Vibrator alb 11  Vibrator Mov 10
		{
		    if(GetPlayerCash(playerid) < 201) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			BizzInfo[b][bTill] += 200;
			bUpdate(b,bTillx);
			BizzInfo[b][bProducts] --;
			bUpdate(b,bProductsx);
		    format(string, sizeof(string), "~r~-$%d", 200);
			GameTextForPlayer(playerid, string, 5000, 1);
			GivePlayerCash(playerid,-200);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "{ee5555}Sex Shop: {a9c4e4}Ai cumparat un vibrator mare!");
			SendClientMessage(playerid,-1,"Foloseste /usedildo!");
			SendClientMessage(playerid, COLOR_GRAD4, string);
			ServerWeapon(playerid, 12, 1);
		}
  		if(listitem == 3)// prezervative 500
		{
		    if(GetPlayerCash(playerid) < 501) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			BizzInfo[b][bTill] += 500;
			bUpdate(b,bTillx);
			BizzInfo[b][bProducts] --;
			bUpdate(b,bProductsx);
		    format(string, sizeof(string), "~r~-$%d", 500);
			GameTextForPlayer(playerid, string, 5000, 1);
			GivePlayerCash(playerid,-500);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "{ee5555}Sex Shop: {a9c4e4}Ai cumparat un 5 prezervative!");
			SendClientMessage(playerid, COLOR_GRAD4, string);
			Condom[playerid] += 5;
		}
  		if(listitem == 4)// Vibrator argint 13 Vibrator Mare 12 Vibrator alb 11  Vibrator Mov 10
		{
		    if(GetPlayerCash(playerid) < 126) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			BizzInfo[b][bTill] += 125;
			bUpdate(b,bTillx);
			BizzInfo[b][bProducts] --;
			bUpdate(b,bProductsx);
		    format(string, sizeof(string), "~r~-$%d", 125);
			GameTextForPlayer(playerid, string, 5000, 1);
			GivePlayerCash(playerid,-125);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "{ee5555}Sex Shop: {a9c4e4}Ai cumparat un vibrator argintiu!");
			SendClientMessage(playerid,-1,"Foloseste /usedildo!");
			SendClientMessage(playerid, COLOR_GRAD4, string);
			ServerWeapon(playerid, 13, 1);
 		}
    	ApplyActorAnimation(BizActor[b], "INT_SHOP", "shop_cashier",4.0,0,1,1,1,0);
		ApplyAnimation(playerid,"INT_SHOP","shop_shelf",4.0,0,0,0,0,0);
	}
	if(dialogid == 20)
	{
	    if(!response) return SendClientMessage(playerid,-1,"O zi buna");
		if(response)
		{
		    new b = GetPlayerVirtualWorld(playerid);
  			if(listitem == 0)//Booster
			{
		   		if(GetPlayerCash(playerid) < 36) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 85.0)
		        SetPlayerHealth(playerid, health+15);
		        else
		        SetPlayerHealth(playerid, 100);
				GameTextForPlayer(playerid, "~r~ -35$", 5000, 1);
				GivePlayerCash(playerid,- 35);
				BizzInfo[b][bTill] += 35;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Cluckin Bell] Ai cumparat Booster pentru 35$");
			}
		    if(listitem == 1)//Crispy Sandwich
			{
		   		if(GetPlayerCash(playerid) < 36) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 85.0)
		        SetPlayerHealth(playerid, health+15);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -35$", 5000, 1);
				GivePlayerCash(playerid,- 35);
				BizzInfo[b][bTill] += 35;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Cluckin Bell] Ai cumparat Crispy Sandwich pentru 35$");
			}
		    if(listitem == 2)//Fillet
			{
		   		if(GetPlayerCash(playerid) < 96) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 85.0)
		        SetPlayerHealth(playerid, health+16);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -95$", 5000, 1);
				GivePlayerCash(playerid,- 95);
				BizzInfo[b][bTill] += 95;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Cluckin Bell] Ai cumparat Fillet pentru 95$");
			}
		    if(listitem == 3)//Cryspy Strips
			{
		   		if(GetPlayerCash(playerid) < 131) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 75.0)
		        SetPlayerHealth(playerid, health+25);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -130$", 5000, 1);
				GivePlayerCash(playerid,- 130);
				BizzInfo[b][bTill] += 130;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Cluckin Bell] Ai cumparat Crispy Strips pentru 130$");
  	    	}
		    if(listitem == 4)//Hot Box
			{
		   		if(GetPlayerCash(playerid) < 101) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 85.0)
		        SetPlayerHealth(playerid, health+15);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -100$", 5000, 1);
				GivePlayerCash(playerid,- 100);
				BizzInfo[b][bTill] += 100;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Cluckin Bell] Ai cumparat Hot Box pentru 100$");
			}
		    if(listitem == 5)//Snack Bo
			{
		   		if(GetPlayerCash(playerid) < 71) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 85.0)
		        SetPlayerHealth(playerid, health+15);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -70$", 5000, 1);
				GivePlayerCash(playerid,- 70);
				BizzInfo[b][bTill] += 70;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Cluckin Bell] Ai cumparat Snack Box pentru 70$");
			}
		    if(listitem == 6)//}Smart Me
			{
		   		if(GetPlayerCash(playerid) < 121) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 75.0)
		        SetPlayerHealth(playerid, health+25);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -120$", 5000, 1);
				GivePlayerCash(playerid,- 120);
				BizzInfo[b][bTill] += 120;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Cluckin Bell] Ai cumparat Smart Menu pentru 120$");
			}
		    if(listitem == 7)//Meniu Hot Wing
			{
		   		if(GetPlayerCash(playerid) < 181) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 85.0)
		        SetPlayerHealth(playerid, health+15);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -180$", 5000, 1);
				GivePlayerCash(playerid,- 180);
				BizzInfo[b][bTill] += 180;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Cluckin Bell] Ai cumparat Booster pentru 180$");
			}
		    if(listitem == 8)//Muffins
			{
		   		if(GetPlayerCash(playerid) < 61) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 90.0)
		        SetPlayerHealth(playerid, health+10);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -60$", 5000, 1);
				GivePlayerCash(playerid,- 60);
				BizzInfo[b][bTill] += 60;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Cluckin Bell] Ai cumparat Muffins pentru 60$");
			}
		    if(listitem == 9)//Inghetata Sundae
			{
		   		if(GetPlayerCash(playerid) < 51) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 90.0)
		        SetPlayerHealth(playerid, health+10);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -50$", 5000, 1);
				GivePlayerCash(playerid,- 50);
				BizzInfo[b][bTill] += 50;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Cluckin Bell] Ai cumparat Inghetata Sundae pentru 50$");
			}
		    if(listitem == 10)//Tarta cu Ciocaloat
			{
		   		if(GetPlayerCash(playerid) < 61) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");
			    new Float:health;
			    GetPlayerHealth(playerid,health);
			    if (health < 90.0)
		        SetPlayerHealth(playerid, health+10);
		        else
		        SetPlayerHealth(playerid, 100);

				GameTextForPlayer(playerid, "~r~ -60$", 5000, 1);
				GivePlayerCash(playerid,- 60);
				BizzInfo[b][bTill] += 60;
				bUpdate(b,bTillx);
				BizzInfo[b][bProducts] --;
				bUpdate(b,bProductsx);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[Cluckin Bell] Ai cumparat Tarta cu Ciocaloata pentru 60$");
			}
			ApplyActorAnimation(BizActor[b], "INT_SHOP", "shop_cashier",4.0,0,1,1,1,0);
			ApplyAnimation(playerid,"INT_SHOP","shop_shelf",4.0,0,0,0,0,0);
		}
	}

    if(dialogid == 44)
	{
		if(!response) ShowPlayerDialog(playerid, 19,DIALOG_STYLE_LIST,"G.P.S Positions",
   		"Joburi\n\
	   	DMW\n\
		PayPoint\n\
		Primarie\n\
	   	L.S.P.D.\n\
   		Pentagon\n\
   		National Guard\n\
		DealerShip\n\
		GPL Place\n\
		Parlament\n\
		Presedentie\n\
		Chilliad Station\n\
		Pirate Boat","Track","Off");


        if(listitem == 0)
		{
	      //  TelePosGps[playerid][tX] =  1421.8629;//paypoint
			//TelePosGps[playerid][tY] = -1701.7477;
 	        ///SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
	        //CP[playerid] = 22;
	        SCM(playerid,COLOR_LIGHTBLUE,"Acest job nu are locatie, foloseste /find");
		}
        if(listitem == 1)
		{
	        //TelePosGps[playerid][tX] =  1421.8629;//paypoint
			//TelePosGps[playerid][tY] = -1701.7477;
 	        //SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
	        //CP[playerid] = 22;
	        SCM(playerid,COLOR_LIGHTBLUE,"Acest job nu are locatie, foloseste /free");
		}
        if(listitem == 2)
		{
	        //TelePosGps[playerid][tX] =  1421.8629;//paypoint
			//TelePosGps[playerid][tY] = -1701.7477;
 	        //SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
	        //CP[playerid] = 22;
	        SCM(playerid,COLOR_LIGHTBLUE,"Acest job nu are locatie, foloseste /guard");
		}
        if(listitem == 3)
		{
	        TelePosGps[playerid][tX] =  1188.1749;//paypoint
			TelePosGps[playerid][tY] = -1330.3890;
 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
	        CP[playerid] = 22;
 	  		GameTextForPlayer(playerid, "~b~CheckPoint Marked~n~Paramedic!", 3000, 1);
		}
        if(listitem == 4)
		{
	        TelePosGps[playerid][tX] =  1641.1062;//paypoint
			TelePosGps[playerid][tY] =  -1830.2786;
 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
	        CP[playerid] = 22;
 	  		GameTextForPlayer(playerid, "~b~CheckPoint Marked~n~Sweeper!", 3000, 1);
		}
        if(listitem == 5)
		{
	        TelePosGps[playerid][tX] =  2228.86133;//paypoint
			TelePosGps[playerid][tY] = -1722.43799;
 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
	        CP[playerid] = 22;
 	  		GameTextForPlayer(playerid, "~b~CheckPoint Marked~n~Boxeur!", 3000, 1);
		}
        if(listitem == 6)
		{
	        TelePosGps[playerid][tX] =  1788.4453;//paypoint
			TelePosGps[playerid][tY] = -2045.5338;
 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
	        CP[playerid] = 22;
 	  		GameTextForPlayer(playerid, "~b~CheckPoint Marked~n~Mechanic!", 3000, 1);
		}
        if(listitem == 7)
		{
	        TelePosGps[playerid][tX] =  2426.6621;//paypoint
			TelePosGps[playerid][tY] =-2089.0281;
 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
	        CP[playerid] = 22;
 	  		GameTextForPlayer(playerid, "~b~CheckPoint Marked~n~Transportator!", 3000, 1);
		}
		if(listitem == 8)
		{
	        TelePosGps[playerid][tX] = 1461.0365;//paypoint
			TelePosGps[playerid][tY] = -2428.4045;
 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
	        CP[playerid] = 22;
 	  		GameTextForPlayer(playerid, "~b~CheckPoint Marked~n~PaperBoy!", 3000, 1);
		}
		if(listitem == 9)
		{
	        TelePosGps[playerid][tX] = 1461.0365;//paypoint
			TelePosGps[playerid][tY] = -2428.4045;
 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
	        CP[playerid] = 22;
 	  		GameTextForPlayer(playerid, "~b~CheckPoint Marked~n~PizzaBoy!", 3000, 1);
		}
		if(listitem == 10)
		{
	        TelePosGps[playerid][tX] = -375.1307;//paypoint
			TelePosGps[playerid][tY] =  -1451.6597;
 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
	        CP[playerid] = 22;
 	  		GameTextForPlayer(playerid, "~b~CheckPoint Marked~n~Fermier!", 3000, 1);
		}
		if(listitem == 11)
		{
	        TelePosGps[playerid][tX] = 1889.3528;//paypoint
			TelePosGps[playerid][tY] = -1159.2781;
 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
	        CP[playerid] = 22;
 	  		GameTextForPlayer(playerid, "~b~CheckPoint Marked~n~Taietor de iarba!", 3000, 1);
		}
		if(listitem == 12)
		{
	        TelePosGps[playerid][tX] = -2043.7219;//paypoint
			TelePosGps[playerid][tY] =  55.6133;
 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
	        CP[playerid] = 22;
 	  		GameTextForPlayer(playerid, "~b~CheckPoint Marked~n~Pompier!", 3000, 1);
		}
		if(listitem == 13)
		{
	        TelePosGps[playerid][tX] = 2436.3826;//paypoint
			TelePosGps[playerid][tY] =  -2708.4593;
 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
	        CP[playerid] = 22;
 	  		GameTextForPlayer(playerid, "~b~CheckPoint Marked~n~Barcagiu!", 3000, 1);
		}
	}

	if(dialogid == 19)
	{
		if(response)
		{
		    if(listitem == 0)
		    {
		        new strong[500];
		        format(strong, sizeof(strong),
						           "{FFFFFF}Detectiv\n\
									{FFFFFF}Avocat\n\
									{FFFFFF}Bodyguard\n\
									{FFFFFF}Paramedic\n\
									{FFFFFF}Sweeper\n\
									{FFFFFF}Boxeur\n\
									{FFFFFF}Mecanic\n\
									{FFFFFF}Transportator\n\
									{FFFFFF}Paper Boy\n\
									{FFFFFF}Pizza Boy\n\
									{FFFFFF}Fermier\n\
									{FFFFFF}Taietor de Iarba\n\
									{FFFFFF}Pompier\n\
									{FFFFFF}Barcagiu");
				ShowPlayerDialog(playerid,44,DIALOG_STYLE_LIST,"Jobs",strong,"Check", "Back");
		    }
  			if(listitem == 1)
		    {
		    	new Float:CarDMW  =	GetPlayerDistanceFromPoint(playerid,1219.0480, -1812.2429, 16.6041);//
			    new Float:FlyDMW  = GetPlayerDistanceFromPoint(playerid, 1957.1649,-2183.6143,13.5469);//
			    new Float:BoatDMW = GetPlayerDistanceFromPoint(playerid, 436.4564,-1900.2853,2.8703);//
			    new Float:FishDMW = GetPlayerDistanceFromPoint(playerid, 523.6387,-1812.9382,6.5713);//
			    new Float:GunDMW = GetPlayerDistanceFromPoint(playerid, 1567.7362,-1674.7607,16.1974);//
			    new strong[500];
			    new cartext[30];
			    if(PlayerInfo[playerid][pCarLic] == 1)
			    cartext = "{00D50B}DA{FFFFFF}";
			    else
			    cartext = "{E4130E}NU{FFFFFF}";
			    new flytext[30];
			    if(PlayerInfo[playerid][pFlyLic] == 1)
			    flytext = "{00D50B}DA{FFFFFF}";
			    else
			    flytext = "{E4130E}NU{FFFFFF}";
				new boattext[30];
				if(PlayerInfo[playerid][pBoatLic] == 1)
			    boattext = "{00D50B}DA{FFFFFF}";
			    else
			    boattext = "{E4130E}NU{FFFFFF}";
	   			new fishtext[30];
			    if(PlayerInfo[playerid][pFishLic] == 1)
			    fishtext = "{00D50B}DA{FFFFFF}";
			    else
			    fishtext = "{E4130E}NU{FFFFFF}";
			    new guntext[30];
			    if(PlayerInfo[playerid][pGunLic] == 1)
			    guntext = "{00D50B}DA{FFFFFF}";
			    else
			    guntext = "{E4130E}NU{FFFFFF}";
				format(strong, sizeof(strong),"{FFFFFF}Driving\t License %s\t Distance %.2f m\n\
									{FFFFFF}Flying\t License %s\t Distance %.2f m\n\
									{FFFFFF}Boat\t License %s\t Distance %.2f m\n\
									{FFFFFF}Fish\t License %s\t Distance %.2f m\n\
									{FFFFFF}Gun\t License %s\t Distance %.2f m",cartext,CarDMW,flytext,FlyDMW,boattext,BoatDMW,fishtext,FishDMW,guntext,GunDMW);
				ShowPlayerDialog(playerid,6961,DIALOG_STYLE_LIST,"Licenses",strong,"Take", "Ok");
  			}
  			if(listitem == 2)
		    {
		    	Gps[playerid] = 1;
		        TelePosGps[playerid][tX] =  1421.8629;//paypoint
				TelePosGps[playerid][tY] = -1701.7477;
		        TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[GPS] Locatie: PayPoint- Los Santos");
	 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
		        CP[playerid] = 22;
  			}
			if(listitem == 3)
		    {
		    	Gps[playerid] = 1;
		        TelePosGps[playerid][tX] =  1480.0386;//primarie
				TelePosGps[playerid][tY] = 	-1741.897;
		        TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[GPS] Locatie: Primarie- Los Santos");
	 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
		        CP[playerid] = 22;
  			}
  			if(listitem == 4)
		    {
		    	Gps[playerid] = 1;
		        TelePosGps[playerid][tX] =  1537.9163;//lspd
				TelePosGps[playerid][tY] =  -1676.577;
		        TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[GPS] Locatie: L.S.P.D.- Los Santos");
	 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
		        CP[playerid] = 22;
  			}
  			if(listitem == 5)
		    {
		    	Gps[playerid] = 1;
		        TelePosGps[playerid][tX] =  2892.2083;//pentagon
				TelePosGps[playerid][tY] = 	 -1075.9718;
		        TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[GPS] Locatie: PentaGon- Los Santos");
	 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
		        CP[playerid] = 22;
  			}
  			if(listitem == 6)
		    {
		    	Gps[playerid] = 1;
		        TelePosGps[playerid][tX] =  -29.9131;//NG
				TelePosGps[playerid][tY] = 	 2066.0986;
		        TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[GPS] Locatie: National Guard- Las Venturas");
	 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
		        CP[playerid] = 22;
  			}
  			if(listitem == 7)
		    {
		    	Gps[playerid] = 1;
		        TelePosGps[playerid][tX] =  -2047.6991;//dealer
				TelePosGps[playerid][tY] = 	 -92.5539;
		        TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[GPS] Locatie: DealerShip- San Fierro");
	 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
		        CP[playerid] = 22;
  			}
  			if(listitem == 8)
		    {
		    	Gps[playerid] = 1;
		        TelePosGps[playerid][tX] =  2268.8003;//gpl
				TelePosGps[playerid][tY] = 	-90.4076;
		        TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[GPS] Locatie: GPL Place- LS*LV");
	 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
		        CP[playerid] = 22;
  			}
  			if(listitem == 9)
		    {
		    	Gps[playerid] = 1;
		        TelePosGps[playerid][tX] =  -2752.9036;//Parlament
				TelePosGps[playerid][tY] = 	375.5081;
		        TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[GPS] Locatie: Parlament- San Fierro");
	 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
		        CP[playerid] = 22;
  			}
  			if(listitem == 10)
		    {
		    	Gps[playerid] = 1;
		        TelePosGps[playerid][tX] =  -766.1558;//presedentie
				TelePosGps[playerid][tY] = 	724.0113;
		        TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[GPS] Locatie: Presedentie- SF*LV");
	 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
		        CP[playerid] = 22;
  			}
  			if(listitem == 11)
		    {
		    	Gps[playerid] = 1;
		        TelePosGps[playerid][tX] =  -2299.6238;//mc
				TelePosGps[playerid][tY] = 	-1674.8364;
		        TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[GPS] Locatie: Chilliad Mount- San Fierro");
	 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
		        CP[playerid] = 22;
  			}
  			if(listitem == 12)
		    {
		    	Gps[playerid] = 1;
		        TelePosGps[playerid][tX] =  -788.2087;//pirate
				TelePosGps[playerid][tY] = 	681.8749;
		        TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[GPS] Locatie: Fish Place- Boat");
	 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
		        CP[playerid] = 22;
  			}
   			if(listitem == 13)
		    {
		    	Gps[playerid] = 1;
		        TelePosGps[playerid][tX] =  1099.1587;///Didier sachs
				TelePosGps[playerid][tY] = 	-1605.2975;
		        TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[GPS] Locatie: Didier sachs");
	 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
		        CP[playerid] = 22;
  			}
   			if(listitem == 14)
		    {
		    	Gps[playerid] = 1;
		        TelePosGps[playerid][tX] =  461.3676;///victim
				TelePosGps[playerid][tY] = 	-1500.92;
		        TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[GPS] Locatie: victim");
	 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
		        CP[playerid] = 22;
  			}
   			if(listitem == 15)
		    {
		    	Gps[playerid] = 1;
		        TelePosGps[playerid][tX] =  499.6341;///prolaps
				TelePosGps[playerid][tY] = 	-1359.9327;
		        TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[GPS] Locatie: prolaps");
	 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
		        CP[playerid] = 22;
  			}
   			if(listitem == 16)
		    {
		    	Gps[playerid] = 1;
		        TelePosGps[playerid][tX] =  1457.3949;///zip
				TelePosGps[playerid][tY] =  -1138.0740;
		        TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[GPS] Locatie: ZIP Clothes");
	 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
		        CP[playerid] = 22;
  			}

   			if(listitem == 17)
		    {
		    	Gps[playerid] = 1;
		        TelePosGps[playerid][tX] =  2244.3318;///binco
				TelePosGps[playerid][tY] =  -1665.1820;
		        TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[GPS] Locatie: Binco");
	 	        SetPlayerRaceCheckpoint(playerid,0,TelePosGps[playerid][tX],  TelePosGps[playerid][tY],0, 0.0,0.0,0.0,5);
		        CP[playerid] = 22;
  			}
		}
		else
		{
		    CP[playerid] = 0;
		    Gps[playerid] = 0;
			DisablePlayerRaceCheckpoint(playerid);
			DisablePlayerCheckpoint(playerid);
		    SendClientMessage(playerid, 0xFFFFFFFF, "Ai Inchis GPS-ul");
		    TextDrawHideForPlayer(playerid, Textdraw53[playerid]);
		}
	}
	if(dialogid == 1998)
	{
	    if(response)
		{
            	if(GetPlayerWeapon(playerid) == 41)
      		    {
      		        SendClientMessage(playerid,-1,"Aranjeaza cum vrei sa fie pozitionat tatuaju.");
	               	DestroyDynamicObject(graffity[playerid]);
	               	new Float:Xe, Float:Ye, Float:Ze, Float:Ae;
	               	GetPlayerFacingAngle(playerid, Ae);
	                GetPlayerPos(playerid, Xe, Ye, Ze);
      		    	if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
      		    	{
  	                	graffity[playerid] = CreateDynamicObject(19482,Xe,Ye,Ze+0.5,0.0,0.0,0.0, -1, -1, -1, 50000000, 18000000);
	                    EditDynamicObject(playerid,graffity[playerid]);
	                    ServerWeapon(playerid, 41, -200);
	                    SendClientMessage(playerid,0x80FF00C8,"Ati consumat 200# din Spray!");
 	                    SetDynamicObjectMaterialText(graffity[playerid],0,"Rifa",OBJECT_MATERIAL_SIZE_256x256,"Arial", 35, 1, 0xFF0000C8,0, 1);
  					}
					else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
					{
  	                	graffity[playerid] = CreateDynamicObject(19482,Xe,Ye,Ze+0.5,0.0,0.0,0.0);
	                    EditDynamicObject(playerid,graffity[playerid]);
	                    ServerWeapon(playerid, 41, -200);
	                    SendClientMessage(playerid,0x80FF00C8,"Ati consumat 200# din Spray!");
 	                    SetDynamicObjectMaterialText(graffity[playerid],0,"Ballas",OBJECT_MATERIAL_SIZE_256x256,"Arial", 35, 1, 0xE61ABDC8,0, 1);
					}
					else if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
					{
  	                	graffity[playerid] = CreateDynamicObject(19482,Xe,Ye,Ze+0.5,0.0,0.0,0.0);
	                    EditDynamicObject(playerid,graffity[playerid]);
	                    ServerWeapon(playerid, 41, -200);
	                    SendClientMessage(playerid,0x80FF00C8,"Ati consumat 200# din Spray!");
 	                    SetDynamicObjectMaterialText(graffity[playerid],0,"Seville",OBJECT_MATERIAL_SIZE_256x256,"Arial", 35, 1, 0xFFFFFFC8,0, 1);
					}
			  	}
                else return SendClientMessage(playerid,-1,"Nu ai Spray.");
			}
	}
	if(dialogid == 11)
	{
	    if(!response) return SendClientMessage(playerid,-1,"O zi buna");
	    if(response)
	    {
	        switch(listitem)
			{
	        	case 0:
	        	{
	        	    format(string, sizeof(string), "{1580EA}{1580EA}Bank:{FFFFFF}Contul tau bancar este in valoare de{51AE5A} %d$.\n{1580EA}Bank: {FFFFFF}ATENTIE! Taxa este de {1580EA}2.5 la suta la extragere din Bancomat sau Banca{FFFFFF}!", PlayerInfo[playerid][pAccount]);
					ShowPlayerDialog(playerid,7,DIALOG_STYLE_MSGBOX,"ATM HELP",string,"OK","");
	        	}
	        	case 1:
	        	{
	                format(string, sizeof(string), "{1580EA}{1580EA}Bank:{FFFFFF}Contul ta bancar este in valoare de{51AE5A} %d$", PlayerInfo[playerid][pAccount]);
					ShowPlayerDialog(playerid,8,DIALOG_STYLE_MSGBOX,"ATM EXTRAGERE",string,"Extrage","Inapoi");
	        	}
        	}
	    }
 	}
 	if(dialogid == 8)
	{
	    if(!response) return SendClientMessage(playerid,-1,"O zi buna");
	    if(response)
	    {
			ShowPlayerDialog(playerid,9,DIALOG_STYLE_INPUT,"ATM", "Scrie suma pentru extragere", "EXTRAGE", "ANULEAZA");
 		}
  	}
	if(dialogid == 9)
	{
	    if(response)
	    {
  			new cashdeposit = strval(inputtext);
			if (cashdeposit > PlayerInfo[playerid][pAccount] || cashdeposit < 1) return SendClientMessage(playerid, COLOR_GRAD2, "{1580EA}Banca: {FFFFFF}Nu ai atatia bani!");
      		GivePlayerCash(playerid,cashdeposit);
		    new curfunds = PlayerInfo[playerid][pAccount];
		    PlayerInfo[playerid][pAccount]-=cashdeposit;
		    SendClientMessage(playerid, COLOR_WHITE, "|___ FACTURA BANCOMAT ___|");
		    format(string, sizeof(string), "Balanta veche: $%s", FormatNumber(curfunds));
		    SendClientMessage(playerid, COLOR_GRAD2, string);
		    format(string, sizeof(string), "Extragere: $%s",FormatNumber(cashdeposit));
      		SendClientMessage(playerid, COLOR_GRAD4, string);
		    SendClientMessage(playerid, COLOR_GRAD6, "|-----------------------------------------|");
		    format(string, sizeof(string), "Balanta noua: $%s", FormatNumber(PlayerInfo[playerid][pAccount]));
		    SendClientMessage(playerid, COLOR_WHITE, string);
		    Update(playerid, pAccountx);
   		}
		else return 1;
	}
	if(dialogid == 257)
	{
	    if(response)
	    {
		    new cashdeposit = strval(inputtext);
		    if (cashdeposit > GetPlayerCash(playerid) || cashdeposit < 1) return SendClientMessage(playerid, COLOR_GRAD2, "{1580EA}Banca: {FFFFFF}Nu ai atatia bani!");
     	    GivePlayerCash(playerid,-cashdeposit);
		    new curfunds = PlayerInfo[playerid][pAccount];
		    PlayerInfo[playerid][pAccount]+=cashdeposit;
		    SendClientMessage(playerid, COLOR_WHITE, "|___ FACTURA BANCARA ___|");
		    format(string, sizeof(string), "Balanta veche: $%s", FormatNumber(curfunds));
		    SendClientMessage(playerid, COLOR_GRAD2, string);
		    format(string, sizeof(string), "Depozit: $%s",FormatNumber(cashdeposit));
      		SendClientMessage(playerid, COLOR_GRAD4, string);
		    SendClientMessage(playerid, COLOR_GRAD6, "|-----------------------------------------|");
		    format(string, sizeof(string), "Balanta noua: $%s", FormatNumber(PlayerInfo[playerid][pAccount]));
		    SendClientMessage(playerid, COLOR_WHITE, string);
		    Update(playerid, pAccountx);
	    }
		else return 1;
	}
    if(dialogid == 313)
	{
	    new zone[MAX_ZONE_NAME];
	    if(response)
	    {
	        new h = House[playerid];
	        if(Efraction[playerid] > 0) { House[playerid] = 0; return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Securitate: {FFFFFF}Asteapta 4 minute inainte de a mai incerca sa intri prin efractie!"); }
	        new rand = random(100);
	        if(rand <= 10 || PlayerInfo[playerid][pAdmin] > 0)
	        {
	            GetPlayer2DRadarZone(playerid, zone, sizeof(zone));
	            new hasprotection = 0;
		    	if(HouseInfo[h][hProtection3] != 0) hasprotection = 1;
				if(hasprotection != 0)
				{
				    new Float:health;
				    GetPlayerHealth(playerid, health);
				    SetPlayerHealth(playerid, health-50);
		 			format(string, sizeof(string), "~y~~h~Ai fost ~r~muscat~y~~h~!");
					GameTextForPlayer(playerid, string, 5000, 3);
					//return 1;
				}
	            if(HouseInfo[h][hProtection1] != 0)
				{
				    new count = 999;
     				for(new i = 0; i < MAX_PLAYERS; i++)
					{
					    if(strmatch(HouseInfo[h][hOwner], PlayerName(i)))
					    {
					        if(gLogged[i] != 0)
					        {
					        	count = i;
							}
							//else SendClientMessage(playerid, COLOR_WHITE, "1");
					    }
					    //else SendClientMessage(playerid, COLOR_WHITE, "2");
					}
					if(count != 999)
					{
					    SendClientMessage(count, COLOR_WHITE, " ");
					    if(HouseInfo[h][hProtection2] != 0) format(string, sizeof(string), "{1580EA}Securitate: {FFFFFF}%s a intrat in casa ta din %s!", PlayerName(playerid), zone);
                        else format(string, sizeof(string), "{1580EA}Securitate: {FFFFFF}Cineva a intrat in casa ta din %s!", zone);
                        SendClientMessage(count, COLOR_WHITE, string);
					}
				}
	            Efraction[playerid] = 4;
	            SetPlayerInterior(playerid, HouseInfo[House[playerid]][hInt]);
   				SetPlayerPos(playerid, HouseInfo[House[playerid]][hPosX1], HouseInfo[House[playerid]][hPosY1], HouseInfo[House[playerid]][hPosZ1]);
		    	SetPlayerVirtualWorld(playerid, House[playerid]);
		    	EnteredHouse[playerid] = House[playerid];
		    	SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Casa: {FFFFFF}Ai intrat prin efractie!");
				House[playerid] = 0;
			}
	        else
			{
				Efraction[playerid] = 5;
				House[playerid] = 0;
				return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Casa: {FFFFFF}N-ai reusit sa intri prin efractie!");
			}
	    }
	    else return 1;
	}


	if(dialogid == 266)
    {
        if(!response)
		{
			TogglePlayerControllable(playerid, 1);
			RemovePlayerFromVehicle(playerid);
		}
		if(response)
		{
		    if(HireCar[playerid] == 255)
			{
			    // de aici
	    		if(IsPlayerInRangeOfPoint(playerid, 40.0, 1068.5669,-1757.0872,17.8203))// la ls
				{
					if(IsARentableCarLS(GetPlayerVehicleID(playerid)))
					{
					    if(SBizzInfo[0][sbProduse] == 0)
						{
							GameTextForPlayer(playerid, "~r~Stoc epuizat", 5000, 1);
							return 1;
						}
						if(PlayerInfo[playerid][pBiz] == 100)
						{
							GameTextForPlayer(playerid, "~w~Nicio taxa pentru~n~~r~detinator", 5000, 3);
							TogglePlayerControllable(playerid, 1);
							VehicleEngine[GetPlayerVehicleID(playerid)] = 1;
							GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
			 				return 1;
						}
					    foreach(Player,i)
						{
						    if(HireCar[i] == GetPlayerVehicleID(playerid))
						    {
						        SendClientMessage(playerid, COLOR_GRAD2, "Cineva a inchiriat deja aceasta masina");
								RemovePlayerFromVehicle(playerid);
								return 1;
						    }
						}
					    new Billl = SBizzInfo[0][sbEntrace];
	   					if (GetPlayerCash(playerid) >  Billl)
						{
	    					GivePlayerCash(playerid,-Billl);
							SBizzInfo[0][sbTill] += Billl;
							sbUpdate(0,sbTillx);
      						SBizzInfo[0][sbProduse] -= 1;
							sbUpdate(0,sbProdusex);
	    					HireCar[playerid] = GetPlayerVehicleID(playerid);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "~p~Rent Car LS ~w~Va multumeste ~n~ ~g~ Pret: %d!",Billl);
							PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0);
							SendClientMessage(playerid,-1,"Ai inchiriat cu succes masina, /unrentveh pentru a renunta la ea.");
							GameTextForPlayer(playerid, string, 5000, 3);
							TogglePlayerControllable(playerid, 1);
							VehicleEngine[GetPlayerVehicleID(playerid)] = 1;
							GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
			 				SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Nu ai destui bani !");
							RemovePlayerFromVehicle(playerid);
							return 1;
						}
					}
				}
				else if (IsPlayerInRangeOfPoint(playerid, 30.0,  2130.5669,1398.0872,17.8203))//lv
				{
				    if(IsARentableCarLV(GetPlayerVehicleID(playerid)))
					{
					    if(SBizzInfo[12][sbProduse] == 0)
						{
							GameTextForPlayer(playerid, "~r~Stoc epuizat", 5000, 1);
							return 1;
						}
						if(PlayerInfo[playerid][pBiz] == 112)
						{
							GameTextForPlayer(playerid, "~w~Nicio taxa pentru~n~~r~detinator", 5000, 3);
							TogglePlayerControllable(playerid, 1);
							VehicleEngine[GetPlayerVehicleID(playerid)] = 1;
							GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
			 				return 1;
						}
					    foreach(Player,i)
						{
						    if(HireCar[i] == GetPlayerVehicleID(playerid))
						    {
						        SendClientMessage(playerid, COLOR_GRAD2, "Cineva a inchiriat deja aceasta masina");
								RemovePlayerFromVehicle(playerid);
								return 1;
						    }
						}
					    new Billls = SBizzInfo[12][sbEntrace];
						if (GetPlayerCash(playerid) >  Billls)
						{
	    					GivePlayerCash(playerid,-Billls);
							SBizzInfo[12][sbTill] += Billls;
							sbUpdate(12,sbTillx);
    						SBizzInfo[12][sbProduse] -= 1;
    						sbUpdate(12,sbProdusex);
	    					HireCar[playerid] = GetPlayerVehicleID(playerid);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "~y~Rent Car LV ~w~Va multumeste ~n~ ~g~ Pret: %d!",Billls);
							PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0);
							GameTextForPlayer(playerid, string, 5000, 3);
							SendClientMessage(playerid,-1,"Ai inchiriat cu succes masina, /unrentveh pentru a renunta la ea.");
							VehicleEngine[GetPlayerVehicleID(playerid)] = 1;
							TogglePlayerControllable(playerid, 1);
							GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
			 				SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Nu ai destui bani !");
							RemovePlayerFromVehicle(playerid);
							return 1;
						}
					}
				}
				else if (IsPlayerInRangeOfPoint(playerid, 30.0,  -1983.5669,262.0872,35.8203))// sf
		    	{
		    	    if(IsARentableCarSF(GetPlayerVehicleID(playerid)))
		    	    {
		    	        if(SBizzInfo[13][sbProduse] == 0)
						{
							GameTextForPlayer(playerid, "~r~Stoc epuizat", 5000, 1);
							return 1;
						}
						if(PlayerInfo[playerid][pBiz] == 113)
						{
							GameTextForPlayer(playerid, "~w~Nicio taxa pentru~n~~r~detinator", 5000, 3);
							TogglePlayerControllable(playerid, 1);
							VehicleEngine[GetPlayerVehicleID(playerid)] = 1;
							GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
			 				return 1;
						}
					    foreach(Player,i)
						{
						    if(HireCar[i] == GetPlayerVehicleID(playerid))
						    {
						        SendClientMessage(playerid, COLOR_GRAD2, "Cineva a inchiriat deja aceasta masina");
								RemovePlayerFromVehicle(playerid);
								return 1;
						    }
						}
			    	    new Billll = SBizzInfo[13][sbEntrace];
			    	    if (GetPlayerCash(playerid) >  Billll)
						{
	    					GivePlayerCash(playerid,-Billll);
							SBizzInfo[13][sbTill] += Billll;
							sbUpdate(13,sbTillx);
    						SBizzInfo[13][sbProduse] -= 1;
							sbUpdate(13,sbProdusex);
	    					HireCar[playerid] = GetPlayerVehicleID(playerid);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "~i~Rent Car SF ~w~Va multumeste ~n~ ~g~ Pret: %d!",Billll);
							PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0);
							GameTextForPlayer(playerid, string, 5000, 3);
							SendClientMessage(playerid,-1,"Ai inchiriat cu succes masina, /unrentveh pentru a renunta la ea.");
							VehicleEngine[GetPlayerVehicleID(playerid)] = 1;
							TogglePlayerControllable(playerid, 1);
							GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
			 				SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Nu ai destui bani !");
							RemovePlayerFromVehicle(playerid);
							return 1;
						}
					}
				}
				else if (IsPlayerInRangeOfPoint(playerid, 30.0, 1675.0101, 1455.1771, 10.2226) || IsPlayerInRangeOfPoint(playerid, 30.0, -1408.0790, -303.5502, 13.7757) ||
			 	IsPlayerInRangeOfPoint(playerid, 30.0,   1403.6051, -1653.8340, 13.0235) || IsPlayerInRangeOfPoint(playerid, 30.0,  1695.2424, -2243.1787, -3.2384))// sf
   		    	{
					if(IsARentableAir(GetPlayerVehicleID(playerid)))
			   	    {
			   	        if(SBizzInfo[1][sbProduse] == 0)
						{
							GameTextForPlayer(playerid, "~r~Stoc epuizat", 5000, 1);
							return 1;
						}
						if(PlayerInfo[playerid][pBiz] == 101)
						{
							GameTextForPlayer(playerid, "~w~Nicio taxa pentru~n~~r~detinator", 5000, 3);
							TogglePlayerControllable(playerid, 1);
							VehicleEngine[GetPlayerVehicleID(playerid)] = 1;
							GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
			 				return 1;
						}
						foreach(Player,i)
						{
						    if(HireCar[i] == GetPlayerVehicleID(playerid))
						    {
						        SendClientMessage(playerid, COLOR_GRAD2, "Cineva a inchiriat deja acest scuter");
								RemovePlayerFromVehicle(playerid);
								return 1;
						    }
						}
			    	    new PRETT = SBizzInfo[1][sbEntrace];
			    	    if (GetPlayerCash(playerid) >  PRETT)
						{
			 				GivePlayerCash(playerid,-PRETT);
							SBizzInfo[1][sbTill] += PRETT;
							sbUpdate(1,sbTillx);
			   				SBizzInfo[1][sbProduse] -= 1;
							sbUpdate(1,sbProdusex);
			   				HireCar[playerid] = GetPlayerVehicleID(playerid);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "~b~Rent Bike ~w~Va multumeste ~n~ ~g~ Pret: %d!",PRETT);
							PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0);
							GameTextForPlayer(playerid, string, 5000, 3);
							TogglePlayerControllable(playerid, 1);
							SendClientMessage(playerid,-1,"Ai inchiriat cu succes scuterul, /unrentveh pentru a renunta la el.");
							VehicleEngine[GetPlayerVehicleID(playerid)] = 1;
							GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Nu ai destui bani !");
							RemovePlayerFromVehicle(playerid);
							return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GRAD2, "Nu esti la RentCar!");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "Ai deja o masina inchiriata, /unrentveh!");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
		}
	}

	if(dialogid == 314)
	{
	    if(response)
	    {
	        //new h = GetPlayerVirtualWorld(playerid);
	        if(listitem == 0)
			{
				format(string, sizeof(string), "{F6F6F6}Vrei sa cumperi aceasta casa pentru {00BC00}$%d{F6F6F6}?", HouseInfo[HouseRequested[playerid]][hPrice]);
				ShowPlayerDialog(playerid, 305, DIALOG_STYLE_MSGBOX, "{00BC00}Meniul {F6F6F6}Casei", string, "Cumpara", "Iesi");
			}
			else if(listitem == 1)
			{
			    ShowPlayerDialog(playerid, 313, DIALOG_STYLE_MSGBOX, "{F6F6F6}Poti intra prin efractie..", "{F6F6F6}Ai incercat clanta usii si ai observat ca se poate distruge usor.\n{F6F6F6}Sunt sanse sa poti intra prin efractie. Esti sigur ca vrei sa faci asta?", "Da", "Nu");
			}
	    }
	    else return 1;
	}
	if(dialogid == 301)
	{
	    if(response)
	    {
	        new h = GetPlayerVirtualWorld(playerid);
	        if(listitem == 0)
			{
				ShowPlayerDialog(playerid, 302, DIALOG_STYLE_LIST, "{00BC00}Meniul {F6F6F6}Casei", "{00BC00}1. {F6F6F6}Vinde statului\n{00BC00}2. {F6F6F6}Seteaza pretul casei", "Alege", "Iesi");
			}
			else if(listitem == 1)
			{
			    ShowPlayerDialog(playerid, 304, DIALOG_STYLE_LIST, "{00BC00}Meniul {F6F6F6}Casei", "{00BC00}1. {F6F6F6}Deschide usa\n{00BC00}2. {F6F6F6}Incuie usa", "Alege", "Iesi");
			}
			else if(listitem == 2)
			{
			    format(string, sizeof(string), "{F6F6F6}Seif: {00BC00}$%d", HouseInfo[h][hStorage]);
			    ShowPlayerDialog(playerid, 306, DIALOG_STYLE_LIST, string, "{00BC00}1. {F6F6F6}Depoziteaza bani\n{00BC00}2. {F6F6F6}Extrage bani", "Alege", "Iesi");
			}
			else if(listitem == 3)
			{
			    ShowPlayerDialog(playerid, 312, DIALOG_STYLE_LIST, "{F6F6F6}Meniul {00BC00}Casei", "{00BC00}1. {F6F6F6}Alarma de Securitate\t{00BC00}$100.000\n{00BC00}2. {F6F6F6}Camera de Supraveghere\t{00BC00}$50.000\n{00BC00}3. {F6F6F6}Caine de Securitate\t{00BC00}$200.000", "Alege", "Iesi");
			}
			else if(listitem == 4)
			{
			    ShowPlayerDialog(playerid, 315, DIALOG_STYLE_LIST, "{00BC00}Meniul {F6F6F6}Casei", "{00BC00}1.{F6F6F6}Numele casei\t{00BC00}$5000.\n{00BC00}2. {F6F6F6}Inchiriaza camere", "Alege", "Iesi");
			}
	    }
	    else return 1;
	}
	if(dialogid == 316)
	{
	    if(!response) return 1;
	    new h = GetPlayerVirtualWorld(playerid);
		if(strlen(inputtext) > 20 || strlen(inputtext) < 2) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Casa: {FFFFFF}Numele casei nu poate fi mai lung de 29 caractere sau mai scurt de 3 caractere!");
	    if(strmatch(HouseInfo[h][hOwner], PlayerName(playerid)))
	    {
	        if(GetPlayerCash(playerid) >= 5000)
	        {
	            strmid(HouseInfo[h][hName], inputtext, 0, 100, 100);
	            GivePlayerCash(playerid, -5000);
	            hUpdate(h, hNamex);
	            SavePHouse(h);
	        }
	        else SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Nu ai destui bani (5.000)!");
	    }
	}
	if(dialogid == 317)
	{
	    if(!response) return 1;
	    new h = GetPlayerVirtualWorld(playerid);
	    if(strmatch(HouseInfo[h][hOwner], PlayerName(playerid))) {} else return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Casa: {FFFFFF}Aceasta nu e casa ta!");
	    if(listitem == 0)
	    {
	        if(HouseInfo[h][hDog] == 0)
	        {
	            HouseInfo[h][hDog] = 1;
	            hUpdate(h, hDogx);
	            format(string, sizeof(string), "{1580EA}Chirie: {FFFFFF}Ai activat chiria. Pretul chiriei este de {00BC00}$%d{FFFFFF}. Il poti schimba tastand /housemenu.", HouseInfo[h][hPrivacy]);
	            SendClientMessage(playerid, COLOR_WHITE, string);
	            SavePHouse(h);
	            return 1;
	        }
         	if(HouseInfo[h][hDog] == 1)
	        {
	            HouseInfo[h][hDog] = 0;
	            hUpdate(h, hDogx);
	            format(string, sizeof(string), "{1580EA}Chirie: {FFFFFF}Ai dezactivat chiria.");
	            SendClientMessage(playerid, COLOR_WHITE, string);
	            SavePHouse(h);
	            return 1;
	        }
	    }
        if(listitem == 1) ShowPlayerDialog(playerid, 318, DIALOG_STYLE_INPUT, "{00BC00}Meniul {F6F6F6}Casei", "{F6F6F6}Seteaza {00BC00}pretul chiriei{F6F6F6} mai jos:", "Alege", "Iesi");
	}
	if(dialogid == 318)
	{
	    if(!response) return 1;
	    new h = GetPlayerVirtualWorld(playerid), rent = strval(inputtext);
		if(rent <= 5000 && rent > 0) {} else return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Casa: {FFFFFF}Pretul chiriei nu poate fi mai mare decat 5000 sau mai mic decat 0!");
	    if(strmatch(HouseInfo[h][hOwner], PlayerName(playerid)))
	    {
     		HouseInfo[h][hPrivacy] = rent;
     		hUpdate(h, hPrivacyx);
     		format(string, sizeof(string), "{1580EA}Chirie: {FFFFFF}Ai schimbat pretul chiriei in {1580EA}$%d{FFFFFF}!", HouseInfo[h][hPrivacy]);
     		SendClientMessage(playerid, COLOR_WHITE, string);
       		SavePHouse(h);
	    }
	}
	if(dialogid == 315)
	{
	    if(!response) return 1;
	    if(listitem == 0) ShowPlayerDialog(playerid, 316, DIALOG_STYLE_INPUT, "{00BC00}Meniul {F6F6F6}Casei", "{F6F6F6}Scrie numele casei {00BC00}mai jos{F6F6F6}:", "Alege", "Iesi");
		else if(listitem == 1) ShowPlayerDialog(playerid, 317, DIALOG_STYLE_LIST, "{00BC00}Meniul {F6F6F6}Casei", "{00BC00}1. {F6F6F6}Activeaza/Dezactiveaza chirie\n{00BC00}2. {F6F6F6}Seteaza pretul chiriei", "Alege", "Iesi");
	}
	if(dialogid == 312)
	{
	    if(response)
	    {
	        new h = GetPlayerVirtualWorld(playerid);
	        if(listitem == 0)
			{
			    if(HouseInfo[h][hProtection1] != 0) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Securitate: {FFFFFF}Deja ai o alarma de securitate!");
				if(GetPlayerCash(playerid) >= 100000)
				{
				    HouseInfo[h][hProtection1] = 1;
				    hUpdate(h, hProtection1x);
					SendClientMessage(playerid, COLOR_WHITE, " ");
					SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Securitate: {FFFFFF}Ai cumparat o alarma de securitate!");
                    SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Securitate: {FFFFFF}Alarma de securitate te va anunta CAND cineva intra in casa ta.");
                    SendClientMessage(playerid, COLOR_WHITE, "{1580EA}IMPORTANT: {FFFFFF}Alarma de securitate NU te avertizeaza CINE intra in casa ta! Iti trebuie o camera pentru asta!");
                    GivePlayerCash(playerid, -100000);
                    SavePHouse(h);
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Securitate: {FFFFFF}Nu ai destui bani!");
			}
			else if(listitem == 1)
			{
			    if(HouseInfo[h][hProtection1] == 0) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Securitate: {FFFFFF}Iti trebuie o alarma de securitate inainte sa cumperi o camera de securitate!");
			    if(HouseInfo[h][hProtection2] != 0) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Securitate: {FFFFFF}Deja ai o camera de securitate!");
			    if(GetPlayerCash(playerid) >= 50000)
				{
				    HouseInfo[h][hProtection2] = 1;
				    hUpdate(h, hProtection2x);
					SendClientMessage(playerid, COLOR_WHITE, " ");
					SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Securitate: {FFFFFF}Ai cumparat o camera de securitate!");
                    SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Securitate: {FFFFFF}Camera de securitate te avertizeaza CINE intra in casa ta.");
                    GivePlayerCash(playerid, -50000);
                    SavePHouse(h);
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Securitate: {FFFFFF}Nu ai destui bani!");
			}
			else if(listitem == 2)
			{
			    if(HouseInfo[h][hProtection3] != 0) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Securitate: {FFFFFF}Deja ai un caine de securitate!");
			    if(GetPlayerCash(playerid) >= 200000)
				{
				    HouseInfo[h][hProtection3] = 1;
				    hUpdate(h, hProtection3x);
					SendClientMessage(playerid, COLOR_WHITE, " ");
					SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Securitate: {FFFFFF}Ai cumparat un caine de securitate");
                    SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Securitate: {FFFFFF}Cainele de securitate musca pe oricine incearca sa intre prin efractie.");
                    GivePlayerCash(playerid, -200000);
                    SavePHouse(h);
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Securitate: {FFFFFF}Nu ai destui bani!");
			}
	    }
	    else return 1;
	}
	if(dialogid == 306)
	{
	    if(response)
	    {
	        new h = GetPlayerVirtualWorld(playerid);
			format(string, sizeof(string), "{00BC00}Seif: {F6F6F6}$%d\n{00BC00}Scrie {F6F6F6}mai jos cati bani vrei sa depozitezi.", HouseInfo[h][hStorage]);
	        if(listitem == 0) ShowPlayerDialog(playerid, 307, DIALOG_STYLE_INPUT, "{00BC00}Meniul {F6F6F6}Casei", string, "Alege", "Iesi");
            format(string, sizeof(string), "{00BC00}Seif: {F6F6F6}$%d\n{00BC00}Scrie {F6F6F6}mai jos cati bani vrei sa extragi.", HouseInfo[h][hStorage]);
			if(listitem == 1) ShowPlayerDialog(playerid, 308, DIALOG_STYLE_INPUT, "{00BC00}Meniul {F6F6F6}Casei", string, "Alege", "Iesi");
		}
	    else return 1;
	}
	if(dialogid == 304)
	{
	    if(response)
	    {
	        new h = GetPlayerVirtualWorld(playerid);
	        if(listitem == 0)
			{
				HouseInfo[h][hLock] = 0;
				hUpdate(h, hLockx);
				SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Casa: {FFFFFF}Ai descuiat usa!");
				SavePHouse(h);
			}
			else if(listitem == 1)
			{
			    HouseInfo[h][hLock] = 1;
			    hUpdate(h, hLockx);
				SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Casa: {FFFFFF}Ai incuiat usa!");
				SavePHouse(h);
			}
	    }
	    else return 1;
	}
	if(dialogid == 302)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    new h = GetPlayerVirtualWorld(playerid), finprice;
			    if(strmatch(HouseInfo[h][hOwner], PlayerName(playerid)))
			    {
			    	strmid(HouseInfo[h][hOwner], "Unbought", 0, 255, 255);
			    	HouseInfo[h][hOwned] = 0;
			    	finprice = HouseInfo[h][hValue];
			    	hUpdate(h, hOwnedx);
			    	hUpdate(h, hOwnerx);
			    	GivePlayerCash(playerid, finprice);
			    	SavePHouse(h);
			    	format(string, sizeof(string), "{DC0C0C}Casa: {FFFFFF}Ti-ai vandut casa la pret intreg, adica $%d!", finprice);
			    	SendClientMessage(playerid, COLOR_WHITE, string);
			    	PlayerInfo[playerid][pHouse] = 255;
			        Update(playerid, pHousex);
			    	SavePHouse(h);
			    }
			}
            if(listitem == 1) ShowPlayerDialog(playerid, 303, DIALOG_STYLE_INPUT, "{00BC00}Meniul {F6F6F6}Casei", "{00BC00}Scrie {F6F6F6}pretul casei.\n Daca nu vrei sa o vinzi, apasa 'Iesi'.", "Alege", "Iesi");
		}
	    else return 1;
	}
    if(dialogid == 300)
	{
	    if(response)
	    {
	        new h = HouseRequested[playerid];
         	if(Houses[playerid] >= 1 && PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, -1, "{DC0C0C}Casa: {FFFFFF}Ai ajuns la limita caselor pe care le poti detine!");
			if(HouseInfo[h][hOwned] == 0)
			{
			    if(HouseInfo[h][hValue] <= GetPlayerCash(playerid))
			    {
			        if(PlayerInfo[playerid][pHouse] != 255) return SendClientMessage(playerid, COLOR_WHITE, "{DC0C0C}Casa: {FFFFFF}Trebuie sa renunti la chirie inainte sa cumperi o casa! (/unrentroom)");
			        if(HouseInfo[h][hLevel] > PlayerInfo[playerid][pLevel]) return SendClientMessage(playerid, COLOR_WHITE, "{DC0C0C}Casa: {FFFFFF}Nu ai nivelul necesar!");
					strmid(HouseInfo[h][hOwner], PlayerName(playerid), 0, MAX_PLAYER_NAME, MAX_PLAYER_NAME);
					format(string, sizeof(string), "Proprietatea lui %s", PlayerName(playerid));
					strmid(HouseInfo[h][hName], string, 0, 100, 100);
					HouseInfo[h][hStorage] = 0;
					HouseInfo[h][hLock] = 1;
					HouseInfo[h][hOwned] = 1;
					HouseInfo[h][hPrice] = 0;
					hUpdate(h, hOwnerx);
					hUpdate(h, hOwnedx);
					//hUpdate(h, hPricex);
					hUpdate(h, hLockx);
					hUpdate(h, hStoragex);
 					GivePlayerCash(playerid, -HouseInfo[h][hValue]);
                    SendClientMessage(playerid, COLOR_WHITE, " ");
                    SendClientMessage(playerid, COLOR_WHITE, " ");
                    SendClientMessage(playerid, COLOR_WHITE, " ");
                    SendClientMessage(playerid, COLOR_WHITE, " ");
                    SendClientMessage(playerid, COLOR_WHITE, " ");
                    SendClientMessage(playerid, COLOR_WHITE, " ");
                    SendClientMessage(playerid, COLOR_WHITE, " ");
					SendClientMessage(playerid, -1, "{DC0C0C}Info: {FFFFFF}Felicitari pentru noua achizitie!");
					SendClientMessage(playerid, -1, "{DC0C0C}Info: {FFFFFF}Casa ti-a fost inchisa automat.");
					SendClientMessage(playerid, COLOR_WHITE, " ");
                    SendClientMessage(playerid, -1, "{DC0C0C}Info: {FFFFFF}Poti folosi {DC0C0C}/housemenu {FFFFFF} sau {DC0C0C}/hm {FFFFFF} pentru a modera informatiile casei.");

					TogglePlayerControllable(playerid, true);
					Houses[playerid] ++;
				 	SetPlayerInterior(playerid, HouseInfo[h][hInt]);
			        SetPlayerPos(playerid, HouseInfo[h][hPosX1], HouseInfo[h][hPosY1], HouseInfo[h][hPosZ1]);
			        SetPlayerVirtualWorld(playerid, h);
      		        PlayerInfo[playerid][pHouse] = h;
			        Update(playerid, pHousex);
                    hUpdate(h, hNamex);
					SavePHouse(h);

					printf("=- House ID: %i got bought by: %s -=", h, PlayerName(playerid));
					HouseRequested[playerid] = 0;
					return 1;
				}
				else return SendClientMessage(playerid, COLOR_RED, "{DC0C0C}Casa: {FFFFFF}Nu ai destui bani!");
			}
			else return SendClientMessage(playerid, COLOR_RED, "{DC0C0C}Casa: {FFFFFF}Aceasta casa nu este de vanzare!");
	    }
	    else { HouseRequested[playerid] = 0; return 1; }
	}
	if(dialogid == 307)
	{
	    if(response)
	    {
		    new val = strval(inputtext), h = GetPlayerVirtualWorld(playerid);
		    if(strmatch(HouseInfo[h][hOwner], PlayerName(playerid)))
		    {
		        if(GetPlayerCash(playerid) < val) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Seif: {FFFFFF}Nu ai destui bani!");
				if(val < 0) return 1;
				HouseInfo[h][hStorage] += val;
		    	format(string, sizeof(string), "{1580EA}Seif: {FFFFFF}Ai depozitat $%d in seiful casei tale!", val);
		    	SendClientMessage(playerid, COLOR_WHITE, string);
		    	GivePlayerCash(playerid, -val);
		    	hUpdate(h, hStoragex);
		    	SavePHouse(h);
			}
		}
		else
		{
		    return 1;
		}
	}
 	if(dialogid == 308)
	{
	    if(response)
	    {
		    new val = strval(inputtext), h = GetPlayerVirtualWorld(playerid);
		    if(strmatch(HouseInfo[h][hOwner], PlayerName(playerid)))
		    {
		        if(HouseInfo[h][hStorage] < val) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Seif: {FFFFFF}You don't have that much money!");
                if(val < 0) return 1;
				HouseInfo[h][hStorage] -= val;
		    	format(string, sizeof(string), "{1580EA}Seif: {FFFFFF}Ai extras $%d din seiful tau!", val);
		    	SendClientMessage(playerid, COLOR_WHITE, string);
		    	GivePlayerCash(playerid, val);
		    	hUpdate(h, hStoragex);
		    	SavePHouse(h);
			}
		}
		else
		{
		    return 1;
		}
	}

    if(dialogid == 699)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!response) return 1;
      		if(listitem == 0)
			{
			    PlayerInfo[playerid][pJob1] = 1;
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai luat jobul detectiv");
			}
      		if(listitem == 1)
			{
			    PlayerInfo[playerid][pJob1] = 2;
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai luat jobul Avocat");
			}
      		if(listitem == 2)
			{
			    PlayerInfo[playerid][pJob1] = 3;
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai luat jobul Bodyguard");
			}
      		if(listitem == 3)
			{
			    PlayerInfo[playerid][pJob1] = 4;
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai luat jobul Paramedic");
			}
      		if(listitem == 4)
			{
			    PlayerInfo[playerid][pJob1] = 5;
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai luat jobul Sweeper");
			}
      		if(listitem == 5)
			{
			    PlayerInfo[playerid][pJob1] = 6;
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai luat jobul Boxeur");
			}
      		if(listitem == 6)
			{
			    PlayerInfo[playerid][pJob1] = 7;
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai luat jobul Mecanic");
			}
      		if(listitem == 7)
			{
			    PlayerInfo[playerid][pJob1] = 8;
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai luat jobul Transportator");
			}
      		if(listitem == 8)
			{
			    PlayerInfo[playerid][pJob1] = 9;
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai luat jobul Paper Boy");
			}
      		if(listitem == 9)
			{
			    PlayerInfo[playerid][pJob1] = 10;
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai luat jobul Pizza Boy");
			}
      		if(listitem == 10)
			{
			    PlayerInfo[playerid][pJob1] = 11;
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai luat jobul Fermier");
			}
      		if(listitem == 11)
			{
			    PlayerInfo[playerid][pJob1] = 12;
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai luat jobul Taietor de iarba");
			}
      		if(listitem == 12)
			{
			    PlayerInfo[playerid][pJob1] = 13;
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai luat jobul Taietor de Pompier");
			}
      		if(listitem == 13)
			{
			    PlayerInfo[playerid][pJob1] = 14;
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai luat jobul Taietor de Barcagiu");
			}
      		if(listitem == 14)
			{
			    PlayerInfo[playerid][pJob1] = 15;
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai luat jobul lumberjack");
			}
      		if(listitem == 15)
			{
			    PlayerInfo[playerid][pJob1] = 18;
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai luat jobul Fuel Delivery");
			}
   			Update(playerid,pJob1x);
		}
	}

    if(dialogid == 6969)
	{
		if(response)
		{
	     		if(listitem == 0)
		        {
		            if(GetPlayerMoney(playerid) < 10000) return SendClientMessage(playerid, COLOR_GREY,"* Nu ai  suficienti bani!");
		           	SendClientMessage(playerid, COLOR_WHITE, "Ai Achizitionat cu succes Ak-47");
		           	SendClientMessage(playerid, COLOR_WHITE, "Black Market-ul iti multumeste");
					ServerWeapon(playerid, 30, 100);
					GivePlayerCash(playerid, -5000);
				}
                if(listitem == 1)
				{
				    if(GetPlayerMoney(playerid) < 10000) return SendClientMessage(playerid, COLOR_GREY,"* Nu ai  suficienti bani!");
					SendClientMessage(playerid, COLOR_WHITE, "Ai Achizitionat cu succes Tec9");
		           	SendClientMessage(playerid, COLOR_WHITE, "Black Market-ul iti multumeste");
					ServerWeapon(playerid, 28, 100);
					GivePlayerCash(playerid, -5000);
				}
				if(listitem == 2)
				{
				    if(GetPlayerMoney(playerid) < 10000) return SendClientMessage(playerid, COLOR_GREY,"* Nu ai  suficienti bani!");
					SendClientMessage(playerid, COLOR_WHITE, "Ai Achizitionat cu succes Uzy/ Mac 10");
		           	SendClientMessage(playerid, COLOR_WHITE, "Black Market-ul iti multumeste");
					ServerWeapon(playerid, 32, 100);
					GivePlayerCash(playerid, -5000);
				}
				if(listitem == 3)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Ai Achizitionat cu succes Combat Shotgun");
		           	SendClientMessage(playerid, COLOR_WHITE, "Black Market-ul iti multumeste");
					ServerWeapon(playerid, 27, 100);
					GivePlayerCash(playerid, -5000);
				}
                if(listitem == 4)
				{
				    if(GetPlayerMoney(playerid) < 10000) return SendClientMessage(playerid, COLOR_GREY,"* Nu ai  suficienti bani!");
					SendClientMessage(playerid, COLOR_WHITE, "Ai Achizitionat cu succes Sawn- Off");
		           	SendClientMessage(playerid, COLOR_WHITE, "Black Market-ul iti multumeste");
					ServerWeapon(playerid, 26, 100);
					GivePlayerCash(playerid, -5000);
				}
				if(listitem == 5)
	 			{
		 			if(GetPlayerMoney(playerid) < 250000) return SendClientMessage(playerid, COLOR_GREY,"* Nu ai  suficienti bani!");
					if(PlayerInfo[playerid][pDecoder] == 1) return SendClientMessage(playerid,-1,"Ai deja decodor");
					PlayerInfo[playerid][pDecoder] ++;
					Update(playerid, pDecoderx);
					SendClientMessage(playerid, COLOR_GREY,"* Ai cumparat decodor 250000$!");
					GivePlayerCash(playerid, -250000);
				}
				if(listitem == 6)
	 			{
	 			    if(GetPlayerMoney(playerid) < 10000) return SendClientMessage(playerid, COLOR_GREY,"* Nu ai  suficienti bani!");
		 			SendClientMessage(playerid, COLOR_WHITE, "Ai Achizitionat cu succes Health si Armour");
			    	SendClientMessage(playerid, COLOR_WHITE, "Black Market-ul iti multumeste");
					SetPlayerArmour(playerid, 50.0);
					GivePlayerCash(playerid, -5000);
					SetPlayerHealth(playerid, 100);
				}
				if(listitem == 7)
				{
				    if(GetPlayerMoney(playerid) < 10000) return SendClientMessage(playerid, COLOR_GREY,"* Nu ai  suficienti bani!");
	                GivePlayerCash(playerid,-10000);
	                SendClientMessage(playerid,0x008000FF,"Ai cumparat o bomba pentru 10 000$ /bombhelp");
	                PlayerInfo[playerid][pBombe] += 1;
	                Update(playerid,pBombex);
				}
				if(listitem == 8)
				{
				    if(GetPlayerMoney(playerid) < 10000) return SendClientMessage(playerid, COLOR_GREY,"* Nu ai  suficienti bani!");
	                GivePlayerCash(playerid,-5000);
	                ServerWeapon(playerid, 34, 100);
	                SendClientMessage(playerid,0x008000FF,"Ai cumparat sniper pentru 5 000$");
				}
			    if(listitem == 9)
				{
				    ShowPlayerDialog(playerid,258,DIALOG_STYLE_LIST,"Ilegal Jobs","1. Tarfa\n2. Dealer de droguri\n3. Spargator de masini\n4. Fermier de droguri\n5. Dealer de arme","Angajare", "Renunta");
					return 1;
				}
				if(listitem == 10)
				{
				    ShowPlayerDialog(playerid,259,DIALOG_STYLE_LIST,"Ilegal Jobs 2","1. Tarfa\n2. Dealer de droguri\n3. Spargator de masini\n4. Fermier de droguri\n5. Dealer de arme","OK", "Cancel");
				    return 1;
				}
				ApplyActorAnimation(Actor[0],"SHOP","SHP_Gun_Grab",4.0,0,0,0,0,0);
				ApplyAnimation(playerid,"INT_SHOP","shop_shelf",4.0,0,0,0,0,0);
				SetTimerEx("DealStanceAnim", 4000, false, "i", 0);
		}
	}
	if(dialogid == 258)
    {
        if(!response) return 1;
        if(response)
        {
			ApplyActorAnimation(Actor[0],"GHANDS","gsign2LH",4.0,0,0,0,0,0);
			ApplyAnimation(playerid,"GHANDS","gsign2",4.0,0,0,0,0,0);
			SetTimerEx("DealStanceAnim", 4000, false, "i", 0);
            if(listitem == 0)
            {
                SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Job: {FFFFFF}Esti o prostituata acum.");
                DisablePlayerCheckpoint(playerid);
			 	PlayerInfo[playerid][pJob1] = 24;
				Update(playerid, pJob1x);
				return 1;
            }
            if(listitem == 1)
            {
                SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Job: {FFFFFF}Esti un dealer de droguri acum.");
                DisablePlayerCheckpoint(playerid);
			 	PlayerInfo[playerid][pJob1] = 25;
				Update(playerid, pJob1x);
				return 1;
            }
            if(listitem == 2)
            {
                DisablePlayerCheckpoint(playerid);
				PlayerInfo[playerid][pJob1] = 26;
				Update(playerid, pJob1x);
           		SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Job: {FFFFFF}Esti un spargator de masini acum.");
				return 1;
            }
            if(listitem == 3)
            {
                DisablePlayerCheckpoint(playerid);
				PlayerInfo[playerid][pJob1] = 27;
				Update(playerid, pJob1x);
				SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Job: {FFFFFF}Esti un fermier de droguri acum.");
				return 1;
            }
            if(listitem == 4)
            {
				DisablePlayerCheckpoint(playerid);
				PlayerInfo[playerid][pJob1] = 28;
				Update(playerid, pJob1x);
				SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Job: {FFFFFF}Esti un dealer de arme acum.");
				return 1;
            }
        }
    }
    if(dialogid == 259)
    {
        if(!response) return 1;
        if(response)
        {
			ApplyActorAnimation(Actor[0],"GHANDS","gsign2LH",4.0,0,0,0,0,0);
			ApplyAnimation(playerid,"GHANDS","gsign2",4.0,0,0,0,0,0);
			SetTimerEx("DealStanceAnim", 4000, false, "i", 0);
            if(listitem == 0)
            {
                SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Job: {FFFFFF}Esti o prostituata acum.");
                DisablePlayerCheckpoint(playerid);
			 	PlayerInfo[playerid][pJob2] = 24;
				Update(playerid, pJob2x);
				return 1;
            }
            if(listitem == 1)
            {
                SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Job: {FFFFFF}Esti un dealer de droguri acum.");
                DisablePlayerCheckpoint(playerid);
			 	PlayerInfo[playerid][pJob2] = 25;
				Update(playerid, pJob2x);
				return 1;
            }
            if(listitem == 2)
            {
                DisablePlayerCheckpoint(playerid);
				PlayerInfo[playerid][pJob2] = 26;
				Update(playerid, pJob2x);
           		SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Job: {FFFFFF}Esti un spargator de masini acum.");
				return 1;
            }
            if(listitem == 3)
            {
                DisablePlayerCheckpoint(playerid);
				PlayerInfo[playerid][pJob2] = 27;
				Update(playerid, pJob2x);
				SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Job: {FFFFFF}Esti un fermier de droguri acum.");
				return 1;
            }
            if(listitem == 4)
            {
				DisablePlayerCheckpoint(playerid);
				PlayerInfo[playerid][pJob2] = 28;
				Update(playerid, pJob2x);
				SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Job: {FFFFFF}Esti un dealer de arme acum.");
				return 1;
            }
        }
    }

	if(dialogid == 6961)
	{
	    if(response)
		{
		    CP[playerid] = 22;
			switch(listitem)
   			{
   			    case 0:
		        {
		            SetPlayerCheckpoint(playerid, 1219.0480, -1812.2429, 16.6041, 1.0); //car
                  	SendClientMessage(playerid, COLOR_GREEN,"Locatia pentru carnet a fost marcata pe minimap, /exam cand ajungeti");
		        }
		        case 1:
		        {
		            SetPlayerCheckpoint(playerid, 1957.1649,-2183.6143,13.5469, 1.0); //fly
                  	SendClientMessage(playerid, COLOR_GREEN,"Locatia pentru permis de zbor a fost marcata pe minimap, /exam cand ajungeti");
		        }
		        case 2:
		        {
		            SetPlayerCheckpoint(playerid,436.4564,-1900.2853,2.8703, 1.0); //boat
                  	SendClientMessage(playerid, COLOR_GREEN,"Locatia pentru permis de barca a fost marcata pe minimap, /exam cand ajungeti");
		        }
		        case 3:
		        {
		            SetPlayerCheckpoint(playerid,523.6387,-1812.9382,6.5713, 1.0); //fish
                  	SendClientMessage(playerid, COLOR_GREEN,"Locatia pentru permis de pescuit a fost marcata pe minimap, /exam cand ajungeti");
		        }
		        case 4:
		        {
		            SetPlayerCheckpoint(playerid, 1567.7362,-1674.7607,16.1974, 1.0); //gun
                  	SendClientMessage(playerid, COLOR_GREEN,"Locatia pentru permis de port arma a fost marcata pe minimap, /exam cand ajungeti");
		        }
      		}
		}
		else
		{
		    DisablePlayerCheckpoint(playerid);
		    format(string, sizeof(string), "* %s pune portofelul in buzunar.", PlayerName(playerid));
			ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
			return 1;
		}
	}

	if(dialogid == 6960)
	{
		if(response)
		{
			CP[playerid] = 22;
			switch(listitem)
   			{
	     		case 0:
		        {
            //    SetPlayerCheckpoint(playerid, 1979.7369,-2171.4861,13.5363, 5.0); //detectiv
                  	SendClientMessage(playerid, COLOR_GREEN,"Locatia acestui job nu exista folositi /find");
      			}
				case 1:
				{
		        	SetPlayerCheckpoint(playerid, 1554.78,-1675.12,16.3, 5.0);//avocat
           	        SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
				}
				case 2:
				{
           	       	SetPlayerCheckpoint(playerid, 1785.2502, -2029.1366, 12.4725, 5.0);//mechanic
            	    SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
           		}
				case 3:
				{
   	           		//SetPlayerCheckpoint(playerid, 1785.0488, -2041.4042, 12.5049, 5.0);//bodyguard
          	    	SendClientMessage(playerid, COLOR_GREEN,"Locatia acestui job nu exista folositi /guard");
		  		}
				case 4:
				{
				  	SetPlayerCheckpoint(playerid, 1178.2936, -1338.9949, 14.1181, 5.0);//paramedic
					SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
  				}
				case 5:
	 			{
		 			SetPlayerCheckpoint(playerid,1648.2423, -1827.8595, 12.5276, 5.0);//sweeper
          	        SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
 				}
				case 6:
	 			{
		 			SetPlayerCheckpoint(playerid,  2229.8308, -1722.0974, 12.5534, 5.0);//boxeur
          	        SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
  				}
				case 7:
	 			{
		 			SetPlayerCheckpoint(playerid,-1040.1648, -569.3936, 30.9911, 5.0);//fuel
          	        SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
  				}
				case 8:
	 			{
      				SetPlayerCheckpoint(playerid,1794.9957, -1914.4486, 12.3633, 5.0);//autobus
          	        SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
  				}
				case 9:
	 			{
		 			SetPlayerCheckpoint(playerid,1793.6096, -1297.3680, 12.3718, 5.0);//ziare
          	        SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
  				}
				case 10:
	 			{
		 			SetPlayerCheckpoint(playerid,-381.52725, -1426.59070, 26.15115, 5.0);//farmer
          	        SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
  				}
				case 11:
	 			{
		 			SetPlayerCheckpoint(playerid,1100.0519, -1207.3170, 16.7723, 5.0);//vanzator
          	        SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
  				}
				case 12:
	 			{
		 			SetPlayerCheckpoint(playerid,268.1016, 1405.6270, 9.4336, 5.0);//petrol
          	        SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
  				}
				case 13:
	 			{
					SetPlayerCheckpoint(playerid,-2269.8848, 206.4622, 34.1436, 5.0);//cutter
          	        SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
  				}
				case 14:
	 			{
		 			SetPlayerCheckpoint(playerid,-2011.8115, 81.0124, 26.6754, 5.0);//pompier
          	        SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
				}
				case 15:
	 			{
		 			SetPlayerCheckpoint(playerid,-2124.0164, -129.0673, 34.2796, 5.0);//cement
          	        SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
				}
				case 16:
	 			{
		 			SetPlayerCheckpoint(playerid,807.6293, 1691.5919, 4.2492, 5.0);//iron delivery
          	        SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
				}
				case 17:
	 			{
      				SetPlayerCheckpoint(playerid, 2888.1289, 2046.3055, 9.7843, 5.0);//gas colector
          	        SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
				}
				case 18:
	 			{
		 			SetPlayerCheckpoint(playerid, 355.9168, 959.1389, 26.4392, 5.0);//sand delivery
        		    SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
				}
				case 19:
	 			{
		 			SetPlayerCheckpoint(playerid,-512.2859, -80.3909, 61.1940, 5.0);//lumberjack
     			    SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
				}
				case 20:
	 			{
		 			SetPlayerCheckpoint(playerid,2442.8506, -2091.6267, 12.5371, 5.0);//Transportator
          	    	SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
				}
				case 21:
	 			{
		 			SetPlayerCheckpoint(playerid,-783.3960, 674.6196, 9.3844, 5.0);//pescar
       	            SendClientMessage(playerid, COLOR_GREEN,"Locatia a fost marcata pe minimap, Du-te la cp-ul rosu pentru a ajunge la destinatie");
				}
			}
		}
		else
		{
		    DisablePlayerCheckpoint(playerid);
		    SendClientMessage(playerid, COLOR_GREEN,"Ai sters checkpointul");
		}
	}
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	return 1;
}

forward Gambler(playerid);
public Gambler(playerid)
{
 		new str[128];
        if(Gambling[playerid] != G_STATE_GAMBLING)
        {
            print("Strange error @ gambler");
            KillTimer(SlotTimer[playerid]);
            SlotTimer[playerid] = -1;
            Gambling[playerid] = G_STATE_NOT_GAMBLING;
            return 0;
        }
        new sendernamee[34];
        GetPlayerName(playerid,sendernamee, sizeof(sendernamee));
        SlotCounter[playerid] -= 1;

        new slot = SlotCounter[playerid];

        if(slot < 10)
        {
            Slots[playerid][2]+=random(3)+1;
        }
        else if(slot < 20)
        {
            Slots[playerid][1]+=random(3)+1;
            Slots[playerid][2]+=random(3)+1;
        }
        else
        {
            Slots[playerid][0]+=random(3)+1;
            Slots[playerid][1]+=random(3)+1;
            Slots[playerid][2]+=random(3)+1;
        }
        if(Slots[playerid][0] >= 6) Slots[playerid][0] = 0;
        if(Slots[playerid][1] >= 6) Slots[playerid][1] = 0;
        if(Slots[playerid][2] >= 6) Slots[playerid][2] = 0;

        ShowPlayerSlots(playerid,Slots[playerid][0],Slots[playerid][1],Slots[playerid][2]);

        if(SlotCounter[playerid] == 0)
        {
            KillTimer(SlotTimer[playerid]);
            SlotTimer[playerid] = -1;
            Gambling[playerid] = G_STATE_DISPLAY;

            if(Slots[playerid][0] == Slots[playerid][1] && Slots[playerid][0] == Slots[playerid][2])
            {
                //printf("player %d won with %d",playerid,Slots[playerid][0]); // Uncomment this line for seeing all wins

                new Multiplier=1;

                switch(Slots[playerid][0])
                {
                    case 0: Multiplier = 25;    // Cherries
                    case 1: Multiplier = 100;   // Grapes
                    case 2: Multiplier = 250;   // 69's
                    case 3: Multiplier = 500;   // Bells
                    case 4: Multiplier = 1000;  // Bar
                    case 5: Multiplier = 2000;  // Double Bars
                }

                if(PlayerInfo[playerid][pCDPlayer] == 100)
				{
				    Balance[playerid] += JackpotCaligula;
				    format(str, sizeof(str), "{FF8040}%s{FF8000}A castigat JackPotul in valoare de %d", JackpotCaligula);
    				SendClientMessageToAll(-1,str);
				    JackpotCaligula = 0;
    			    sUpdate(0,JackpotCaligulax);
	          //  	format(str, sizeof(str), " Caligula's Casino\nJackpot in valoare de:\n%d$",JackpotCaligula);
	    		//	Update3DTextLabelText(Caligulas, 0x0033FFC8, str);
			//	    PlayerInfo[playerid][pCDPlayer] = 0;
			//		Update(playerid, pCDPlayerx);
				}

                new money = floatround(Bet[playerid] * Multiplier * WIN_MULTIPLIER_GLOBAL);
				format(str,sizeof(str),"~n~~n~~n~~w~Castigator: ~g~%d$~w~!~n~~y~] ] ]",money);
                GameTextForPlayer(playerid,str,5000,3);

               	format(str, sizeof(str), "{FF8040}%s{FF8000}A castigat %d la pacanele", sendernamee,money);
    			ProxDetector(20.0, playerid, str,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);

		//		PlayerInfo[playerid][pCDPlayer] ++;
		//		Update(playerid, pCDPlayerx);
                Balance[playerid] += money;

                UpdateBetText(playerid);

                Slots[playerid][0] = random(5); // Randomize the slots again
                Slots[playerid][1] = random(5);
                Slots[playerid][2] = random(5);

            }
            else
            {
                if(Slots[playerid][0] == Slots[playerid][1] || Slots[playerid][1] == Slots[playerid][2] || Slots[playerid][0] == Slots[playerid][2])
				{
			 		GameTextForPlayer(playerid,"~n~~n~~n~~y~] ~b~Aproape~y~]",1000,3);

	 			}
                else
				{
					GameTextForPlayer(playerid,"~n~~n~~n~~r~Ghinion!",1000,3);
				}
			}

            SetTimerEx("PlayAgainTimer",DISPLAY_TIME,0,"d",playerid);
            return 1;
        }
        //printf("Counter: %d",SlotCounter[playerid]);
        return 0;
}

forward PlayAgainTimer(playerid);
public PlayAgainTimer(playerid)
{
        Gambling[playerid] = G_STATE_READY;

        // Remove the following 3 lines to disable the ability to hold down SPRINT
        new keys,lr,ud;
        GetPlayerKeys(playerid,keys,ud,lr);
        if(keys & KEY_JUMP) OnPlayerKeyStateChange(playerid,KEY_JUMP,0);
}

GetNextValidBet(value)
{
        if(value + Bet_STEP > MAX_Bet) return MIN_Bet;
        return value + Bet_STEP;
}
stock UpdateBetText(playerid)
{
    new str[128];
    new prefix[4];
    if(Balance[playerid] == 0) strcat(prefix,"~r~");
    if(Balance[playerid]  > 0) strcat(prefix,"~g~");

    format(str,sizeof(str),"~w~     Bet: ~g~%d$_____~w~Suma: %s%d$",Bet[playerid],prefix,Balance[playerid]);
    TextDrawSetString(BetText[playerid],str);
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{

    if(clickedid == TextDealcoin)
    {
		// Randomize if in Slotmachine
        if(Gambling[playerid] == G_STATE_READY)
        {
        	new money = GetPlayerMoney(playerid);
            if(Bet[playerid] > money+Balance[playerid])
            {
            	GameTextForPlayer(playerid,"~n~~n~~n~~r~Nu ai suficienti bani!",5000,3);
                return 1;
            }

            if(Balance[playerid] - Bet[playerid] < 0)
            {
				GameTextForPlayer(playerid,"~n~~n~~n~~r~Suma ta e prea mica!",5000,3);
                return 1;
    		}

           	SlotCounter[playerid] = 30+random(18);
            SlotTimer[playerid] = SetTimerEx("Gambler",GAMBLE_TIMER,1,"d",playerid);
            Gambling[playerid] = G_STATE_GAMBLING;
            Balance[playerid]-=Bet[playerid];

            new prefix[4];
            if(Balance[playerid] == 0) strcat(prefix,"~y~");
            if(Balance[playerid]  > 0) strcat(prefix,"~g~");
            if(Balance[playerid]  < 0) strcat(prefix,"~r~");

            UpdateBetText(playerid);
            new str[128];

            if(casino[playerid] == 1)
			{
				JackpotCaligula += Bet[playerid];
 				sUpdate(0,JackpotCaligulax);
            	format(str, sizeof(str), " Caligula's Casino\nJackpot in valoare de:\n%d$",JackpotCaligula);
//    			Update3DTextLabelText(Caligulas, 0x0033FFC8, str);
			}
   		}
	}

    if(clickedid == TextAddcoin)
    {
		if(Gambling[playerid] == G_STATE_READY)
        {
        	Bet[playerid] = GetNextValidBet(Bet[playerid]);
            UpdateBetText(playerid);
       	}
	}

    return 1;
}


public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
    new str2[664];
    if(playertextid == Textdsraws10230[playerid])//radio telefon
    {
        if(PlayerInfo[playerid][pCasti] == 0) return GameTextForPlayer(playerid, "Nu aveti casti", 2500, 3);
		ShowPlayerDialog(playerid, 9998, DIALOG_STYLE_LIST, "Radio Menu", "Kiss FM\nEuropa FM\nPro FM\nRadio ZU\nMagic FM\nGangsta\nRomania Manele\nRomania Populara\nRomania HipHop\n"#SERVERNAME" Radio\nProbleme Sunet", "Play", "Stop");
  	    PlayerInfo[playerid][pradio] = 1;
    }
	if(playertextid == Textdsraws10227[playerid])
	{
	    PlayerTextDrawHide(playerid,Textdsraws16666666[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws2228[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10222[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10223[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10224[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10225[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10226[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10227[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10228[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10229[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10230[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10231[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10232[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10233[playerid]);
   	    PlayerTextDrawShow(playerid,Textdsraws2229[playerid]);
   		PlayerTextDrawShow(playerid,Galaxy3Gallery);
		PlayerTextDrawShow(playerid,Galaxy3Gallery2);
		PlayerTextDrawShow(playerid,Galaxy3Gallery3);
		PlayerTextDrawShow(playerid,Galaxy3Gallery4);
		PlayerTextDrawShow(playerid,Galaxy3Gallery5);
		PlayerTextDrawShow(playerid,Galaxy3Gallery6);

	}
	if(playertextid == Textdsraws10222[playerid])//camera
    {
        SendClientMessage(playerid, -1, "Camera: Apasa F8 pentru a face o poza");//camera
		pcamera[playerid] = 0;
	   	SetCameraBehindPlayer(playerid);
        if(takingselfie[playerid] == 0)
		{
	        CancelSelectTextDraw(playerid);
		    GetPlayerPos(playerid,lX[playerid],lY[playerid],lZ[playerid]);
			static Float: n1X, Float: n1Y;
			if(Degree[playerid] >= 360) Degree[playerid] = 0;
			Degree[playerid] += Speeed;
			n1X = lX[playerid] + Radius * floatcos(Degree[playerid], degrees);
			n1Y = lY[playerid] + Radius * floatsin(Degree[playerid], degrees);
			SendClientMessage(playerid, COLOR_YELLOW, "Foloseste A si D sa misti camera si F8 pentru a face o poza, dupa care apasa ENTER");
			SetPlayerCameraPos(playerid, n1X, n1Y, lZ[playerid] + Height);
			SetPlayerCameraLookAt(playerid, lX[playerid], lY[playerid], lZ[playerid]+1);
			SetPlayerFacingAngle(playerid, Degree[playerid] - 90.0);
		    TogglePlayerControllable(playerid,0);
			ApplyAnimation(playerid, "PED", "gang_gunstand", 4.1, 1, 1, 1, 1, 1, 1);
			takingselfie[playerid] = 1;
			return 1;
		}
	}
    if(playertextid == Textdsraws10224[playerid])//mesaj
		ShowPlayerDialog(playerid,34, DIALOG_STYLE_INPUT, "{FFFF00}SMS", "{FFFFFF}Scrie ID-ul playerului", "{FFFFFF}Ok", "{FFFFFF}Cancel");

	if(playertextid == Textdsraws10233[playerid])//contacte
        ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Contacte:", "My Contacts\nAdd Contact\nDelete Contact", "Select", "Back");

    if(playertextid == Textdsraws10230[playerid])//radio telefon
    {
        if(PlayerInfo[playerid][pCasti] == 0) return GameTextForPlayer(playerid, "Nu aveti casti", 2500, 3);
		ShowPlayerDialog(playerid, 32, DIALOG_STYLE_LIST, "Radio Menu", "Kiss FM\nEuropa FM\nPro FM\nRadio ZU\nMagic FM\nGangsta\nRomania Manele\nRomania Populara\nRomania HipHop\n"#SERVERNAME" Radio\nProbleme Sunet", "Play", "Stop");
  	    PlayerInfo[playerid][pradio] = 1;
    }
 	if(playertextid == Textdsraws10223[playerid])//suna buton
    	ShowPlayerDialog(playerid,33, DIALOG_STYLE_INPUT, "{4DFF00}CALL", "{FFFFFF}Scrie ID-ul playerului", "{FFFFFF}Ok", "{FFFFFF}Cancel");


    if(playertextid == Textdsraws24[playerid])//selfie
    {
        CancelSelectTextDraw(playerid);
        InMeniuIphone[playerid] = 0;
        PhoneMeniu[playerid] = 0;
        SendClientMessage(playerid, -1, "Camera: Apasa F8 pentru a face o poza si /sacamera pentru a inchide");//camera
		TDHide(playerid);
    	new playerState = GetPlayerState(playerid);
    	if(playerState != PLAYER_STATE_DRIVER && playerState != PLAYER_STATE_PASSENGER)
		{
  			if(pcamera[playerid] == 0)
		    {
		    	pcamera[playerid] = 1;
	   		    if(IsValidObject(firstpersona[playerid])) DestroyObject(firstpersona[playerid]);
	   		    if(IsValidPlayerObject(playerid,vehview[playerid])) DestroyPlayerObject(playerid,vehview[playerid]);
		       	firstpersona[playerid] = CreateDynamicObject(19300, 0.0, 0.0, 1110.0, 0.0, 0.0, 0.0);
	   	    	AttachDynamicObjectToPlayer(firstpersona[playerid],playerid,  0.0, 0.12, 0.7, 0.0, 0.0, 0.0);
		       	AttachCameraToDynamicObject(playerid, firstpersona[playerid]);
		       	return 1;
		   	}
	   		if(pcamera[playerid] == 1)
	   		{
	   		    if(IsValidDynamicObject(firstpersona[playerid])) DestroyDynamicObject(firstpersona[playerid]);
	   		    if(IsValidPlayerObject(playerid,vehview[playerid])) DestroyPlayerObject(playerid,vehview[playerid]);
	   		   	pcamera[playerid] = 0;
	   		    SetCameraBehindPlayer(playerid);
		       	return 1;
	   		}
   		}
	    if(playerState == PLAYER_STATE_DRIVER)
		{
			if(pcamera[playerid] == 0)
			{
  		   	    if(IsValidDynamicObject(firstpersona[playerid])) DestroyDynamicObject(firstpersona[playerid]);
	   		    if(IsValidPlayerObject(playerid,vehview[playerid])) DestroyPlayerObject(playerid,vehview[playerid]);
				new p = GetPlayerVehicleID(playerid);
				vehview[playerid] = CreatePlayerObject(playerid,19300, 0.0000, -1282.9984, 10.1493, 0.0000, -1, -1, 100);
				AttachPlayerObjectToVehicle(playerid,vehview[playerid],p,-0.314999, -0.195000, 0.510000, 0.000000, 0.000000, 0.000000);
				AttachCameraToPlayerObject(playerid,vehview[playerid]);
				pcamera[playerid] = 1;
				return 1;
			}
			if(pcamera[playerid] == 1)
	   		{
	   		    if(IsValidDynamicObject(firstpersona[playerid])) DestroyDynamicObject(firstpersona[playerid]);
	   		    if(IsValidPlayerObject(playerid,vehview[playerid])) DestroyPlayerObject(playerid,vehview[playerid]);
	   		    pcamera[playerid] = 0;
	   		    SetCameraBehindPlayer(playerid);
	   		    return 1;
	   		}
		}
	    if(playerState == PLAYER_STATE_PASSENGER) return SendClientMessage(playerid, COLOR_GREY, "   Nu poti da ca pasager!");
  	}
  	if(playertextid == Textdsraws10226[playerid])
    {
        if (!PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = 1;
			GameTextForPlayer(playerid, "Cartela sim DezActivata", 2500, 3);
		}
		else if (PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = 0;
			GameTextForPlayer(playerid, "Cartela sim Activata", 2500, 3);
		}
    }

	if(playertextid == Textdsraws10230[playerid])//radio telefon
    {
        if(PlayerInfo[playerid][pCasti] == 0) return GameTextForPlayer(playerid, "Nu aveti casti", 2500, 3);
		ShowPlayerDialog(playerid, 32, DIALOG_STYLE_LIST, "Radio Menu", "Kiss FM\nEuropa FM\nPro FM\nRadio ZU\nMagic FM\nGangsta\nRomania Manele\nRomania Populara\nRomania HipHop\n"#SERVERNAME" Radio\nProbleme Sunet", "Play", "Stop");
  	    PlayerInfo[playerid][pradio] = 1;
    }

    if(playertextid == Textdsraws10229[playerid])// telefon
    {
        menustyle[playerid] = 1;
        ShowStats(playerid,playerid);
    }


    if(playertextid == Textdsraws10231[playerid])//locatii telefon
    {
        ShowPlayerDialog(playerid, 19,DIALOG_STYLE_LIST,"G.P.S Positions",
   		"Joburi\n\
	   	DMW\n\
		PayPoint\n\
		Primarie\n\
	   	L.S.P.D.\n\
   		Pentagon\n\
   		National Guard\n\
		DealerShip\n\
		GPL Place\n\
		Parlament\n\
		Presedentie\n\
		Chilliad Station\n\
		Pirate Boat\n\
		Didier sachs\n\
		victim\n\
		prolaps\n\
		zip Clothes\n\
		binco","Track","Off");
    }



    if(playertextid == Textdsraws10225[playerid])
    {
        new name[34];
        GetPlayerName(playerid, name, sizeof(name));
		format(str2,sizeof(str2),"~n~~r~~n~Informatii GameMode:~n~ ~n~~p~ Acesta a fost intemeiat ~n~ de Ownerii: ~n~~b~ Lightman ~w~si ~b~Mr.Zeth ~n~~n~~w~Online Players:~y~ %d~n~~w~Max Players:~y~ %d~n~~w~Best Player:~y~ %s~n~~w~Data intemeierii: ~b~~n~20.12.2014~n~~w~Redeschidere si Wipe: ~b~~n~15.03.2015 ~n~~w~Redeschidere si Wipe: ~b~~n~15.06.2015~n~~w~Redeschidere si Wipe: ~b~~n~05.09.2015~n~~w~Oficial Vandut:~n~02.01.2016",GetPlayers(),RecordPlayers,name);
		PlayerTextDrawSetString(playerid,Textdsraws20000[playerid],str2);

        PlayerTextDrawHide(playerid,Textdsraws16666666[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws2228[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10222[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10223[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10224[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10225[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10226[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10227[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10228[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10229[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10230[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10231[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10232[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10233[playerid]);
   	    PlayerTextDrawShow(playerid,Textdsraws2229[playerid]);
   	    PlayerTextDrawShow(playerid,Textdsraws20000[playerid]);
    }
    if(playertextid == Textdsraws10[playerid])
    {
      	if(PhoneMeniu[playerid] == 1)
      	{
      	    // aici este meniul cu apl
  	 		PhoneMeniu[playerid] = 0;
	//        PhoneMeniu[playerid] = 0;
	//        CancelSelectTextDraw(playerid);
	//		SendClientMessage(playerid, -1, "da");//buton mijloc
	//		PlayerTextDrawHide(playerid,Textdsraws0[playerid]);//colt stanga sus
	//        PlayerTextDrawHide(playerid,Textdsraws1[playerid]);//colt dreapta sus
	//        PlayerTextDrawHide(playerid,Textdsraws2[playerid]);//colt dreata jos
	//        PlayerTextDrawHide(playerid,Textdsraws3[playerid]);//colt stanga jos
	//        PlayerTextDrawHide(playerid,Textdsraws4[playerid]);//mijlocul ecranului
	//        PlayerTextDrawHide(playerid,Textdsraws5[playerid]);//rama dreapta
	//        PlayerTextDrawHide(playerid,Textdsraws6[playerid]);//rama sus
	//        PlayerTextDrawHide(playerid,Textdsraws7[playerid]);//rama stanga
	 //       PlayerTextDrawHide(playerid,Textdsraws8[playerid]);//rama jos
			PlayerTextDrawShow(playerid,Textdsraws16666666[playerid]);
	        PlayerTextDrawHide(playerid,Textdsraws9[playerid]);//fundalul
	//        PlayerTextDrawHide(playerid,Textdsraws10[playerid]);//butonul misloc
	        PlayerTextDrawHide(playerid,Textdsraws11[playerid]);//bara de sus alba
	//        PlayerTextDrawHide(playerid,Textdsraws12[playerid]);//aceasi bara notificare ingrosata sus
	//	    PlayerTextDrawHide(playerid,Textdsraws13[playerid]);//aceasi bara notificare ingrosata sus
	//        PlayerTextDrawHide(playerid,Textdsraws14[playerid]);//bara notificare sus mai ingrosata
	//        PlayerTextDrawHide(playerid,Textdsraws15[playerid]);//no sim card
	//        PlayerTextDrawHide(playerid,Textdsraws16[playerid]);//100%bateria
	//        PlayerTextDrawHide(playerid,Textdsraws17[playerid]);//bateria restul
	//        PlayerTextDrawHide(playerid,Textdsraws18[playerid]);//jumate de baterie gri dewscarcata
 	        PlayerTextDrawHide(playerid,Textdsraws20000[playerid]);//lista fac
	        PlayerTextDrawHide(playerid,Textdsraws19[playerid]);//ora
	        PlayerTextDrawHide(playerid,Textdsraws20[playerid]);//data vineri 12 2015
	        PlayerTextDrawHide(playerid,Textdsraws21[playerid]);//rama de jos cu slide bara
	        PlayerTextDrawHide(playerid,Textdsraws22[playerid]);//slide bara de "camera" si "slide"
	        PlayerTextDrawHide(playerid,Textdsraws23[playerid]);//cerntru"slide"
	        PlayerTextDrawHide(playerid,Textdsraws24[playerid]);//"camera"
	        PlayerTextDrawHide(playerid,Textdsraws25[playerid]);//centru"slide"
	        PlayerTextDrawHide(playerid,Textdsraws26[playerid]);//slide
	//        PlayerTextDrawHide(playerid,Textdsraws27[playerid]);//difuzor
	//        PlayerTextDrawHide(playerid,Textdsraws28[playerid]);//camera wfront*/
			PlayerTextDrawShow(playerid,Textdsraws2229[playerid]);
			PlayerTextDrawShow(playerid,Textdsraws10222[playerid]);
			PlayerTextDrawShow(playerid,Textdsraws10223[playerid]);
			PlayerTextDrawShow(playerid,Textdsraws10224[playerid]);
			PlayerTextDrawShow(playerid,Textdsraws10225[playerid]);
			PlayerTextDrawShow(playerid,Textdsraws10226[playerid]);
			PlayerTextDrawShow(playerid,Textdsraws10227[playerid]);
			PlayerTextDrawShow(playerid,Textdsraws10228[playerid]);
			PlayerTextDrawShow(playerid,Textdsraws10229[playerid]);
			PlayerTextDrawShow(playerid,Textdsraws10230[playerid]);
			PlayerTextDrawShow(playerid,Textdsraws10231[playerid]);
			PlayerTextDrawShow(playerid,Textdsraws10232[playerid]);
			PlayerTextDrawShow(playerid,Textdsraws10233[playerid]);
			PlayerTextDrawHide(playerid,Textdsraws2228[playerid]);
	   		PlayerTextDrawHide(playerid,Galaxy3Gallery);
			PlayerTextDrawHide(playerid,Galaxy3Gallery2);
			PlayerTextDrawHide(playerid,Galaxy3Gallery3);
			PlayerTextDrawHide(playerid,Galaxy3Gallery4);
			PlayerTextDrawHide(playerid,Galaxy3Gallery5);
			PlayerTextDrawHide(playerid,Galaxy3Gallery6);
   		}
   		else if(PhoneMeniu[playerid] == 0)
      	{
      	    // aici este ecranul blocat
      	    PhoneMeniu[playerid] = 1;
      	    PlayerTextDrawHide(playerid,Textdsraws16666666[playerid]);
      	    PlayerTextDrawHide(playerid,Textdsraws2229[playerid]);
      	    PlayerTextDrawHide(playerid,Textdsraws10222[playerid]);
      	    PlayerTextDrawHide(playerid,Textdsraws10223[playerid]);
      	    PlayerTextDrawHide(playerid,Textdsraws10224[playerid]);
      	    PlayerTextDrawHide(playerid,Textdsraws10225[playerid]);
      	    PlayerTextDrawHide(playerid,Textdsraws10226[playerid]);
      	    PlayerTextDrawHide(playerid,Textdsraws10227[playerid]);
      	    PlayerTextDrawHide(playerid,Textdsraws10228[playerid]);
      	    PlayerTextDrawHide(playerid,Textdsraws10229[playerid]);
      	    PlayerTextDrawHide(playerid,Textdsraws10230[playerid]);
      	    PlayerTextDrawHide(playerid,Textdsraws10231[playerid]);
      	    PlayerTextDrawHide(playerid,Textdsraws10232[playerid]);
      	    PlayerTextDrawHide(playerid,Textdsraws10233[playerid]);
      	    PlayerTextDrawHide(playerid,Textdsraws20000[playerid]);
      	    PlayerTextDrawHide(playerid,Textdsraws2228[playerid]);
	  		PlayerTextDrawHide(playerid,Galaxy3Gallery);
			PlayerTextDrawHide(playerid,Galaxy3Gallery2);
			PlayerTextDrawHide(playerid,Galaxy3Gallery3);
			PlayerTextDrawHide(playerid,Galaxy3Gallery4);
			PlayerTextDrawHide(playerid,Galaxy3Gallery5);
			PlayerTextDrawHide(playerid,Galaxy3Gallery6);
      	    TDShow(playerid);
  	    }
  	    else if(PhoneMeniu[playerid] == 3)
        TDShow(playerid);
     }


    if(playertextid == Textdsraws10228[playerid])
    {
        format(str2,sizeof(str2),"~r~~n~~n~Lista factiunilor:~n~~n~~y~LSPD id 1~n~FBI id 2~n~National Guard id 3~n~Agentia prezidentiala id 4~n~~p~Rifa Gang id 5~n~Triads Mafia id 6~y~~n~Guvernul id 7~p~~n~Hitman Agency id 8~n~News Reporter id 9~n~Taxi Cab. Company id 10~n~~y~Navy Seal id 11~n~Parlamentul id 12~n~~p~Bratva Mafia id 13~n~Ballas Gang id 14~n~Seville Gang id 15~n~Corleone Mafia id 16~n~~y~CIA id 17~n~~n~~r~Respectati Regulamentul");
		PlayerTextDrawSetString(playerid,Textdsraws20000[playerid],str2);
		PlayerTextDrawHide(playerid,Textdsraws16666666[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws2228[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10222[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10223[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10224[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10225[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10226[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10227[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10228[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10229[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10230[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10231[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10232[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10233[playerid]);
   	    PlayerTextDrawShow(playerid,Textdsraws2229[playerid]);
   	    PlayerTextDrawShow(playerid,Textdsraws20000[playerid]);
    }

	if(playertextid == Textdsraws10232[playerid])//ceas
    {
        PlayerTextDrawShow(playerid,Textdsraws11[playerid]);//bara de sus alba
        PlayerTextDrawShow(playerid,Textdsraws19[playerid]);//ora
        PlayerTextDrawShow(playerid,Textdsraws20[playerid]);//data vineri 12 2015
        PlayerTextDrawShow(playerid,Textdsraws21[playerid]);//rama de jos cu slide bara
        PlayerTextDrawShow(playerid,Textdsraws22[playerid]);//slide bara de "camera" si "slide"
        PlayerTextDrawShow(playerid,Textdsraws23[playerid]);//cerntru"slide"
        PlayerTextDrawShow(playerid,Textdsraws25[playerid]);//centru"slide"
        PlayerTextDrawShow(playerid,Textdsraws26[playerid]);//slide
        PlayerTextDrawHide(playerid,Textdsraws2228[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10222[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10223[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10224[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10225[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10226[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws16666666[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10227[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10228[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10229[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10230[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10231[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10232[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10233[playerid]);
   	    PlayerTextDrawShow(playerid,Textdsraws2229[playerid]);
  	}
    return 1;
}

public ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{

	    PlayerInfo[targetid][pCar1] = 0;
	    PlayerInfo[targetid][pCar2] = 0;
	    PlayerInfo[targetid][pCar3] = 0;
	    PlayerInfo[targetid][pCar4] = 0;
	    PlayerInfo[targetid][pCar5] = 0;
	    PlayerInfo[targetid][pCar6] = 0;
	    PlayerInfo[targetid][pCar7] = 0;
	    PlayerInfo[targetid][pCar8] = 0;
     	for(new i=0; i<MAX_VEHICLES; i++)
      	{
      	    if(OwnedVeh(i) != 0)
      	    {
	            if(strmatch(vInfo[OwnedVeh(i)][vOwner], PlayerName(targetid)))
	            {
	                if(PlayerInfo[targetid][pCar1] == 0) { PlayerInfo[targetid][pCar1] = i; continue; }
	                else if(PlayerInfo[targetid][pCar2] == 0) { PlayerInfo[targetid][pCar2] = i; continue; }
	                else if(PlayerInfo[targetid][pCar3] == 0) { PlayerInfo[targetid][pCar3] = i; continue; }
	                else if(PlayerInfo[targetid][pCar4] == 0) { PlayerInfo[targetid][pCar4] = i; continue; }
	                else if(PlayerInfo[targetid][pCar5] == 0) { PlayerInfo[targetid][pCar5] = i; continue; }
	                else if(PlayerInfo[targetid][pCar6] == 0) { PlayerInfo[targetid][pCar6] = i; continue; }
	                else if(PlayerInfo[targetid][pCar7] == 0) { PlayerInfo[targetid][pCar7] = i; continue; }
	                else if(PlayerInfo[targetid][pCar8] == 0) { PlayerInfo[targetid][pCar8] = i; continue; }
	            }
			}
       	}
 		new dtext[20];
		if(STDPlayer[targetid] == 1) { dtext = "Chlamydia"; }
		else if(STDPlayer[targetid] == 2) { dtext = "Gonorrhea"; }
		else if(STDPlayer[targetid] == 3) { dtext = "Syphilis"; }
		else { dtext = "None"; }
	    new ftext[25];
     	if(PlayerInfo[targetid][pMember] == 0) ftext = "Civil";
		else if(PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1)  ftext = "Police";
		else if(PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2)  ftext = "FBI";
		else if(PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3)  ftext = "N.G.";
		else if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4)  ftext = "A.P.";
		else if(PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5)  ftext = "Rifa";
		else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6)  ftext = "Triads";
		else if(PlayerInfo[targetid][pMember] == 7 || PlayerInfo[targetid][pLeader] == 7)  ftext = "Guvern";
		else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8)  ftext = "Hitman Company";
		else if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9)  ftext = "News Company";
		else if(PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10)  ftext = "Taxi Company";
		else if(PlayerInfo[targetid][pMember] == 11 || PlayerInfo[targetid][pLeader] == 11)  ftext = "Navy Force";
		else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12)  ftext = "Parlament";
		else if(PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13)  ftext = "Bratva";
		else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14)  ftext = "Ballas";
		else if(PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15)  ftext = "Seville";
		else if(PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16)  ftext = "Corleone";
		else if(PlayerInfo[targetid][pMember] == 17 || PlayerInfo[targetid][pLeader] == 17)  ftext = "CIA";
		else { ftext = "Civil"; }
  	    new rtext[64];
		if(PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1)//PD Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Agent"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Agent-Sef"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Subinspector"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Inspector"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Prim Inspector"; }
	        else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Subcomisar"; }
	        else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Comisar"; }
	        else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Chestor"; }
	        else if(PlayerInfo[targetid][pRank] == 9) { rtext = "Chestor-Sef"; }
	        //Chestor-Sef
	        //Chestor-General
			else { rtext = "Cadet"; }
		}
		else if(PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2)//FBI Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Cadet"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Agent Secret"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Agent Special"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Agent Special de comanda"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Sef de divizie"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Prim-Sef de divizie"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Asistent Director"; }
		    else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Director Adjunct"; }
		    else if(PlayerInfo[targetid][pRank] == 9) { rtext = "Director"; }
		    //director
		    //director general
			else { rtext = "Intern"; }
		}
		else if(PlayerInfo[targetid][pMember] == 17 || PlayerInfo[targetid][pLeader] == 17)//CIA Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Cadet"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Agent Secret"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Agent Special"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Agent Special de comanda"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Sef de divizie"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Prim-Sef de divizie"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Asistent Director"; }
		    else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Director Adjunct"; }
		    else if(PlayerInfo[targetid][pRank] == 9) { rtext = "Colonel"; }
  			//Boss
			else { rtext = "Director"; }
		    //director
		    //director general
		}
		else if(PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3)//NG Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Soldat"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Fruntas"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Caporal"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Sergent"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Plutonier"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Locotenent"; }
		    else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Capitan"; }
		    else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Maior"; }
		    else if(PlayerInfo[targetid][pRank] == 9) { rtext = "Colonel"; }
  			//Boss
			else { rtext = "Unknown"; }
		    //colonel
		    //general
		    //maresal

		}
		else if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4)//agentia prezidentiala
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Sofer"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Bodyguard"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Consilier pentru cetateni"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Consilier"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Consilier"; }
	        else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Consilier"; }
	        else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Presedinte"; }
	        else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Presedinte"; }
	        else if(PlayerInfo[targetid][pRank] == 9) { rtext = "Presedinte"; }
			else { rtext = "Unknown"; }
		}
		else if(PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5)//Surenos Ranks  Rifa
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Forastero"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Asociado"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Miembro"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Proscrito"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Mano Derecha"; }
  			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Corona"; }
  			else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Patsani"; }
  			else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Underboss"; }
  			else if(PlayerInfo[targetid][pRank] == 9) { rtext = "Boss"; }
  			//Boss
			else { rtext = "Unknown"; }
		}
		else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6)//La Famiglia Sinatra Ranks   triads
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Gaij in"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Wakashu"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Shatei"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "White Soul"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Red Dragon"; }
  			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Fu Shan"; }
  			else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Shan Chu"; }
  			else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Golden Katana";}
		 	else if(PlayerInfo[targetid][pRank] == 9) { rtext = "Dragon-Hearth"; }
  			//Dragon Heart
			else { rtext = "Outsider"; }
		}
		else if(PlayerInfo[targetid][pMember] == 7)//Mayor ranks                             guvern
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Ministrul economiei"; }
		    else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Ministrul justitiei"; }
		    else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Ministrul de externe"; }
		    else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Ministrul apararii"; }
		    else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Ministrul de interne"; }
		    else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Vice Prim-Ministru"; }
		    else if(PlayerInfo[targetid][pRank] == 9) { rtext = "Prim-ministru"; }
		    else { rtext = "None"; }
		}
		else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8)//Hitman Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Freelancer"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Marksman"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Agent"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Agent-Sef"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Special Agent"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Special Agent-Sef"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Vice-Director"; }
		    else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Prim-Vice-Director"; }
		    else if(PlayerInfo[targetid][pRank] == 9) { rtext = "Director"; }
		    //director
			else { rtext = "Freelancer"; }
		}
		else if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9)//NR Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Salariat"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Jurnalist"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Jurnalist-Sef"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Secretar"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Editor"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Editor-Sef"; }
		    else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Manager"; }
		    else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Producator"; }
		    else if(PlayerInfo[targetid][pRank] == 9) { rtext = "Prim-Producator"; }
			//prim-producator
			else { rtext = "Intern Worker"; }
		}
		else if(PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10)//Taxi Company Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Trainee"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Taxi Rookie"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Cabbie"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Dispatcher"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Shift Supervisor"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Taxi Company Owner"; }
			else { rtext = "Trainee"; }
		}
		else if(PlayerInfo[targetid][pMember] == 11 || PlayerInfo[targetid][pLeader] == 11)//navy force
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Soldat"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Fruntas"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Caporal"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Sergent"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Plutonier"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Aspirant"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Locotenent-comandor"; }
	  		else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Capitan-comandor"; }
	  		else if(PlayerInfo[targetid][pRank] == 9) { rtext = "Comandor"; }
			//comandor
			//amiral
			//maresal
			else { rtext = "Trainee"; }
		}
		else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12)//parlamentul
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Senator"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Deputat"; }
	        else if(PlayerInfo[targetid][pRank] == 9) { rtext = "Presedintele Parlamentului"; }
			else { rtext = "EMS Explorer"; }
		}
		else if(PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13)//Yamaguchi ranks    bratva
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Shestyorka"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Byki"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Torpedo"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Krysha"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Boevik"; }
  			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Brigadier"; }
  			else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Kassir"; }
  			else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Sovietnik"; }
  			else if(PlayerInfo[targetid][pRank] == 9) { rtext = "Pakhan"; }
  			//Pakhan
			else { rtext = "Rookie Rider"; }
		}
		else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14)//Yamaguchi ranks            ballas
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Gangsta"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Trusted Balla"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Hood Balla"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Fresh Balla"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Homie"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Top O.G(FIC)"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Top O.G(SIC)"; }
	  		else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Original Gangster"; }
	  		else if(PlayerInfo[targetid][pRank] == 9) { rtext = "Full Gansta"; }
	  		//Full Gangsta
			else { rtext = "Gaij in"; }
		}
		else if(PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15)//Chornaya Bratva gang Ranks     seville
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Homies"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Big Homies"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Thugs"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Soulja"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Street Soldier"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Original Gangster"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Big Gangster"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Double O.G."; }
			else if(PlayerInfo[targetid][pRank] == 9) { rtext = "G. King"; }
			//G-King
			else { rtext = "Shestiorka"; }
		}
		else if(PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16)//La Vice Ranks          corleone
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Outsider"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Giovane D'honore"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Piciotto"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Sgarrista"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Capo Regime"; }
  			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Capo Crimini"; }
  			else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Capo Bastone"; }
  			else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Done"; }
  			else if(PlayerInfo[targetid][pRank] == 9) { rtext = "GodFather"; }
			//Godfather
			else { rtext = "Dumb Hoe"; }
		}
		else
		{
		    rtext = "Nu ai Factiune";
		}

        new jtext[20];
        if     (PlayerInfo[targetid][pJob1] == 1)   jtext = "Detectiv";
        else if(PlayerInfo[targetid][pJob1] == 2)   jtext = "Avocat";
        else if(PlayerInfo[targetid][pJob1] == 3)   jtext = "BodyGuard";
        else if(PlayerInfo[targetid][pJob1] == 4)   jtext = "Paramedic";
        else if(PlayerInfo[targetid][pJob1] == 5)   jtext = "Sweeper";
        else if(PlayerInfo[targetid][pJob1] == 6)   jtext = "Boxeur";
        else if(PlayerInfo[targetid][pJob1] == 7)   jtext = "Mecanic";
        else if(PlayerInfo[targetid][pJob1] == 8)   jtext = "Transportator";
        else if(PlayerInfo[targetid][pJob1] == 9)   jtext = "Paper Boy";
		else if(PlayerInfo[targetid][pJob1] == 10)  jtext = "Pizza boy";
		else if(PlayerInfo[targetid][pJob1] == 11)  jtext = "Fermier";
		else if(PlayerInfo[targetid][pJob1] == 12)  jtext = "Taietor de iarba";
		else if(PlayerInfo[targetid][pJob1] == 13)  jtext = "Pompier";
        else if(PlayerInfo[targetid][pJob1] == 14)  jtext = "Barcagiu";
        else if(PlayerInfo[targetid][pJob1] == 15)  jtext = "Lumberjack";
        else if(PlayerInfo[targetid][pJob1] == 16)  jtext = "Sofer de autobuz";
        else if(PlayerInfo[targetid][pJob1] == 29)  jtext = "Trucker";
        else jtext = "Nu";
        new jtext1[20];

        if     (PlayerInfo[targetid][pJob2] == 1)   jtext1 = "Detectiv";
        else if(PlayerInfo[targetid][pJob2] == 2)   jtext1 = "Avocat";
        else if(PlayerInfo[targetid][pJob2] == 3)   jtext1 = "BodyGuard";
        else if(PlayerInfo[targetid][pJob2] == 4)   jtext1 = "Paramedic";//1188.1749, -1330.3890, 12.5409
        else if(PlayerInfo[targetid][pJob2] == 5)   jtext1 = "Sweeper";//1641.1062, -1830.2786, 12.5070
        else if(PlayerInfo[targetid][pJob2] == 6)   jtext1 = "Boxeur";//2228.86133, -1722.43799, 13.64850,
        else if(PlayerInfo[targetid][pJob2] == 7)   jtext1 = "Mecanic";//1788.4453, -2045.5338, 12.4900
        else if(PlayerInfo[targetid][pJob2] == 8)   jtext1 = "Transportator";//2426.6621, -2089.0281, 12.5302
        else if(PlayerInfo[targetid][pJob2] == 9)   jtext1 = "Paper Boy";//1461.0365, -2428.4045, 12.4876
		else if(PlayerInfo[targetid][pJob2] == 10)  jtext1 = "Pizza boy";//2099.9043, -1807.5453, 12.5319
		else if(PlayerInfo[targetid][pJob2] == 11)  jtext1 = "Fermier";//-375.1307, -1451.6597, 24.7023
		else if(PlayerInfo[targetid][pJob2] == 12)  jtext1 = "Taietor de iarba";//1889.3528, -1159.2781, 23.1354
		else if(PlayerInfo[targetid][pJob2] == 13)  jtext1 = "Peompier";//-2043.7219, 55.6133, 27.3560
        else if(PlayerInfo[targetid][pJob2] == 14)  jtext1 = "Barcagiu";//2436.3826, -2708.4597, 1.9861
        else if(PlayerInfo[targetid][pJob2] == 15)  jtext1 = "Lumberjack";//-506.1418, -46.1963, 59.1475
        else if(PlayerInfo[targetid][pJob2] == 16)  jtext1 = "Sofer de autobuz";
        else if(PlayerInfo[targetid][pJob2] == 29)  jtext1 = "Trucker";
        else jtext1 = "Nu";
		new drank[20];
		if(PlayerInfo[targetid][pPremiumAccount] == 1)drank = "Da";
		else if(PlayerInfo[targetid][pPremiumAccount] >= 2)
		drank = "Good";
		else drank = "Nu";
		new married[20];
   		new atext[20];
		if(PlayerInfo[targetid][pSex] == 1) atext = "Barbat";
		else if(PlayerInfo[targetid][pSex] == 2)  atext = "Femeie";
		new fstext[20];
		if(GetPlayerFightingStyle(targetid) == FIGHT_STYLE_NORMAL)
		fstext = "Normal";
		else if(GetPlayerFightingStyle(targetid) == FIGHT_STYLE_BOXING)
		fstext = "Box";
		else if(GetPlayerFightingStyle(targetid) == FIGHT_STYLE_KUNGFU)
		fstext = "Kung Fu";
		else if(GetPlayerFightingStyle(targetid) == FIGHT_STYLE_KNEEHEAD)
		fstext = "Knee Head";
		else if(GetPlayerFightingStyle(targetid) == FIGHT_STYLE_GRABKICK)
		fstext = "Grab'n Kick";
		else if(GetPlayerFightingStyle(targetid) == FIGHT_STYLE_ELBOW)
		fstext = "El Bow";
		strmid(married, PlayerInfo[targetid][pMarriedTo], 0, strlen(PlayerInfo[targetid][pMarriedTo]), 255);
		new age = PlayerInfo[targetid][pAge];
		new secundee = PlayerInfo[targetid][pConnectTime];
		new lotto = PlayerInfo[targetid][pLotto];
		new deaths = PlayerInfo[targetid][pDeath];
		new crimes = PlayerInfo[targetid][pCrime];
		new arrests = PlayerInfo[targetid][pArrestedTime];
		new warrests = PlayerInfo[targetid][pWantedDeaths];
		new drugs = PlayerInfo[targetid][pDrugs];
		new mats = PlayerInfo[targetid][pMaterials];
		new wanted = PlayerInfo[targetid][pWanted];
		new level = PlayerInfo[targetid][pLevel];
		new exp = PlayerInfo[targetid][pRespect];
		new mutted = PlayerInfo[targetid][pMute];
		new pnumber = PlayerInfo[targetid][pPhoneNumber];
		new account = PlayerInfo[targetid][pAccount];
		new nxtlevel = PlayerInfo[targetid][pLevel]+1;
		new yeni = PlayerInfo[targetid][pYeni];
		new kills = PlayerInfo[targetid][pKill];
		new cassh =  GetPlayerCash(targetid);
		new bizkey = PlayerInfo[targetid][pBiz];
		new expamount = nxtlevel*levelexp;
		new lizing = PlayerInfo[targetid][pLeasing];
		new helperr =  PlayerInfo[targetid][pHelper];
		new hottel = PlayerInfo[targetid][pHotel];
		new punish = PlayerInfo[targetid][pPunish];
		new warnuri = PlayerInfo[targetid][pWarns];
		new housee = PlayerInfo[targetid][pHouse];
		new rents = HireCar[targetid];
		new costlevel = nxtlevel*levelcost;//10k for testing purposes
  		new jailtext[50];
		if(PlayerInfo[targetid][pJail] > 0)
		format(jailtext, sizeof(jailtext), "Da, %ds", PlayerInfo[targetid][pJailTime]);
		else format(jailtext, sizeof(jailtext), "Nu");
		new Float:px,Float:py,Float:pz;
		GetPlayerPos(targetid, px, py, pz);
		new coordsstring[256];

		new Float:health, Float:armour;
		GetPlayerHealth(targetid,health);
		GetPlayerArmour(targetid,armour);
		new skin = GetPlayerSkin(targetid);
		new interiorss = GetPlayerInterior(targetid);
		new local = 0;//PlayerInfo[targetid][photel];
		new vw = GetPlayerVirtualWorld(targetid);
		if(menustyle[playerid] == 0)
		{
			format(coordsstring, sizeof(coordsstring),"{F23A0D}|________________________________{FFFFFF}|{22DD47}Buletin %s ID: (%d){F23A0D}| _________________________________{FFFFFF}|",PlayerName(targetid), targetid);
			SendClientMessage(playerid, COLOR_GREEN,coordsstring);
			format(coordsstring, sizeof(coordsstring), "{FFFF80}| Level: %d | Sex: %s | Varsta: %d | Bani: $%d | Banca: $%d | Tel: %d | VIP: %s | Skin ID: %d |", level,atext,age,cassh,account,pnumber,drank,skin);//FormatNumber(costlevel)
			SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
			format(coordsstring, sizeof(coordsstring), "{FFFF80}| Ore Jucate: %d | Minute Jucate: %d | Secunde Jucate: %d | Warn: %d | Faction Warn: %d | Mute: %d | Wanted: %d |",secundee/3600,secundee/60, secundee,warnuri, PlayerInfo[targetid][pFwarn],mutted,wanted);
			SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
			format(coordsstring, sizeof(coordsstring), "{80FF80}| Respect: %d/%d | NextLevelCost: %d | Deaths: %d | Kill: %d | Drugs: %d | Materials: %d | WDeath %d |",exp,expamount,costlevel,deaths,kills,drugs,mats,warrests);
			SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
			format(coordsstring, sizeof(coordsstring), "{80FF80}| Faction: %s | Rank: %s | Punish: %d | Crimes: %d | Arestari: %d | Jailed: %s | Yeni: %d | Leasing: %d",ftext,rtext,punish,crimes,arrests,jailtext,yeni,lizing);
			SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
			format(coordsstring, sizeof(coordsstring), "{80FFFF}| Fighting: %s | Helper: %d | HP: %.1f | Armour: %.1f | Lotto: %d | Job 1: %s | Job 2: %s |",fstext,helperr, health, armour, lotto, jtext,jtext1);
			SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
			format(coordsstring, sizeof(coordsstring), "{80FFFF}| House:  %d | Bizz key: %d | Rent key: %d | local: %d | Virtual World: %d | Interior: %d | Motel Key: %d |", housee,bizkey,rents,local,vw,interiorss,hottel);
			SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
			format(coordsstring, sizeof(coordsstring),"{FFFFFF}|{F23A0D}______________________________________________________________________________________________{FFFFFF}|");
			SendClientMessage(playerid, COLOR_GREEN,coordsstring);

			new carkey = PlayerInfo[targetid][pCar1];
			if(vInfo[OwnedVeh(carkey)][vVariabila] > 0)
			{
			    format(coordsstring, sizeof(coordsstring), "Leasing: %s(%d). Mai aveti %d $ de platit", GetVehicleName(GetVehicleModel(carkey)),GetVehicleModel(carkey), vInfo[OwnedVeh(carkey)][vVariabila]);
				SendClientMessage(playerid, -1,coordsstring);
			}
			if (PlayerInfo[targetid][pCar1] != 0)
			{
			    format(coordsstring, sizeof(coordsstring), "SLOT:1{BB9744}| CarID: %d | Model: %s (%d) | VehValue: %d | Km:  %.2f | Zile: %d | VehLocked: %d | Code: %d |",PlayerInfo[targetid][pCar1], GetVehicleName(GetVehicleModel(carkey)),GetVehicleModel(carkey), GetVehiclePrice(carkey),vInfo[OwnedVeh(carkey)][vVodo],vInfo[OwnedVeh(carkey)][vOre], vInfo[OwnedVeh(carkey)][vLocked], vInfo[OwnedVeh(carkey)][vCarCode]);
			    SendClientMessage(playerid, COLOR_GRAD5,coordsstring);
			}
			new carkey2 = PlayerInfo[targetid][pCar2];
			if(vInfo[OwnedVeh(carkey2)][vVariabila] > 0)
			{
			    format(coordsstring, sizeof(coordsstring), "Leasing: %s(%d). Mai aveti %d $ de platit", GetVehicleName(GetVehicleModel(carkey2)),GetVehicleModel(carkey2), vInfo[OwnedVeh(carkey2)][vVariabila]);
				SendClientMessage(playerid, -1,coordsstring);
			}
			if (PlayerInfo[targetid][pCar2] != 0)
			{
			    format(coordsstring, sizeof(coordsstring), "SLOT:2{BB9744}| CarID: %d | Model: %s (%d) | VehValue: %d | Km:  %.2f | Zile: %d | VehLocked: %d | Code: %d |",PlayerInfo[targetid][pCar2], GetVehicleName(GetVehicleModel(carkey2)),GetVehicleModel(carkey2),GetVehiclePrice(carkey2),vInfo[OwnedVeh(carkey2)][vVodo],vInfo[OwnedVeh(carkey2)][vOre], vInfo[OwnedVeh(carkey2)][vLocked], vInfo[OwnedVeh(carkey2)][vCarCode]);
			    SendClientMessage(playerid, COLOR_GRAD5,coordsstring);
			}
			new carkey3 = PlayerInfo[targetid][pCar3];
			if(vInfo[OwnedVeh(carkey3)][vVariabila] > 0)
			{
			    format(coordsstring, sizeof(coordsstring), "Leasing: %s(%d). Mai aveti %d $ de platit", GetVehicleName(GetVehicleModel(carkey3)),GetVehicleModel(carkey3), vInfo[OwnedVeh(carkey3)][vVariabila]);
				SendClientMessage(playerid, -1,coordsstring);
			}
			if (PlayerInfo[targetid][pCar3] != 0)
			{
			    format(coordsstring, sizeof(coordsstring), "SLOT:3{BB9744}| CarID: %d | Model: %s (%d) | VehValue: %d | Km:  %.2f | Zile: %d | VehLocked: %d | Code: %d |",PlayerInfo[targetid][pCar3], GetVehicleName(GetVehicleModel(carkey3)),GetVehicleModel(carkey3), GetVehiclePrice(carkey3),vInfo[OwnedVeh(carkey3)][vVodo],vInfo[OwnedVeh(carkey3)][vOre], vInfo[OwnedVeh(carkey3)][vLocked], vInfo[OwnedVeh(carkey3)][vCarCode]);
			    SendClientMessage(playerid, COLOR_GRAD5,coordsstring);
			}
			new carkey4 = PlayerInfo[targetid][pCar4];
			if(vInfo[OwnedVeh(carkey4)][vVariabila] > 0)
			{
			    format(coordsstring, sizeof(coordsstring), "Leasing: %s(%d). Mai aveti %d $ de platit", GetVehicleName(GetVehicleModel(carkey4)),GetVehicleModel(carkey4), vInfo[OwnedVeh(carkey4)][vVariabila]);
				SendClientMessage(playerid, -1,coordsstring);
			}
			if (PlayerInfo[targetid][pCar4] != 0)
			{
			    format(coordsstring, sizeof(coordsstring), "SLOT:4{BB9744}| CarID: %d | Model: %s (%d) | VehValue: %d | Km:  %.2f | Zile: %d | VehLocked: %d | Code: %d |",PlayerInfo[targetid][pCar4], GetVehicleName(GetVehicleModel(carkey4)),GetVehicleModel(carkey4), GetVehiclePrice(carkey4),vInfo[OwnedVeh(carkey4)][vVodo],vInfo[OwnedVeh(carkey4)][vOre], vInfo[OwnedVeh(carkey4)][vLocked], vInfo[OwnedVeh(carkey4)][vCarCode]);
			    SendClientMessage(playerid, COLOR_GRAD5,coordsstring);
			}
			new carkey5 = PlayerInfo[targetid][pCar5];
			if(vInfo[OwnedVeh(carkey5)][vVariabila] > 0)
			{
			    format(coordsstring, sizeof(coordsstring), "Leasing: %s(%d). Mai aveti %d $ de platit", GetVehicleName(GetVehicleModel(carkey5)),GetVehicleModel(carkey5), vInfo[OwnedVeh(carkey5)][vVariabila]);
				SendClientMessage(playerid, -1,coordsstring);
			}
			if (PlayerInfo[targetid][pCar5] != 0)
			{
			    format(coordsstring, sizeof(coordsstring), "SLOT:5{BB9744}| CarID: %d | Model: %s (%d) | VehValue: %d | Km:  %.2f | Zile: %d | VehLocked: %d | Code: %d |",PlayerInfo[targetid][pCar5], GetVehicleName(GetVehicleModel(carkey5)),GetVehicleModel(carkey5), GetVehiclePrice(carkey5),vInfo[OwnedVeh(carkey5)][vVodo],vInfo[OwnedVeh(carkey5)][vOre], vInfo[OwnedVeh(carkey5)][vLocked], vInfo[OwnedVeh(carkey5)][vCarCode]);
			    SendClientMessage(playerid, COLOR_GRAD5,coordsstring);
			}
			new carkey6 = PlayerInfo[targetid][pCar6];
			if(vInfo[OwnedVeh(carkey6)][vVariabila] > 0)
			{
			    format(coordsstring, sizeof(coordsstring), "Leasing: %s(%d). Mai aveti %d $ de platit", GetVehicleName(GetVehicleModel(carkey6)),GetVehicleModel(carkey6), vInfo[OwnedVeh(carkey6)][vVariabila]);
				SendClientMessage(playerid, -1,coordsstring);
			}
			if (PlayerInfo[targetid][pCar6] != 0)
			{
			    format(coordsstring, sizeof(coordsstring), "SLOT:6{BB9744}| CarID: %d | Model: %s (%d) | VehValue: %d | Km:  %.2f | Zile: %d | VehLocked: %d | Code: %d |",PlayerInfo[targetid][pCar6], GetVehicleName(GetVehicleModel(carkey6)),GetVehicleModel(carkey6), GetVehiclePrice(carkey6),vInfo[OwnedVeh(carkey6)][vVodo],vInfo[OwnedVeh(carkey6)][vOre], vInfo[OwnedVeh(carkey6)][vLocked], vInfo[OwnedVeh(carkey6)][vCarCode]);
			    SendClientMessage(playerid, COLOR_GRAD5,coordsstring);
			}
			new carkey7 = PlayerInfo[targetid][pCar7];
			if(vInfo[OwnedVeh(carkey7)][vVariabila] > 0)
			{
			    format(coordsstring, sizeof(coordsstring), "Leasing: %s(%d). Mai aveti %d $ de platit", GetVehicleName(GetVehicleModel(carkey7)),GetVehicleModel(carkey7), vInfo[OwnedVeh(carkey7)][vVariabila]);
				SendClientMessage(playerid, -1,coordsstring);
			}
			if (PlayerInfo[targetid][pCar7] != 0)
			{
			    format(coordsstring, sizeof(coordsstring), "SLOT:7{BB9744}| CarID: %d | Model: %s (%d) | VehValue: %d | Km:  %.2f | Zile: %d |  VehLocked: %d | Code: %d |",PlayerInfo[targetid][pCar7], GetVehicleName(GetVehicleModel(carkey7)),GetVehicleModel(carkey7), GetVehiclePrice(carkey7),vInfo[OwnedVeh(carkey7)][vVodo],vInfo[OwnedVeh(carkey7)][vOre], vInfo[OwnedVeh(carkey7)][vLocked], vInfo[OwnedVeh(carkey7)][vCarCode]);			    SendClientMessage(playerid, COLOR_GRAD5,coordsstring);
	            SendClientMessage(playerid, COLOR_GRAD5,coordsstring);
			}
			new carkey8 = PlayerInfo[targetid][pCar8];
			if(vInfo[OwnedVeh(carkey8)][vVariabila] > 0)
			{
			    format(coordsstring, sizeof(coordsstring), "Leasing: %s(%d). Mai aveti %d $ de platit", GetVehicleName(GetVehicleModel(carkey8)),GetVehicleModel(carkey8), vInfo[OwnedVeh(carkey8)][vVariabila]);
				SendClientMessage(playerid, -1,coordsstring);
			}
			if (PlayerInfo[targetid][pCar8] != 0)
			{
			    format(coordsstring, sizeof(coordsstring), "SLOT:8{BB9744}| CarID: %d | Model: %s (%d) | VehValue: %d | Km:  %.2f | Zile: %d |  VehLocked: %d | Code: %d |",PlayerInfo[targetid][pCar8], GetVehicleName(GetVehicleModel(carkey8)),GetVehicleModel(carkey8), GetVehiclePrice(carkey8),vInfo[OwnedVeh(carkey8)][vVodo],vInfo[OwnedVeh(carkey8)][vOre], vInfo[OwnedVeh(carkey8)][vLocked], vInfo[OwnedVeh(carkey8)][vCarCode]);
			    SendClientMessage(playerid, COLOR_GRAD5,coordsstring);
			}
		}

		if(menustyle[playerid] == 1)
		{
	        new strong[2612];
			new year, month, day;
			getdate(year,month,day);
			format(coordsstring, sizeof(coordsstring),"{F23A0D}|________________________________{FFFFFF}|{22DD47}Buletin %s ID: (%d){F23A0D}| _________________________________{FFFFFF}|\n",PlayerName(targetid), targetid);
			strcat(strong,coordsstring);
			format(coordsstring, sizeof(coordsstring), "{FFFF80}| Level: %d | Sex: %s | Varsta: %d | Bani: $%d | Banca: $%d | Tel: %d | VIP: %s | Skin ID: %d |\n", level,atext,age,cassh,account,pnumber,drank,skin);//FormatNumber(costlevel)
			strcat(strong,coordsstring);
			format(coordsstring, sizeof(coordsstring), "{FFFF80}| Ore Jucate: %d | Minute Jucate: %d | Secunde Jucate: %d | Warn: %d | Faction Warn: %d | Mute: %d | Wanted: %d |\n",secundee/3600,secundee/60, secundee,warnuri, PlayerInfo[targetid][pFwarn],mutted,wanted);
			strcat(strong,coordsstring);
			format(coordsstring, sizeof(coordsstring), "{80FF80}| Respect: %d/%d | NextLevelCost: %d | Deaths: %d | Kill: %d | Drugs: %d | Materials: %d | WDeath %d |\n",exp,expamount,costlevel,deaths,kills,drugs,mats,warrests);
			strcat(strong,coordsstring);
			format(coordsstring, sizeof(coordsstring), "{80FF80}| Faction: %s | Rank: %s | Punish: %d | Crimes: %d | Arestari: %d | Jailed: %s | Yeni: %d | Leasing: %d\n",ftext,rtext,punish,crimes,arrests,jailtext,yeni,lizing);
			strcat(strong,coordsstring);
			format(coordsstring, sizeof(coordsstring), "{80FFFF}| Fighting: %s | Helper: %d | HP: %.1f | Armour: %.1f | Lotto: %d | Job 1: %s | Job 2: %s |\n",fstext,helperr, health, armour, lotto, jtext,jtext1);
			strcat(strong,coordsstring);
			format(coordsstring, sizeof(coordsstring), "{80FFFF}| House:  %d | Bizz key: %d | Rent key: %d | local: %d | Virtual World: %d | Interior: %d | Motel Key: %d |\n", housee,bizkey,rents,local,vw,interiorss,hottel);
			strcat(strong,coordsstring);
			format(coordsstring, sizeof(coordsstring),"{FFFFFF}|{F23A0D}______________________________________________________________________________________________{FFFFFF}|");
			strcat(strong,coordsstring);
			ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, "Stats", strong, "OK", "");
   			menustyle[playerid] = 0;
		}
	}
}

public SetplayerBackWeapons(playerid)
{
    ResetPlayerWeapons(playerid);
    ServerWeapon(playerid, PlayerInfo[playerid][pGun1], PlayerInfo[playerid][pAmmo1]);
    ServerWeapon(playerid, PlayerInfo[playerid][pGun2], PlayerInfo[playerid][pAmmo2]);
    ServerWeapon(playerid, PlayerInfo[playerid][pGun3], PlayerInfo[playerid][pAmmo3]);
    ServerWeapon(playerid, PlayerInfo[playerid][pGun4], PlayerInfo[playerid][pAmmo4]);
    ServerWeapon(playerid, PlayerInfo[playerid][pGun5], PlayerInfo[playerid][pAmmo5]);
    ServerWeapon(playerid, PlayerInfo[playerid][pGun6], PlayerInfo[playerid][pAmmo6]);
    ServerWeapon(playerid, PlayerInfo[playerid][pGun7], PlayerInfo[playerid][pAmmo7]);
    ServerWeapon(playerid, PlayerInfo[playerid][pGun8], PlayerInfo[playerid][pAmmo8]);
 	return 1;
}

public KickPublic(playerid)
{
	Kick(playerid);
}
public ProxDetectorPlayer(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
 		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}
public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
				    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
				    {
						GetPlayerPos(i, posx, posy, posz);
						tempposx = (oldposx -posx);
						tempposy = (oldposy -posy);
						tempposz = (oldposz -posz);
						//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
						if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
						{
							SendClientMessage(i, col1, string);
						}
						else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
						{
							SendClientMessage(i, col2, string);
						}
						else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
						{
							SendClientMessage(i, col3, string);
						}
						else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
						{
							SendClientMessage(i, col4, string);
						}
						else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
						{
							SendClientMessage(i, col5, string);
						}
					}
				}
				else
				{
					SendClientMessage(i, col1, string);
				}
			}
		}
	}//not connected
	return 1;
}

public MoneyTimer()
{
    foreach(Player, i)
	{
        if(gLogged[i] != 0)
        {
 			if(Tele[i] == 2)
			{
			    new Float:health,Float:vHeal;
			    GetPlayerHealth(i,health);
			    if (health < 300)
			    {
					SetPlayerHealth(i,99999);
					SetPlayerArmour(i,99999);
		     	}
			    GetVehicleHealth(GetPlayerVehicleID(i), vHeal);
			    if(vHeal < 999)
				RepairVehicle(GetPlayerVehicleID(i));
			}
            if(GetPlayerCash(i) != GetPlayerMoney(i))
            {
                ResetMoneyBar(i);
                UpdateMoneyBar(i, GetPlayerCash(i));
            }
 			/*new string2[150];
			if(CheatTelesAllowed == 1)
			{
	 			OldPlayerPosX[i] = PlayerPosX[i];
				OldPlayerPosY[i] = PlayerPosY[i];
				OldPlayerPosZ[i] = PlayerPosZ[i];
				GetPlayerPos(i,PlayerPosX[i],PlayerPosY[i],PlayerPosZ[i]);
				new Float:distanta[MAX_PLAYERS];
				distanta[i] = GetDistanceBetweenPoints(OldPlayerPosX[i],OldPlayerPosY[i],OldPlayerPosZ[i],PlayerPosX[i],PlayerPosY[i],PlayerPosZ[i]);
				if(GetPlayerState(i) == PLAYER_STATE_ONFOOT)
				{
				    if(distanta[i] > 67.1 &&  Tele[i] == 0 && FlyModeA[i] == 0)
				    {
						format(string2,sizeof(string2),"WARNING: %s[%d] a facut pe jos %f m intr-o secunda posibil Hack Teleport",PlayerName(i),i,distanta[i]);
					 	AdminsBroadCast(COLOR_RED, string2,5);
					    HackLog(string2);
				 	}
		 		}
		 		else
		 		{
		 		    if(distanta[i] > 90.3 && Tele[i] == 0 && FlyModeA[i] == 0)
				    {
		 		   	 	format(string2,sizeof(string2),"WARNING: %s[%d] a facut cu masina %f m intr-o secunda posibil Hack Teleport",PlayerName(i),i,distanta[i]);
				 		AdminsBroadCast(COLOR_RED, string2,5);
					    HackLog(string2);
		 			}
		 		}
	 		}*/
        }
    }
}


public CountDowned()
{
    if(CountdownSeconds > -1)
    {
        new string[144];
        if(CountdownSeconds == 3)
   		format(string, sizeof(string),"~b~Countdown: %d",CountdownSeconds);
        else if(CountdownSeconds == 2)
   		format(string, sizeof(string),"~y~Countdown: %d",CountdownSeconds);
        else if(CountdownSeconds == 1)
   		format(string, sizeof(string),"~r~Countdown %d",CountdownSeconds);
        else if(CountdownSeconds == 0)
        {
   			format(string, sizeof(string),"~r~GO ~y~GO ~b~GO");
			CountdownSeconds = -1;
			PlaySoundForAll(1057);
		}
		else
   		format(string, sizeof(string),"~w~Countdown: ~w~%d",CountdownSeconds);
		GameTextForAll(string, 900, 4);
        CountdownSeconds--;
        if(CountdownSeconds > -1)
		PlaySoundForAll(1056);
   	}
	return 1;
}
SetPlayerRouting(playerid, Float:x11, Float:y11)
{
	if(IsPlayerInAnyVehicle(playerid) && Gps[playerid] == 1)
	{
		new string[128];
		new textstring[200];
		new Float:xx2, Float:yy2, Float:zz2;
	    new Float:angle2;

		GetVehiclePos(GetPlayerVehicleID(playerid), xx2, yy2, zz2);
	   	GetVehicleZAngle(GetPlayerVehicleID(playerid), angle2);

	 	new Float:dist;
  		dist = floatsqroot(floatpower(floatabs(floatsub(x11,xx2)),2)+floatpower(floatabs(floatsub(y11,yy2)),2));

		new Float:angle1;
		if( (y11-yy2) >= 0.0) angle1 = acos((x11-xx2)/dist) - 90;
		else angle1 = 270 - acos((x11-xx2)/dist);

		new Float:offset;
		offset = 360.0 - angle2 + angle1;
		if(offset >= 360.0) offset = offset - 360.0;
		else if(offset < 0.0) offset = offset + 360.0;

		if(offset >= 330.0 || offset < 30.0) format(string, sizeof(string), "~u~ ~w~%d ~u~", floatround(dist));
		else if(offset >= 30.0 && offset < 60.0) format(string, sizeof(string), "~<~ ~w~%d", floatround(dist));
		else if(offset >= 60.0 && offset < 100.0) format(string, sizeof(string), "~<~~<~ ~w~%d", floatround(dist));
		else if(offset >= 100.0 && offset < 150.0) format(string, sizeof(string), "~d~~<~ ~w~%d", floatround(dist));
		else if(offset >= 150.0 && offset < 210.0) format(string, sizeof(string), "~d~ ~w~%d ~d~", floatround(dist));
		else if(offset >= 210.0 && offset < 260.0) format(string, sizeof(string), "~w~%d ~>~~d~", floatround(dist));
		else if(offset >= 260.0 && offset < 300.0) format(string, sizeof(string), "~w~%d ~>~~>~", floatround(dist));
		else if(offset >= 300.0 && offset < 330.0) format(string, sizeof(string), "~w~%d ~>~", floatround(dist));
		format(textstring,sizeof(textstring),"~n~~n~~b~Global Positionating System ~n~~y~Mergeti la Coordonatele:~w~~n~X %.01f si Y %.01f ~n~ ~y~Distanta & Directie: ~n~%s", x11, y11, string);
		TextDrawSetString(Textdraw53[playerid],textstring);
		if(floatround(dist) <= 25)
		{
		    format(textstring,sizeof(textstring),"~n~~n~~b~Global Positionating System ~n~~y~Mergeti la Coordonatele:~w~~n~X %.01f si Y %.01f ~n~ ~p~Ati ajuns la Destinatie!", x11, y11);
			TextDrawSetString(Textdraw53[playerid],textstring);
			SendClientMessage(playerid,-1,"*Ai ajuns la destinatie!");
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			Gps[playerid] = 0;
		}
		TelePosGps[playerid][tX] = x11;
		TelePosGps[playerid][tY] = y11;
	}
	return 1;
}
stock CagePlayer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
  	  	new Float:X, Float:Y, Float:Z;
  	  	GetPlayerPos(playerid, X, Y, Z);
  	  	cage[playerid] = CreateDynamicObject(985, X, Y+4, Z, 0.0, 0.0, 0.0);
  	  	cage2[playerid] = CreateDynamicObject(985, X+4, Y, Z, 0.0, 0.0, 90.0);
  	  	cage3[playerid] = CreateDynamicObject(985, X-4, Y, Z, 0.0, 0.0, 270.0);
  	  	cage4[playerid] = CreateDynamicObject(985, X, Y-4, Z, 0.0, 0.0, 180.0);
      	caged[playerid] = 1; // Use this in a /cage command to prevent being caged twice and causing the cage to be unremovable.
  	  	PlayerPlaySound(playerid, 1137, X, Y, Z);
  	  	caged[playerid] = 1;
	}
}
stock UnCagePlayer(playerid)
{
	cage[playerid] = DestroyDynamicObject(cage[playerid]);
	cage2[playerid] = DestroyDynamicObject(cage2[playerid]);
	cage3[playerid] = DestroyDynamicObject(cage3[playerid]);
	cage4[playerid] = DestroyDynamicObject(cage4[playerid]);
    caged[playerid] = 0;
}
stock PlaySoundForAll(soundid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		new Float:p[3];
		GetPlayerPos(i, p[0], p[1], p[2]);
		PlayerPlaySound(i, soundid, p[0], p[1], p[2]);
	}
}
GetXYOfPlayer(playerid, &Float:x, &Float:y,&Float:z, Float:distance,Float:Face)
{
	new Float:a,Float:A;
	GetPlayerPos(playerid, x, y, z);
	if(!IsPlayerInAnyVehicle(playerid))
	GetPlayerFacingAngle(playerid, a);
	else GetVehicleZAngle(GetPlayerVehicleID(playerid),a);
	A=a-Face;
	x += (distance * floatsin(-A, degrees));
	y += (distance * floatcos(-A, degrees));
	z = z+0.1;
}

public SetPlayerUnjail()
{
	foreach(Player,i)
	{
 		new string[155];
    	if(gLogged[i] == 1)
    	{
       	    //new surf = GetPlayerSurfingVehicleID(i);
			//if(surf == INVALID_VEHICLE_ID) SendClientMessage(i, COLOR_RED, "You are not surfing.");
   			if(GetPlayerPing(i) > 800)
			{
				format(string, sizeof(string), "%s[%d] a primit kick motiv: Ping peste 800",PlayerName(i),i);
				AdminsBroadCast(-1, string,1);
				HackLog(string);
				KickWithMessage(i,COLOR_LIGHTBLUE,"Ai primit kick pentru ping mai mare de 800!");
			}
		
			if(FindTimePoints[i]>=0)
			{
				FindTimePoints[i] --;
				if(FindTime[i] != 999)
				{
				    if(FindTimePoints[i]>0)
					{
					    format(string, sizeof(string), "%d", FindTimePoints[i]);
						GameTextForPlayer(i, string, 1500, 6);
					}
					if(FindTimePoints[i]==0)
					{
						FindTime[i]=999;
						FindTimePoints[i]=-1;
						DisablePlayerCheckpoint(i);
						PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
						GameTextForPlayer(i, "~r~Checkpoint ~b~scos!", 2500, 1);
						return 1;
					}
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(FindTime[i], X,Y,Z);
					if(Z>600)
    				SetPlayerCheckpoint(i, InteriorPosx[FindTime[i]],InteriorPosy[FindTime[i]],InteriorPosz[FindTime[i]], 6);
					else
					SetPlayerCheckpoint(i, X,Y,Z, 6);
				}
			}
     	    if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK)
			{
		    	if(PlayerInfo[i][pAdmin] == 0 && PlayerInfo[i][pHelper] == 0)
		    	{
					format(string, sizeof(string), "%s[%d] a primit kick motiv: Jetpack",PlayerName(i),i);
				 	AdminsBroadCast(-1, string,1);
				    HackLog(string);
	    			Kick(i);
				}
			}
			if(WantLawyer[i] >= 1)
			{
			    CallLawyer[i] = 111;
				WantLawyer[i] ++;
			    if(WantLawyer[i] == 1) 			    SendClientMessage(i, COLOR_LIGHTRED, "	Ai nevoie de un avocat? (Scrie 'da' sau 'nu')");
				if(WantLawyer[i] == 8)			    SendClientMessage(i, COLOR_LIGHTRED, "	Ai nevoie de un avocat? (Scrie 'da' sau 'nu')");
	            if(WantLawyer[i] == 15)			    SendClientMessage(i, COLOR_LIGHTRED, "	Ai nevoie de un avocat? (Scrie 'da' sau 'nu')");
				if(WantLawyer[i] == 20)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "	Nu sunt avocati disponibili, asa ca sentinta a inceput.");
				    WantLawyer[i] = 0;
				    CallLawyer[i] = 0;
				}
			}
			if(CellTime[i] > 0)
			{
				CellTime[i] = CellTime[i] +1;
				if (Mobile[Mobile[i]] == 999 && CellTime[i] == 6)
				{
	   				if(IsPlayerConnected(Mobile[i]))
					{
						format(string, sizeof(string), "* Telefonul lui %s suna.", PlayerName(Mobile[i]));
	                    PlayerPlaySound(Mobile[i], 1138, 0.0, 0.0, 0.0);
						ProxDetector(30.0, Mobile[i], string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	     			}
				}
				if(CellTime[i] == 0) //&& CallCost[i] > 0)
				{
				    //if(GetPlayerCash(i) > CallCost[i])
					format(string, sizeof(string), "~w~Pretul apelului:~n~~r~$%d",SBizzInfo[2][sbEntrace] );
					GivePlayerCash(i, -SBizzInfo[2][sbEntrace]);
					SBizzInfo[2][sbTill] += SBizzInfo[2][sbEntrace];
					sbUpdate(2,sbTillx);
					GameTextForPlayer(i, string, 5000, 1);
					//CallCost[i] = 0;
				}
			}

			if(TaxiCallTime[i] > 0)
			{
			    if(TaxiAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(TaxiAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(TaxiAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}

			if(TransportTime[i] > 0)
			{
			    if(TransportTime[i] >= 16)
				{
					TransportTime[i] = 1;
					if(TransportDriver[i] < 999)
					{
						if(IsPlayerConnected(TransportDriver[i]))
						{
	      					TransportCost[i] += TransportValue[TransportDriver[i]];
						    TransportCost[TransportDriver[i]] = TransportCost[i];
						}
					}
				}
			    TransportTime[i] += 1;
			    format(string, sizeof(string), "~r~%d ~w~: ~g~$%d",TransportTime[i],TransportCost[i]);
			    GameTextForPlayer(i, string, 15000, 6);
			}

			if(PhoneOnCharge[i] == 1)
	        {
	            if(PlayerInfo[i][pBaterie] <= 99)
	            {
	            	PlayerInfo[i][pBaterie] ++;
      				Update(i, pBateriex);
                	format(string, sizeof(string), "Incarcare: %d %",PlayerInfo[i][pBaterie]);
    				GameTextForPlayer(i, string, 500, 5);
	        	}
	        	else
	        	{
	        	    PlayerInfo[i][pBaterie] = 100;
      				Update(i, pBateriex);
    				GameTextForPlayer(i, "Incarcare Completa!", 500, 5);
    				PhoneOnCharge[i] = 0;
	        	}
	        }

			if(PlayerDrunk[i] >= 9)
			{
			    PlayerDrunkTime[i] += 1;
				SetPlayerDrunkLevel(i, 3000);
			    if(PlayerDrunkTime[i] == 8)
			    {
			        PlayerDrunkTime[i] = 0;
			        new Float:angle;
					if(IsPlayerInAnyVehicle(i))
					{
				        GetVehicleZAngle(GetPlayerVehicleID(i), angle);
					    if(GetPlayerState(i) == 2)
    			    	SetVehicleZAngle(GetPlayerVehicleID(i), angle+25);
    				}
					else
    			    ApplyAnimation(i,"PED", "WALK_DRUNK",4.0,0,1,0,0,0);
    		    }
			}
			if(PlayerInfo[i][pServieta] == 2)
		    {
		    	if(IsPlayerAttachedObjectSlotUsed(i,0))
		 		RemovePlayerAttachedObject(i,0);
		    	if(IsPlayerAttachedObjectSlotUsed(i,1))
				RemovePlayerAttachedObject(i,1);
		    	if(IsPlayerAttachedObjectSlotUsed(i,2))
				RemovePlayerAttachedObject(i,2);
		    	if(IsPlayerAttachedObjectSlotUsed(i,3))
				RemovePlayerAttachedObject(i,3);
		    	if(IsPlayerAttachedObjectSlotUsed(i,4))
				RemovePlayerAttachedObject(i,4);
			}
			if(!IsPlayerInAnyVehicle(i))
			{
				for(new obj;obj<60;obj++)
				{
				    if(IsValidObject(PizzaObj[obj]))
					{
						new Float:ox,Float:oy,Float:oz;
						GetObjectPos(PizzaObj[obj], ox, oy, oz);
						if(IsPlayerInRangeOfPoint(i,3,ox,oy,oz) && ox > 1)
						{
							if(PizzaOfPlayer[i]>=5) return GameTextForPlayer(i,"~r~~n~~n~~n~~n~~n~~n~~n~Aveti deja 5 cutii!",1500,3);
			 				GameTextForPlayer(i,"~w~~n~~n~~n~~n~~n~~n~~n~Apasa C sa ridici cutia!",1500,3);
      					}
					}
				}
			}
			if(PlayerCuffed[i] != 0)
			TogglePlayerControllable(i, 0);
			if(PlayerDrunk[i] < 5 && GetPlayerDrunkLevel(i) > 1999) SetPlayerDrunkLevel(i, 0);
			if(IsPlayerInRangeOfPoint(i, 4,323.0342,1118.5804,1083.8828))//timer de o secunda
			GameTextForPlayer(i, "~w~Scrie /get drugs, pentru a lua ~r~Droguri~y~~n~Si a face Skill!", 900, 3);
			if(Tazed[i] > 0)
			Tazed[i] --;
	        if(DrugTimer[i]>0)
	        DrugTimer[i]--;
	        if(SexTimer[i] > 0)
            SexTimer[i] --;
	 		if(IsPlayerInAnyVehicle(i) && Gps[i] == 1)
		   	SetPlayerRouting(i,TelePosGps[i][tX],TelePosGps[i][tY]);
			if(CanFreeLawyer[i] >0)
			CanFreeLawyer[i] --;
			if(ChatTexted[i] >0)
			ChatTexted[i] --;
			if(Comenzi[i] > 0)
			Comenzi[i] --;
			if(BodyTimer[i]>0)
			BodyTimer[i]--;
			if(pNewbTimer[i]>0)
			pNewbTimer[i] --;
			if(AdTimer[i] > 0)
			AdTimer[i] --;
			if(PlayerInfo[i][pMute] > 0)
		    {PlayerInfo[i][pMute] --;Update(i,pMutex);}
			if(PayTimer[i] > 0)
			PayTimer[i] --;
 			if(DecodeTimeW[i] > 0)
			DecodeTimeW[i] --;
 			PlayerInfo[i][pConnectTime]++;
			Update(i,pConnectTimex);

            new Float:xu,Float:yu,Float:zu;
			GetPlayerPos(i,xu,yu,zu);
			if(zu < 17)
   			{
				if(IsPlayerInArea(i,1386.2695,1415.3740,-1705.3744,-1655.6033))
		   		{
   					if(ParcareIn[i] == 0)
					{
				        Parcare[i][0] = CreateDynamicObject(6959, 1415.59509, -1675.40210, -2.61760,   0.00000, 90.00000, 180.00000,-1,-1,i);
						Parcare[i][1] = CreateDynamicObject(19365, 1413.98669, -1655.43591, 15.17500,   0.00000, 0.00000, 90.00000,-1,-1,i);
						Parcare[i][2] = CreateDynamicObject(6959, 1401.63647, -1655.47925, 37.26558,   0.00000, 90.00000, 90.00000,-1,-1,i);
						Parcare[i][3] = CreateDynamicObject(6959, 1401.63647, -1655.47925, -7.17947,   0.00000, 90.00000, 90.00000,-1,-1,i);
						Parcare[i][4] = CreateDynamicObject(19365, 1386.57214, -1655.38513, 15.17496,   0.00000, 0.00000, 90.00000,-1,-1,i);
						Parcare[i][5] = CreateDynamicObject(6959, 1385.92871, -1675.30652, -2.57112,   0.00000, 90.00000, 0.00000,-1,-1,i);
						Parcare[i][6] = CreateDynamicObject(6959, 1386.13953, -1685.81201, -2.57110,   0.00000, 90.00000, 0.00000,-1,-1,i);
						Parcare[i][7] = CreateDynamicObject(6959, 1384.29114, -1705.50623, -2.57110,   0.00000, 90.00000, 90.00000,-1,-1,i);
						Parcare[i][8] = CreateDynamicObject(6959, 1401.53223, -1704.87122, 12.58940,   0.00000, 90.00000, -224.94002,-1,-1,i);
					//====================podea===========================
						Parcare[i][9] =  CreateDynamicObject(6959, 1394.96240, -1675.26184, 12.58935,   0.00000, 0.00000, 0.00000,-1,-1,i);
						Parcare[i][10] = CreateDynamicObject(6959, 1394.95410, -1715.24097, 12.58940,   0.00000, 0.00000, 0.00000,-1,-1,i);
					//=====tavan
						Parcare[i][11] = CreateDynamicObject(6959, 1396.93921, -1673.69397, 17.56680,   0.00000, 0.00000, 0.00000,-1,-1,i);
						Parcare[i][12] = CreateDynamicObject(6959, 1396.89490, -1685.58789, 17.58680,   0.00000, 0.00000, 0.00000,-1,-1,i);
					    SetDynamicObjectMaterial(Parcare[i][0], 0, 8839, "vgsecarshow", "lightblue_64", 0xFFFFFFFF);
					    SetDynamicObjectMaterial(Parcare[i][1], 0, 8839, "vgsecarshow", "lightblue_64", 0xFFFFFFFF);
					    SetDynamicObjectMaterial(Parcare[i][2], 0, 8839, "vgsecarshow", "lightblue_64", 0xFFFFFFFF);
					    SetDynamicObjectMaterial(Parcare[i][3], 0, 8839, "vgsecarshow", "lightblue_64", 0xFFFFFFFF);
					    SetDynamicObjectMaterial(Parcare[i][4], 0, 8839, "vgsecarshow", "lightblue_64", 0xFFFFFFFF);
					    SetDynamicObjectMaterial(Parcare[i][5], 0, 8839, "vgsecarshow", "lightblue_64", 0xFFFFFFFF);
					    SetDynamicObjectMaterial(Parcare[i][6], 0, 8839, "vgsecarshow", "lightblue_64", 0xFFFFFFFF);
					    SetDynamicObjectMaterial(Parcare[i][7], 0, 8839, "vgsecarshow", "lightblue_64", 0xFFFFFFFF);
					    SetDynamicObjectMaterial(Parcare[i][8], 0, 8839, "vgsecarshow", "lightblue_64", 0xFFFFFFFF);
					    SetDynamicObjectMaterial(Parcare[i][9], 0, 8839, "vgsecarshow", "sw_brewbrick01", 0xFFFFFFFF);
					    SetDynamicObjectMaterial(Parcare[i][10], 0, 8839, "vgsecarshow", "sw_brewbrick01", 0xFFFFFFFF);
					    SetDynamicObjectMaterial(Parcare[i][11], 0, 8839, "vgsecarshow", "ws_corr_metal3", 0xFFFFFFFF);
					    SetDynamicObjectMaterial(Parcare[i][12], 0, 8839, "vgsecarshow", "ws_corr_metal3", 0xFFFFFFFF);
				        ParcareIn[i] = 1;
				   	}
		   		}
       			else
				{
				   	if(ParcareIn[i] == 1)
					{
					    DestroyDynamicObject(Parcare[i][0]);
					    DestroyDynamicObject(Parcare[i][1]);
					    DestroyDynamicObject(Parcare[i][2]);
					    DestroyDynamicObject(Parcare[i][3]);
					    DestroyDynamicObject(Parcare[i][4]);
					    DestroyDynamicObject(Parcare[i][5]);
					    DestroyDynamicObject(Parcare[i][6]);
					    DestroyDynamicObject(Parcare[i][7]);
					    DestroyDynamicObject(Parcare[i][8]);
					    DestroyDynamicObject(Parcare[i][9]);
					    DestroyDynamicObject(Parcare[i][10]);
					    DestroyDynamicObject(Parcare[i][11]);
				    	DestroyDynamicObject(Parcare[i][12]);
					    ParcareIn[i] = 0;
    				}
			  	}
  			}

			if(PlayerInfo[i][pJail] > 0)
		    {
      			if(PlayerInfo[i][pJailTime] > 0)
				{
					PlayerInfo[i][pJailTime]--;
					Update(i, pJailTimex);
				}
				if(PlayerInfo[i][pJailTime] <= 1)
				{
				    PlayerInfo[i][pJailTime] = 0;
				    Update(i, pJailTimex);
					if(PlayerInfo[i][pJail] == 1)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,1554.6254,-1675.5476,16.1953);
					}
					else if(PlayerInfo[i][pJail] == 2)
					{
    				    SetPlayerInterior(i, 0);
					    SetPlayerPos(i, 90.2101,1920.4854,17.9422);
					}
					PlayerInfo[i][pJail] = 0;
					Update(i, pJailx);
					SendClientMessage(i, COLOR_GRAD1,"   Sentinta s-a terminat.");
					format(string, sizeof(string), "~g~Esti Liber~w~!");
					GameTextForPlayer(i, string, 5000, 3);
					SetPlayerVirtualWorld(i, 0);
					SetPlayerToTeamColor(i);
					PlayerInfo[i][pWanted] = 0;
					Update(i,pWantedx);
					SetPlayerWantedLevel(i,PlayerInfo[i][pWanted]);
				}
			}
			if(BoxWaitTime[i] > 0)
			{
			    if(BoxWaitTime[i] >= BoxDelay)
				{
				    BoxDelay = 0;
					BoxWaitTime[i] = 0;
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
					GameTextForPlayer(i, "~g~Meciul a inceput", 5000, 1);
					TogglePlayerControllable(i, 1);
					RoundStarted = 1;
				}
			    else
				{
				    format(string, sizeof(string), "%d", BoxDelay - BoxWaitTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					BoxWaitTime[i] += 1;
				}
			}
			if(RoundStarted > 0)
			{
			    if(PlayerBoxing[i] > 0)
			    {
			        new trigger = 0;
			        new Lost = 0;
		        	new Float:angle;
		            new Float:health;
					GetPlayerHealth(i, health);
		            if(health < 12)
					{
					    if(i == Boxer1) 	{Lost = 1; trigger = 1; }
			            else if(i == Boxer2){ Lost = 2; trigger = 1; }
					}
			        if(health < 28)
					{
						GetPlayerFacingAngle(i, angle);
						SetPlayerFacingAngle(i, angle + 85);
					}
			        if(trigger)
			        {
			            new winner[MAX_PLAYER_NAME];
			            new loser[MAX_PLAYER_NAME];
			            new titel[MAX_PLAYER_NAME];
			            if(Lost == 1)
			            {
			                if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
			                {
					        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
					        	SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
			                	GetPlayerName(Boxer1, loser, sizeof(loser));
			                	GetPlayerName(Boxer2, winner, sizeof(winner));
		                		if(PlayerInfo[Boxer1][pJob2] == 6 || PlayerInfo[Boxer1][pJob1] == 6) { PlayerInfo[Boxer1][pLoses] += 1; Update(Boxer1, pLosesx); }
								if(PlayerInfo[Boxer2][pJob2] == 6 || PlayerInfo[Boxer2][pJob1] == 6) { PlayerInfo[Boxer2][pWin] += 1; Update(Boxer2, pWinx); }
			                	if(TBoxer < 255)
			                	{
			                	    if(IsPlayerConnected(TBoxer))
			                	    {
				                	    if(TBoxer != Boxer2)
				                	    {
				                	        if(PlayerInfo[Boxer2][pJob2] == 6 || PlayerInfo[Boxer2][pJob1] == 6)
				                	        {
				                	            TBoxer = Boxer2;
				                	            GetPlayerName(TBoxer, titel, sizeof(titel));
					                	        new nstring[MAX_PLAYER_NAME];
												format(nstring, sizeof(nstring), "%s", titel);
												strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
					                	        Titel[TitelWins] = PlayerInfo[TBoxer][pWin];
					                	        Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
					                	        sUpdate(0,TitelWinsx);
					                	       	sUpdate(0,TitelNamex);
					                	        sUpdate(0,TitelLosesx);
							                	format(string, sizeof(string), "Stiri: %s a castigat lupta impotriva lui %s si acum este un campion.",  titel, loser);
												OOCNews(COLOR_WHITE,string);
				                	        }
				                	        else
				                	        {
				                	            SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "*	Puteai fi campion daca erai boxeur !");
				                	        }
										}
										else
										{
										    GetPlayerName(TBoxer, titel, sizeof(titel));
										    format(string, sizeof(string), "Stiri: Campionul %s a castigat lupta impotriva lui %s.",  titel, loser);
											OOCNews(COLOR_WHITE,string);
											Titel[TitelWins] = PlayerInfo[TBoxer][pWin];
				                	        Titel[TitelLoses] = PlayerInfo[Boxer2][pLoses];
				                	        sUpdate(0,TitelWinsx);
				                	       	sUpdate(0,TitelNamex);
				                	        sUpdate(0,TitelLosesx);
										}
									}
								}//TBoxer
								format(string, sizeof(string), "*	Ai pierdut impotriva lui %s.", winner);
								SendClientMessage(Boxer1, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(Boxer1, "~r~You lost", 3500, 1);
								format(string, sizeof(string), "*	You won against %s.", loser);
								SendClientMessage(Boxer2, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(Boxer2, "~g~You won", 3500, 1);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "*	Esti obosit, mananca ceva.");
								    SetPlayerHealth(Boxer1, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "*	Te simti destul de bine dupa lupta. Totusi, ar trebui sa mananci ceva.");
								    SetPlayerHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "*	Esti obosit, mananca ceva.");
							    	SetPlayerHealth(Boxer2, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "*	Te simti destul de bine dupa lupta. Totusi, ar trebui sa mananci ceva.");
								    SetPlayerHealth(Boxer2, 50.0);
								}
                                GameTextForPlayer(Boxer1, "~g~Match Over", 5000, 1); GameTextForPlayer(Boxer2, "~g~Match Over", 5000, 1);
								if(PlayerInfo[Boxer2][pJob2] == 6 || PlayerInfo[Boxer2][pJob1] == 6) { PlayerInfo[Boxer2][pBoxSkill] += 1; }
								PlayerBoxing[Boxer1] = 0;
								PlayerBoxing[Boxer2] = 0;
								Update(Boxer2, pBoxSkillx);
							}
			            }
			            else if(Lost == 2)
			            {
			                if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
			                {
					        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
					        	SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
			                	GetPlayerName(Boxer1, winner, sizeof(winner));
			                	GetPlayerName(Boxer2, loser, sizeof(loser));
		                		if(PlayerInfo[Boxer2][pJob2] == 6 || PlayerInfo[Boxer2][pJob1] == 6) { PlayerInfo[Boxer2][pLoses] += 1; Update(Boxer2, pLosesx);}
								if(PlayerInfo[Boxer1][pJob2] == 6 || PlayerInfo[Boxer1][pJob1] == 6) { PlayerInfo[Boxer1][pWin] += 1; Update(Boxer1, pWinx); }
			                	if(TBoxer < 255)
			                	{
			                	    if(IsPlayerConnected(TBoxer))
			                	    {
				                	    if(TBoxer != Boxer1)
				                	    {
				                	        if(PlayerInfo[Boxer1][pJob2] == 6 || PlayerInfo[Boxer1][pJob1] == 6)
				                	        {
					                	        TBoxer = Boxer1;
					                	        GetPlayerName(TBoxer, titel, sizeof(titel));
					                	        new nstring[MAX_PLAYER_NAME];
												format(nstring, sizeof(nstring), "%s", titel);
												strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
					                	        Titel[TitelWins] = PlayerInfo[TBoxer][pWin];
												Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
					                	        sUpdate(0,TitelWinsx);
					                	       	sUpdate(0,TitelNamex);
					                	        sUpdate(0,TitelLosesx);
   							                	format(string, sizeof(string), "Stiri: Campionul %s a castigat lupta impotriva lui %s.",  titel, loser);
												OOCNews(COLOR_WHITE,string);
											}
				                	        else
				                	        {
				                	            SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "*	Puteai fi campion daca aveai jobul de boxeur!");
				                	        }
										}
										else
										{
										    GetPlayerName(TBoxer, titel, sizeof(titel));
										    format(string, sizeof(string), "Stiri: Campionul %s a castigat lupta impotriva lui %s.",  titel, loser);
											OOCNews(COLOR_WHITE,string);
											Titel[TitelWins] = PlayerInfo[TBoxer][pWin];
				                	       	Titel[TitelLoses] = PlayerInfo[Boxer1][pLoses];
				                	        sUpdate(0,TitelWinsx);
				                	       	sUpdate(0,TitelNamex);
				                	        sUpdate(0,TitelLosesx);
        								}
									}
								}//TBoxer
								format(string, sizeof(string), "*	Ai pierdut impotriva lui %s.", winner);
								SendClientMessage(Boxer2, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(Boxer2, "~r~Ai pierdut!", 3500, 1);
								format(string, sizeof(string), "*	Ai castigat impotriva lui %s.", loser);
								SendClientMessage(Boxer1, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(Boxer1, "~g~Ai castigat", 3500, 1);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "*	Esti obosit, mananca ceva.");
								    SetPlayerHealth(Boxer1, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "*	Te simti destul de bine dupa lupta. Totusi, ar trebui sa mananci ceva.");
								    SetPlayerHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "*	Esti obosit, mananca ceva.");
							    	SetPlayerHealth(Boxer2, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "*	Te simti destul de bine dupa lupta. Totusi, ar trebui sa mananci ceva.");
								    SetPlayerHealth(Boxer2, 50.0);
								}
                                GameTextForPlayer(Boxer1, "~g~Meci terminat", 5000, 1); GameTextForPlayer(Boxer2, "~g~Meci terminat", 5000, 1);
								if(PlayerInfo[Boxer1][pJob2] == 6 || PlayerInfo[Boxer1][pJob1] == 6) { PlayerInfo[Boxer1][pBoxSkill] += 1; }
								PlayerBoxing[Boxer1] = 0;
								PlayerBoxing[Boxer2] = 0;
								Update(Boxer1, pBoxSkillx);
							}
			            }
			            //InRing = 0;
			            RoundStarted = 0;
			            Boxer1 = 255;
			            Boxer2 = 255;
			            TBoxer = 255;
			            trigger = 0;
			        }
			    }
			}
			if(OnJob[i] == 11)
			{
			 	if(CropDust[0] == GetPlayerVehicleID(i)  || CropDust[1] == GetPlayerVehicleID(i)  || CropDust[2] == GetPlayerVehicleID(i)  || CropDust[3] == GetPlayerVehicleID(i)  )
				{
				 	if(IsPlayerInCheckpoint(i) && PlayerReservor[i] ==0)
				 	{
					    SetTimerEx("frezePlane", 9000, 0, "i", i);
						TogglePlayerControllable(i, 0);
				 	    PlayerReservor[i] = 5;
			 		    DisablePlayerCheckpoint(i);
			            GameTextForPlayer(i, "~n~~y~Refueling...",6000,5);
						return 1;
				 	}
				 	if(GetVehicleSpeed(GetPlayerVehicleID(i))<90) return 1;
				 	if(SmokeCRopDust[i] == 0) return 1;
    				if(IsPlayerInArea(i,-595.8357,-157.8833,-1562.8906,-1297.3677))
    				{
    				    if(PlayerReservor[i] <= 0)
    				    {
	   				    	PlayerReservor[i] = 0;
	   				    	SendClientMessage(i,COLOR_LIGHTBLUE,"Ai terminat rezervoarele, aterizeaza sa le umpli!");
            		 		SetPlayerCheckpoint(i, -551.5206,-1491.3308,9.5497,8.0);
               		 		SmokeCRopDust[i] = 0;
				  	        if(IsValidDynamicObject(SmokeCropDuster[0][i])) DestroyDynamicObject(SmokeCropDuster[0][i]);
						    if(IsValidDynamicObject(SmokeCropDuster[1][i])) DestroyDynamicObject(SmokeCropDuster[1][i]);
						    if(IsValidDynamicObject(SmokeCropDuster[2][i])) DestroyDynamicObject(SmokeCropDuster[2][i]);
						    if(IsValidDynamicObject(SmokeCropDuster[3][i])) DestroyDynamicObject(SmokeCropDuster[3][i]);
	   				    	return 1;
    				    }
    				    PlayerLitter[i] ++;
    				    format(string,sizeof(string),"~w~%d/60 Litri",PlayerLitter[i]);
			            GameTextForPlayer(i, string,900,5);
			            if(PlayerLitter[i] >= 60)
			            {
	   				    	PlayerLitter[i] = 0;
	   				    	PlayerReservor[i] --;
	   				    	SendClientMessage(i,COLOR_LIGHTRED,"Ai terminat un rezervol");
							GivePlayerCash(i,3200);
    					}
	   				   	return 1;
    				}
    				else return GameTextForPlayer(i,"~r~~n~~n~~n~~n~~n~~n~Intoarce-te pe camp",700,3);
				}
			}


			if(OnJob[i] == 8)
			{
     			if(truck1 != GetPlayerVehicleID(i) && truck2 != GetPlayerVehicleID(i) && truck3 != GetPlayerVehicleID(i) && truck4 != GetPlayerVehicleID(i) && truck5 != GetPlayerVehicleID(i) && truck6 != GetPlayerVehicleID(i) && truck7 != GetPlayerVehicleID(i) ) return 1;
				for(new h = 0; h < sizeof(SBizzInfo); h++)
				{
					if(IsPlayerInRangeOfPoint(i, 10, SBizzInfo[h][sbPosX], SBizzInfo[h][sbPosY], SBizzInfo[h][sbPosZ]))
					{
						format(string, sizeof(string), "~w~%s~n~~r~Produse necesare~w~: %d~n~~y~Pret pe Produs: ~w~: $%d~n~~g~Fonduri: ~w~: $%d"
						,SBizzInfo[h][sbName],SBizzInfo[h][sbMaxProd]-SBizzInfo[h][sbProduse],SBizzInfo[h][sbPriceProd],SBizzInfo[h][sbTill]);
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
				}
				for(new h = 0; h < sizeof(BizzInfo); h++)
				{
					if(IsPlayerInRangeOfPoint(i, 10, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]))
					{
						format(string, sizeof(string), "~w~%s~n~~r~Produse necesare~w~: %d~n~~y~Pret pe Produs: ~w~: $%d~n~~g~Fonduri: ~w~: $%d"
						,BizzInfo[h][bMessage],(BizzInfo[h][bMaxProducts]-BizzInfo[h][bProducts]),BizzInfo[h][bPriceProd],BizzInfo[h][bTill]);
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
				}
			}
     		if(OnJob[i]== 5)
     		{
       			if(swep1 != GetPlayerVehicleID(i) && swep2 != GetPlayerVehicleID(i) && swep3 != GetPlayerVehicleID(i) && swep4 != GetPlayerVehicleID(i) && swep5 != GetPlayerVehicleID(i) && swep6 != GetPlayerVehicleID(i)) return 1;
                for(new s;s<8;s++)
			    {
			   		new Float:x, Float:y, Float:z;
					GetDynamicObjectPos(ObiectSwep[s], x, y, z);
					if(ObiectSwepOVer[s] == 0)
					{
   		    			if(IsPlayerInRangeOfPoint(i, 3,x,y,z))
   		    			{
   		    			    if(IsDynamicObjectMoving(ObiectSwep[s])) continue;
   		    	    	    SetDynamicObjectPos(ObiectSwep[s],x,y,z-7);
 							GameTextForPlayer(i, "~g~+100", 1000, 1);
 							GivePlayerCash(i,200);
   		    			    ObiectSwepOVer[s] = 1;
						    format(string,sizeof(string), "%s %d [Sweep] Start",PlayerName(i),i);
							JobLog(string);
						    return 1;
   		    			}
   		    		}
   				}
		 	}
			if(OnJob[i]==12)
			{
   		    	if(cutter != GetPlayerVehicleID(i) && cutter2 != GetPlayerVehicleID(i) && cutter3 != GetPlayerVehicleID(i) && cutter4 != GetPlayerVehicleID(i)) return 1;
			    for(new g;g<30;g++)
			    {
                	new Float:x, Float:y, Float:z;
				    GetDynamicObjectPos(CutGrass[g], x, y, z);
				    if(CutGrassOVer[g] == 1) continue;
   		    	    if(IsPlayerInRangeOfPoint(i, 3,x,y,z))
   		    	    {
   		    	        if(IsDynamicObjectMoving(CutGrass[g])) continue;
   		    	        SetDynamicObjectPos(CutGrass[g],x,y,z-7);
 						GameTextForPlayer(i, "~g~+1000", 1000, 1);
 						GivePlayerCash(i,1000);
					    SetTimerEx("MoveGrasBack", 110000, false, "i", g);
					    CutGrassOVer[g] = 1;
					    format(string,sizeof(string), "%s %d [Cut] ==> A taiat iarba %d, +1000",PlayerName(i),i,g);
						JobLog(string);
					    return 1;
					}
				}
			}
		}
	}
	return 1;
}

MoveSweepDown()
{
    for(new s;s<8;s++)
    {
	    new Float:x, Float:y, Float:z;
	    GetDynamicObjectPos(ObiectSwep[s], x, y, z);
		MoveDynamicObject(ObiectSwep[s], x, y, z-2,0.2);
		ObiectSwepOVer[s] = 0;
	}
 	return 1;
}

public 	MoveSweepBack()
{
    for(new s;s<8;s++)
    {
	    new Float:x, Float:y, Float:z;
	    GetDynamicObjectPos(ObiectSwep[s], x, y, z);
		MoveDynamicObject(ObiectSwep[s], x, y, z,0.2);
		ObiectSwepOVer[s] = 0;
	}
 	return 1;
}

public 	MoveGrasBack(GrassId)
{
    new Float:x, Float:y, Float:z;
    GetDynamicObjectPos(CutGrass[GrassId], x, y, z);
	MoveDynamicObject(CutGrass[GrassId], x, y, z+7,0.2);
	CutGrassOVer[GrassId] = 0;
 	return 1;
}
public CuffedPlayer(playerid)
{
	new string[155];
	if(!IsPlayerInAnyVehicle(playerid))
	{
		format(string, sizeof(string), "* %s rupe catusele si se elibereaza", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		GameTextForPlayer(playerid, "~b~UnCuffed", 2500, 3);
  		PlayerCuffed[playerid] = 0;
		TogglePlayerControllable(playerid, 1);
		ClearAnimations(playerid);
 		if(IsPlayerAttachedObjectSlotUsed(playerid,0))
		RemovePlayerAttachedObject(playerid,0);
	}
	return 1;
}
public AdminLog(string[])
{
    new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/AdminLog.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public LoginQuit(string[])
{
    new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/LoginQuit.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public HackLog(string[])
{
    new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/HackLog.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public factionloguri(string[])
{
    new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/factionloguri.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public JobLog(string[])
{
    new entry[256];
	format(entry, sizeof(entry), "%s %s\n",CurrentTimeStamps(),string);
	new File:hFile;
	hFile = fopen("Logs/JobLog.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public AllCommandLog(string[])
{
    new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/AllCommandLog.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public PaydayLog(string[])
{
    new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/paydaylogs.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}


public OtherTimers()
{
	new string[155];
	foreach(Player,i)
	{
        if(TutorialTime[i]  >= 1)
		{
	        TutorialTime[i] += 1;
			if(TutorialTime[i] == 20)
	 		{
            	ClearChatbox(i, 10);
            	gLogged[i] = 1;
				SetPlayerPos(i, 1442.1715, -1579.2018, 77.8181);
				GameTextForPlayer(i, "Tutorial Step 2/6", 3000, 5);
				SetPlayerCameraPos(i,1442.1715, -1579.2018, 67.8181);
				SetPlayerCameraLookAt(i, 1497.5132, -1664.8414, 33.6467);
				SendClientMessage(i, COLOR_WHITE, "Esti singur intr-o lume care nu te vrea, fa-ti Tatal mandru, fa-ti un sens indiferent care va fi el in societate");
				SendClientMessage(i, COLOR_WHITE, "Gandeste tot ce spui si tot ce faci!");
				SendClientMessage(i, COLOR_WHITE, "Este cel mai important!");
			}
			if(TutorialTime[i] == 35)
	 		{
				ClearChatbox(i, 10);
				SetPlayerPos(i,-2634.4939, 375.6739,97.510);
				GameTextForPlayer(i, "Tutorial Step 3/6", 3000, 5);
				SetPlayerCameraPos(i, -2634.4939, 375.6739, 87.5103);
				SetPlayerCameraLookAt(i, -2746.3540, 376.9555, 3.0895);
				SendClientMessage(i, 0xDD9322C8, "Parlamentul");
				SendClientMessage(i, COLOR_WHITE, "Acesti oameni fac legile accepta/ resping un guvern, suspenda presedintele, etc.");
			  	SendClientMessage(i, COLOR_WHITE, "Poti ajunge unul dintre ei, daca esti votat de playeri");
            }
			if(TutorialTime[i] == 50)
	 		{
               	ClearChatbox(i, 10);
				SetPlayerPos(i,  -773.9689, 847.8386, 83.923);
				GameTextForPlayer(i, "Tutorial Step 4/6", 3000, 5);
				SetPlayerCameraPos(i, -773.9689, 847.8386, 73.9231);
				SetPlayerCameraLookAt(i, -691.5131, 936.5510, 19.2660);
				SendClientMessage(i, 0xDD9322C8, "Presedintele");
				SendClientMessage(i, COLOR_WHITE, "Presedintele ofera rolul de prim-ministru, de Lider C.I.A., grade, decoratii etc.");
			   	SendClientMessage(i, COLOR_WHITE, "Poti ajunge Presedinte daca esti un Player extraordinar si ii convingi pe jumatate plus 1 sa te voteze!");
            }
			if(TutorialTime[i] == 65)
	 		{
				ClearChatbox(i, 10);
				SetPlayerPos(i, 2328.4841, 2374.0093, 79.861);
				GameTextForPlayer(i, "Tutorial Step 5/6", 3000, 5);
				SetPlayerCameraPos(i,2328.4841, 2374.0093, 66.8619);
				SetPlayerCameraLookAt(i, 2389.4294, 2444.2761, 41.5071);
				SendClientMessage(i, 0xDD9322C8, "Guvernul");
				SendClientMessage(i, COLOR_WHITE, "Guvernul guverneaza Tara asigura la buna executare a legilor si face economia Statului");
				SendClientMessage(i, COLOR_WHITE, "Poti ajunge aici, daca convingi Presedintele sa te numeasca Prim-Ministru sau Prim-Ministrul sa te numeasca Ministru");
            }
			if(TutorialTime[i] == 80)
	 		{
                ClearChatbox(i, 10);
				SetPlayerPos(i,  2929.7388, -1211.7247, 53.988);
				GameTextForPlayer(i, "Tutorial Step 6/6", 3000, 5);
				SetPlayerCameraPos(i, 2929.7388, -1211.7247, 43.9887);
			    SetPlayerCameraLookAt(i, 3103.0334, -1091.5511, 13.1509);
			    SendClientMessage(i, 0xDD9322C8, "Pentagonul");
			    SendClientMessage(i, COLOR_WHITE, "Aici se afla factiunile C.I.A. si F.B.I.");
			    SendClientMessage(i, COLOR_WHITE, "Acestea intretin buna desfasurare a statului, prin ordine si disciplina");
			    SendClientMessage(i, COLOR_WHITE, "Poti ajunge aici daca respecti legea si ii convingi pe Lideri sa te angajeze");
    		}
			else if(TutorialTime[i] == 95)
	 		{
	 		    gLogged[i] = 1;
               	ClearChatbox(i, 10);
				StopAudioStreamForPlayer(i);
			  	SetPlayerInterior(i, 0);
			 	SetPlayerVirtualWorld(i, 0);
        		TutorialTime[i] = 0;
    			PlayerInfo[i][pTutorial] = 1;
				Update(i, pTutorialx);
	 		    PlayerInfo[i][pLevel] = 1;
 				Update(i, pLevelx);
	 		    PlayerInfo[i][pRegistred] = 1;
				Update(i, pRegistredx);
				PlayerInfo[i][pAdmin] = 0;
				Update(i, pAdminx);
                PlayerInfo[i][pInterior] = 0;
			//	SetPlayerSkin(i,PlayerInfo[i][pSkin]);
				PlayerInfo[i][pPhoneNumber] = 0;
				GameTextForPlayer(i, "Tutorial Complete", 5000, 5);
				SendClientMessage(i, COLOR_YELLOW, ":: Finalul ::");
				SendClientMessage(i, COLOR_YELLOW2, ""#SERVERNAME"RPG iti multumeste pentru citirea acestui tutorial! Masinile pentru incepatori sunt pe minimap");
				SendClientMessage(i, COLOR_YELLOW2, "Poti folosi chat-ul /newbie pentru intrebari la o ora si /sos pentru ajutor.");
				SendClientMessage(i, COLOR_YELLOW2, "");
				SendClientMessage(i, COLOR_YELLOW2, "");
				SendClientMessage(i, 0x004DFFC8, "Iti multumim ca ai revenit pe "#SERVERNAME"");
				format(string, sizeof(string), "{1580EA}Atentie! {FFFFFF}%s s-a inregistrat! Folositi /goto %s pentru a-i face un tur al server-ului!", PlayerName(i), PlayerName(i));
				HelpersBroadCast(COLOR_YELLOW2, string);//
				SpawnPlayer(i);
				mysql_format(handle, query, sizeof(query), "SELECT * FROM `players` WHERE `username`='%e'", PlayerName(i));
	       		mysql_tquery(handle, query, "WhenPlayerLogin", "i", i);
	   			SetPlayerCheckpoint(i,1372.2798, -1648.5045, 12.9445,7.0);
				CP[i] = 25;
	 		}
		}
 	}
}

public ReportTimer(playerid)
    ReportTime[playerid] = 0;

public SosTimer(playerid)
    SosTime[playerid] = 0;

public BroadCast(color, string[])
{
	SendClientMessageToAll(color, string);
	return 1;
}
public AdminsBroadCast(color, string[], level)
{
	foreach(Player,i)
	{
		if(PlayerInfo[i][pAdmin] >= level)
		SendClientMessage(i, color, string);
		AdminLog(string);
	}
	return 1;
}

public HelpersBroadCast(color, string[])
{
	foreach(Player,i)
	{
		if(PlayerInfo[i][pHelper] >= 1 && PlayerInfo[i][pAdmin] == 0)
		SendClientMessage(i, color, string);
		AdminLog(string);
	}
	return 1;
}


PainBallBroadCast(color, string[])
{
	foreach(Player,i)
	{
	    if(PaintBallPlaying[i]!=0)
		SendClientMessage(i, color, string);
	}
}

public FactionsBroadCast(faction, color, string[])
{
	foreach(Player,i)
	{
	    if(PlayerInfo[i][pMember] == faction || PlayerInfo[i][pLeader] == faction)
		SendClientMessage(i, color, string);
	}
}

public RadioBroadCast(faction, color, string[])
{
	foreach(Player,i)
	{
		if(PlayerInfo[i][pMember] == faction || PlayerInfo[i][pLeader] == faction)
  		SendClientMessage(i, color, string);
	}
}
ReturnUser(text[], playerid = INVALID_PLAYER_ID)
{
	new pos = 0;
	while (text[pos] < 0x21) // Strip out leading spaces
	{
		if (text[pos] == 0) return INVALID_PLAYER_ID; // No passed text
		pos++;
	}
	new userid = INVALID_PLAYER_ID;
	if (IsNumeric(text[pos])) // Check whole passed string
	{
 		userid = strval(text[pos]);
		if (userid >=0 && userid < MAX_PLAYERS)
		{
			if(!IsPlayerConnected(userid))
   			userid = INVALID_PLAYER_ID;
  			else
  			return userid; // A player was found
  		}
	}
	new len = strlen(text[pos]);
	new count = 0;
	new name[MAX_PLAYER_NAME];
	foreach(Player,i)
	{
		GetPlayerName(i, name, sizeof (name));
		if (strcmp(name, text[pos], true, len) == 0) //
		{
			if (len == strlen(name)) //
  			return i;
			else // Partial match
			{
				count++;
				userid = i;
			}
		}
	}
	if (count != 1)
	{
		if (playerid != INVALID_PLAYER_ID)
		{
			if (count)
  			SendClientMessage(playerid, 0xFF0000AA, "Multiple users found, please narrow earch");
  			else
   			SendClientMessage(playerid, 0xFF0000AA, "No matching user found");
  		}
		userid = INVALID_PLAYER_ID;
	}
	return userid; // INVALID_USER_ID for bad return
}
IsNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}

FormatNumber(number)
{
   new Str[15];
   format(Str, 15, "%d", number);

   if (strlen(Str) < sizeof(Str))
   {
      if (number >= 1000 && number < 10000)
             strins( Str, ",", 1, sizeof(Str));

      else if (number >= 10000 && number < 100000)
           strins(Str, ",", 2, sizeof(Str));

      else if (number >= 100000 && number < 1000000)
           strins(Str, ",", 3, sizeof(Str));

      else if (number >= 1000000 && number < 10000000)
           strins(Str, ",", 1, sizeof(Str)),strins(Str, ",", 5, sizeof(Str));

      else if (number >= 10000000 && number < 100000000)
           strins(Str, ",", 2, sizeof(Str)),strins(Str, ",", 6, sizeof(Str));

      else if (number >= 100000000 && number < 1000000000)
           strins(Str, ",", 3, sizeof(Str)),strins(Str, ",", 7, sizeof(Str));

      else if (number >= 1000000000 && number < 10000000000)
           strins(Str, ",", 1, sizeof(Str)),
           strins(Str, ",", 5, sizeof(Str)),
           strins(Str, ",", 9, sizeof(Str));
      else format(Str, 10, "%d", number);
   }
   else  format( Str, 15, "<BUG>" );
   return Str;
}

public  OnPlayerCommandReceived(playerid, cmdtext[])
{
	if(TutorialTime[playerid] > 0)
	{
		SCM(playerid,COLOR_LIGHTBLUE,"Esti in tutorial nu poti scrie nimic!");
		return 0;
	}
	return 1;
}
public  OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
    new string[290];
	if(success != 1)	{ format(string,sizeof(string),"Comanda %s nu exista!",cmdtext); SendClientMessage(playerid,COLOR_LIGHTRED,string); /*return 1;*/}
	Comenzi[playerid] ++;
	format(string,sizeof(string), "%s: %s[%d] [CMD] -> %s",CurrentTimeStamps(),PlayerName(playerid),playerid,cmdtext);
	AllCommandLog(string);
    return  1 ;
}

/*================================================OnPlayerCommandText===========================OnPlayerLife=============
  afklist    remove  glasses  briefcase		selectspawn  fold tie   decode   r d f    EatHamburger     fill  a     fuelstation     cc                buycar sellcar leasingbuy       jetpack
 uninvite    deleteatm  createatm   invite  checkcan	spawnchange   buy   desarm detonate buybomb  plantbomb    helpers admins vips     st / tn      givelevelall     giverpall         report ar tr sos as ts  soss reports
 makeleader   withdraw bank deposit withdraw  countdown  nooc gps  engine       skydive    setskin     stats / check          money   weather weatherall setint setvw
 makeadmin   accept cancel    movesbiz   music  changespawn   heal  hair  exam   buylicenses        carcode / checkcode /acheckcode   sendls primarie dmw
givemoney    laser    warn mute     veh   duty   apark vcreate    getincar/ getcar /gotocar / rtc                 hcreate  movehouse
reward   cnn cnnn  time   payday   vr fixveh   kick     endspec   changeweather       rac/ prac/ fuelcars /setarmour /sethp/ slap         handbrake freeze
uncon   lock unlock  dice coin  tod  pm    number  spec   heal  unrentveh    destroycar     mc/ bank /ls /lv /sf /lc /ng /hhouse /ahouse            hduty aduty
specoff   we   car  blow  jail adv    spec    repaircar  checkweapons cw    pentagon /aparking /goto /gethere /vw     ban unban  `       fly         setstat  changepass aprove
disarm opengate unarm unarmevent .deagleevent healevent unarmevent freezeevent armourevent unfrezeevent givegunallrange startevent tpevent tpoff
safeinfo  atmhelp flymode  cgraffity  agl  vslap    switch gplinfo ivn  lotto  charity shop /skill
 opengate surrender crb rub rrball openjail od do rrballs take jl breathtest wanted belt helmet checkbelt  parter parcare roof etaj1 elevator ticket megaphone m ticket badge clear tazer cuff uncuff drag
up down middle giverank gangedit aw war turfs reloadt radar arrest free far mark gotomark
cw w par  do try me l c b low  s o n sms call leaderchat //vip  togn togw togooc toglc tognews
contracts mycontract givehit contract order resethit   news live
pAchievement10 dialogid 44 last*/
new strings[388];
//CMD:aaa(playerid,params[])
//{
//	SetPlayerAttachedObjectModel(playerid, 9, 2114);`
//	SetPlayerTempAttachedObject(playerid, 1111, 2114, 1,  1,1,0  ,0,0,0);
//	SendClientMessage(playerid,-1,"ads");
//	return 1;
//}

/*CMD:wash(playerid,params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 5, 1911.1886,-1784.2952,13.0801)) return 1;
    if(!IsPlayerInAnyVehicle(playerid)) return 1;
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
    if(GetPlayerMoney(playerid) < 4) return 1;

  	GivePlayerMoney(playerid, -5);
    for(new i = 0; i < MAX_PLAYERS; i++)
  	{
	   	if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid))
        {
          	TogglePlayerControllable(i, 0);
            SetPlayerCameraPos(i,1907.8804,-1790.0590,15);
           	SetPlayerCameraLookAt(i,1911.0471,-1781.6868,13.3828);
    	}
                       //if(GetPlayerSurfingVehicleID(i) == GetPlayerVehicleID(playerid))
                         //{
                         //	SetPlayerPos(i,1906.9204,-1786.0435,13.5469);
                          //  SetPlayerFacingAngle(i, 270);
                         // }
        SetVehiclePos(GetPlayerVehicleID(playerid), 1911.1886, -1784.2952, 13.0801);
       	SetVehicleZAngle(GetPlayerVehicleID(playerid), 0);
                       //MoveObject(entrancegate, 1911.21130371, -1780.68151855, 10.50000000, 1);
                       //SetTimerEx("Autocruise",3500,0,"ii",playerid, 1);
   	}
	return 1;
}
*/
CMD:deletecp(playerid,params[])
return cmd_cp(playerid,params);

CMD:cp(playerid,params[])
{
	DisablePlayerCheckpoint(playerid);
	CP[playerid] = 0;
	DisablePlayerRaceCheckpoint(playerid);
	return 1;
}

CMD:setfw(playerid,params[])
{
    if(gLogged[playerid] == 0) return 1;
 	if (PlayerInfo[playerid][pAdmin] <7)  return  SendClientMessage(playerid, COLOR_GREY, "**Nu ai rangul administrativ necesar !");
	new playa,ammount;
	if(sscanf(params, "ud", playa,ammount)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /setparticipant [player]");
	if(!IsPlayerConnected(playa)) return 1;
	if(gLogged[playa]==0) return 1;
	PColor[playa] = ammount;
	SCM(playerid,-1,"Amount firworks changed");
	return 1;
}
CMD:giftpoint(playerid,paramas[])
{
	CP[playerid] = 80;
    SetPlayerCheckpoint(playerid,1473.9146,-1641.8745,13.3600,8);
}

CMD:mygift(playerid,params[])
{
    if(!IsPlayerInRangeOfPoint(playerid, 3,1473.9146,-1641.8745,13.3600)) return SCM(playerid,COLOR_LIGHTRED,"Nu esti la parcul LSPD pentru a lua cadoul!{FFFFFF}(/giftpoint)");
    if(PlayerInfo[playerid][pCoin] > 0) return SCM(playerid,COLOR_LIGHTRED,"Ai luat cadoul de curand, asteapta petru urmatorul.");
	new gyfttype=random(13);
	if(gyfttype==0)
	{
	    PlayerInfo[playerid][pCoin] = 1;
	    Update(playerid,pCoinx);
	    PlayerInfo[playerid][pRespect]+=6;
	    Update(playerid,pRespectx);
	    SCM(playerid,COLOR_LIGHTBLUE,"Ai primit 6 puncte respect, poti reveni peste 6 ore sa iti iei cadoul!");
		printf("%s a primit 6 rp points", PlayerName(playerid));
	    return 1;
	}
	if(gyfttype==1)
	{
	    PlayerInfo[playerid][pCoin] = 1;
	    Update(playerid,pCoinx);
	    GivePlayerCash(playerid,100000);
	    SCM(playerid,COLOR_LIGHTGREEN,"Ai primit 100.000$, poti reveni peste 6 ore sa iti iei cadoul!");
		printf("%s a primit 100000", PlayerName(playerid));
	    return 1;
	}
	if(gyfttype==2)
	{
	    PlayerInfo[playerid][pCoin] = 1;
	    Update(playerid,pCoinx);
	    GivePlayerCash(playerid,450000);
	    SCM(playerid,COLOR_LIGHTGREEN,"Ai primit 450.000$, poti reveni peste 6 ore sa iti iei cadoul!");
		printf("%s a primit 450000", PlayerName(playerid));
	    return 1;
	}
	if(gyfttype==3)
	{
	    PlayerInfo[playerid][pCoin] = 1;
	    Update(playerid,pCoinx);
	    PlayerInfo[playerid][pLevel]++;
	    Update(playerid,pLevelx);
	    SCM(playerid,COLOR_LIGHTBLUE,"Ai primit 1 level up, poti reveni peste 6 ore sa iti iei cadoul!");
		printf("%s a primit 1 level", PlayerName(playerid));
	    return 1;
	}
	if(gyfttype==4)
	{
	    PlayerInfo[playerid][pCoin] = 1;
	    Update(playerid,pCoinx);
	    PlayerInfo[playerid][pLevel]++;
	    PlayerInfo[playerid][pLevel]++;
	    Update(playerid,pLevelx);
	    SCM(playerid,COLOR_LIGHTBLUE,"Ai primit 2 level up, poti reveni peste 6 ore sa iti iei cadoul!");
		printf("%s a primit 2 levele", PlayerName(playerid));
	    return 1;
	}
	if(gyfttype==5)
	{
	    PlayerInfo[playerid][pCoin] = 1;
	    Update(playerid,pCoinx);
	    GivePlayerCash(playerid,300000);
	    SCM(playerid,COLOR_LIGHTBLUE,"Ai primit 300.000$, poti reveni peste 6 ore sa iti iei cadoul!");
		printf("%s a primit 300000", PlayerName(playerid));
	    return 1;
	}
	if(gyfttype==6)
	{
	    PlayerInfo[playerid][pCoin] = 1;
	    Update(playerid,pCoinx);
	    PlayerInfo[playerid][pDrugs]+=1000;
	    Update(playerid,pDrugsx);
	    SCM(playerid,COLOR_LIGHTBLUE,"Ai primit 1kg de droguri, poti reveni peste 6 ore sa iti iei cadoul!");
		printf("%s a primit 1kg de droguri", PlayerName(playerid));
	    return 1;
	}
	if(gyfttype==7)
	{
	    PlayerInfo[playerid][pCoin] = 1;
	    Update(playerid,pCoinx);
	    GivePlayerCash(playerid,200000);
	    SCM(playerid,COLOR_LIGHTBLUE,"Ai primit 200.000 $, poti reveni peste 6 ore sa iti iei cadoul!");
		printf("%s a primit 200000 materiale", PlayerName(playerid));
	    return 1;
	}
	if(gyfttype==8)
	{
	    PlayerInfo[playerid][pCoin] = 1;
	    Update(playerid,pCoinx);
	    PlayerInfo[playerid][pKill]+=40;
	    Update(playerid,pKillx);
	    SCM(playerid,COLOR_LIGHTBLUE,"Ai primit 40 de Killuri in stats, poti reveni peste 6 ore sa iti iei cadoul!");
		printf("%s a primit 40 kils", PlayerName(playerid));
	    return 1;
	}
	if(gyfttype==9)
	{
	    if(PlayerInfo[playerid][pWarns]>0)
	    {
	    	PlayerInfo[playerid][pCoin] = 1;
	    	Update(playerid,pCoinx);
	   	 	PlayerInfo[playerid][pWarns]--;
	    	Update(playerid,pWarnsx);
	    	SCM(playerid,COLOR_LIGHTBLUE,"Ai primit un warn in minus de Kill-uri in stats, poti reveni peste 6 ore sa iti iei cadoul!");
			printf("%s a primit unwarn", PlayerName(playerid));
	    	return 1;
		}
		else
		{
			PlayerInfo[playerid][pCoin] = 1;
	    	Update(playerid,pCoinx);
	    	PlayerInfo[playerid][pDeath]-=40;
	    	Update(playerid,pDeathx);
	    	SCM(playerid,COLOR_LIGHTBLUE,"Ai primit -40 de Death-uri in stats, poti reveni peste 6 ore sa iti iei cadoul!");
			printf("%s a primit -40 death in stats", PlayerName(playerid));
	    	return 1;
		}
	}
	if(gyfttype==10)
	{
	    PlayerInfo[playerid][pCoin] = 1;
	    Update(playerid,pCoinx);
		ServerWeapon(playerid, 3, 1);//pulan
		ServerWeapon(playerid, 31, 500);//m4a1
		ServerWeapon(playerid, 16, 15);//grenade
		ServerWeapon(playerid, 34, 100);//sniper
		ServerWeapon(playerid, 32, 300);//tec9
		ServerWeapon(playerid, 24, 120);//deagle
		ServerWeapon(playerid, 26, 220);//sawn off
	    SCM(playerid,COLOR_LIGHTBLUE,"Ai primit arme, poti reveni peste 6 ore sa iti iei cadoul!");
		printf("%s a primit arme", PlayerName(playerid));
	    return 1;
	}
	if(gyfttype==11)
	{
	    PlayerInfo[playerid][pCoin] = 1;
	    Update(playerid,pCoinx);
		PlayerInfo[playerid][pConnectTime] += 36000;
		Update(playerid, pConnectTimex);
	    SCM(playerid,COLOR_LIGHTBLUE,"Ai primit 10 ore in stats, poti reveni peste 6 ore sa iti iei cadoul!");
		printf("%s a primit 10 ore", PlayerName(playerid));
	    return 1;
	}
	if(gyfttype==12)
	{
	    PlayerInfo[playerid][pCoin] = 1;
	    Update(playerid,pCoinx);
	    PlayerInfo[playerid][pLeasing] -= 5000000;
		Update(playerid, pLeasingx);
	    SCM(playerid,COLOR_LIGHTBLUE,"Ai primit -5.000.000 de leasing, poti reveni peste 6 ore sa iti iei cadoul!");
		printf("%s a primit 5kk leasing ore", PlayerName(playerid));
	    return 1;
	}
	return 1;
}

CMD:clothes(playerid,params[])
{
    if(!IsPlayerInRangeOfPoint(playerid, 3,207.6130, -100.9292, 1005.3320)&&
	!IsPlayerInRangeOfPoint(playerid, 3,161.3307, -83.3789, 1001.8509)&&
 	!IsPlayerInRangeOfPoint(playerid, 3,204.3878, -159.4471, 1000.5186)&&
 	!IsPlayerInRangeOfPoint(playerid, 3,207.1010, -129.2605, 1003.5063)&&
 	!IsPlayerInRangeOfPoint(playerid, 3,206.3504, -8.0950, 1001.1480)) return SCM(playerid,COLOR_RED,"Nu esti la un magazin de haine!");
	if(PlayerInfo[playerid][pMember] == 0)	SetPlayerSkin(playerid,0);
    new Float:X, Float:Y, Float:Z;
    GetPlayerPos(playerid, X, Y, Z);
   	InteriorPosx[playerid] = X;
	InteriorPosy[playerid] = Y;
	InteriorPosz[playerid] = Z;
	interiorplayer[playerid] = GetPlayerInterior(playerid);
	virtualworld[playerid] = GetPlayerVirtualWorld(playerid);
	SelectCharID[playerid] = PlayerInfo[playerid][pMember];
	SelectCharPlace[playerid] = 1;
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Alege skinul dorit");
	SetPlayerInterior(playerid,0);
	TogglePlayerControllable(playerid, 0);
	PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
	Update(playerid,pSkinx);
 	SetPlayerPos(playerid,-2158.9033, 252.8161, 40.9432);
  	SetPlayerCameraPos(playerid,-2155.0632, 252.8161, 43.5232);
	SetPlayerCameraLookAt(playerid,-2158.9033, 252.8161, 42.1432);
	SetPlayerFacingAngle(playerid,-90);
	SetPlayerWeather(playerid, 0);
    SetPlayerTime(playerid, 12, 0);
    SetPlayerVirtualWorld(playerid, playerid);
    Clothings[playerid] = 1;
    ShowPlayerDialog(playerid, 427, DIALOG_STYLE_MSGBOX,"{FFFFFF}Clothes:", "{FFFFFF}Apasa 'Next' pentru a schimba hainele.\nApasa 'Done' sa cumperi aceste haine.","{FFFFFF}Next", "{FFFFFF}Done");
	return 1;
}

CMD:nos(playerid,params[])
{
	if (PlayerInfo[playerid][pAdmin] <7)  return  SendClientMessage(playerid, COLOR_GREY, "**Nu ai rangul administrativ necesar !");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,0xff0000ff,"Nu esti in masina!");
    AddVehicleComponent(GetPlayerVehicleID(playerid),1010);
    SendClientMessage(playerid,0x00ff00ff,"Nitro adaugat!"); //No idea what colour that is though.
    return 1;
}

CMD:svot(playerid,params[])
{
	if (PlayerInfo[playerid][pAdmin] <7)  return  SendClientMessage(playerid, COLOR_GREY, "**Nu ai rangul administrativ necesar !");
	if(StartInscriere==1)	StartInscriere=0;
	else				StartInscriere=1;
	format(strings,100,"Acum inscrierea este %d",StartInscriere);
	SCM(playerid,-1,strings);
	return 1;
}
CMD:svot2(playerid,params[])
{
	if (PlayerInfo[playerid][pAdmin] <7)  return  SendClientMessage(playerid, COLOR_GREY, "**Nu ai rangul administrativ necesar !");
	if(StartVoting==1)	StartVoting=0;
	else				StartVoting=1;
	format(strings,100,"Acum votingul este %d",StartVoting);
	SCM(playerid,-1,strings);
	return 1;
}
CMD:abandoneaza(playerid,params[])
{
	if(gLogged[playerid] == 0) return 1;
	if(PlayerInfo[playerid][pDice] == 0) return SCM(playerid,-1,"Nu participi la alegeri");
	PlayerInfo[playerid][pDice] = 0;
	SCM(playerid,-1,"Ai abandonat alegerile");
	return 1;
}
CMD:setparticipant(playerid,params[])
{
	if(gLogged[playerid] == 0) return 1;
 	if (PlayerInfo[playerid][pAdmin] <7)  return  SendClientMessage(playerid, COLOR_GREY, "**Nu ai rangul administrativ necesar !");
	new playa;
	if(sscanf(params, "u", playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /setparticipant [player]");
	if(!IsPlayerConnected(playa)) return 1;
	if(gLogged[playa]==0) return 1;
 	PlayerInfo[playa][pAchievement11] = 0;
 	Update(playa,pAchievement11x);
 	SCM(playerid,-1,"Ai setat nevotat pe player");
 	return 1;
}
CMD:inscriere(playerid,params[])
{
	if(gLogged[playerid] == 0) return 1;
	if(PlayerInfo[playerid][pConnectTime]<7200) return SCM(playerid,-1,"Ai nevoie de 2 ore sa participi la alegeri");
	if(PlayerInfo[playerid][pDice] > 0) return SCM(playerid,-1,"Esti deja in cursa");
	ShowPlayerDialog(playerid, 42, DIALOG_STYLE_MSGBOX, "{FFFFFF}Alegeri", "{FFFFFF}\tVrei sa te inscrii in alegeri?\n/abandoneaza sa nu participarea", "DA","NU");
	return 1;
}

CMD:email(playerid,params[])
{
	if(gLogged[playerid] == 0) return 1;
	new message[128];
	if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /email [email-nou]");
	if(strlen(message) < 3 || strlen(message) > 59) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Email: {FFFFFF}Email-ul nu poate avea mai putin de 3 caractere sau mai mult de 59 caractere!");
    mysql_real_escape_string(message, message);
	if(strfind(message, "'", true) != -1) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Info: {FFFFFF}Nu folosi caractere nepermise!");
	if(strfind(message, "@", true) == -1) return  SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Info: {FFFFFF}Acela nu este un Email corect!");
	strmid(PlayerInfo[playerid][pEmail], message, 0, 60, 60);
	Update(playerid, pEmailx);
	format(strings, sizeof(strings), "{1580EA}Email: {FFFFFF}Acum, Email-ul tau este: %s!", PlayerInfo[playerid][pEmail]);
	SendClientMessage(playerid, COLOR_WHITE, strings);
	return 1;
}
CMD:resetcerere(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    if (PlayerInfo[playerid][pAdmin] <7)  return  SendClientMessage(playerid, COLOR_GREY, "**Nu ai rangul administrativ necesar !");
	new playa;
	if(sscanf(params, "u", playa)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /showlicenses [playerid/numejucator]");
	if(gLogged[playa] == 0) return  SendClientMessage(playerid, COLOR_GREY, "Player Nelogat !");
	if(!IsPlayerConnected(playa)) return  SendClientMessage(playerid, COLOR_GREY, "Player offline !");
	PlayerInfo[playa][pVariabila] = 0;
	Update(playa,pVariabilax);
	SCM(playerid,-1,"Ai resetat cererea playerului");
	return 1;
}
CMD:resetcerere2(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    if (PlayerInfo[playerid][pAdmin] <7)  return  SendClientMessage(playerid, COLOR_GREY, "**Nu ai rangul administrativ necesar !");
	new playa;
	if(sscanf(params, "u", playa)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /showlicenses [playerid/numejucator]");
	if(gLogged[playa] == 0) return  SendClientMessage(playerid, COLOR_GREY, "Player Nelogat !");
	if(!IsPlayerConnected(playa)) return  SendClientMessage(playerid, COLOR_GREY, "Player offline !");
	PlayerInfo[playa][pVariabila] = 1;
	Update(playa,pVariabilax);
	SCM(playerid,-1,"Ai resetat cererea playerului");
	return 1;
}
CMD:factionhelp(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
 	if (IsACop(playerid))
 	{
	 	SendClientMessage(playerid, COLOR_GREEN," /opengate /surrender /crb /rub /rrball /openjail /od /do /rrballs /wanted /drag /checkbelt /safeinfo");
		SendClientMessage(playerid, COLOR_GREEN," /elevator /ticket /megaphone /m /ticket /showbadge /clear /tazer /cuff /uncuff /take /jl /breathtest");
		return 1;
	}
	if (PlayerInfo[playerid][pMember] ==5 || PlayerInfo[playerid][pMember] ==14 ||PlayerInfo[playerid][pMember] ==15)
 	return SendClientMessage(playerid, COLOR_GREEN,"/vestiar /cgraffity /lockhq /safeinfo");
	if (PlayerInfo[playerid][pMember] ==6  ||PlayerInfo[playerid][pMember] ==16||PlayerInfo[playerid][pMember] ==13)
 	return SendClientMessage(playerid, COLOR_GREEN,"/vestiar /opengate /lockhq /safeinfo");
	if (PlayerInfo[playerid][pMember] ==8 )
 	return SendClientMessage(playerid, COLOR_GREEN,"/contracts /mycontract /givehit /contract /order /resethit /enter /exit /lockhq /safeinfo");
 	if (PlayerInfo[playerid][pMember] ==9 )
 	return SendClientMessage(playerid, COLOR_GREEN,"/live /news /safeinfo");
 	if (PlayerInfo[playerid][pMember] ==10 )
 	return SendClientMessage(playerid, COLOR_GREEN,"/fare /opengate /safeinfo");
	return 1;
}


CMD:showlicenses(playerid,params[])
return cmd_sl(playerid,params);

CMD:sl(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    new playa;
	if(sscanf(params, "u", playa)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /showlicenses [playerid/numejucator]");
	if(!IsPlayerConnected(playa)) return  SendClientMessage(playerid, COLOR_GREY, "Player offline !");
	if(playa == INVALID_PLAYER_ID) return  SendClientMessage(playerid, COLOR_GREY, "Player offline !");
    if (!ProxDetectorPlayer(8.0, playerid, playa)) return  SendClientMessage(playerid, COLOR_GREY, "Player offline !");
 	if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Scrie /licenses ");
    new text1[20];
    new text2[20];
    new text3[20];
    new text4[20];
    new text5[20];
	if(PlayerInfo[playerid][pCarLic]) text1 = "Passed";  else  text1 = "Not Passed";
    if(PlayerInfo[playerid][pFlyLic]) text4 = "Passed";  else  text4 = "Not Passed";
	if(PlayerInfo[playerid][pBoatLic]) text2 = "Passed"; else  text2 = "Not Passed";
	if(PlayerInfo[playerid][pFishLic]) text3 = "Passed"; else  text3 = "Not Passed";
	if(PlayerInfo[playerid][pGunLic])  text5 = "Passed"; else  text5 = "Not Passed";
	format(strings, sizeof(strings), "|__________ Licenses of %s __________|", PlayerName(playerid));
	SendClientMessage(playa, CRISTIAN, strings);
	format(strings, sizeof(strings), "** Drivers License: %s.", text1);
	SendClientMessage(playa, COLOR_GRAD6, strings);
	format(strings, sizeof(strings), "** Flying License: %s.", text4);
	SendClientMessage(playa, COLOR_GRAD5, strings);
	format(strings, sizeof(strings), "** Sailing License: %s.", text2);
	SendClientMessage(playa, COLOR_GRAD4, strings);
	format(strings, sizeof(strings), "** Fishing License: %s.", text3);
	SendClientMessage(playa, COLOR_GRAD3, strings);
	format(strings, sizeof(strings), "** Weapon License: %s.", text5);
	SendClientMessage(playa, COLOR_GRAD2, strings);
	format(strings, sizeof(strings), "* %s ti-a aratat licentele!", PlayerName(playerid));
	SendClientMessage(playa, COLOR_YELLOW, strings);
	format(strings, sizeof(strings), "* I-ai aratat licentele lui %s.", PlayerName(playa));
	SendClientMessage(playerid, COLOR_YELLOW, strings);
//	format(string1, 1024, "{26B0BA}|________Licenses of %s________|", PlayerName(playerid));
//	format(string2, 1024, "{E5E3B3}Drivers License: {26B0BA}%s \n{E5E3B3}Flying License: {26B0BA}%s \n{E5E3B3}Sailing License: {26B0BA}%s \n{E5E3B3}Fishing License: {26B0BA}%s",text1, text4, text2, text3);
//	format(string3, 1024, "{E5E3B3}Weapon License: {26B0BA}%s \n____________________________________",text5);
//	format(maxstr, 2000, "%s\n%s\n%s",string1,string2,string3);
//	ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, "", maxstr, "Cancel","");
    return 1;
}
CMD:cellphonehelp(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
	SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	if (PlayerInfo[playerid][pPhoneNumber] == 0) return SendClientMessage(playerid, COLOR_WHITE,"Poti cumpara un telefon de I.T. shop");
	SendClientMessage(playerid, COLOR_WHITE,"*** HELP *** scrie o comanda pentru ajutor");
	SendClientMessage(playerid, COLOR_GRAD3,"*** CELLPHONE *** /call 'ex: /call 112' /sms (/p)ickup (/h)angup /number");
	SendClientMessage(playerid, COLOR_GRAD4,"*** OTHER *** /help /househelp /renthelp /businesshelp /leaderhelp /fishhelp /cookhelp /irchelp");
	return 1;
}
CMD:help(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    new helpeddialog[1900];
	format(strings,sizeof(strings),"{FFFFFF}=========================================================================================================================\n");
	strcat(helpeddialog,strings);
	format(strings,sizeof(strings),"\t\t\t\t\t{004080}*** ACCOUNT *** /forum /rules /login /stats /buylevel\n");
	strcat(helpeddialog,strings);
	format(strings,sizeof(strings),"\t\t{FFFF80}*** GENERAL *** /pay /charity /time /buy /unrentveh /id /drink /music /showlicenses /changepass\n");
	strcat(helpeddialog,strings);
	format(strings,sizeof(strings),"\t{FFFF80}*** GENERAL ***/buygun /health /lock /skill /portable /licenses /lotto /spawnchange /stopanim\n");
	strcat(helpeddialog,strings);
	format(strings,sizeof(strings),"\t\t{FFFF80}*** GENERAL *** /report /sos /cancel /accept /eject /usedrugs /contract /fill /fillcar /fillcan /clear /service /unrentroom\n");
	strcat(helpeddialog,strings);
	format(strings,sizeof(strings),"\t{FF80FF}*** CHAT *** (/w)hisper (/o)oc (/s)hout (/c)lose (/l)ocal (/b) (/ad)vertise (/f)amily /me /togooc /tognews /togfam /togwhisper\n");
	strcat(helpeddialog,strings);
	format(strings,sizeof(strings),"\t{80FF80}*** BANK *** /balance /withdraw /deposit /transfer /ajutormasina /members\n");
	strcat(helpeddialog,strings);
    format(strings,sizeof(strings),"{80FFFF}*** OTHER *** /cellphonehelp /housemenu /businesshelp /leaderhelp\n");
 	strcat(helpeddialog,strings);
	if (IsACop(playerid))
	{
		format(strings,sizeof(strings),"\t{0066FF}*** SAPD *** (/r)adio (/d)epartments (/m)egaphone (/su)spect /mdc /arrest /duty /wanted /cuff /tazer /badge\n");
		strcat(helpeddialog,strings);
		format(strings,sizeof(strings),"\t\t{0066FF}*** SAPD *** /frisk /take /ticket (/gov)ernment /deliver /ram /detain /drugtest /breathtest\n");
		strcat(helpeddialog,strings);
	}
	if (PlayerInfo[playerid][pAdmin] >= 1)
	{
		format(strings,sizeof(strings),"\t\t\t\t\t{FF8000}*** ADMIN *** (/a)dmin (/ah)elp\n");
		strcat(helpeddialog,strings);
	}
	format(strings,sizeof(strings),"{FFFFFF}=========================================================================================================================\n");
	strcat(helpeddialog,strings);
	ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, ""#SERVERNAME" Help", helpeddialog, "Ok","");
	return 1;
}

CMD:security(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
	new code;
	if(PlayerInfo[playerid][pLeader] == 0) return SendClientMessage(playerid, COLOR_RED,"Nu esti lider");
	if(sscanf(params, "d", code))
	{
		SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /security [code]");
		SendClientMessage(playerid, COLOR_GRAD2, "Pentru 0 cifre /security 0");
		SendClientMessage(playerid, COLOR_GRAD2, "Pentru 3 cifre /security 3");
		SendClientMessage(playerid, COLOR_GRAD2, "Pentru 4 cifre /security 4");
		SendClientMessage(playerid, COLOR_GRAD2, "Pentru 5 cifre /security 5");
		SendClientMessage(playerid, COLOR_GRAD2, "Pentru 6 cifre /security 6");
 		return 1;
	}
	if(code == 2 || code == 1 || code < 0 || code > 6) return SendClientMessage(playerid, COLOR_GRAD2, "Cod invalid");
    SendClientMessage(playerid, COLOR_WHITE, "Felicitari Codul masinilor este schimbat acum.");
    securitate[PlayerInfo[playerid][pLeader]] = code;
    for(new c = 0; c < MAX_VEHICLES; c++)
	EncodeVehicle(c);
	return 1;
}


CMD:leaderhelp(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    if (PlayerInfo[playerid][pLeader] > 0)
 	SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	SendClientMessage(playerid, COLOR_WHITE,"*** LEADER HELP *** scrie o comanda pentru ajutor");
	SendClientMessage(playerid, COLOR_GRAD3,"*** LEADERS *** /invite /uninvite <0, 1> /giverank /factionwarn /factionunwarn /lockhq /security");
	return 1;
}
CMD:frisk(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
	if(!IsACop(playerid)) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti politist!");
    new playa;
	if(sscanf(params, "u", playa)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /frisk [playerid/numejucator]");
	if(!IsPlayerConnected(playa)) return  SendClientMessage(playerid, COLOR_GREY, "Player offline !");
	if(playa == INVALID_PLAYER_ID) return  SendClientMessage(playerid, COLOR_GREY, "Player offline !");
    if (!ProxDetectorPlayer(8.0, playerid, playa)) return  SendClientMessage(playerid, COLOR_GREY, "Player offline !");
 	format(strings, sizeof(strings), "|__________ Lucrurile lui  %s __________|", PlayerName(playa));
 	SendClientMessage(playerid, COLOR_WHITE, strings);
    new text[30];
    if(PlayerInfo[playa][pDrugs] > 0) 			text = "| Droguri - ilegale";  		else text = "| Buzunar gol";
  	format(strings, sizeof(strings), "%s.", text);
	SendClientMessage(playerid, COLOR_WHITE, strings);
	if(PlayerInfo[playa][pMaterials] > 0) 		text = "| Materiale - ilegale"; 		else text = "| Buzunar gol";
  	format(strings, sizeof(strings), "%s.", text);
	SendClientMessage(playerid, COLOR_WHITE, strings);
    if(PlayerInfo[playa][pAchievement6] > 0) 	text = "| Phone Book - legal";		else text = "| Buzunar gol";
  	format(strings, sizeof(strings), "%s.", text);
	SendClientMessage(playerid, COLOR_WHITE, strings);
 	if(PlayerInfo[playa][pServieta] > 0)  		text = "| Servieta - legal"; 		else text = "| Buzunar gol";
  	format(strings, sizeof(strings), "%s.", text);
	SendClientMessage(playerid, COLOR_WHITE, strings);
 	if(PlayerInfo[playa][pCDPlayer] > 0) 		text = "| CD-Player - legal"; 		else text = "| Buzunar gol";
  	format(strings, sizeof(strings), "%s.", text);
	SendClientMessage(playerid, COLOR_WHITE, strings);
 	if(PlayerInfo[playa][pGlasses] > 0)  		text = "| Ochelari - legal"; 		else text = "| Buzunar gol";
  	format(strings, sizeof(strings), "%s.", text);
	SendClientMessage(playerid, COLOR_WHITE, strings);
 	if(PlayerInfo[playa][pDecoder] > 0)  		text = "| Decodor - ilegal"; 		else text = "| Buzunar gol";
  	format(strings, sizeof(strings), "%s.", text);
	SendClientMessage(playerid, COLOR_WHITE, strings);
	new gun[2];
    GetPlayerWeaponData(playa, 5, gun[0],gun[1]);
    if(gun[0] == 30) SendClientMessage(playerid, COLOR_LIGHTRED, "| AK47- Ilegal");
    GetPlayerWeaponData(playa, 4, gun[0],gun[1]);
    if(gun[0] == 32) SendClientMessage(playerid, COLOR_LIGHTRED, "| Tec9- Ilegal");
    GetPlayerWeaponData(playa, 4, gun[0],gun[1]);
    if(gun[0] == 28) SendClientMessage(playerid, COLOR_LIGHTRED, "| Uzzy- Ilegal");
    GetPlayerWeaponData(playa, 3, gun[0],gun[1]);
    if(gun[0] == 27) SendClientMessage(playerid, COLOR_LIGHTRED, "| CombatShootgun- Ilegal");
    GetPlayerWeaponData(playa, 3, gun[0],gun[1]);
    if(gun[0] == 26) SendClientMessage(playerid, COLOR_LIGHTRED, "| SawnOffShootgun- Ilegal");
    GetPlayerWeaponData(playa, 6, gun[0],gun[1]);
    if(gun[0] == 34) SendClientMessage(playerid, COLOR_LIGHTRED, "| Sniper- Ilegal");
    if(PlayerInfo[playerid][pBombe]>0) SendClientMessage(playerid, COLOR_LIGHTRED, "| Bombe- Ilegal");
	format(strings, sizeof(strings), "* %s il perchezitioneaza pe %s pentru lucruri ilegale.", PlayerName(playerid) ,PlayerName(playa));
	ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    return 1;
}

//------------------------------------------------------------------------------------------------------
//----------------------------------[HELP]-----------------------------------------------
CMD:rules(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    SendClientMessage(playerid, COLOR_LIGHTRED,"{FFFFFF}Poti verifica regulamentul pe www."#SERVERNAME".ro");
	return 1;
}

CMD:forum(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    SendClientMessage(playerid, COLOR_LIGHTRED,"{FFFFFF}Forum-ul nostru este www."#SERVERNAME".ro");
	return 1;
}
//----------------------------------[HELP]-----------------------------------------------


CMD:sellfood(playerid,params[])
{
	new vehicleid = GetPlayerVehicleID(playerid);
  	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
  	if(PlayerInfo[playerid][pJob1] != 17 && PlayerInfo[playerid][pJob2] != 17) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti vanzator !");
    if(fastfood0 == vehicleid || fastfood5 == vehicleid || fastfood4 == vehicleid || fastfood3 == vehicleid || fastfood2 == vehicleid || fastfood1 == vehicleid)
	{
		if(GetVehicleModel(vehicleid) == 588) //hotdog
		{
		    new playa;
  			if(sscanf(params, "u", playa)) return			SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /sellfood [playerid/numejucator]");
  			if(playa == INVALID_PLAYER_ID) return 1;
      	    new Float:xy, Float:yy, Float:zy;
  			GetPlayerPos(playerid, xy, yy, zy);
			if(!IsPlayerInRangeOfPoint(playa, 10.0, xy,yy,zy)) return SCM(playerid,-1,"playerul nu se afla langa tine");

   			SetPlayerHealth(playa, 100);
   			format(strings, sizeof(strings), "* %s ii da lui %s un hotdog.", PlayerName(playerid),PlayerName(playa));
			ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ApplyAnimation(playa, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger
			format(strings,sizeof(strings), "%s %d [CMD] -> /sellfod lui %s %d",PlayerName(playerid),playerid,PlayerName(playa),playa);
			JobLog(strings);
		}
		else if(GetVehicleModel(vehicleid) == 423) //icecream
        {
		    new playa;
  			if(sscanf(params, "u", playa)) return			SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /sellfood [playerid/numejucator]");
  			if(playa == INVALID_PLAYER_ID) return 1;
      	    new Float:xy, Float:yy, Float:zy;
  			GetPlayerPos(playerid, xy, yy, zy);
			if(!IsPlayerInRangeOfPoint(playa, 10.0, xy,yy,zy)) return SCM(playerid,-1,"playerul nu se afla langa tine");

   			SetPlayerHealth(playa, 100);
   			format(strings, sizeof(strings), "* %s ii da lui %s o inghetata.", PlayerName(playerid),PlayerName(playa));
			ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ApplyAnimation(playa, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger
			format(strings,sizeof(strings), "%s %d [CMD] -> /sellfod lui %s %d",PlayerName(playerid),playerid,PlayerName(playa),playa);
			JobLog(strings);
		}
		else return SendClientMessage(playerid,COLOR_RED,"Nu esti in masina");
	}
	else return SendClientMessage(playerid,COLOR_RED,"Nu esti in masina de vanzator");
	return 1;
}



CMD:stop(playerid,params[])
{
    if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
 	if(Gambling[playerid] == G_STATE_READY)
    {
	    CancelSelectTextDraw(playerid);
       	TextDrawHideForPlayer(playerid,TextAddcoin);
	   	TextDrawHideForPlayer(playerid,TextDealcoin);
        ExitPlayerFromSlotMachine(playerid);
    }
	return 1;
}

CMD:gamble(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
	new dammount;
	if(sscanf(params, "d", dammount)) return SendClientMessage(playerid, COLOR_WHITE, "USAGE: /gamble <suma>");
	if(IsPlayerInRangeOfPoint(playerid, 3,2221.27295, 1603.89893, 1006.08521)||
	IsPlayerInRangeOfPoint(playerid, 3,2217.48950, 1603.98547, 1006.08521)||
 	IsPlayerInRangeOfPoint(playerid, 3,2269.37378, 1606.39050, 1006.08521)||
 	IsPlayerInRangeOfPoint(playerid, 3,2273.47998, 1606.43494, 1006.25323)||
 	IsPlayerInRangeOfPoint(playerid, 3,2254.89307, 1609.97205, 1006.13031)||
 	IsPlayerInRangeOfPoint(playerid, 3,2254.96875, 1613.70630, 1006.13031)||
 	IsPlayerInRangeOfPoint(playerid, 3,2255.05859, 1617.66125, 1006.13031)||
 	IsPlayerInRangeOfPoint(playerid, 3,2218.81299, 1592.50952, 1006.10236)||
	IsPlayerInRangeOfPoint(playerid, 3,2218.78735, 1588.12451, 1006.10236)||
 	IsPlayerInRangeOfPoint(playerid, 3,2218.58862, 1614.31604, 1006.08521)|| IsPlayerInRangeOfPoint(playerid, 3,2218.66846, 1618.70825, 1006.08521))
 	{
 	    if(Gambling[playerid] != G_STATE_NOT_GAMBLING) return GameTextForPlayer(playerid,"~n~~n~~n~~r~Deja te Joci!",3000,3);
  		if(dammount > 5)
    	{
        	if(dammount < GetPlayerMoney(playerid))
	       	{
				TextDrawShowForPlayer(playerid,TextAddcoin);
	    		TextDrawShowForPlayer(playerid,TextDealcoin);
		 		SelectTextDraw(playerid,0xAAAAAAC8);
        		PutPlayerInSlotMachine(playerid,_,dammount);
				SendClientMessage(playerid,-1,"*Scrie /stop pentru a iesi!");
		 	    TextDrawShowForPlayer(playerid, BetText[playerid]);
				return 1;
			}
			else return SendClientMessage(playerid,-1,"Nu ai atatia bani!");
   		}
		else return SendClientMessage(playerid,-1,"Trebuie sa pui minim 5$!");
	}
    else return SendClientMessage(playerid,COLOR_RED,"Nu esti unde trebuie");
}
	/*
CMD:myacc(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    format(strings,sizeof(strings),"Acceleratia ta %d",GetPlayerAcceleration(playerid));
    SendClientMessage(playerid,-1,strings);
	return 1;
}
*/

CMD:eatpizza(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    if(PizzaOfPlayer[playerid]<1) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~Nu aveti pizza",1500,3);
    PizzaOfPlayer[playerid]--;
	new Float:health;
	GetPlayerHealth(playerid,health);
	if (health < 75.0)	SetPlayerHealth(playerid, health+25);
	else				SetPlayerHealth(playerid, 100);
	format(strings, sizeof(strings), "%s mananca o pizza", PlayerName(playerid));
	ProxDetector(10.0, playerid, strings,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
    ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:createo(playerid,params[])
{
    if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
	if(PlayerInfo[playerid][pAdmin] < 7) return   SendClientMessage(playerid, COLOR_GREY, "** Iti trebuie minim Admin 7 !");
	new objectid,Float:X,Float:Y,Float:Z;
	if(sscanf(params, "d", objectid))
	{
		if(IsValidDynamicObject(ObjecPlayersMAX[playerid])) DestroyDynamicObject(ObjecPlayersMAX[playerid]);
		SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /createo [objectid]");
		return 1;
	}
	GetPlayerPos(playerid,X,Y,Z);
	if(IsValidDynamicObject(ObjecPlayersMAX[playerid])) DestroyDynamicObject(ObjecPlayersMAX[playerid]);
	ObjecPlayersMAX[playerid] = CreateDynamicObject(objectid,X,Y,Z-0.2,0,0,0);
	format(strings,sizeof(strings),"Objectid %d created!",objectid);
	SendClientMessage(playerid,-1,strings);
	return 1;
}


CMD:reg(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
	if(PlayerInfo[playerid][pAdmin] < 7) return   SendClientMessage(playerid, COLOR_GREY, "** Iti trebuie minim Admin 7 !");
	ReCreateGolfBall();
	return 1;
}

CMD:over(playerid,params[])
{
    if(InPlane[playerid] <1) return SendClientMessage(playerid,COLOR_RED,"Nu livrezi nimic!");
	KillTimer(TimerPaper[playerid]);
	if(InPlane[playerid]>5000)
	InPlane[playerid]=5000;
	format(strings,sizeof(strings),"~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Ai livrat ~w~%d ~b~Ziare",InPlane[playerid]);
 	GameTextForPlayer(playerid, strings, 3000, 3);
	InPlane[playerid]=0;
	if(OnJob[playerid] != 8)
	OnJob[playerid] = 0;
	return 1;
}


CMD:propose(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
	if(GetPlayerCash(playerid) < 100000) return SendClientMessage(playerid, COLOR_GREY, "   Nunta si Slujba costa $100000 !");
	new playa;
	if(sscanf(params, "u", playa))	SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /propose [playerid/numejucator]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if (!ProxDetectorPlayer(8.0, playerid, playa))  return SendClientMessage(playerid,COLOR_RED,"Nu esti langa player");
    if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Nu poti folosi aceasta comanda asupra ta!");
	if(!strmatch(PlayerInfo[playerid][pMarriedTo],"No-one")) return SendClientMessage(playerid, COLOR_GREY, "   Esti deja casatorit !");
    if(!strmatch(PlayerInfo[playa][pMarriedTo],"No-one")) return SendClientMessage(playerid, COLOR_GREY, "   Acel jucator este deja casatorit !");
	format(strings, sizeof(strings), "* Ai cerut in casatorie pe %s.", PlayerName(playa));
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
	format(strings, sizeof(strings), "* %s te-a cerut in casatorie (scrie /accept marriage pentru a accepta).", PlayerName(playerid));
	SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
	ProposeOffer[playa] = playerid;
    return 1;
}

CMD:withnes(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
	new playa;
	if(sscanf(params, "u", playa))	SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /witness [playerid/numejucator]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if (!ProxDetectorPlayer(8.0, playerid, playa))  return SendClientMessage(playerid,COLOR_RED,"Nu esti langa player");
    if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Nu poti folosi aceasta comanda asupra ta!");
 	format(strings, sizeof(strings), "* Ai cerut martor pe %s.", PlayerName(playa));
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
	format(strings, sizeof(strings), "* %s te-a cerut martor la casatorie (scrie /accept witness pentru a accepta).", PlayerName(playerid));
	SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
 	MarryWitnessOffer[playa] = playerid;
    return 1;
}
CMD:charge(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    if(PlayerInfo[playerid][pIphone] == 0) return SendClientMessage(playerid, COLOR_RED,"Nu aveti iPhone, puteti cumpara unul de la I.T. Shop");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED,"Nu esti intr-o masina!");
	if(PlayerInfo[playerid][pBaterie]>99) return SendClientMessage(playerid, COLOR_RED,"Telefonul are bateria incarcata!");
	if(PlayerInfo[playerid][pBaterie]<2)	PlayerInfo[playerid][pBaterie] = 2;
 	else PlayerInfo[playerid][pBaterie] ++;
	PhoneOnCharge[playerid] = 1;
	Update(playerid, pBateriex);
	SendClientMessage(playerid, COLOR_WHITE,"Telefonul se incarca, puteti sa deconectati incarcatorul iesind din masina!");
	return 1;
}

CMD:iphone(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
	if(PlayerInfo[playerid][pIphone] == 0) return SendClientMessage(playerid, COLOR_RED,"Nu aveti iPhone, puteti cumpara unul de la I.T. Shop");
    if(PlayerInfo[playerid][pBaterie] <= 0) return SendClientMessage(playerid, COLOR_RED,"Telefonul este descarcat, scrieti /charge intr-o masina");
    if(InMeniuIphone[playerid] == 0)
    {
    	InMeniuIphone[playerid] = 1;
        PlayerTextDrawHide(playerid,Textdsraws20000[playerid]);//lista fac
	    PlayerTextDrawShow(playerid,Textdsraws0[playerid]);
	    PlayerTextDrawShow(playerid,Textdsraws1[playerid]);
	    PlayerTextDrawShow(playerid,Textdsraws2[playerid]);
	    PlayerTextDrawShow(playerid,Textdsraws3[playerid]);
	    PlayerTextDrawShow(playerid,Textdsraws4[playerid]);
	    PlayerTextDrawShow(playerid,Textdsraws5[playerid]);
	    PlayerTextDrawShow(playerid,Textdsraws6[playerid]);
	    PlayerTextDrawShow(playerid,Textdsraws7[playerid]);
	    PlayerTextDrawShow(playerid,Textdsraws8[playerid]);
	    PlayerTextDrawShow(playerid,Textdsraws10[playerid]);
	    PlayerTextDrawShow(playerid,Textdsraws27[playerid]);
	    PlayerTextDrawShow(playerid,Textdsraws28[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws11[playerid]);//bara de sus alba
	    PlayerTextDrawHide(playerid,Textdsraws19[playerid]);//ora
	    PlayerTextDrawHide(playerid,Textdsraws20[playerid]);//data vineri 12 2015
	    PlayerTextDrawHide(playerid,Textdsraws21[playerid]);//rama de jos cu slide bara
	    PlayerTextDrawHide(playerid,Textdsraws22[playerid]);//slide bara de "camera" si "slide"
	    PlayerTextDrawHide(playerid,Textdsraws23[playerid]);//cerntru"slide"
	    PlayerTextDrawHide(playerid,Textdsraws24[playerid]);//"camera"
	    PlayerTextDrawHide(playerid,Textdsraws25[playerid]);//centru"slide"
	    PlayerTextDrawHide(playerid,Textdsraws26[playerid]);//slide
	    PlayerTextDrawShow(playerid,Textdsraws2228[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws9[playerid]);//fundalul
	    PlayerTextDrawHide(playerid,Textdsraws11[playerid]);//bara de sus alba
	    PlayerTextDrawHide(playerid,Textdsraws12[playerid]);//aceasi bara notificare ingrosata sus
		PlayerTextDrawHide(playerid,Textdsraws13[playerid]);//aceasi bara notificare ingrosata sus
	    PlayerTextDrawHide(playerid,Textdsraws14[playerid]);//bara notificare sus mai ingrosata
	    PlayerTextDrawHide(playerid,Textdsraws15[playerid]);//no sim card
	    PlayerTextDrawHide(playerid,Textdsraws16[playerid]);//100%bateria
	    PlayerTextDrawHide(playerid,Textdsraws17[playerid]);//bateria restul
	    PlayerTextDrawHide(playerid,Textdsraws18[playerid]);//jumate de baterie gri dewscarcata
        SelectTextDraw(playerid,0xAAAAAAC8); // Making the textdraws selectable, remove if wanted.0xFF404000
  	}
    else if(InMeniuIphone[playerid] == 1)
    {
    	InMeniuIphone[playerid] = 0;
        TDHide(playerid);
        PhoneMeniu[playerid] = 0;
        CancelSelectTextDraw(playerid);
    }
    return 1;
}

CMD:sirena(playerid,params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,"Trebuie sa fii in masina");
  	if(!IsACop(playerid))  return SCM(playerid,-1,"Trebuie sa fii politist");
   	new carid = GetPlayerVehicleID(playerid);
    new model = GetVehicleModel(carid);
    if(attas[carid] == 0)
      	AttasSirentToVehicle(carid,model,playerid);
	else if(attas[carid] == 1)
   		DesAttachSirena(carid);
    return 1;
}

CMD:snowall(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    if(PlayerInfo[playerid][pAdmin] < 7) return   SendClientMessage(playerid, COLOR_GREY, "** Iti trebuie minim Admin 7 !");
	OOCNews(COLOR_LIGHTRED,"{FB6704}[ABC News] {FF3300}: O Ninsoare abundenta se asterne peste statul "#SERVERNAME"");
    foreach(Player,i) //This is included in my FS! It's the '#define ploop(%0)' thing.
    {
		if(snowOn{i}) continue;
		CreateSnow(i);
		SetWeather(7);
	}
 	return 1;
}

CMD:snowoff(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    if(PlayerInfo[playerid][pAdmin] < 7) return   SendClientMessage(playerid, COLOR_GREY, "** Iti trebuie minim Admin 7 !");
	OOCNews(COLOR_LIGHTRED,"{FB6704}[ABC News] {FF3300}: Ninsoarea abundenta a incetat");
   	foreach(Player,i) //This is included in my FS! It's the '#define ploop(%0)' thing.
    {
  	 	if(!snowOn{i}) continue;
    	DeleteSnow(i);
       	SetWeather(1);
   	}
    return 1;
}

CMD:skill(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
 	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "|__________________ Skill Info __________________|");
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /skill [number]");
		SendClientMessage(playerid, COLOR_GREY, "| 1: SexSkill         		2: JackSkill");
		SendClientMessage(playerid, COLOR_GREY, "| 3: BoxSkill              4: NewsSkill");
		SendClientMessage(playerid, COLOR_GREY, "| 5: DrugsSkill			6. MechSkill");
		SendClientMessage(playerid, COLOR_GREY, "| 7: LawSkill				8.FishSkill");
		SendClientMessage(playerid, COLOR_GREY, "| 9: DetSkill				");
		SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________|");
		return 1;
	}
  	if(strcmp(choice, "1", true) == 0)
	{
	    new level = PlayerInfo[playerid][pSexSkill];
		if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, 		  "Sex Skill Level = 1."); format(strings, sizeof(strings), "Mai fa sex cu inca %d persoane pentru Level 2.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 51 && level <= 250) { SendClientMessage(playerid, COLOR_YELLOW,  "Sex Skill Level = 2."); format(strings, sizeof(strings), "Mai fa sex cu inca %d persoane pentru Level 3.", 250 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 251 && level <= 500) { SendClientMessage(playerid, COLOR_YELLOW, "Sex Skill Level = 3."); format(strings, sizeof(strings), "Mai fa sex cu inca %d persoane pentru Level 4.", 500 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 501 && level <= 999) { SendClientMessage(playerid, COLOR_YELLOW, "Sex Skill Level = 4."); format(strings, sizeof(strings), "Mai fa sex cu inca %d persoane pentru Level 5.", 1000 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 1000) { SendClientMessage(playerid, COLOR_YELLOW,				  "Sex Skill Level = 5."); }
	}
	else if(strcmp(choice, "2", true) == 0)
	{
	    new level = PlayerInfo[playerid][pJackSkill];
		if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, 		  "Jacker Skill Level = 1."); format(strings, sizeof(strings), "Mai fura %d pentru Lvel 2.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 51 && level <= 250) { SendClientMessage(playerid, COLOR_YELLOW,  "Jacker Skill Level = 2."); format(strings, sizeof(strings), "Mai fura %d pentru Lvel 3.", 250 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 251 && level <= 500) { SendClientMessage(playerid, COLOR_YELLOW, "Jacker Skill Level = 3."); format(strings, sizeof(strings), "Mai fura %d pentru Lvel 4.", 500 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 501 && level <= 999) { SendClientMessage(playerid, COLOR_YELLOW, "Jacker Skill Level = 4."); format(strings, sizeof(strings), "Mai fura %d pentru Lvel 5.", 1000 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 1000) { SendClientMessage(playerid, COLOR_YELLOW,				  "Jacker Skill Level = 5."); }
	}
	else if(strcmp(choice, "3", true) == 0)
	{
	    new level = PlayerInfo[playerid][pBoxSkill];
		if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, 		  "Box Skill Level = 1."); format(strings, sizeof(strings), "Mai trebuie sa te lupti cu %d de persoane pentru Level 2.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 51 && level <= 250) { SendClientMessage(playerid, COLOR_YELLOW,  "Box Skill Level = 2."); format(strings, sizeof(strings), "Mai trebuie sa te lupti cu %d de persoane pentru Level 3.", 250 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 251 && level <= 500) { SendClientMessage(playerid, COLOR_YELLOW, "Box Skill Level = 3."); format(strings, sizeof(strings), "Mai trebuie sa te lupti cu %d de persoane pentru Level 4.", 500 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 501 && level <= 999) { SendClientMessage(playerid, COLOR_YELLOW, "Box Skill Level = 4."); format(strings, sizeof(strings), "Mai trebuie sa te lupti cu %d de persoane pentru Level 5.", 1000 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 1000) { SendClientMessage(playerid, COLOR_YELLOW,				  "Box Skill Level = 5."); }
	}
	else if(strcmp(choice, "4", true) == 0)
	{
	    new level = PlayerInfo[playerid][pNewsSkill];
		if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, 		  "Reporter Skill Level = 1."); format(strings, sizeof(strings), "Mai trebuie sa dai %d de anunturi pentru Level 2.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 51 && level <= 250) { SendClientMessage(playerid, COLOR_YELLOW,  "Reporter Skill Level = 2."); format(strings, sizeof(strings), "Mai trebuie sa dai %d de anunturi pentru Level 3.", 250 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 251 && level <= 500) { SendClientMessage(playerid, COLOR_YELLOW, "Reporter Skill Level = 3."); format(strings, sizeof(strings), "Mai trebuie sa dai %d de anunturi pentru Level 4.", 500 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 501 && level <= 999) { SendClientMessage(playerid, COLOR_YELLOW, "Reporter Skill Level = 4."); format(strings, sizeof(strings), "Mai trebuie sa dai %d de anunturi pentru Level 5.", 1000 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 1000) { SendClientMessage(playerid, COLOR_YELLOW,				  "Reporter Skill Level = 5."); }
	}
	else if(strcmp(choice, "5", true) == 0)
	{
	    new level = PlayerInfo[playerid][pDrugsSkill];
		if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, 		  "Dealer Skill Level = 1."); format(strings, sizeof(strings), "Mai vinde la %d de persoane pentru Level 2.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 51 && level <= 250) { SendClientMessage(playerid, COLOR_YELLOW,  "Dealer Skill Level = 2."); format(strings, sizeof(strings), "Mai vinde la %d de persoane pentru Level 3.", 250 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 251 && level <= 500) { SendClientMessage(playerid, COLOR_YELLOW, "Dealer Skill Level = 3."); format(strings, sizeof(strings), "Mai vinde la %d de persoane pentru Level 4.", 500 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 501 && level <= 999) { SendClientMessage(playerid, COLOR_YELLOW, "Dealer Skill Level = 4."); format(strings, sizeof(strings), "Mai vinde la %d de persoane pentru Level 5.", 1000 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 1000) { SendClientMessage(playerid, COLOR_YELLOW,				  "Dealer Skill Level = 5."); }
	}
	else if(strcmp(choice, "6", true) == 0)
	{
	    new level = PlayerInfo[playerid][pMechSkill];
		if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, 		  "Mecanic Skill Level = 1."); format(strings, sizeof(strings), "Mai ajuta %d de oameni pentru Level 2.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 51 && level <= 250) { SendClientMessage(playerid, COLOR_YELLOW,  "Mecanic Skill Level = 2."); format(strings, sizeof(strings), "Mai ajuta %d de oameni pentru Level 3.", 250 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 251 && level <= 500) { SendClientMessage(playerid, COLOR_YELLOW, "Mecanic Skill Level = 3."); format(strings, sizeof(strings), "Mai ajuta %d de oameni pentru Level 4.", 500 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 501 && level <= 999) { SendClientMessage(playerid, COLOR_YELLOW, "Mecanic Skill Level = 4."); format(strings, sizeof(strings), "Mai ajuta %d de oameni pentru Level 5.", 1000 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 1000) { SendClientMessage(playerid, COLOR_YELLOW,				  "Mecanic Skill Level = 5."); }
	}
	else if(strcmp(choice, "7", true) == 0)
	{
	    new level = PlayerInfo[playerid][pLawSkill];
		if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, 		  "Avocat Skill Level = 1."); format(strings, sizeof(strings), "Mai elibereaza %d de persoane pentru Level 2.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 51 && level <= 250) { SendClientMessage(playerid, COLOR_YELLOW,  "Avocat Skill Level = 2."); format(strings, sizeof(strings), "Mai elibereaza %d de persoane pentru Level 3.", 250 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 251 && level <= 500) { SendClientMessage(playerid, COLOR_YELLOW, "Avocat Skill Level = 3."); format(strings, sizeof(strings), "Mai elibereaza %d de persoane pentru Level 4.", 500 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 501 && level <= 999) { SendClientMessage(playerid, COLOR_YELLOW, "Avocat Skill Level = 4."); format(strings, sizeof(strings), "Mai elibereaza %d de persoane pentru Level 5", 1000 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 1000) { SendClientMessage(playerid, COLOR_YELLOW,				  "Avocat Skill Level = 5."); }
	}
	else if(strcmp(choice, "8", true) == 0)
	{
	    new level = PlayerInfo[playerid][pFishSkill];
		if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, 		  "Pescar Skill Level = 1."); format(strings, sizeof(strings), "Mai prinde %d pesti pentru Level 2.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 51 && level <= 250) { SendClientMessage(playerid, COLOR_YELLOW,  "Pescar Skill Level = 2."); format(strings, sizeof(strings), "Mai prinde %d pesti pentru Level 3.", 250 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 251 && level <= 500) { SendClientMessage(playerid, COLOR_YELLOW, "Pescar Skill Level = 3."); format(strings, sizeof(strings), "Mai prinde %d pesti pentru Level 4.", 500 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 501 && level <= 999) { SendClientMessage(playerid, COLOR_YELLOW, "Pescar Skill Level = 4."); format(strings, sizeof(strings), "Mai prinde %d pesti pentru Level 5.", 1000 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 1000) { SendClientMessage(playerid, COLOR_YELLOW,				  "Pescar Skill Level = 5."); }
	}
	else if(strcmp(choice, "9", true) == 0)
	{
	    new level = PlayerInfo[playerid][pDetSkill];
		if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, 		  "Detectiv Skill Level = 1."); format(strings, sizeof(strings), "Mai Cauta %d persoane pentru Level 2.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 51 && level <= 250) { SendClientMessage(playerid, COLOR_YELLOW,  "Detectiv Skill Level = 2."); format(strings, sizeof(strings), "Mai Cauta %d persoane pentru Level 3.", 250 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 251 && level <= 500) { SendClientMessage(playerid, COLOR_YELLOW, "Detectiv Skill Level = 3."); format(strings, sizeof(strings), "Mai Cauta %d persoane pentru Level 4.", 500 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 501 && level <= 999) { SendClientMessage(playerid, COLOR_YELLOW, "Detectiv Skill Level = 4."); format(strings, sizeof(strings), "Mai Cauta %d persoane pentru Level 5.", 1000 - level); SendClientMessage(playerid, COLOR_YELLOW, strings); }
		else if(level >= 1000) { SendClientMessage(playerid, COLOR_YELLOW,				  "Detectiv Skill Level = 5."); }
	}
	else return     SendClientMessage(playerid, COLOR_GREY, "   Invalid Skill!");
    return 1;
}

CMD:odometer(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    if(PlayerInfo[playerid][pAdmin] < 4) return   SendClientMessage(playerid, COLOR_GREY, "** Iti trebuie minim Admin 4 !");
    if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 510) return SendClientMessage(playerid,COLOR_RED,"Trebuie sa fii pe un MTB");
	if(IsValidDynamicObject(BikeMeter[GetPlayerVehicleID(playerid)]))
	{
		DestroyDynamicObject(BikeMeter[GetPlayerVehicleID(playerid)]);
		SendClientMessage(playerid,COLOR_LIGHTRED,"Ai scos kilometrajul");
		return 1;
	}
    BikeMeter[GetPlayerVehicleID(playerid)] = CreateDynamicObject(18875, 0.09800, 0.44000, -10.46900,   0.02000, 0.00000, 0.00000);
    AttachDynamicObjectToVehicle(BikeMeter[GetPlayerVehicleID(playerid)],GetPlayerVehicleID(playerid),0.09800, 0.44000, 0.46900,   0.02000, 0.00000, 0.00000);
	SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ai atasat kilometrajul de bicicleta");
	return 1;
}

CMD:poolspawn(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    if(PlayerInfo[playerid][pAdmin] < 2) return   SendClientMessage(playerid, COLOR_GREY, "** Iti trebuie minim Admin 2 !");
	CreateSet();
	FirstBall=0;
    Gamble[0] = 999;
    Gamble[1] = 999;
	PlayerRound=999;
	SCM(playerid,-1,"Masa resetata");
	foreach(Player,i)
    BallType[i] = 0;
	return 1;
}

CMD:ballspawn(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    if(PlayerInfo[playerid][pAdmin] < 2) return   SendClientMessage(playerid, COLOR_GREY, "** Iti trebuie minim Admin 2 !");
	if(!IsAtTheStadion(playerid)) return SendClientMessage(playerid,-1,"Nu esti la stadion");
	RecreateBall();
	format(strings,sizeof(strings),"%s a respawnat mingea de fotbal!",PlayerName(playerid));
	foreach(Player, i)
	if(IsAtTheStadion(i))
	SendClientMessage(playerid,COLOR_LIGHTBLUE,strings);
	return 1;
}
CMD:resetpanou(playerid,params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    if(PlayerInfo[playerid][pAdmin] < 2) return   SendClientMessage(playerid, COLOR_GREY, "** Iti trebuie minim Admin 2 !");
	if(!IsAtTheStadion(playerid)) return SendClientMessage(playerid,-1,"Nu esti la stadion");
	new string[120];
	Oaspeti = 0;
    Gazde = 0;
   	format(string,40,"Oaspeti\n%d",Oaspeti);
	SetDynamicObjectMaterialText(OaspetiPanou,0,string,OBJECT_MATERIAL_SIZE_256x256,"Arial", 75, 1, 0xFFFFFFFF,1, 1);
   	format(string,40,"Gazde\n%d",Gazde);
	SetDynamicObjectMaterialText(GazdePanou,0,string,OBJECT_MATERIAL_SIZE_256x256,"Arial", 75, 1, 0xFFFFFFFF,1, 1);
	SendClientMessage(playerid,-1,"Tabela resetata");
	return 1;
}
CMD:minus(playerid,params[])
{
    if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    if(PlayerInfo[playerid][pAdmin] < 2) return   SendClientMessage(playerid, COLOR_GREY, "** Iti trebuie minim Admin 2 !");
	if(!IsAtTheStadion(playerid)) return SendClientMessage(playerid,-1,"Nu esti la stadion");
	new team ,puncte;
    if(sscanf(params, "dd", team ,puncte)) return SendClientMessage(playerid, -1, "USE: /minus 1-Oaspeti,2-Gazde   [+-puncte]");
	new string[120];
	if(team == 1)
	Oaspeti += puncte;
	else
    Gazde += puncte;
   	format(string,40,"Oaspeti\n%d",Oaspeti);
	SetDynamicObjectMaterialText(OaspetiPanou,0,string,OBJECT_MATERIAL_SIZE_256x256,"Arial", 75, 1, 0xFFFFFFFF,1, 1);
   	format(string,40,"Gazde\n%d",Gazde);
	SetDynamicObjectMaterialText(GazdePanou,0,string,OBJECT_MATERIAL_SIZE_256x256,"Arial", 75, 1, 0xFFFFFFFF,1, 1);
	SendClientMessage(playerid,-1,"Tabela modificata");
	return 1;
}
CMD:mark(playerid,params[])
{
    if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    if(PlayerInfo[playerid][pAdmin] < 3) return   SendClientMessage(playerid, COLOR_GREY, "** Iti trebuie minim Admin 3 !");
	GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
	TeleportDests[playerid][0]=GetPlayerInterior(playerid);
	TeleportDests[playerid][1]=GetPlayerVirtualWorld(playerid);
	SendClientMessage(playerid, COLOR_ORANGE, "** Teleporter salvat, foloseste gotomark");
	format(strings, sizeof(strings), "[ADMIN]: %s si-a setat marker teleport (%f | %f | %f)", PlayerName(playerid),TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
	AdminsBroadCast(COLOR_LIGHTRED,strings, 3);
	return 1;
}

CMD:gotomark(playerid,params[])
{
    if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    if(PlayerInfo[playerid][pAdmin] < 3) return   SendClientMessage(playerid, COLOR_GREY, "** Iti trebuie minim Admin 3 !");
	new tmpcar = GetPlayerVehicleID(playerid);
	if (GetPlayerState(playerid) == 2)
	{
	    SetVehicleVirtualWorld(tmpcar,TeleportDests[playerid][1]);
	    LinkVehicleToInterior(tmpcar,TeleportDests[playerid][0]);
		SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
	}
	else
	SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
    format(strings, sizeof(strings), "[ADMIN]: %s s-a teleportat la markerul (%f | %f | %f).", PlayerName(playerid),TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
	AdminsBroadCast(COLOR_LIGHTRED,strings, 3);
	DisablePlayerCheckpoint(playerid);
	SendClientMessage(playerid, COLOR_ORANGE, "** Ai fost teleportat");
	SetPlayerInterior(playerid,TeleportDests[playerid][0]);
	SetPlayerVirtualWorld(playerid,TeleportDests[playerid][1]);
	TogglePlayerControllable(playerid, 0);
	SetTimerEx("freze", 500, 0, "i", playerid);
	return 1;
}

public EndPaintBall()
{
    new string[256];
    foreach(Player,i)
	{
        if(PaintBallPlaying[i] > 0)
        {
        	if(IsPlayerConnected(PaintballWinner))
	        {
         		format(string,sizeof(string), "{1580EA}Paintball: %s {a9c4e4}a castigat meciul cu %d fraguri!",PlayerName(PaintballWinner),PaintballWinnerKills);
	            SendClientMessage(i, COLOR_WHITE, string);
           	}

           	PaintBallPlaying[i] = 0;
            SetPlayerToTeamColor(i);
			SetPlayerPos(i, SBizzInfo[10][sbPosX],SBizzInfo[10][sbPosY],SBizzInfo[10][sbPosZ]);//paint exit paint
			SetPlayerVirtualWorld(i, 0);
			SetPlayerInterior(i,0);
			GameTextForPlayer(i, "~r~Los~w~Santos",5000,1);
   			SetTimerEx("freze", 1300, 0, "i", i);
	   		TogglePlayerControllable(i, 0);
	        ResetPlayerWeapons(i);
			SetPlayerSkin(i,PlayerInfo[i][pSkin]);
    		PaintScore[i] = 0;
    		SCM(i,-1,"GAME OVER");
    		SetPlayerArmour(i, 0);
        	SetPlayerHealth(i, 100);
        }
	}
	PaintballWinner = 999;
	PaintballWinnerKills = 0;
	KillTimer(timerul[14]);
	return 1;
}

CMD:play(playerid,params[])
{
    //PaintBallPlaying // sb 10
    if(IsPlayerInRangeOfPoint(playerid,3,SBizzInfo[10][sbPosX],SBizzInfo[10][sbPosY],SBizzInfo[10][sbPosZ]))
    {
		if(SBizzInfo[10][sbProduse] == 0) return GameTextForPlayer(playerid, "~r~Stoc epuizat", 5000, 1);
        if(PaintBallPlaying[playerid]!=0)
        {
            PaintBallPlaying[playerid] = 0;
			SCM(playerid,-1,"Acum nu mai joci paintball!");
			return 1;
        }
        if(  (BlueTeamON() == 0) && (RedTeamON() == 0) )
        {
            PaintballWinner = 999;
			PaintballWinnerKills = 0;
		}
		if(  (BlueTeamON() == 1) && (RedTeamON() == 1) )
 		timerul[14] = SetTimer("EndPaintBall", 300000, false);
 		new Billl = SBizzInfo[10][sbEntrace];
	 	if(PlayerInfo[playerid][pBiz] == 110)
		GameTextForPlayer(playerid, "~w~Nicio taxa pentru~n~~r~detinator", 5000, 3);
		else
		{
			if (GetPlayerCash(playerid) <  Billl) return GameTextForPlayer(playerid, "~r~Nu ai bani!", 5000, 3);
			GivePlayerCash(playerid,-Billl);
			SBizzInfo[10][sbTill] += Billl;
			sbUpdate(10,sbTillx);
   			SBizzInfo[10][sbProduse] -= 1;
			sbUpdate(10,sbProdusex);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~w~Bine ai venit la~n~~r~Paint~b~Ball", 5000, 3);
		}
		if(BlueTeamON() >= RedTeamON())
		{
			PaintBallPlaying[playerid] = 2;//redteam
			format(strings,sizeof(strings),"%s s-a alaturat echipei ROSII!",PlayerName(playerid));
		    PainBallBroadCast(COLOR_LIGHTRED,strings);
			SpawnPlayer(playerid);
    		SetPlayerArmour(playerid, 50);
        	SetPlayerHealth(playerid, 100);
			SetPlayerSkin(playerid,110);
			if(PaintBallPlaying[playerid] == 1) SetPlayerColor(playerid,0x3300FFC8);
	    	if(PaintBallPlaying[playerid] == 2) SetPlayerColor(playerid,0xFB1D04C8);
		    return 1;
		}
		else
		{
			PaintBallPlaying[playerid] = 1;//blueteam
			format(strings,sizeof(strings),"%s s-a alaturat echipei ALBASTRE!",PlayerName(playerid));
		    PainBallBroadCast(COLOR_LIGHTBLUE,strings);
			SpawnPlayer(playerid);
			SetPlayerSkin(playerid,285);
			if(PaintBallPlaying[playerid] == 1) SetPlayerColor(playerid,0x3300FFC8);
	    	if(PaintBallPlaying[playerid] == 2) SetPlayerColor(playerid,0xFB1D04C8);
		    return 1;
		}
    }
    if(IsPlayerAtPool(playerid))
    {
		if(Gamble[0] != 999 || Gamble[1] != 999) return SendClientMessage(playerid,-1,"Un joc este deja in desfasurare");
		new playa;
		if(sscanf(params,"u",playa)) return SendClientMessage(playerid, 0xFFFFFFF,"Usage: /play [PlayerID]");
		if(!IsPlayerConnected(playa)) return  SendClientMessage(playerid, -1, "Player Deconectat");
    	if(!ProxDetectorPlayer(8.0, playerid, playa)) return SendClientMessage(playerid,COLOR_RED,"Nu te afli langa player");
    	Gamble[0] = playerid;
    	Gamble[1] = playa;
    	PlayerRound=playerid;
	    PlayerPlaySound(playa, 1083, 0.0, 0.0, 0.0);
	    PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
    	SendClientMessage(playerid,-1,"Jocul a inceput, tu esti primul!");
    	format(strings,sizeof(strings),"Jocul a inceput, %s e primul!",PlayerName(PlayerRound));//,PlayerName(playerid));
   		SendClientMessage(playa,-1,strings);
    	return 1;
    }
	if(IsPlayerInRangeOfPoint(playerid, 2, 2727.9675,-1828.3961,11.8438))
	{
		new string[120];
		format(string,sizeof(string),"Gazde\t\t\t\t\t%d Playeri\
									\nOaspeti\t\t\t\t\t%d Playeri\
									\nSpectator\t\t\t\t%d Playeri",GazdeOnline(),OaspetiOnline(),SpecOnline());
		ShowPlayerDialog(playerid, 3333, DIALOG_STYLE_LIST, "{FFFFFF}FotbalStadion", string, "{FFFFFF}Play", "{EA1515}Exit");
		return 1;
	}
	return 1;
}



new cameraobject[MAX_PLAYERS] = -1;
CMD:frezeme(playerid, params[])
{
    if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
    if(PlayerInfo[playerid][pAdmin] < 2) return   SendClientMessage(playerid, COLOR_GREY, "** Iti trebuie minim Admin 2 !");
	new Float:x, Float:y, Float:z;
	GetPlayerCameraPos(playerid, x, y, z);
	if(IsValidDynamicObject(cameraobject[playerid]))
	DestroyDynamicObject(cameraobject[playerid]);
	cameraobject[playerid] = CreateDynamicObject(19475, x, y, z, 0.0, 0.0, 0.0); //19475 is an invisible object with no collision
	AttachCameraToDynamicObject(playerid, cameraobject[playerid]);
	ApplyAnimation(playerid, "ped", "IDLE_stance", 4.1, 1, 0, 0, 0, 0, 1);
	return 1;
}
CMD:unfrezeme(playerid, params[])
{
    if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
  	if(PlayerInfo[playerid][pAdmin] < 2) return   SendClientMessage(playerid, COLOR_GREY, "** Iti trebuie minim Admin 2 !");
	ClearAnimations(playerid);
	SetCameraBehindPlayer(playerid);
	if(IsValidDynamicObject(cameraobject[playerid]))
	DestroyDynamicObject(cameraobject[playerid]);
	cameraobject[playerid] = -1;
	return 1;
}
CMD:ad(playerid, params[])
{
	if(gLogged[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "** Nu esti logat inca !");
	if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
    if(PlayerInfo[playerid][pLevel] < 2) return   SendClientMessage(playerid, COLOR_GREY, "** Iti trebuie minim level 2 !");
    if(!IsPlayerInRangeOfPoint(playerid, 3,SBizzInfo[7][sbPosX], SBizzInfo[7][sbPosY], SBizzInfo[7][sbPosZ]) && !IsPlayerInRangeOfPoint(playerid,3, SBizzInfo[8][sbPosX], SBizzInfo[8][sbPosY], SBizzInfo[8][sbPosZ])) return SendClientMessage(playerid, COLOR_GREY, "** Nu esti la sediul CNN.");
	if (AdTimer[playerid] > 0)	{format(strings, sizeof(strings), "** Asteapta %d secunde inainte de a mai plasa un anunt!",AdTimer[playerid]);	return SendClientMessage(playerid, COLOR_GRAD2, strings);}
	if(PlayerInfo[playerid][pPhoneNumber] == 0) return SendClientMessage(playerid,-1,"Nu ai telefon");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}AD: {FFFFFF}Nu poti plasa un anunt dintr-un vehicul!");
	new message[128],payout;
	if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /ad [advert text]");
	if(strlen(message)>110) return SendClientMessage(playerid,COLOR_LIGHTRED,"Nu poti pune mai mult de 60 de caractere");
 	if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(message) || FindIP(message))
	{format(strings, sizeof(strings), "%s[%d] a facut reclama pe /ad: %s",PlayerName(playerid),playerid, message);  AdminsBroadCast(COLOR_RED,strings,1); HackLog(strings); return 1;}
	if(IsPlayerInRangeOfPoint(playerid,3,SBizzInfo[8][sbPosX], SBizzInfo[8][sbPosY], SBizzInfo[8][sbPosZ]))
			payout = strlen(message) * SBizzInfo[8][sbEntrace];
	else 	payout = strlen(message) * SBizzInfo[7][sbEntrace];
	if(GetPlayerCash(playerid) < payout)
 	{format(strings, sizeof(strings), "** Ai folosit %d caractere costand $%s, si nu detii aceasta suma.", strlen(message), FormatNumber(payout));	return SendClientMessage(playerid, COLOR_WHITE, strings); }
	GivePlayerCash(playerid, - payout);
	if(IsPlayerInRangeOfPoint(playerid,3,SBizzInfo[7][sbPosX], SBizzInfo[7][sbPosY], SBizzInfo[7][sbPosZ]))
	{SBizzInfo[7][sbTill] += payout;sbUpdate(7,sbTillx);}
	if(IsPlayerInRangeOfPoint(playerid,3,SBizzInfo[8][sbPosX], SBizzInfo[8][sbPosY], SBizzInfo[8][sbPosZ]))
	{SBizzInfo[8][sbTill] += payout;sbUpdate(8,sbTillx);}
	format(strings, sizeof(strings), "Anunt: %s, De: %s (Telefon: {FFFFFF}%d{18E139})",  message, PlayerName(playerid),PlayerInfo[playerid][pPhoneNumber]);
	OOCNews(CRISTIAN,strings);
	format(strings, sizeof(strings), "~r~Ai platit $%d~n~~w~Mesajul a continut: %d caractere", payout, strlen(message));
	GameTextForPlayer(playerid, strings, 5000, 1);
	AdTimer[playerid] = 62;
	return 1;
}

CMD:gravity(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin]<8) return SendClientMessage(playerid,COLOR_RED,"Nu esti autorizat sa folosesti aceasta comanda");
	new Float:Gravity;
	if(sscanf(params, "f", Gravity)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /gravity [ammount], default  0.008");
    SetGravity(Gravity);
	return 1;
}

CMD:angle(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin]<8) return SendClientMessage(playerid,COLOR_RED,"Nu esti autorizat sa folosesti aceasta comanda");
	new Float:Gravity;
	if(sscanf(params, "f", Gravity)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /angle [ammount]");
    SetPlayerFacingAngle(playerid, Gravity);
	return 1;
}

CMD:shop(playerid, params[])
{
	if (!IsPlayerInRangeOfPoint(playerid, 1.0,  821.7485, -0.3381, 1004.1155) && !IsPlayerInRangeOfPoint(playerid, 1.0 ,821.5518, 1.9134, 1004.1155) &&
	!IsPlayerInRangeOfPoint(playerid, 1.0 ,821.4779, 4.1611, 1004.1155) && !IsPlayerInRangeOfPoint(playerid, 1.0 ,821.5056, 6.4230, 1004.1155)) return SendClientMessage(playerid,COLOR_RED,"Nu esti la PayPoint");
	new strong[900];
	strcat(strong,"{FFFFFF}Produs\t{FFFFFF}YenCost\t{FFFFFF}Valuta\n");
	strcat(strong,"{FFFFFF}Cont Vip\t6\tYen\n");
	strcat(strong,"{FFFFFF}Schimbare nickname\t5\tYen\n");
	strcat(strong,"{FFFFFF}Iphone(este la I.T.SHOP)\t0\tYen\n");
	strcat(strong,"{FFFFFF}Clear: jumatate BlackList\t5\tYen\n");
	strcat(strong,"{FFFFFF}Clear: tot BlackList\t10\tYen\n");
	strcat(strong,"{FFFFFF}Clear 1 Warn\t5\tYeni\n");
	strcat(strong,"{FFFFFF}Unban Temporar\t5-20\tYen\n");
	strcat(strong,"{FFFFFF}Unban Permanent\t50\tYen\n");
	strcat(strong,"{FFFFFF}Resetare Kilometraj\t10\tYen\n");
	strcat(strong,"{FFFFFF}Adaugare Slot Masina\t25\tYen\n");
	strcat(strong,"{FFFFFF}Masini Speciale\t50-125\tYen\n");
	strcat(strong,"{FFFFFF}Case Speciale\t100\tYen\n");
	strcat(strong,"{FFFFFF}Laser\t6000\tDolar");
	ShowPlayerDialog(playerid, 27, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Pay point- Menu", strong, "{FFFFFF}Buy", "{EA1515}Close");
	return 1;
}

CMD:surrender(playerid, params[])
{
	if(gLogged[playerid] == 0) return 1;
	if(!IsPlayerInRangeOfPoint(playerid,4,1566.6206,-1688.3115,16.197)) return SendClientMessage(playerid,COLOR_RED,"Nu esti la LSPD!");
    if(GetPlayerWantedLevel(playerid) < 1) return SendClientMessage(playerid,-1,"Nu aveti wanted");
    if(GetPlayerWantedLevel(playerid) > 5) return SendClientMessage(playerid,-1,"Wantedul este mult prea mare");



    new price = GetPlayerWantedLevel(playerid) * 300;
	format(strings, sizeof(strings), "~r~-%d",price);
	GameTextForPlayer(playerid, strings, 5000, 3);
	GivePlayerCash(playerid, -price);
	PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);

	PlayerInfo[playerid][pArrestedTime] += 1;
	Update(playerid, pArrestedTimex);
	PlayerInfo[playerid][pJail] = 1;
	Update(playerid, pJailx);
	PlayerInfo[playerid][pJailTime] = GetPlayerWantedLevel(playerid)*300;
	Update(playerid, pJailTimex);
	format(strings, sizeof(strings), "* Esti in inchisoare pentru %d secunde si ai pierdut $%d amenda, pentru ca te-ai predat.", PlayerInfo[playerid][pJailTime], price);
	SendClientMessage(playerid, COLOR_LIGHTRED, strings);
	PlayerInfo[playerid][pWanted] = 0;
	Update(playerid, pWantedx);
	SetPlayerWantedLevel(playerid, 0);
	WantedLeft[playerid] = 0;
	TogglePlayerControllable(playerid, 0);
	SetTimerEx("freze",500, 0, "i", playerid);
	ResetPlayerWeapons(playerid);
	SetPlayerInterior(playerid, 0);
	PlayerCuffed[playerid] = 0;
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(playerid, 9);
	SetPlayerPos(playerid,1564.4834, -1671.7292, 12.4190);
	SetPlayerVirtualWorld(playerid, 0);
  	WantLawyer[playerid] = 1;
    format(strings, sizeof(strings), "<< %s s-a predat. Este in jail pentru %d minute.Amenda %d>>",PlayerName(playerid),PlayerInfo[playerid][pJailTime]/60,price);
	SendDepartamentMessage(COLOR_ALLDEPT, strings);
	return 1;
}
CMD:resethit(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return 1;
	if(gLogged[playerid] == 0) return 1;
	if (PlayerInfo[playerid][pMember] != 8) return    SendClientMessage(playerid, COLOR_GREY, "    Nu esti membru al agentiei Hitman !");
	if(GoChase[playerid] == 999) return	SendClientMessage(playerid, COLOR_GREY,"Nu ai un contract");
	format(strings, sizeof(strings), "* Hitman %s si-a resetat contractul", PlayerName(playerid));
	FactionsBroadCast(8, COLOR_YELLOW, strings);
	Masked[playerid] = 0;
	GetChased[GoChase[playerid]] = 999;
	GoChase[playerid] = 999;
	foreach(Player,i)
    ShowPlayerNameTagForPlayer(i, playerid, true);
	SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
	return 1;
}

CMD:order(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return 1;
	if (PlayerInfo[playerid][pMember] != 8) return    SendClientMessage(playerid, COLOR_GREY, "    Nu esti membru al agentiei Hitman !");
    if (!IsPlayerInRangeOfPoint(playerid, 3, 2556.3662,-1303.6514,1060.984))  return    SendClientMessage(playerid, COLOR_GREY, " Nu esti in hq !");
    ShowPlayerDialog(playerid, 25, DIALOG_STYLE_LIST, "ORDER MENU", "{26A4D9}1:Knife, Desert Eagle, MP5, Sniper\n{E1801E}2:Knife, SDPistol, MP5, Sniper\n{26A4D9}3:Knife, Desert Eagle, AK47, MP5, Sniper\n{E1801E}4:Knife, SDPistol, M4, AK47, Sniper\n{26A4D9}5:Knife, Desert Eagle, M4, AK47, Sniper", "Alege", "Inchide");
 	return 1;
}

CMD:fish(playerid, params[])
{
	if(PlayerInfo[playerid][pFishLic] == 0) return SendClientMessage(playerid, -1, "Nu ai licenta de pescuit");
    if(PlayerInfo[playerid][pAchievement9] == 0) return SendClientMessage(playerid, -1, "Nu ai undita, poti cumpara de la un 24/7!");
	if(!IsPlayerNearWater(playerid)) return SendClientMessage(playerid, -1, "Nu esti langa apa!");
	ApplyAnimation(playerid, "SAMP", "FishingIdle", 4.1, 0, 1, 1, 1, 1);
	SetPlayerAttachedObject(playerid, 9, 18632, 6, 		0.076998,0.165999,0.050999,    -98.699981,-19.900024,61.000011, 		1.000000, 1.000000, 1.000000 );
	GameTextForPlayer(playerid, "~b~~h~Fishing Animation Pose!", 3000, 3);
	ApplyAnimation(playerid, "SAMP", "FishingIdle", 4.1, 0, 1, 1, 1, 1);
	return 1;
}

CMD:contract(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return 1;
	new playa,moneys;
	if(sscanf(params, "ud", playa,moneys)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /contract [playerid/numejucator] [suma]");
	if(moneys < 10000 || moneys > 1000000) return SendClientMessage(playerid, COLOR_GREY, "Suma trebuie sa fie intre 10.000 si 1.000.000!");
	if(PlayerInfo[playerid][pLevel] < 3) return	SendClientMessage(playerid, COLOR_GRAD1, "Nu ai level 3.");
 	if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) return	SendClientMessage(playerid, COLOR_GRAD1, "Membri agentiei nu pot pune contracte");
  	if (!IsPlayerConnected(playa)) return	SendClientMessage(playerid, COLOR_GRAD1, "Player offline");
   	if(playa == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GRAD1, "Invalid playerid");
    if(PlayerInfo[playa][pMember] == 8||PlayerInfo[playa][pLeader] == 8)       SendClientMessage(playerid, COLOR_GREY, "Ne pare rau nu putem executa cererea!");
    if(IsACop(playa) && moneys < 20000) SendClientMessage(playerid, COLOR_GREY, "Pentru capul unui politist ai nevoie de cel putin 20.000!");
    if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Mai bine te arunci de pe o stanca!");
	new playermoney = GetPlayerCash(playerid);
	if (playermoney< moneys) return SendClientMessage(playerid,COLOR_RED,"Nu aveti bani pentru contract!");
 	GivePlayerCash(playerid, -moneys);
	PlayerInfo[playa][pHeadValue]+=moneys;
	Update(playa, pHeadValuex);
	format(strings, sizeof(strings), "%s a pus contract pe %s[%d], suma $%d.",PlayerName(playerid), PlayerName(playa),playa, moneys);
	FactionsBroadCast(8, COLOR_YELLOW, strings);
	format(strings, sizeof(strings), "* Ai pus contract pe %s, suma $%d.",PlayerName(playa), moneys);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
	SendClientMessage(playa,-1,"Cineva a pus o recompensa pe capul tau!");
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	return 1;
}


CMD:givehit(playerid, params[])
{
	if (PlayerInfo[playerid][pMember] != 8) return    SendClientMessage(playerid, COLOR_GREY, "    Nu esti membru al agentiei Hitman !");
	new giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /givehit [targetid]");
	if(!IsPlayerConnected(giveplayerid)) return    SendClientMessage(playerid, COLOR_GREY, "  Player offline !");
  	if(giveplayerid == INVALID_PLAYER_ID) return   SendClientMessage(playerid, COLOR_GREY, "  invalid playerid!");
	if(GoChase[playerid] < 999) return SendClientMessage(playerid, COLOR_GREY, "Ai deja un contract !");
    if (PlayerInfo[giveplayerid][pHeadValue] == 0) return SendClientMessage(playerid, COLOR_GREY, "Acel jucator nu are contract semnat pe numele lui.");
	format(strings, sizeof(strings), "* Hitman %s a luat contractul pe capul lui %s(ID:%d), pentru $%d.", PlayerName(playerid), PlayerName(giveplayerid), giveplayerid, PlayerInfo[giveplayerid][pHeadValue]);
	FactionsBroadCast(8, COLOR_YELLOW, strings);
	GoChase[playerid] = giveplayerid;
	GetChased[giveplayerid] = playerid;
	GotHit[giveplayerid] = 1;
	Masked[playerid] = 1;
	SetPlayerSkin(playerid,29);
	foreach(Player,i)
    ShowPlayerNameTagForPlayer(i, playerid, false);
	return 1;
}

CMD:mycontract(playerid, params[])
{
	if (PlayerInfo[playerid][pMember] != 8) return    SendClientMessage(playerid, COLOR_GREY, "    Nu esti membru al agentiei Hitman !");
 	if(GoChase[playerid] == 999) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Hitman Agency: {FFFFFF}Nu iti este atribuit un contract!");
 	if(!IsPlayerConnected(GoChase[playerid])) return SendClientMessage(playerid, COLOR_WHITE, "Victima este offline");
	format(strings, sizeof(strings), "|__________________ Contractul lui %s __________________|", PlayerName(playerid));
	SendClientMessage(playerid, COLOR_WHITE, strings);
	format(strings, sizeof(strings), "Tinta: %s", PlayerName(GoChase[playerid]));
	SendClientMessage(playerid, COLOR_GREY, strings);
	format(strings, sizeof(strings), "Pret: %s", FormatNumber(PlayerInfo[GoChase[playerid]][pHeadValue]));
	SendClientMessage(playerid, COLOR_GREY, strings);
	format(strings, sizeof(strings), "Factiunea: %s", PlayerInfo[GoChase[playerid]][pMember]);
	SendClientMessage(playerid, COLOR_GREY, strings);
	return 1;
}

CMD:contracts(playerid, params[])
{
	if (PlayerInfo[playerid][pMember] != 8) return SendClientMessage(playerid, COLOR_GREY, "  Nu faci parte din  Hitman  Agency!");
	SearchingHit(playerid);
	return 1;
}
CMD:cheatteles(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8) return SendClientMessage(playerid,COLOR_RED,"Nu ai acces la aceasta comanda!");
	if(CheatTelesAllowed == 1)	{CheatTelesAllowed = 0; SendClientMessage(playerid,COLOR_LIGHTRED, "AntiCheat    Activat");}
	else 						{CheatTelesAllowed = 1; SendClientMessage(playerid,COLOR_LIGHTBLUE,"AntiCheat DezActivat");}
	return 1;
}
CMD:sr(playerid, params[])
{
	if(ServerRestarting!=4) return 1;
    Restartsecond=-1;
    ServerRestarting=0;
    KillTimer(timerul[10]);
    KillTimer(timerul[9]);
	foreach(Player,i)
    SendClientMessage(i,-1,"Upload ANULAT, Ne cerem scuze");
    return 1;
}
CMD:restart(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin]<8) return SendClientMessage(playerid,COLOR_RED,"Nu esti autorizat sa folosesti aceasta comanda");
	new numar;
    if(sscanf(params,"d", numar)) return SendClientMessage(playerid, COLOR_WHITE, "Folosire: /upload [secunde]");
    if(numar < 3 || numar > 60) return SendClientMessage(playerid, COLOR_WHITE, "Secundele trebuie sa fie intre 3-60");
	Restartsecond = numar+1;
	ServerRestarting = 4;
    SendRconCommand("unloadfs Harta");
	timerul[9] = SetTimer("RestartTimer",1000,true);
	timerul[10]= SetTimer("OnGameModeExit", 1000*numar+2000, true);
	foreach(Player,i)
	{
		OnPlayerDisconnect(i,3);
		TextDrawHideForPlayer(i, td_fuel[i]);
	    TextDrawHideForPlayer(i, TextDrawVeh[i]);
	    TextDrawHideForPlayer(i, Textdraw70[i]);
	    TextDrawHideForPlayer(i, Textdraw71[i]);
	    TextDrawHideForPlayer(i, Textdraw72[i]);
	    TextDrawHideForPlayer(i, Textdraw69[i]);
	    TextDrawHideForPlayer(i, Textdraw40[i]);
	    TextDrawHideForPlayer(i, Textdraw39[i]);
	    TextDrawHideForPlayer(i, Textdraw160[i]);
	    TextDrawHideForPlayer(i, sState[i]);
	    TextDrawHideForPlayer(i, Modelcar[i]);
	    TextDrawHideForPlayer(i, Healthveh[i]);
	    TextDrawHideForPlayer(i, heights[i]);
	    TextDrawHideForPlayer(i, Gpscar[i]);
	    TextDrawHideForPlayer(i, Textdraw53[i]);
	    TextDrawHideForPlayer(i, Textdraw45);
	    TextDrawHideForPlayer(i, Date);
	    TextDrawHideForPlayer(i, Time2);
	   	TextDrawHideForPlayer(i, NameText[i]);
	    ClearChatbox(i, 100);
       	SendClientMessage(i,-1,"Serverul se restarteaza. O noua versiune se uploadeaza.");
   		SendClientMessage(i,-1,"Nu parasiti serverul, veti fi reconectati automat");
	}
	return 1;
}
CMD:fare(playerid, params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pMember] != 10 && PlayerInfo[playerid][pLeader] != 10)  return SendClientMessage(playerid,COLOR_RED,"Nu esti taximetrist");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_RED,"Nu esti sofer");
    new Veh = GetPlayerVehicleID(playerid);
    if(Veh != taxicar[10] && Veh != taxicar[0] && Veh != taxicar[7] && Veh != taxicar[8] && Veh != taxicar[9] && Veh != taxicar[6] && Veh != taxicar[5] && Veh != taxicar[4] && Veh != taxicar[3] && Veh != taxicar[2] && Veh != taxicar[1])//e
    if(Veh == taxicar[11]) return SendClientMessage(playerid, COLOR_GREY, "  Nu poti da fare pe acest vehucul !");
 	if(TransportDuty[playerid] > 0)
	{
        TaxiDrivers -= 1;
	    TransportDuty[playerid] = 0;
		format(strings, sizeof(strings), "* Nu mai esti la datorie ai primit $%d.", TransportMoney[playerid]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
		GivePlayerCash(playerid, TransportMoney[playerid]);
		TransportValue[playerid] = 0;
		TransportMoney[playerid] = 0;
		return 1;
	}
    if(GetPlayerState(playerid) == 2)
	{
	    new moneys;
		if(sscanf(params, "d", moneys)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Usage:{FFFFFF} /fare [price]");
    	if(moneys < 1 || moneys > 600) return SendClientMessage(playerid, COLOR_GREY, "   Pret intre $1 si $500 !");
		TaxiDrivers += 1;
		TransportDuty[playerid] = 1;
		TransportValue[playerid] = moneys;
		format(strings, sizeof(strings), "Taxi Driver %s este la datorie, Pret: $%d. Scrie /service taxi daca aveti nevoie.", PlayerName(playerid), TransportValue[playerid]);
 		OOCNews(TEAM_GROVE_COLOR,strings);
	}
	//else if(Veh == autobuz || Veh == autobuz1 || Veh == autobuz2 || Veh == autobuz3)//
	return 1;
}


CMD:upload(playerid, params[])
{return cmd_restart(playerid, params);}

CMD:aw(playerid, params[])
{
   	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
   	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid,COLOR_RED,"Nu ai acces la aceasta comanda");
   	if(Warallowed == 0) { Warallowed = 1; SendClientMessage(playerid, COLOR_LIGHTBLUE, "{1580EA}Ai permis jucatorilor sa porneasca razboaie!"); return 1; }
   	if(Warallowed == 1) { Warallowed = 0; SendClientMessage(playerid, COLOR_LIGHTBLUE, "{1580EA}Ai interzis jucatorilor sa porneasca razboaie!"); return 1; }
 	return 1;
}
CMD:buygun(playerid, params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new b = GetPlayerVirtualWorld(playerid);
	if(b < 0 ||  b > 3) return SendClientMessage(playerid,COLOR_RED,"Nu te afli intr-un GunShop");
	if(!IsPlayerInRangeOfPoint(playerid,30,BizzInfo[b][bExitX], BizzInfo[b][bExitY], BizzInfo[b][bExitZ])) return SendClientMessage(playerid,-1,"Nu esti intr-un GunShop");
	new strong[900];
 	strcat(strong,"{FFFFFF}Arma\t{FFFFFF}Gloante\t{FFFFFF}Pret\n");
	strcat(strong,"{09AFF7}Golf\t{EAD515}1\t{50BB44}$499\n");
	strcat(strong,"{09AFF7}Pulan\t{EAD515}1\t{50BB44}$699\n");
	strcat(strong,"{09AFF7}Cutit\t{EAD515}1\t{50BB44}$99\n");
	strcat(strong,"{09AFF7}Bata\t{EAD515}1\t{50BB44}$229\n");
	strcat(strong,"{09AFF7}Lopata\t{EAD515}1\t{50BB44}$449\n");
	strcat(strong,"{09AFF7}Tac\t{EAD515}1\t{50BB44}$99\n");
	strcat(strong,"{09AFF7}Katana\t{EAD515}1\t{50BB44}$1199\n");
	strcat(strong,"{09AFF7}Drujba\t{EAD515}1\t{50BB44}$3999\n");
	strcat(strong,"{09AFF7}Baston\t{EAD515}1\t{50BB44}$349\n");
	strcat(strong,"{09AFF7}He Grenade\t{EAD515}5\t{50BB44}$4999\n");
	strcat(strong,"{09AFF7}Smoke Grenade\t{EAD515}10\t{50BB44}$4999\n");
	strcat(strong,"{09AFF7}Glock\t{EAD515}90\t{50BB44}$999\n");
	strcat(strong,"{09AFF7}Deagle\t{EAD515}120\t{50BB44}$2999\n");
	strcat(strong,"{09AFF7}USP Silencer\t{EAD515}120\t{50BB44}$1299\n");
	strcat(strong,"{09AFF7}ShootGun\t{EAD515}90\t{50BB44}$999\n");
	strcat(strong,"{09AFF7}MP5\t{EAD515}190\t{50BB44}$2299\n");
	strcat(strong,"{09AFF7}M4A1\t{EAD515}190\t{50BB44}$2999\n");
	strcat(strong,"{09AFF7}Country Rifle\t{EAD515}90\t{50BB44}$1199\n");
	strcat(strong,"{09AFF7}Spray\t{EAD515}300\t{50BB44}$349\n");
	strcat(strong,"{09AFF7}Extinctor\t{EAD515}290\t{50BB44}$449\n");
	strcat(strong,"{09AFF7}Parasuta\t{EAD515}1\t{50BB44}$4999");
	ShowPlayerDialog(playerid, 324, DIALOG_STYLE_TABLIST_HEADERS, "Weapons",strong,"{FFFFFF}Buy", "{EA1515}Exit");
	return 1;
}
CMD:turfs(playerid, params[])
{
   if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
   if(PlayerInfo[playerid][pAchievement7] == 1)
   {
     	PlayerInfo[playerid][pAchievement7] = 0;
    	Update(playerid,pAchievement7x);
		TextDrawHideForPlayer(playerid,Textdraw47[playerid]);
    	SendClientMessage(playerid,COLOR_RED,"Acum nu mai vezi teritoriile");
    	for(new g=0;g<Total_Gang_Created;g++)
 	    GangZoneHideForPlayer(playerid, g);
   }
   else
   {
    	PlayerInfo[playerid][pAchievement7] = 1;
    	Update(playerid,pAchievement7x);
		TextDrawShowForPlayer(playerid,Textdraw47[playerid]);
    	SendClientMessage(playerid,-1,"Acum vezi teritoriile");
    	for(new g=0;g<Total_Gang_Created;g++)
 	    GangZoneShowForPlayer(playerid, g, GetTeamZoneColor(GangInfo[g][zOwner]));
   }
   return 1;
}


CMD:reloadt(playerid, params[])
{
   	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
   	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid,COLOR_RED,"Nu esti Admin destul de mare in grad");
   	SendClientMessage(playerid,COLOR_RED,"Teritorii distruse");
   	for(new g=0;g<Total_Gang_Created;g++)
   	GangZoneDestroy(g);
   	Total_Gang_Created = 0;
	LoadGangs();
   	SendClientMessage(playerid,COLOR_RED,"Teritorii Incarcate");
   	for(new g=0;g<Total_Gang_Created;g++)
   	{
   		foreach(Player,i)
		{
		    if(PlayerInfo[i][pAchievement7] == 1)
        	GangZoneShowForPlayer(i,g, GetTeamZoneColor(GangInfo[g][zOwner]));
      	}
	}
   	return 1;
}
CMD:clearlog(playerid, params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 8)  return SendClientMessage(playerid,COLOR_RED,"Nu esti Admin destul de mare in grad");
	new faction;
	if(sscanf(params,"d", faction)) return SendClientMessage(playerid, COLOR_WHITE, "clearlog: <factionid>");
	mysql_format(handle, query, 500, "DELETE FROM `factionlog` WHERE `FactionID` = %d",faction);
	mysql_tquery(handle, query);
	format(strings,sizeof(strings),"%d logs deleted!", cache_affected_rows());
	SendClientMessage(playerid,COLOR_LIGHTBLUE,strings);
	return 1;
}
CMD:turftime(playerid, params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	for(new g=0;g<Total_Gang_Created;g++)
	{
		if(IsPlayerInArea(playerid,GangInfo[g][zMinX],GangInfo[g][zMaxX],GangInfo[g][zMinY],GangInfo[g][zMaxY]))
		{
			format(strings,sizeof(strings),"Turf %d. Timp ramas: %d, Owner: %d",g,GangInfo[g][zHour],GangInfo[g][zOwner]);
			SendClientMessage(playerid,-1,strings);
		}
	}
	return 1;
}

CMD:war(playerid, params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsAMafia(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu faci parte din mafie");
	new playa,zone[MAX_ZONE_NAME],string[155];
	if(sscanf(params,"u", playa)) return SendClientMessage(playerid, COLOR_WHITE, "war: <playerid>");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	GetPlayer2DRadarZone(playerid, zone, sizeof(zone));
	if(PlayerInfo[playerid][pAchievement7] != 1) return SendClientMessage(playerid, COLOR_WHITE, "scrie /turfs mai intai");
	if(playerid == playa) return SendClientMessage(playerid, COLOR_WHITE, "Nu iti poti da war singur");
	if(!IsAMafia(playa)) return SendClientMessage(playerid, COLOR_WHITE, "Playerul nu este mafiot");
   	if(PlayerInfo[playerid][pRank] < 4) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}War: {FFFFFF}Nu ai rangul necesar!");
 	if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}War: {FFFFFF}Te afli intr-un interior, daca nu scrie /vw!");
 	if(WarStarted != 0) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}War: {FFFFFF}Este deja un razboi in desfasurare!");
	if(PlayerInfo[playerid][pMember] == PlayerInfo[playa][pMember]) return SendClientMessage(playerid, COLOR_WHITE, "Nu iti poti ataca factiunea");
    if(Warallowed == 0) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}War: {FFFFFF}Un admin a inchis sistemul de razboaie temporar!");
    new side[MAX_PLAYERS], ncount=0;
    if(PlayerInfo[playerid][pMember] != 0)	side[playerid] = PlayerInfo[playerid][pMember];
    for(new n=1; n<Total_Gang_Created; n++)
    if(GangInfo[n][zOwner] == side[playerid]) ncount++;
    if(ncount > 12) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}War: {FFFFFF}Deja detii 13 teritorii!");
	new ward;
    for(new g=0;g<Total_Gang_Created;g++)
	if(IsPlayerInArea(playerid,GangInfo[g][zMinX],GangInfo[g][zMaxX],GangInfo[g][zMinY],GangInfo[g][zMaxY])) ward = g;
	if(GangInfo[ward][zHour] > 0) return SendClientMessage(playerid,COLOR_RED,"Acest teritoriu a fost atacat de curnad, scrie /turftime sa vezi timpul ramas!");
	if(GangInfo[ward][zOwner] ==  side[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "Nu poti declara razboi pe teritoriul tau");
	if(GangInfo[ward][zOwner] != PlayerInfo[playa][pMember] && GangInfo[ward][zOwner] != 0) return SendClientMessage(playerid, COLOR_WHITE, "Zona nu apartine Membrului");
	new ftext[60], ftext1[60];
    if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) format(ftext, sizeof(ftext), "{BF4D40}[Rifa Gang]");
    if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) format(ftext, sizeof(ftext), "{00E6FF}[Triads]");
    if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) format(ftext, sizeof(ftext), "{F2AD0D}[Corleone Famigla");
    if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13) format(ftext, sizeof(ftext), "{D02FB0}[Russian Bratva]");
    if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) format(ftext, sizeof(ftext), "{B300FF}[Ballas Gang]");
    if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15) format(ftext, sizeof(ftext), "{FF8000}[Sevile Gang]");
    if(GangInfo[ward][zOwner] == 5) format(ftext1, sizeof(ftext1), "{BF4D40}[Rifa Gang]");
    if(GangInfo[ward][zOwner] == 6) format(ftext1, sizeof(ftext1), "{00E6FF}[Triads]");
    if(GangInfo[ward][zOwner] == 16) format(ftext1, sizeof(ftext1), "{F2AD0D}[Corleone Famigla]");
    if(GangInfo[ward][zOwner] == 13) format(ftext1, sizeof(ftext1), "{D02FB0}[Russian Bratva]");
    if(GangInfo[ward][zOwner] == 14) format(ftext1, sizeof(ftext1), "{B300FF}[Ballas Gang]");
    if(GangInfo[ward][zOwner] == 15) format(ftext1, sizeof(ftext1), "{FF8000}[Sevile Gang]");
    if(GangInfo[ward][zOwner] == 0) format(ftext1, sizeof(ftext1), "{FFFFFF}Unui teritoriu nou");
    format(string, sizeof(string), "(( Gang News: )) %s a declansat un razboi impotriva %s!", ftext, ftext1);
    OOCNews(0x8D8DFFFF,string);
    format(string, sizeof(string), "(( Gang News: )) {FFFFFF}Razboiul se desfasoara in zona %s! Stati departe!", zone);
    OOCNews(0x8D8DFFFF,string);
	GangZoneFlashForAll(Gangzone[ward], GetTeamZoneColor(side[playerid]));
    turftimer = 600;
    turftimercount = SetTimer("TurfTimerminu", 1000, true);
	format(string,sizeof(string),"~b~WAR~n~~b~Time: ~w~%d: %d~n~~y~%s vs %s~n~~b~Score:~w~%d - %d",turftimer/60,turftimer-turftimer/60*60,ftext,ftext1);
	TextDrawSetString(Textwarevent,string);
	TextDrawShowForPlayer(playerid,Textwarevent);
    WarStarted=1;
    WarF = side[playerid];//
    WarF1 = PlayerInfo[playa][pMember];//
    WarZone = ward;
    for(new w = 0; w < Total_Gang_Created; w++)
    WarPoints[w] = 0;
	return 1;
}

CMD:gangedit(playerid, params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] <= 3) return SendClientMessage(playerid,COLOR_RED,"Nu ai acces la aceasta comanda!");
	for(new g=0;g<Total_Gang_Created;g++)
 	{
		if(IsPlayerInArea(playerid,GangInfo[g][zMinX],GangInfo[g][zMaxX],GangInfo[g][zMinY],GangInfo[g][zMaxY]))
		{
			new message[128],amm;
			if(sscanf(params,"ds[128]", amm,message)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /gangedit [ammount] [Owner/Hour] ");
			if(amm < 0 || amm > 48) return SendClientMessage(playerid,COLOR_RED,"Invalid ammount, [0-48]");
		    if(strmatch(message, "owner"))
 			{
 			    GangInfo[g][zOwner] = amm;
				zUpdate(g,zOwnerx);
				SendClientMessage(playerid,-1,"Owner editat, culoare schimbata dupa owner");
				foreach(Player,i)
    		    if(PlayerInfo[i][pAchievement7] == 1)
           		GangZoneShowForPlayer(i,g, GetTeamZoneColor(GangInfo[g][zOwner]));
       			return 1;
			}
			else if(strmatch(message, "hour"))
 			{
 			    GangInfo[g][zHour] = amm;
				zUpdate(g,zHourx);
				SendClientMessage(playerid,-1,"Ore editate");
				return 1;
			}
			else return SendClientMessage(playerid,-1,"Hour si Owner doar!");
		}
		else SendClientMessage(playerid,-1,"adds");
  	}
	return 1;
}


CMD:number(playerid, params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAchievement6] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu ai o carte de telefoane !");
	new playa;
	if(sscanf(params,"u", playa)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /number [playerid/numejucator]");
    if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, COLOR_RED, "Player Deconectat");
	if(gLogged[playa] != 1) return  SendClientMessage(playerid, COLOR_RED, "Player Deconectat");
	format(strings, 256, "Nume: %s, Telefon: %d",PlayerName(playa),PlayerInfo[playa][pPhoneNumber]);
	SendClientMessage(playerid, COLOR_GRAD1, strings);
	return 1;
}
CMD:radar(playerid, params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti politist!");
    if(!IsACopCar(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"Doar intr-o masina de politie [LSPD,LVPD,SFPD]");
    if(PlayerInfo[playerid][pRadar] != 1)
	{
		SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Radar: {FFFFFF}Ai activat radarul.");
		SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Radar: {FFFFFF}Daca te misti, radarul va fi scos automat.");
		PlayerInfo[playerid][pRadar] = 1;
		return 1;
	}
	else if(PlayerInfo[playerid][pRadar] >= 1)
 	{
		SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Radar: {FFFFFF}Ai dezactivat radarul.");
		PlayerInfo[playerid][pRadar] = 0;
		return 1;
	}
	return 1;
}

CMD:health(playerid, params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(GetPlayerVirtualWorld(playerid) == 0) return SendClientMessage(playerid,-1,"Nu te afli in casa");
	if(!IsPlayerInRangeOfPoint(playerid,40, HouseInfo[GetPlayerVirtualWorld(playerid)][hPosX1], HouseInfo[GetPlayerVirtualWorld(playerid)][hPosY1], HouseInfo[GetPlayerVirtualWorld(playerid)][hPosZ1])) return SendClientMessage(playerid,-1,"Nu esti in casa");
    SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Viata: {FFFFFF}Viata incarcata!");
    SetPlayerHealth(playerid, 100.0);
	SetPlayerArmour(playerid,50.0);
 	format(strings, sizeof(strings), "%s isi incarca viata.", PlayerName(playerid));
	ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return 1;
}
CMD:charity(playerid, params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new charity;
	if(sscanf(params,"d", charity)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /charity [suma]");
 	if(charity < 0) return SendClientMessage(playerid, COLOR_GRAD1, "Aceasta suma nu este permisa");
	if(GetPlayerCash(playerid) < charity) return SendClientMessage(playerid, COLOR_GRAD1, "Nu ai atatia bani.");
 	GivePlayerCash(playerid, -charity);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	format(strings, sizeof(strings), "{1580EA}Donatii: {a9c4e4}%s, multumim pentru donatia ta de $%d, aceasta va ajuta economia.",PlayerName(playerid), charity);
	SendClientMessage(playerid, COLOR_WHITE, strings);
	format(strings, sizeof(strings), "%s scoate %d de $ si ii doneaza Statului "#SERVERNAME"", PlayerName(playerid), charity);
	ProxDetector(30.0, playerid, strings, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
	return 1;//chari
}

CMD:eat(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(GetPlayerCash(playerid) < 31) return SendClientMessage(playerid,-1,"Nu ai bani");
 	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti in masina!");
	new b, Float:health;
   	if(IsPlayerInRangeOfPoint(playerid, 5,802.5576, -1629.3566, 13.2584)) b = 16;
	else if(IsPlayerInRangeOfPoint(playerid, 5,1212.1125, -906.1799, 42.9226)) b = 17;
	else if(IsPlayerInRangeOfPoint(playerid, 5,1859.6418, 2083.1672, 10.8777)) b = 26;
	else if(IsPlayerInRangeOfPoint(playerid, 5,-2349.5579, -153.0708, 35.3600)) b = 27;
	else if(IsPlayerInRangeOfPoint(playerid, 5,2409.7483, -1488.1619, 23.8242)) b = 14;
	else return SendClientMessage(playerid,COLOR_RED,"Nu esti la un BurgerShoot!");
	GetPlayerHealth(playerid,health);
	if(health >= 75)	SetPlayerHealth(playerid, 100);
	else				SetPlayerHealth (playerid, health+25);
	GivePlayerCash(playerid, -35);
	GameTextForPlayer(playerid, "~r~-$35", 5000, 1);
	BizzInfo[b][bTill] += 35;
	bUpdate(b,bTillx);
	BizzInfo[b][bProducts] --;
	bUpdate(b,bProductsx);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	return 1;
}

CMD:fw(playerid, params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new targetid;
	if(sscanf(params,"u", targetid)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /f(action)w(arn) [playerid/numejucator]");
	if (PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[playerid][pLeader] == 0) return SendClientMessage(playerid, COLOR_RED, "Nu sunteti autorizat sa folositi aceasta comanda");
	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, COLOR_RED, "Player Offline");
	if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Invalid playerid");
    if(PlayerInfo[targetid][pMember] != PlayerInfo[playerid][pLeader] && PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid,-1,"Playerul Nu face parte din factiunea ta!");
	if(PlayerInfo[targetid][pMember] != PlayerInfo[playerid][pLeader]) return SCM(playerid,-1,"Playerul nu este in factiunea ta");
	PlayerInfo[targetid][pFwarn] ++;
	Update(targetid, pFwarnx);
	format(strings, sizeof(strings), "Liderul %s ti-a dat un FWarn.", PlayerName(playerid));
	SendClientMessage(targetid, COLOR_LIGHTRED, strings);
	format(strings, sizeof(strings), "I-ai dat un FWarn lui %s.", PlayerName(targetid));
	SendClientMessage(playerid, COLOR_LIGHTRED, strings);
	if(PlayerInfo[targetid][pFwarn] >= 3)
	{
		printf("AdmCmd: %s a fost dat afara din Factiune in urma a 3 Fwarns.", PlayerName(playerid), PlayerName(targetid));
		SendClientMessage(targetid, COLOR_LIGHTBLUE, "* Ai fost dat afara din factiune in urma acumularii de 3 FWarn-uri. Esti un civil acum.");
		SendClientMessage(targetid, COLOR_LIGHTBLUE, "* Timp de 12 ore, nu vei mai putea intra in vreo factiune.");
		PlayerInfo[targetid][pMember] = 0;
		Update(targetid, pMemberx);
		PlayerInfo[targetid][pRank] = 0;
		Update(targetid, pRankx);
		PlayerInfo[targetid][pFwarn] = 0;
		Update(targetid, pFwarnx);
		PlayerInfo[targetid][pPunish] = 12;
		Update(targetid, pPunishx);
		PlayerInfo[targetid][pSkin] = 188;
		Update(targetid, pSkinx);
		SpawnPlayer(targetid);
 		return 1;
	}
	return 1;
}
CMD:fuw(playerid, params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new targetid;
	if(sscanf(params,"u", targetid)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /f(action)w(arn) [playerid/numejucator]");
	if (PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[playerid][pLeader] == 0) return SendClientMessage(playerid, COLOR_RED, "Nu sunteti autorizat sa folositi aceasta comanda");
	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, COLOR_RED, "Player Offline");
	if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Invalid playerid");
    if(PlayerInfo[targetid][pMember] != PlayerInfo[playerid][pLeader] && PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid,-1,"Playerul Nu face parte din factiunea ta!");
	if(PlayerInfo[targetid][pMember] != PlayerInfo[playerid][pLeader]) return SCM(playerid,-1,"Playerul nu este in factiunea ta");
	if(PlayerInfo[targetid][pFwarn] <= 0) return SCM(playerid,-1,"Playerul nu are FW!");
	PlayerInfo[targetid][pFwarn] --;
	Update(targetid, pFwarnx);
	format(strings, sizeof(strings), "Liderul %s ti-a dat un FactionUnWarn.", PlayerName(playerid));
	SendClientMessage(targetid, COLOR_LIGHTBLUE, strings);
	format(strings, sizeof(strings), "I-ai dat un FactionUnWarn lui %s.", PlayerName(targetid));
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
	return 1;
}

CMD:offuninvite(playerid, params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new message[128];
	if(sscanf(params,"s[128]",message)) return SendClientMessage(playerid, COLOR_SYN, "Synthax: /auninvite <playerid/PartOfName>");
	if (PlayerInfo[playerid][pLeader] == 0 && PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_RED, "Nu sunteti autorizat sa folositi aceasta comanda");
    mysql_format(handle, query, sizeof(query), "SELECT * FROM `players` WHERE `Member` = %d AND `username`='%s'", PlayerInfo[playerid][pLeader],message);
	new Cache:result = mysql_query(handle,query);
	mysql_query(handle,query);
	if(cache_num_rows() > 0)
	{
	    format(strings, sizeof(strings), "%s %d l-a dat afara din factiunea %d pe %s OFF", PlayerName(playerid),playerid,PlayerInfo[playerid][pLeader],message);
    	mysql_format(handle, query, 500,"INSERT INTO `factionlog` (`FactionID`,`Efector`,`Receptor`,`Actiunea`,`TimeStamps`) VALUES ('%d','%s','%s','%s','%s')",
		PlayerInfo[playerid][pLeader],PlayerName(playerid),message,strings,CurrentTimeStamps());
 		format(strings,sizeof(strings),"UPDATE `players` SET `Skin`= 188  WHERE `Member` = %d AND `username`='%s'", PlayerInfo[playerid][pLeader],message);
    	mysql_tquery(handle,strings);
    	format(strings,sizeof(strings),"UPDATE `players` SET `Rank`= 0  WHERE `Member` = %d AND `username`='%s'", PlayerInfo[playerid][pLeader],message);
    	mysql_tquery(handle,strings);
		format(strings,sizeof(strings),"UPDATE `players` SET `Leader`= 0  WHERE `Member` = %d AND `username`='%s'", PlayerInfo[playerid][pLeader],message);
    	mysql_tquery(handle,strings);
    	format(strings,sizeof(strings),"UPDATE `players` SET `Member`= 0  WHERE `Member` = %d AND `username`='%s'", PlayerInfo[playerid][pLeader],message);
    	mysql_tquery(handle,strings);
        cache_delete(result);
        format(strings, sizeof(strings), "*L-ai dat afara din factiune pe %s. OFFLINE", message);
		SendClientMessage(playerid, COLOR_LIGHTRED, strings);
 	}
 	return 1;
}


CMD:uninvite(playerid, params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new targetid;
	if(sscanf(params,"u", targetid)) return SendClientMessage(playerid, COLOR_SYN, "Synthax: /auninvite <playerid/PartOfName>");
	if (PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[playerid][pLeader] == 0) return SendClientMessage(playerid, COLOR_RED, "Nu sunteti autorizat sa folositi aceasta comanda");
	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, COLOR_RED, "Player Offline");
	if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Invalid playerid");
    if(PlayerInfo[targetid][pMember] != PlayerInfo[playerid][pLeader] && PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid,-1,"Playerul Nu face parte din factiunea ta!");
	if(playerid == targetid && PlayerInfo[playerid][pAdmin] == 0) return SendClientMessage(playerid,-1,"Ai incercat sa te dai afara singur din factiune, ai merita un LiderWarn pentru ca nu ai anuntat un admin");
    format(strings, sizeof(strings), "%s %d l-a dat afara din factiunea %d pe %s %d", PlayerName(playerid),playerid,PlayerInfo[playerid][pLeader],PlayerName(targetid),targetid);
    mysql_format(handle, query, 500,"INSERT INTO `factionlog` (`FactionID`,`Efector`,`Receptor`,`Actiunea`,`TimeStamps`) VALUES ('%d','%s','%s','%s','%s')",
	PlayerInfo[playerid][pLeader],PlayerName(playerid),PlayerName(targetid),strings,CurrentTimeStamps());
 	mysql_tquery(handle, query);
	format(strings, sizeof(strings), "*L-ai dat afara din factiune pe %s", PlayerName(targetid));
	SendClientMessage(playerid, COLOR_LIGHTRED, strings);
  	format(strings, sizeof(strings), "* Ai fost dat afara din Factiune de Liderul %s", PlayerName(playerid));
	SendClientMessage(targetid, COLOR_LIGHTRED, strings);
   	SendClientMessage(targetid, COLOR_LIGHTBLUE, "*Acum esti civil");
    PlayerInfo[targetid][pLeader] = 0;
	Update(targetid, pLeaderx);
	PlayerInfo[targetid][pMember] = 0;
	Update(targetid, pMember);
	PlayerInfo[targetid][pRank] = 0;
	Update(targetid, pRankx);
	PlayerInfo[targetid][pSkin] = 188;
	SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);
	Update(targetid, pSkinx);
	SetPlayerToTeamColor(targetid);
    SetPlayerInterior(targetid, 0);
	SetPlayerToTeamColor(targetid);
    SetPlayerVirtualWorld(targetid,0);
	SpawnPlayer(targetid);
	return 1;
}

CMD:fpk(playerid, params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new targetid;
	if(sscanf(params,"u", targetid)) return SendClientMessage(playerid, COLOR_SYN, "Synthax: /auninvite <playerid/PartOfName>");
	if (PlayerInfo[playerid][pAdmin] < 5 ) return SendClientMessage(playerid, COLOR_RED, "Nu sunteti autorizat sa folositi aceasta comanda");
	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, COLOR_RED, "Player Offline");
	if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Invalid playerid");
    if(PlayerInfo[targetid][pMember] != PlayerInfo[playerid][pLeader] && PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid,-1,"Playerul Nu face parte din factiunea ta!");
	format(strings, sizeof(strings), "ADMIN %s %d l-a dat afara din factiunea %d pe %s %d FPK", PlayerName(playerid),playerid,PlayerInfo[playerid][pLeader],PlayerName(targetid),targetid);
    mysql_format(handle, query, 500,"INSERT INTO `factionlog` (`FactionID`,`Efector`,`Receptor`,`Actiunea`,`TimeStamps`) VALUES ('%d','%s','%s','%s','%s')",
	PlayerInfo[playerid][pLeader],PlayerName(playerid),PlayerName(targetid),strings,CurrentTimeStamps());
 	mysql_tquery(handle, query);
	format(strings, sizeof(strings), "*L-ai dat afara din factiune pe %s", PlayerName(targetid));
	SendClientMessage(playerid, COLOR_LIGHTRED, strings);
  	format(strings, sizeof(strings), "* Ai fost dat afara din Factiune de ADMIN %s", PlayerName(playerid));
	SendClientMessage(targetid, COLOR_LIGHTRED, strings);
   	SendClientMessage(targetid, COLOR_LIGHTBLUE, "*Acum esti civil");
    PlayerInfo[targetid][pLeader] = 0;
	Update(targetid, pLeaderx);
	PlayerInfo[targetid][pMember] = 0;
	Update(targetid, pMember);
	PlayerInfo[targetid][pRank] = 0;
	Update(targetid, pRankx);
	PlayerInfo[targetid][pSkin] = 188;
	SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);
	Update(targetid, pSkinx);
	SetPlayerToTeamColor(targetid);
    SetPlayerInterior(targetid, 0);
	SetPlayerToTeamColor(targetid);
    SetPlayerVirtualWorld(targetid,0);
	SpawnPlayer(targetid);
	PlayerInfo[targetid][pVariabila]=0;
	Update(targetid,pVariabilax);
	return 1;
}

CMD:offfpk(playerid, params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new message[128];
	if(sscanf(params,"s[128]",message)) return SendClientMessage(playerid, COLOR_SYN, "Synthax: /auninvite <playerid/PartOfName>");
	if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_RED, "Nu sunteti autorizat sa folositi aceasta comanda");
    mysql_format(handle, query, sizeof(query), "SELECT * FROM `players` WHERE `Member` > 0 AND `username`='%s'",message);
	new Cache:result = mysql_query(handle,query);
	mysql_query(handle,query);
	if(cache_num_rows() > 0)
	{
	    format(strings, sizeof(strings), "%s %d l-a dat afara din factiunea %d pe %s FPKOFF", PlayerName(playerid),playerid,0,message);
    	mysql_format(handle, query, 500,"INSERT INTO `factionlog` (`FactionID`,`Efector`,`Receptor`,`Actiunea`,`TimeStamps`) VALUES ('%d','%s','%s','%s','%s')",
		0,PlayerName(playerid),message,strings,CurrentTimeStamps());
 		format(strings,sizeof(strings),"UPDATE `players` SET `Skin`= 188  WHERE `Member` > 0 AND `username`='%s'",message);
    	mysql_tquery(handle,strings);
    	format(strings,sizeof(strings),"UPDATE `players` SET `Rank`= 0  WHERE `Member`  > 0 AND `username`='%s'", message);
    	mysql_tquery(handle,strings);
		format(strings,sizeof(strings),"UPDATE `players` SET `Leader`= 0  WHERE `Member`  > 0 AND `username`='%s'", message);
    	mysql_tquery(handle,strings);
		format(strings,sizeof(strings),"UPDATE `players` SET `Variabila`= 0  WHERE `Member`  > 0 AND `username`='%s'", message);
    	mysql_tquery(handle,strings);
    	format(strings,sizeof(strings),"UPDATE `players` SET `Member`= 0  WHERE `Member`  > 0 AND `username`='%s'", message);
    	mysql_tquery(handle,strings);
        cache_delete(result);
        format(strings, sizeof(strings), "*L-ai dat afara din factiune pe %s.FPK OFFLINE", message);
		SendClientMessage(playerid, COLOR_LIGHTRED, strings);
 	}
 	return 1;
}


CMD:makeleader(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    new factionid,targetid;
	if(sscanf(params,"ui", targetid, factionid)) return SendClientMessage(playerid, 0xFFFFFFF,"usage: /makeleader [PlayerID] [Ammount]");
	if(factionid < 0 && factionid > 17) return SendClientMessage(playerid, COLOR_RED,"Intre 0 si 17");
	if (PlayerInfo[playerid][pAdmin] < 5 && !IsPlayerAdmin(playerid)) return SendClientMessage(playerid, COLOR_RED,"Nu esti admin");
 	if(targetid == INVALID_PLAYER_ID)return SendClientMessage(playerid, COLOR_RED,"Player offline");
 	if(gLogged[targetid] == 0) return SendClientMessage(playerid, COLOR_RED,"Player nelogat");
	PlayerInfo[targetid][pLeader] = factionid;
	Update(targetid, pLeaderx);
	PlayerInfo[targetid][pMember] = factionid;
	Update(targetid,pMemberx);
    format(strings, sizeof(strings), "%s %d l-a facut pe %s %d Lider la Factiunea %d ", PlayerName(playerid),playerid,PlayerName(targetid),targetid,factionid);
    mysql_format(handle, query, 500,"INSERT INTO `factionlog` (`FactionID`,`Efector`,`Receptor`,`Actiunea`,`TimeStamps`) VALUES ('%d','%s','%s','%s','%s')",
	PlayerInfo[playerid][pLeader],PlayerName(playerid),PlayerName(targetid),strings,CurrentTimeStamps());
 	mysql_tquery(handle, query);
	format(strings, sizeof(strings), "   Ai fost promovat la rangul de Lider de catre administratorul %s", PlayerName(playerid));
	SendClientMessage(targetid, COLOR_LIGHTBLUE, strings);
	format(strings, sizeof(strings), "   %s este acum liderul factiunii cu numarul %d.", PlayerName(targetid),factionid);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
    format(strings, sizeof(strings), "%s l-a facut pe %s Lider la Factionuea %d",PlayerName(playerid), PlayerName(targetid), factionid,CurrentTimeStamps());
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);

	if(factionid == 0) {PlayerInfo[targetid][pSkin] = 188;Update(targetid, pSkinx);PlayerInfo[targetid][pRank] = 0;Update(targetid, pRankx);SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);return 1;}
	if(factionid == 1) {PlayerInfo[targetid][pSkin] = 283;Update(targetid, pSkinx);PlayerInfo[targetid][pRank] = 9;Update(targetid, pRankx);SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);return 1;}
	if(factionid == 2) {PlayerInfo[targetid][pSkin] = 165;Update(targetid, pSkinx);PlayerInfo[targetid][pRank] = 9;Update(targetid, pRankx);SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);return 1;}
	if(factionid == 3) {PlayerInfo[targetid][pSkin] = 287;Update(targetid, pSkinx);PlayerInfo[targetid][pRank] = 9;Update(targetid, pRankx);SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);return 1;}
	if(factionid == 4) {PlayerInfo[targetid][pSkin] = 17; Update(targetid, pSkinx);PlayerInfo[targetid][pRank] = 9;Update(targetid, pRankx);SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);return 1;}
	if(factionid == 5) {PlayerInfo[targetid][pSkin] = 249;Update(targetid, pSkinx);PlayerInfo[targetid][pRank] = 9;Update(targetid, pRankx);SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);return 1; }
	if(factionid == 6) {PlayerInfo[targetid][pSkin] = 294;Update(targetid, pSkinx);PlayerInfo[targetid][pRank] = 9;Update(targetid, pRankx);SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);return 1;}
	if(factionid == 7) {PlayerInfo[targetid][pSkin] = 147;Update(targetid, pSkinx);PlayerInfo[targetid][pRank] = 9;Update(targetid, pRankx);SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);return 1;}
	if(factionid == 8) {PlayerInfo[targetid][pSkin] = 20; Update(targetid, pSkinx);PlayerInfo[targetid][pRank] = 9;Update(targetid, pRankx);SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);return 1;}
	if(factionid == 9) {PlayerInfo[targetid][pSkin] = 227;Update(targetid, pSkinx);PlayerInfo[targetid][pRank] = 9;Update(targetid, pRankx);SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);return 1;}
	if(factionid == 10){PlayerInfo[targetid][pSkin] = 61; Update(targetid, pSkinx);PlayerInfo[targetid][pRank] = 9;Update(targetid, pRankx);SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);return 1;}
	if(factionid == 11){PlayerInfo[targetid][pSkin] = 287;Update(targetid, pSkinx);PlayerInfo[targetid][pRank] = 9;Update(targetid, pRankx);SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);return 1;}
	if(factionid == 12){PlayerInfo[targetid][pSkin] = 295;Update(targetid, pSkinx);PlayerInfo[targetid][pRank] = 9;Update(targetid, pRankx);SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);return 1;}
	if(factionid == 13){PlayerInfo[targetid][pSkin] = 113;Update(targetid, pSkinx);PlayerInfo[targetid][pRank] = 9;Update(targetid, pRankx);SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);return 1;}
	if(factionid == 14){PlayerInfo[targetid][pSkin] = 296;Update(targetid, pSkinx);PlayerInfo[targetid][pRank] = 9;Update(targetid, pRankx);SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);return 1;}
	if(factionid == 15){PlayerInfo[targetid][pSkin] = 270;Update(targetid, pSkinx);PlayerInfo[targetid][pRank]= 9;Update(targetid, pRankx);SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);return 1;}
	if(factionid == 16){PlayerInfo[targetid][pSkin] = 228;Update(targetid, pSkinx);PlayerInfo[targetid][pRank] = 9;Update(targetid, pRankx);SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);return 1;}
	if(factionid == 17){PlayerInfo[targetid][pSkin] = 166;Update(targetid, pSkinx);PlayerInfo[targetid][pRank] = 9;Update(targetid, pRankx);SetPlayerSkin(targetid, PlayerInfo[targetid][pSkin]);return 1;}
	SetplayerRank(targetid);
	SetPlayerToTeamColor(targetid);
	PlayerInfo[pVariabilax][pVariabila]=0;
	Update(targetid,pVariabilax);
	return 1;
}

CMD:lider(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pLeader] == 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Nu esti lider!");
    PlayerInfo[playerid][pRank] = 9;
	Update(playerid, pRankx);
	SetplayerRank(playerid);
	SendClientMessage(playerid,-1,"Ai rankul de lider");
	return 1;
}

CMD:giverank(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new level,playa;
	if(sscanf(params, "ud",playa, level)) return	SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /giverank [playerid/numejucator] [Number(1-6)]");
	if(level > 7 || level < 0) return	SendClientMessage(playerid, COLOR_GREY, "   Rangul trebuie sa fie cuprins intre 0 si 7! Rank 9 /Lider(doar liderii) si Rang 8 pentru /makecoleader");
	if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, COLOR_RED,"Player Deconectat");
    if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED,"Invalid PlayerId");
	if(gLogged[playerid] != 1) return SendClientMessage(playerid, COLOR_RED,"Player nu este logat");
	if (PlayerInfo[playerid][pLeader] == 0)  return SendClientMessage(playerid, COLOR_RED,"Nu esti Lider");
    if(PlayerInfo[playerid][pLeader] != PlayerInfo[playa][pMember]) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Nu poti da rank unui jucator din alta factiune!");
	format(strings, sizeof(strings), "%s %d la crescut in rank pe %s %d de la %d in %d", PlayerName(playerid),playerid,PlayerName(playa),playa,PlayerInfo[playa][pRank],level);
    mysql_format(handle, query, 500,"INSERT INTO `factionlog` (`FactionID`,`Efector`,`Receptor`,`Actiunea`,`TimeStamps`) VALUES ('%d','%s','%s','%s','%s')",
	PlayerInfo[playerid][pLeader],PlayerName(playerid),PlayerName(playa),strings,CurrentTimeStamps());
 	mysql_tquery(handle, query);
	PlayerInfo[playa][pRank] = level;
	format(strings, sizeof(strings), "%s ti-a schimbat rangul in cadrul factiunii in %d.", PlayerName(playerid),level);
	SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
	format(strings, sizeof(strings), "I-ai schimbat rangul lui %s in %d.", PlayerName(playa),level);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
	Update(playa, pRankx);
	SetplayerRank(playa);
	return 1;
}

CMD:makecoleader(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new playa;
	if(sscanf(params, "ud",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /makecoleader [playerid/PartOfName]");
	if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, COLOR_RED,"Player Deconectat");
    if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED,"Invalid PlayerId");
	if(gLogged[playerid] != 1) return SendClientMessage(playerid, COLOR_RED,"Player nu este logat");
	if(PlayerInfo[playerid][pLeader] == 0)  return SendClientMessage(playerid, COLOR_RED,"Nu esti Lider");
    if(PlayerInfo[playerid][pLeader] != PlayerInfo[playa][pMember]) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Nu poti da rank unui jucator din alta factiune!");

	format(strings, sizeof(strings), "%s %d la facut CoLeader pe %s %d de la %d", PlayerName(playerid),playerid,PlayerName(playa),playa,PlayerInfo[playa][pRank]);
    mysql_format(handle, query, 500,"INSERT INTO `factionlog` (`FactionID`,`Efector`,`Receptor`,`Actiunea`,`TimeStamps`) VALUES ('%d','%s','%s','%s','%s')",
	PlayerInfo[playerid][pLeader],PlayerName(playerid),PlayerName(playa),strings,CurrentTimeStamps());
 	mysql_tquery(handle, query);
	format(strings, sizeof(strings), " Ai fost promovat la rank de Coleader de Liderul %s", PlayerName(playerid));
	SendClientMessage(playa, COLOR_WHITE, strings);
 	PlayerInfo[playa][pRank] = 8;
	Update(playa, pRankx);
	SetplayerRank(playa);
	SendClientMessage(playerid, COLOR_GRAD1, " Promovare cu succes la rank de Co-Leader");
	if (PlayerInfo[playerid][pLeader] == 1)
	{
		if(PlayerInfo[playa][pSex] == 1)
		PlayerInfo[playa][pSkin] = 288;
		else
		PlayerInfo[playa][pSkin] = 309;
	}
 	else if (PlayerInfo[playerid][pLeader] == 2)  //------------------next comanda
	{
	   	if(PlayerInfo[playa][pSex] == 1)
 		PlayerInfo[playa][pSkin] = 72;
		else
		PlayerInfo[playa][pSkin] = 11;
	}
	else if (PlayerInfo[playerid][pLeader] == 3)  //------------------next comanda
	{
		if(PlayerInfo[playa][pSex] == 1)
		PlayerInfo[playa][pSkin] = 72;
		else
		PlayerInfo[playa][pSkin] = 309;
	}
	else if (PlayerInfo[playerid][pLeader] == 5)  //------------------next comanda
	{
		if(PlayerInfo[playa][pSex] == 1)
		PlayerInfo[playa][pSkin] = 249;
		else
		PlayerInfo[playa][pSkin] = 12;
	}
	else if (PlayerInfo[playerid][pLeader] == 6)  //------------------next comanda
	{
		if(PlayerInfo[playa][pSex] == 1)
		PlayerInfo[playa][pSkin] = 294;
		else
		PlayerInfo[playa][pSkin] = 263;
	}
   	else if (PlayerInfo[playerid][pLeader] == 8)  //------------------next comanda
 	{
		if(PlayerInfo[playa][pSex] == 1)
		PlayerInfo[playa][pSkin] = 20;
		else
		PlayerInfo[playa][pSkin] = 30;
	}
	else if (PlayerInfo[playerid][pLeader] == 9)  //------------------next comanda
	{
		if(PlayerInfo[playa][pSex] == 1)
		PlayerInfo[playa][pSkin] = 227;
		else
		PlayerInfo[playa][pSkin] = 225;
	}
	else if (PlayerInfo[playerid][pLeader] == 10)  //------------------next comanda
	{
		if(PlayerInfo[playa][pSex] == 1)
		PlayerInfo[playa][pSkin] = 61;
		else
		PlayerInfo[playa][pSkin] = 93;
	}
	else if (PlayerInfo[playerid][pLeader] == 11)  //------------------next comanda
	{
		if(PlayerInfo[playa][pSex] == 1)
		PlayerInfo[playa][pSkin] = 287;
		else
		PlayerInfo[playa][pSkin] = 12;
	}
	else if (PlayerInfo[playerid][pLeader] == 13)  //------------------next comanda
	{
		if(PlayerInfo[playa][pSex] == 1)
		PlayerInfo[playa][pSkin] = 113;
		else
		PlayerInfo[playa][pSkin] = 211;
	}
	else if (PlayerInfo[playerid][pLeader] == 14)  //------------------next comanda
	{
		if(PlayerInfo[playa][pSex] == 1)
		PlayerInfo[playa][pSkin] = 296;
		else
		PlayerInfo[playa][pSkin] = 201;
	}
	else if (PlayerInfo[playerid][pLeader] == 15)  //------------------next comanda
 	{
		if(PlayerInfo[playa][pSex] == 1)
		PlayerInfo[playa][pSkin] = 270;
		else
		PlayerInfo[playa][pSkin] = 219;
	}
	else if (PlayerInfo[playerid][pLeader] == 16)  //------------------next comanda
	{
		if(PlayerInfo[playa][pSex] == 1)
		PlayerInfo[playa][pSkin] = 228;
		else
		PlayerInfo[playa][pSkin] = 211;
	}
	else if (PlayerInfo[playerid][pLeader] == 17)  //------------------next comanda
	{
		if(PlayerInfo[playa][pSex] == 1)
		PlayerInfo[playa][pSkin] = 166;
		else
		PlayerInfo[playa][pSkin] = 169;
	}
	SetPlayerSkin(playa, PlayerInfo[playa][pSkin]);
	Update(playa, pSkinx);
	return 1;
}


CMD:tognews(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pPremiumAccount] == 0) return SendClientMessage(playerid,COLOR_BLUE, "Doar Contul vip poate face asta");
	if (!gNews[playerid])
	{
		gNews[playerid] = 1;
		SendClientMessage(playerid, COLOR_GRAD2, "   Ai dezactivat chat-ul NEWS !");
	}
	else if (gNews[playerid])
	{
		gNews[playerid] = 0;
		SendClientMessage(playerid, COLOR_GRAD2, "   Ai activat chat-ul NEWS !");
	}
 	return 1;
}

CMD:leaderchat(playerid,params[])
{
	if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
	new result[132];
	if(sscanf(params, "s[132]", result)) return	SendClientMessage(playerid, COLOR_GRAD2, "{55D4FF}Folosire:{B4B4B4} (/lc)leaderchat [text]");
 	if(PlayerInfo[playerid][pLeader] == 0 && PlayerInfo[playerid][pAdmin] == 0) return SendClientMessage(playerid, COLOR_RED, "Nu esti lider!");
    if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(result) || FindIP(result))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe lc: %s",PlayerName(playerid),playerid, result);
	    AdminsBroadCast(COLOR_RED,strings,1);
	    HackLog(strings);
	    return 1;
	}
	if (PlayerInfo[playerid][pLeader] >= 1)
	format(strings, sizeof(strings), "{1580EA}*(LC) Lider - %s[%d]:{a9c4e4} %s", PlayerName(playerid), playerid , result);
	if (PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] < 8)
	format(strings, sizeof(strings), "{1580EA}*(LC) Admin - %s[%d]:{a9c4e4} %s",  PlayerName(playerid), playerid , result);
	if (PlayerInfo[playerid][pAdmin] >= 8)
	format(strings, sizeof(strings), "{1580EA}*(LC) Owner - %s[%d]:{a9c4e4} %s", PlayerName(playerid), playerid , result);
	foreach(Player,i)
	{
		if((PlayerInfo[i][pLeader] > 0 && TogLC[i] == 1) ||  (PlayerInfo[i][pAdmin] > 0 && TogLC[i] == 1))
 			SendClientMessage(i, 0xC0C0C0FF, strings);
	}
	return 1;
}
CMD:n(playerid,params[])
{
	if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
	new result[132];
	if(sscanf(params, "s[132]", result)) return	SendClientMessage(playerid, COLOR_WHITE, "SCRIE:{B4B4B4} (/n)ewbie [text]");
   	if(pNewbTimer[playerid]> 0 && PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_GREY, "** Asteapta 30 de secunde pentru a trimite urmatorul mesaj! {55D4FF}(/n)ewbie");
    if(PlayerInfo[playerid][pConnectTime] < 3600 && PlayerInfo[playerid][pAdmin] < 1  && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_GREY, "** Ai nevoie de 1 ora pentru a scrie pe /n foloseste {55D4FF}/sos");
    if(PlayerInfo[playerid][pLevel] > 7 && PlayerInfo[playerid][pAdmin] < 1  && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_GREY, "** Ai nevoie de maxim level 7");
 	if ((closen) && PlayerInfo[playerid][pAdmin] < 1  && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_GRAD2, "   Newbie chat este este momentan inchis de catre un Administrator !");
    if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(result) || FindIP(result))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe sos: %s",PlayerName(playerid),playerid, result);
	    AdminsBroadCast(COLOR_RED,strings,1);
	    HackLog(strings);
	    return 1;
	}
    pNewbTimer[playerid] = 30;
 	if(PlayerInfo[playerid][pHelper] == 1)
	   	format(strings, sizeof(strings), "[NEWBIE]: Trial Helper %s(%d): %s",PlayerName(playerid),playerid, result);
 	else if(PlayerInfo[playerid][pHelper] == 2)
 		format(strings, sizeof(strings), "[NEWBIE]: Helper %s(%d): %s",PlayerName(playerid),playerid, result);
  	else if(PlayerInfo[playerid][pHelper] == 3)
		format(strings, sizeof(strings), "[NEWBIE]: Lead Helper %s(%d): %s",PlayerName(playerid),playerid, result);
	else if(PlayerInfo[playerid][pAdmin] == 8)
 		format(strings, sizeof(strings), "[NEWBIE]: Server Owner %s(%d): %s",PlayerName(playerid),playerid, result);
    else if(PlayerInfo[playerid][pAdmin] == 7)
    	format(strings, sizeof(strings), "[NEWBIE]: Server Designer %s(%d): %s",PlayerName(playerid),playerid, result);
    else if(PlayerInfo[playerid][pAdmin] == 6)
    	format(strings, sizeof(strings), "[NEWBIE]: Server Developer %s(%d): %s",PlayerName(playerid),playerid, result);
    else if(PlayerInfo[playerid][pAdmin] == 5)
	 	format(strings, sizeof(strings), "[NEWBIE]: Main Administrator %s(%d): %s",PlayerName(playerid),playerid, result);
    else if(PlayerInfo[playerid][pAdmin] == 4)
    	format(strings, sizeof(strings), "[NEWBIE]: Senior Administrator %s(%d): %s",PlayerName(playerid),playerid, result);
    else if(PlayerInfo[playerid][pAdmin] == 3)
		format(strings, sizeof(strings), "[NEWBIE]: Administrator %s(%d): %s",PlayerName(playerid),playerid, result);
 	else if(PlayerInfo[playerid][pAdmin] == 2)
	  	format(strings, sizeof(strings), "[NEWBIE]: Global Moderator %s(%d): %s",PlayerName(playerid),playerid, result);
	else if(PlayerInfo[playerid][pAdmin] == 1)
	    format(strings, sizeof(strings), "[NEWBIE]: Moderator %s(%d): %s",PlayerName(playerid),playerid, result);
	else
		format(strings, sizeof(strings), "[NEWBIE]: Newbie %s(%d): %s",PlayerName(playerid),playerid, result);
	foreach(Player,i)
	{
		if(gNewb[i] == 1 || PlayerInfo[i][pAdmin] > 0 || PlayerInfo[i][pHelper] > 0)
  		SendClientMessage(i, 0x62B382AA, strings);
	}
	return 1;
}

CMD:nooc(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] >= 6 && (!noooc))
	{
		noooc = 1;
		BroadCast(COLOR_GRAD2, "   OOC chat a fost inchis de un admin !");
	}
	else if (PlayerInfo[playerid][pAdmin] >= 6 && (noooc))
	{
		noooc = 0;
		BroadCast(COLOR_GRAD2, "   OOC chat a fost deschis de un admin !");
	}
	else return SendClientMessage(playerid, COLOR_GRAD1, "   Nu iti este permis sa folosesti aceasta comanda !");
	return 1;
}
CMD:hostname(playerid,params[])
{
	new result[132];
	if(sscanf(params, "s[132]", result)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /o [ooc chat]");
	if (PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_GRAD2, " Nu esti autorizat!");

    format(strings, sizeof(strings), "hostname %s",result);
	SendRconCommand(strings);
    format(strings, sizeof(strings), "%s a schimbat hostname in: %s",PlayerName(playerid),result);
    AdminsBroadCast(COLOR_RED,strings,1);
    return 1;
}

CMD:o(playerid,params[])
{
	if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
	new result[132];
	if(sscanf(params, "s[132]", result)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /o [ooc chat]");
	if ((noooc) && PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_GRAD2, "   Canalul OOC este dezactivat de un Admin !");
    if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(result) || FindIP(result))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe o: %s",PlayerName(playerid),playerid, result);
	    AdminsBroadCast(COLOR_RED,strings,1);
	    HackLog(strings);
	    return 1;
	}
	if(PlayerInfo[playerid][pAdmin] >= 1)
    format(strings, sizeof(strings), "OOC [[Admin %s: %s]]", PlayerName(playerid), result);
 	else if(PlayerInfo[playerid][pAdmin] >= 7)
    format(strings, sizeof(strings), "OOC [[Owner %s: %s]]", PlayerName(playerid), result);
    else if(PlayerInfo[playerid][pHelper] >= 1)
    format(strings, sizeof(strings), "OOC [[Helper %s: %s]]", PlayerName(playerid), result);
    else
    format(strings, sizeof(strings), "OOC [[Player %s: %s]]", PlayerName(playerid), result);
    foreach(Player,i)
	{
		if(gOoc[i] == 1 || PlayerInfo[i][pAdmin] > 0 || PlayerInfo[i][pHelper] > 0)
  		SendClientMessage(i, COLOR_LIGHTRED,strings);
	}
	return 1;
}

CMD:try(playerid,params[])
{
	if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
	new result[132];
	if(sscanf(params, "s[132]", result)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /try [action]");
    if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(result) || FindIP(result))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe try: %s",PlayerName(playerid),playerid, result);
	    AdminsBroadCast(COLOR_RED,strings,1);
	    HackLog(strings);
	    return 1;
	}
	new randa = random(2)+1;
	if(randa == 1)
	format(strings, sizeof(strings), "*** %s incearca %s si reuseste", PlayerName(playerid), result);
	else
	format(strings, sizeof(strings), "*** %s incearca %s, si nu reuseste", PlayerName(playerid), result);
	ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return 1;
}
//----------------------------------[Emote]-----------------------------------------------
CMD:me(playerid,params[])
{
	if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
	new result[132];
	if(sscanf(params, "s[132]", result)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /me [action]");
    if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(result) || FindIP(result))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe me: %s",PlayerName(playerid),playerid, result);
	    AdminsBroadCast(COLOR_RED,strings,1);
	    HackLog(strings);
	    return 1;
	}
	format(strings, sizeof(strings), "* %s %s", PlayerName(playerid), result);
	ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return 1;
}
CMD:psay(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, TEAM_CYAN_COLOR, "Acces interzis!");
	new result[132],playa;
	if(sscanf(params, "us[132]",playa, result)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /psay [playerid] [text]");
    format(strings, sizeof(strings), "{FF8040}%s spune:{00FFFF} %s", PlayerName(playa), result);
	ProxDetector(20.0, playerid, strings,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	return 1;
}

//----------------------------------[Local]-----------------------------------------------
CMD:l(playerid,params[])
{
	if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
	new result[132];
	if(sscanf(params, "s[132]", result)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} (/l)ocal [local chat]");
 	if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(result) || FindIP(result))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe l: %s",PlayerName(playerid),playerid, result);
	    AdminsBroadCast(COLOR_RED,strings,1);
	    HackLog(strings);
	    return 1;
	}
    format(strings, sizeof(strings), "{9ECC33}%s spune: %s", PlayerName(playerid), result);
	ProxDetector(20.0, playerid, strings,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
 	return 1;
}

CMD:b(playerid,params[])
{
	if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
	new result[132];
	if(sscanf(params, "s[132]", result)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /b [local ooc chat]");
    if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(result) || FindIP(result))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe b: %s",PlayerName(playerid),playerid, result);
	    AdminsBroadCast(COLOR_RED,strings,1);
	    HackLog(strings);
	    return 1;
	}
	format(strings, sizeof(strings), "{5E8DA2}(( %s Says: %s ))",PlayerName(playerid), result);
	ProxDetector(20.0, playerid, strings,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	return 1;
}

CMD:c(playerid,params[])
{
	if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
	new result[132];
	if(sscanf(params, "s[132]", result)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /(c)lose [close chat text]");
    if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(result) || FindIP(result))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe c: %s",PlayerName(playerid),playerid, result);
	    AdminsBroadCast(COLOR_RED,strings,1);
	    HackLog(strings);
	    return 1;
	}
	format(strings, sizeof(strings), "{BBAF44}%s spune: %s", PlayerName(playerid), result);
	ProxDetector(10.0, playerid, strings,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	return 1;
}

CMD:low(playerid,params[])
{
	if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
	new result[132];
	if(sscanf(params, "s[132]", result)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /low [chat text]");
    if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(result) || FindIP(result))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe low: %s",PlayerName(playerid),playerid, result);
	    AdminsBroadCast(COLOR_RED,strings,1);
	    HackLog(strings);
	    return 1;
	}
 	format(strings, sizeof(strings), "{04FB35}%s spune: [INCET] %s", PlayerName(playerid), result);
	ProxDetector(3.0, playerid, strings,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	return 1;
}

CMD:pilot(playerid,params[])
{
	if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
	new result[132];
	if(sscanf(params, "s[132]", result)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /pilot [chat]");
    if(!IsPlayerInPlane(playerid) && !IsPlayerInHelicopter(playerid)) return SCM(playerid,-1,"Nu esti intr-un avion/elicopter");
    if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(result) || FindIP(result))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe pilot: %s",PlayerName(playerid),playerid, result);
	    AdminsBroadCast(COLOR_RED,strings,1);
	    HackLog(strings);
	    SCM(playerid,-1,strings);
	    return 1;
	}
	foreach(Player,i)
	{
		if(IsPlayerInPlane(i) || IsPlayerInHelicopter(i))
		{
        	format(strings, sizeof(strings),"[Pilot] %s: %s, over",PlayerName(playerid), (result));
        	SendClientMessage(i, COLOR_GREEN, strings);
		}
	}
	return 1;
}

IsPlayerInHelicopter(playerid) //By Sacky
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		new vehicleclass = GetVehicleModel(vehicleid);
		switch(vehicleclass)
		{
			case 417:return 1;
			case 425:return 1;
			case 447:return 1;
			case 465:return 1;
			case 469:return 1;
			case 487:return 1;
			case 488:return 1;
			case 497:return 1;
			case 501:return 1;
			case 548:return 1;
			case 563:return 1;
		}
	}
	return 0;
}



IsPlayerInPlane(playerid) //By Sacky
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		new vehicleclass = GetVehicleModel(vehicleid);
		switch(vehicleclass)
		{
			case 460:return 1;
			case 464:return 1;
			case 476:return 1;
			case 511:return 1;
			case 512:return 1;
			case 513:return 1;
			case 519:return 1;
			case 520:return 1;
			case 539:return 1;
			case 553:return 1;
			case 577:return 1;
			case 592:return 1;
			case 593:return 1;
		}
	}
	return 0;
}

CMD:s(playerid,params[])
{
	if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
	new result[132];
	if(sscanf(params, "s[132]", result)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} (/s)hout [local chat]");
    if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(result) || FindIP(result))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe s: %s",PlayerName(playerid),playerid, result);
	    AdminsBroadCast(COLOR_RED,strings,1);
	    HackLog(strings);
	    SCM(playerid,-1,strings);
	    return 1;
	}
	format(strings, sizeof(strings), "{AE5164}%s striga: %s !!", PlayerName(playerid), result);
	ProxDetector(40.0, playerid, strings,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	return 1;
}

CMD:openjail(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pMember] != 3 && PlayerInfo[playerid][pLeader] != 3) return SendClientMessage(playerid,COLOR_RED,"Nu esti ng");
	if(!IsPlayerInRangeOfPoint(playerid, 15.0,  199.66290, 1729.86401, 4.11164) &&  !IsPlayerInRangeOfPoint(playerid, 15.0, 210.95593, 1730.09216, 14.34459)) return SendClientMessage(playerid,COLOR_RED,"Nu esti langa poarta");
    if(IsPlayerInRangeOfPoint(playerid, 15.0,  199.66290, 1729.86401, 4.11164))
	MoveDynamicObject(poartajail2,  199.66290, 1729.86401, 4.11164, 5);
	else if(IsPlayerInRangeOfPoint(playerid, 15.0, 210.95593, 1730.09216, 14.34459))
	MoveDynamicObject(poartajail1,  210.95593, 1730.09216, 14.34459, 5);
 	SetTimerEx("Actiunea", 4000, 0, "i", playerid); //5 secunde , nu se repeta, valoarea este integer pt playerid
	return 1;
}
CMD:od(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti politist");

	else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1563.8341, -1680.0018, 16.3347))
 	{
		MoveDynamicObject(pdgate16,1564.5737, -1679.9572, 11.8892, 4);
		SetTimerEx("Actiunea", 5000, 0, "i", playerid);
	}
	else return SendClientMessage(playerid,COLOR_RED,"Nu esti langa poarta!");
 	return 1;
}

CMD:do(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if (IsPlayerInRangeOfPoint(playerid, 5,1563.9534, -1680.7114, 16.3089) || IsPlayerInRangeOfPoint(playerid, 5,1563.9534, -1684.59, 14.02))
	{
	    if(!IsACop(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti politist");
 	    if(IsPlayerInRangeOfPoint(playerid, 4,1563.9534, -1680.7114, 16.3089))
		MoveDynamicObject(pdgate133, 1562.76, -1690.9552, 15.0872, 4);
		else if (IsPlayerInRangeOfPoint(playerid, 4,1563.9534, -1684.59, 14.02))
		MoveDynamicObject(pdgate133, 1562.2676, -1690.9552, 15.0872, 4);
		SetTimer("Actiunea", 2500, 0);
		SendClientMessage(playerid, COLOR_BLUE,"Usa se va inchide in 3 secunde.");
	}
	else
	{
 		if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
		new message[132];
		if(sscanf(params, "s[132]", message)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /do [action]");
   		if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(message) || FindIP(message) )
		{
		    format(strings, sizeof(strings), "%s[%d] a facut reclama pe /do: %s.",PlayerName(playerid),playerid, message);
		    AdminsBroadCast(COLOR_RED,strings,1);
		    HackLog(strings);
			return 1;
		}
		format(strings, sizeof(strings), "* %s (( %s ))", message, PlayerName(playerid));
		ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return 1;
}

CMD:equip(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti politist");
	if(OnDuty[playerid]==0) return SendClientMessage(playerid,COLOR_RED,"Nu esti la datorie");
    new strong[860];
	if(IsPlayerInRangeOfPoint(playerid, 2,  1571.0186,-1675.9940,12.3498))//SAPD Lockers
	{
		if(PlayerInfo[playerid][pMember] != 1 && PlayerInfo[playerid][pLeader] != 1)
		return SendClientMessage(playerid,COLOR_RED,"** Acest vestiar apartine S.A.P.D.");
 		strcat(strong,"{FFFFFF}Numar\t{FFFFFF}Echipament\t{FFFFFF}Rank\n");
  		strcat(strong,"{FFFFFF}1\tCadet Patrol\t1\n");
		strcat(strong,"{FFFFFF}2\tOfficer Patrol\t2\n");
		strcat(strong,"{FFFFFF}3\tDetective Patrol\t3\n");
		strcat(strong,"{FFFFFF}4\tMotorcyclist Patrol\t2\n");
		strcat(strong,"{FFFFFF}5\tStandard SWAT\t3\n");
		strcat(strong,"{FFFFFF}6\tMedium SWAT\t3\n");
		strcat(strong,"{FFFFFF}7\tHeavy SWAT\t3\n");
		strcat(strong,"{FFFFFF}8\tSharpshooter SWAT\t3\n");
		strcat(strong,"{FFFFFF}9\tArmour+Health\t2\n");
		strcat(strong,"{FFFFFF}10\tCeremonial Uniform\t4\n");
		strcat(strong,"{FFFFFF}11\tDefault\t1\n");
		strcat(strong,"{FFFFFF}12\tHigher Ranked\t6");
   		ShowPlayerDialog(playerid,50,DIALOG_STYLE_TABLIST_HEADERS,"Lista Echipamentelor L.S.P.D.",strong,"Select","Cancel");
  	}
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2592.3906,-1478.9690,-48.9141))//FBIpentagon
	{
		if(PlayerInfo[playerid][pMember] != 2 && PlayerInfo[playerid][pLeader] != 2)
		return SendClientMessage(playerid,COLOR_GREY,"** Acest vestiar apartine F.B.I.");
		strcat(strong,"{FFFFFF}Numar\t{FFFFFF}Echipament\t{FFFFFF}Rank\n");
		strcat(strong,"{FFFFFF}1\tCadet Equipment\t1\n");
		strcat(strong,"{FFFFFF}2\tAgent Equipment\t2\n");
		strcat(strong,"{FFFFFF}3\tWatching Equipment\t2\n");
		strcat(strong,"{FFFFFF}4\tSpy Equipment\t3\n");
		strcat(strong,"{FFFFFF}5\tStandard Tactical\t3\n");
		strcat(strong,"{FFFFFF}6\tMedium Tactical\t2\n");
		strcat(strong,"{FFFFFF}7\tHeavy Tactical\t4\n");
		strcat(strong,"{FFFFFF}8\tSharpshooter Tactical\t1\n");
		strcat(strong,"{FFFFFF}9\tArmour+Health\t2\n");
		strcat(strong,"{FFFFFF}10\tCeremonial Suit\t6\n");
		strcat(strong,"{FFFFFF}11\tDefault\t1\n");
		strcat(strong,"{FFFFFF}12\tHigher Ranked\t2");
   		ShowPlayerDialog(playerid,51,DIALOG_STYLE_TABLIST_HEADERS,"Lista Echipamentelor F.B.I.",strong,"Select","Cancel");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 6, 1524.3292,-1668.4550,801.085))//CIA pentagon
    {
		if(PlayerInfo[playerid][pMember] != 17 && PlayerInfo[playerid][pLeader] != 17)
		return SendClientMessage(playerid,COLOR_GREY,"** Acest vestiar apartine C.I.A.");

		strcat(strong,"{FFFFFF}Numar\t{FFFFFF}Echipament\t{FFFFFF}Rank\n");
		strcat(strong,"{FFFFFF}1\tCadet Equipment\t1\n");
		strcat(strong,"{FFFFFF}2\tAgent Equipment\t2\n");
		strcat(strong,"{FFFFFF}3\tWatching Equipment\t2\n");
		strcat(strong,"{FFFFFF}4\tSpy Equipment\t3\n");
		strcat(strong,"{FFFFFF}5\tStandard Tactical\t3\n");
		strcat(strong,"{FFFFFF}6\tMedium Tactical\t2\n");
		strcat(strong,"{FFFFFF}7\tHeavy Tactical\t4\n");
		strcat(strong,"{FFFFFF}8\tSharpshooter Tactical\t1\n");
		strcat(strong,"{FFFFFF}9\tArmour+Health\t2\n");
		strcat(strong,"{FFFFFF}10\tCeremonial Suit\t6\n");
		strcat(strong,"{FFFFFF}11\tDefault\t1\n");
		strcat(strong,"{FFFFFF}12\tHigher Ranked\t2");
   		ShowPlayerDialog(playerid,51,DIALOG_STYLE_TABLIST_HEADERS,"Lista Echipamentelor C.I.A.",strong,"Select","Cancel");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1275.9113,-33.8399,1492.9476))// navy seal san fierro
 	{
  		if(PlayerInfo[playerid][pMember] != 11 && PlayerInfo[playerid][pLeader] != 11)
		  return  SendClientMessage(playerid,COLOR_GREY,"** Acest vestiar apartine Navy-Seal");

		strcat(strong,"{FFFFFF}Numar\t{FFFFFF}Echipament\t{FFFFFF}Rank\n");
		strcat(strong,"{FFFFFF}1\tPrivate Equipment\t1\n");
		strcat(strong,"{FFFFFF}2\tSergeant Equipment\t2\n");
		strcat(strong,"{FFFFFF}3\tWatching Equipment\t2\n");
		strcat(strong,"{FFFFFF}4\tSpy Equipment\t3\n");
		strcat(strong,"{FFFFFF}5\tStandard Special Forces\t3\n");
		strcat(strong,"{FFFFFF}6\tMedium Special Forces\t2\n");
		strcat(strong,"{FFFFFF}7\tHeavy Special Forces\t3\n");
		strcat(strong,"{FFFFFF}8\tSniper Tactical\t1\n");
		strcat(strong,"{FFFFFF}9\tArmour+Health\t1\n");
		strcat(strong,"{FFFFFF}10\tCeremonial Suit\t3\n");
		strcat(strong,"{FFFFFF}11\tDefault\t6\n");
		strcat(strong,"{FFFFFF}12\tHigher Ranked\t1");
  		ShowPlayerDialog(playerid,52,DIALOG_STYLE_TABLIST_HEADERS,"Lista Echipamentelor Navy-Seal",strong,"Select","Cancel");
  	}
  	else if(IsPlayerInRangeOfPoint(playerid, 2, 256.0440,200.9768,1042.1980))//NG las venturas
   	{
    	if(PlayerInfo[playerid][pMember] != 3 && PlayerInfo[playerid][pLeader] != 3)
		return  SendClientMessage(playerid,COLOR_GREY,"** Acest vestiar apartine N.G.");

		strcat(strong,"{FFFFFF}Numar\t{FFFFFF}Echipament\t{FFFFFF}Rank\n");
		strcat(strong,"{FFFFFF}1\tPrivate Equipment\t1\n");
		strcat(strong,"{FFFFFF}2\tSergeant Equipment\t2\n");
		strcat(strong,"{FFFFFF}3\tWatching Equipment\t2\n");
		strcat(strong,"{FFFFFF}4\tSpy Equipment\t3\n");
		strcat(strong,"{FFFFFF}5\tStandard Special Forces\t3\n");
		strcat(strong,"{FFFFFF}6\tMedium Special Forces\t2\n");
		strcat(strong,"{FFFFFF}7\tHeavy Special Forces\t3\n");
		strcat(strong,"{FFFFFF}8\tSniper Tactical\t1\n");
		strcat(strong,"{FFFFFF}9\tArmour+Health\t1\n");
		strcat(strong,"{FFFFFF}10\tCeremonial Suit\t3\n");
		strcat(strong,"{FFFFFF}11\tDefault\t6\n");
		strcat(strong,"{FFFFFF}12\tHigher Ranked\t1");
  		ShowPlayerDialog(playerid,52,DIALOG_STYLE_TABLIST_HEADERS,"Lista Echipamentelor N.G.",strong,"Select","Cancel");
	}
	else return SendClientMessage(playerid,-1,"Nu esti la vestiar");
	return 1;
}

CMD:duty(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti politist");
 	if(!IsPlayerInRangeOfPoint(playerid, 3, 2592.3906,-1478.9690,-48.9141) && !IsPlayerInRangeOfPoint(playerid, 3, 1275.9113,-33.8399,1492.9476) &&
 	!IsPlayerInRangeOfPoint(playerid, 3, 233.4989,123.6518,1003.2188) && !IsPlayerInRangeOfPoint(playerid, 3, 256.0440,200.9768,1042.1980) &&
	!IsPlayerInRangeOfPoint(playerid, 2, 1571.0186,-1675.9940,12.3498) && !IsPlayerInRangeOfPoint(playerid, 3,  1524.3292,-1668.4550,801.085)) return SendClientMessage(playerid,COLOR_RED,"Nu esti la vestiar");
	if(OnDuty[playerid]==0)
	{
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			format(strings, sizeof(strings), "* Politist %s scoate un baston si o arma din dulap.", PlayerName(playerid));
   			SetPlayerColor(playerid,color_1);
	    	if(PlayerInfo[playerid][pPdSkin] != 0)
 	    	SetPlayerSkin(playerid, PlayerInfo[playerid][pPdSkin]);
		}
		else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
		{
			format(strings, sizeof(strings), "* Agent FBI %s scoate un baston si o arma din dulap", PlayerName(playerid));
			SetPlayerColor(playerid,color_2);
		}
		else if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
		{
			format(strings, sizeof(strings), "* Agent CIA %s scoate un baston si o arma din dulap", PlayerName(playerid));
			SetPlayerColor(playerid,color_17);
		}
		else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
		{
			format(strings, sizeof(strings), "* Soldat %s scoate un baston si o arma din dulap.", PlayerName(playerid));
	   		SetPlayerColor(playerid,color_3);
		}
		else if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
	    {
   			format(strings, sizeof(strings), "* Soldat %s scoate un baston si o arma din dulap.", PlayerName(playerid));
    		SetPlayerColor(playerid,color_11);
		}
		ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	 	ResetPlayerWeapons(playerid);
		ServerWeapon(playerid, 24, 24);
		ServerWeapon(playerid, 3, 1);
		SetPlayerArmour(playerid, 100);
		OnDuty[playerid] = 1;
		SetplayerRank(playerid);
		if(PlayerCuffs[playerid] < 4)
		PlayerCuffs[playerid]++;
  	}
	else if(OnDuty[playerid]==1)
	{
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			if(PlayerInfo[playerid][pPdSkin] == 310)
   			SetPlayerSkin(playerid, 250);
			else if(PlayerInfo[playerid][pPdSkin] == 302)
 			SetPlayerSkin(playerid, 305);
			else if(PlayerInfo[playerid][pPdSkin] == 311)
 			SetPlayerSkin(playerid, 60);
			else if(PlayerInfo[playerid][pPdSkin] == 300)
 			SetPlayerSkin(playerid, 304);
			format(strings, sizeof(strings), "* Politist %s pune un baston si o arma in dulap.", PlayerName(playerid));
		}
		else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
  			format(strings, sizeof(strings), "* Agent FBI %s pune un baston si o arma in dulap.", PlayerName(playerid));
  		else if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
			format(strings, sizeof(strings), "* Agent CIA %s pune un baston si o arma in dulap.", PlayerName(playerid));
  		else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
			format(strings, sizeof(strings), "* Militar %s pune un baston si o arma in dulap.", PlayerName(playerid));
		else if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
   			format(strings, sizeof(strings), "* Militar %s pune un baston si o arma in dulap.", PlayerName(playerid));

		ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	 	ResetPlayerWeapons(playerid);
		SetPlayerArmour(playerid, 0);
		ServerWeapon(playerid, 41, 500);
		OnDuty[playerid] = 0;
		SetplayerRank(playerid);
		SetPlayerColor(playerid,color_8);
		if(PlayerCuffs[playerid] > 0)
		PlayerCuffs[playerid]--;
	}
/*	else if(PlayerInfo[playerid][pJob] == 10|| PlayerInfo[playerid][pJob1] == 10)
 	{
		if(JobDuty[playerid] == 1)
		{
			SendClientMessage(playerid, COLOR_WHITE, "* Esti acum off-duty ca medic si nu vei mai primi apelurile 112.");
			JobDuty[playerid] = 0;
			Medics -= 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "* Esti acum on-duty ca medic si vei primi apelurile 112.");
			JobDuty[playerid] = 1;
			Medics += 1;
			GetPlayerName(playerid,sendername,sizeof(sendername));
   			format(string, sizeof(string), "Paramedic %s este acum on-duty, folositi /service medic.", sendername);
	    	OOCNews(COLOR_ALLDEPT,string);
  		}
  	}
	else if(PlayerInfo[playerid][pJob] == 7 || PlayerInfo[playerid][pJob1] == 7)
	{
 		if(JobDuty[playerid] == 1)
   		{
     		SendClientMessage(playerid, COLOR_WHITE, "* Esti acum off-duty ca mecanic si nu vei mai primi apeluri pentru reparatii.");
     		JobDuty[playerid] = 0;
     		Mechanics -= 1;
	    }
   		else
	  	{
    		SendClientMessage(playerid, COLOR_WHITE, "* Esti acum on-duty ca mecanic si vei primi apeluri pentru reparatii.");
	     	JobDuty[playerid] = 1;
       		Mechanics += 1;
	        GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string, sizeof(string), "Mecanic %s este acum on-duty, folositi /service mechanic.", sendername);
	    	OOCNews(0x2993EDAA,string);
		}
	}*/
 	return 1;
}

CMD:fold(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pScarf] < 1) return SendClientMessage(playerid,COLOR_RED,"Nu ai bandana");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /fold [playerid]");
    if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(!IsPlayerInVehicle(playa, GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,-1,"Playerul nu este in masina ta!");
	if(Folded[playa] > 0) return SendClientMessage(playerid,-1,"Playerul este legat deja");
    PlayerInfo[playerid][pScarf] --;
    Update(playerid,pScarfx);
	Folded[playa] = 1;
	format(strings, sizeof(strings), "*%s este legat la ochi de %s", PlayerName(playa),PlayerName(playerid));
	ProxDetector(10.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SendClientMessage(playerid,-1,"Playerul este legat la ochi, /unfold pentru a il dezlega!");
	TextDrawShowForPlayer(playa, BlindFold);
	return 1;
}
CMD:unfold(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /fold [playerid]");
    if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(!IsPlayerInVehicle(playa, GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,-1,"Playerul nu este in masina ta!");
	if(Folded[playa] < 1) return SendClientMessage(playerid,-1,"Playerul nu este legat la ochi");
	Folded[playa] = 0;
	PlayerInfo[playerid][pScarf] ++;
    Update(playerid,pScarfx);
	format(strings, sizeof(strings), "*%s este dezlegat la ochi de %s", PlayerName(playa),PlayerName(playerid));
	ProxDetector(10.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	TextDrawHideForPlayer(playa, BlindFold);
	return 1;
}
CMD:tie(playerid,params[])
{//pFunie
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pFunie] < 1) return SendClientMessage(playerid,COLOR_RED,"Nu ai Funie");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /tie [playerid]");
    if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(!IsPlayerInVehicle(playa, GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,-1,"Playerul nu este in masina ta!");
	if(Tied[playa] > 0) return SendClientMessage(playerid,-1,"Playerul este legat deja");
	Tied[playa] = 1;
    TogglePlayerControllable(playa,0); //unfreeze player
	PlayerInfo[playerid][pFunie] --;
    Update(playerid,pFuniex);
	format(strings, sizeof(strings), "*%s este legat de %s", PlayerName(playa),PlayerName(playerid));
	ProxDetector(10.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return 1;
}
CMD:untie(playerid,params[])
{//pFunie
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /untie [playerid]");
    if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(!IsPlayerInVehicle(playa, GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,-1,"Playerul nu este in masina ta!");
	if(Tied[playa] < 1) return SendClientMessage(playerid,-1,"Playerul nu este legat");
	Tied[playa] = 0;
	PlayerInfo[playerid][pFunie] ++;
    Update(playerid,pFuniex);
    TogglePlayerControllable(playa,1); //unfreeze player
	format(strings, sizeof(strings), "*%s este dezlegat de %s", PlayerName(playa),PlayerName(playerid));
	ProxDetector(10.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return 1;
}
CMD:decode(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
  	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti in masina");
	if(Decoding[playerid] == 1) return SendClientMessage(playerid,COLOR_RED,"Deja decodezi o masina");
    if(IsACop(playerid))	return SendClientMessage(playerid, COLOR_GREY,"* Politistii nu au voie!");
	if(PlayerInfo[playerid][pDecoder] == 0) return SendClientMessage(playerid, COLOR_GREY,"* Nu ai decodor /bm pentru a cumpara unul!");
	if(VehiclePass[GetPlayerVehicleID(playerid)] == 0) return SendClientMessage(playerid, COLOR_GREY,"* Nu poti decoda masina aceasta, /carcode 0!");
	ShowPlayerDialog(playerid, 20000, DIALOG_STYLE_LIST,"Decodor","1\tStart Decoding\n2\tExit The Car","Select","Cancel");
	return 1;
}

CMD:hair(playerid,params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 25, 411.625976, -21.433298, 1001.804687) || IsPlayerInRangeOfPoint(playerid, 25, 418.652984, -82.639793, 1001.804687) || IsPlayerInRangeOfPoint(playerid, 25, 412.021972,-52.649898,1001.898437))
	{
		new listitems[] = "Frizura Politist\nFrizura Afro\nFrizura Rockstar\nFrizura Afro2\nFrizura Clown\nFrizura Normala";
		ShowPlayerDialog(playerid,28,DIALOG_STYLE_LIST,"Frizuri",listitems,"Alege","Renunta");
	}
	else return SendClientMessage(playerid,-1,"Nu esti la frizerie!");
	return 1;
}
CMD:briefcase(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pServieta] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu ai servieta, poti cumpara de la un 24/7");
	if(PlayerInfo[playerid][pServieta] == 1)
  	{
   		PlayerInfo[playerid][pServieta] = 2;
     	format(strings, sizeof(strings), "* %s deschide servieta si ascunde armele in ea.", PlayerName(playerid));
		ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  		return 1;
	}
  	else if(PlayerInfo[playerid][pServieta] == 2)
  	{
  		PlayerInfo[playerid][pServieta] = 1;
    	format(strings, sizeof(strings), "* %s deschide servieta si scoate armele.", PlayerName(playerid));
		ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  		return 1;
  	}
  	Update(playerid,pServietax);
 	return 1;
}
CMD:fillcan(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pCanistra] == 0) return SendClientMessage(playerid,-1,"Nu aveti canistra");
    if(PlayerInfo[playerid][pFuel] >= 80) return SendClientMessage (playerid,-1,"Aveti canistra plina");
	if(IsPlayerInRangeOfPoint(playerid, 15,658.3221,-565.8550,16.0630) || IsPlayerInRangeOfPoint(playerid, 15,-82.4185,-1174.8540,1.8298) || IsPlayerInRangeOfPoint(playerid, 15,-1676.3669,411.8149,6.9068) || IsPlayerInRangeOfPoint(playerid, 15,-1324.8502,2684.8120,49.783) || IsPlayerInRangeOfPoint(playerid, 15,2115.5447,926.6559,10.5668) || IsPlayerInRangeOfPoint(playerid, 15,2638.3337,1105.4701,10.5559))
	{//gasooo                   GASO SBIZZ 3
		if(gaso  < 80) return SendClientMessage(playerid,COLOR_WHITE,"Nu mai este Combustibil");
 	    new price = 80 * SBizzInfo[3][sbEntrace];
        SBizzInfo[3][sbTill] = 80*SBizzInfo[3][sbEntrace];
		sbUpdate(3,sbTillx);
		format(strings, sizeof(strings), "* Ti-ai incarcat canistra cu 80L Combustibil pentru $%d",price);
	    SendClientMessage(playerid, COLOR_WHITE, strings);
	    PlayerInfo[playerid][pFuel] = 80;
		Update(playerid, pFuelx);
		gaso -= 80;
		GivePlayerCash(playerid, - price);

        format(strings, sizeof(strings), " Gaso Station \n %d Litri \n /fill <litri> \n Pret per litru: %d",gaso,SBizzInfo[3][sbEntrace]);
		Update3DTextLabelText(gasoo, 0xFFFFFFFF, strings);
		Update3DTextLabelText(gasoo1, 0xFFFFFFFF, strings);
		Update3DTextLabelText(gasoo2, 0xFFFFFFFF, strings);
		Update3DTextLabelText(gasoo3, 0xFFFFFFFF, strings);
		Update3DTextLabelText(gasoo4, 0xFFFFFFFF, strings);
		Update3DTextLabelText(gasoo5, 0xFFFFFFFF, strings);
		return 1;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 15,1006.1612,-939.0581,41.9067) || IsPlayerInRangeOfPoint(playerid, 15,-2407.4907,977.6917,45.0239) || IsPlayerInRangeOfPoint(playerid, 15,-1606.2218,-2714.0056,48.2661) ||  IsPlayerInRangeOfPoint(playerid, 15,2202.3484,2473.7263,10.5630) || IsPlayerInRangeOfPoint(playerid, 15, 609.9616,1697.2865,6.7201) || IsPlayerInRangeOfPoint(playerid, 15, 617.3918,1687.2714,6.7177))
	{//xomerr                 XOMER BIZ 12
		if(xommer  < 80) return SendClientMessage(playerid,COLOR_WHITE,"Nu mai este Combustibil");
 		new price = 80 * SBizzInfo[15][sbEntrace];
		SBizzInfo[15][sbTill] = 80*SBizzInfo[15][sbEntrace];
		sbUpdate(15,sbTillx);
	    format(strings, sizeof(strings), "* Ti-ai incarcat canistra cu 80L Combustibil pentru $%d",price);
	    SendClientMessage(playerid, COLOR_WHITE, strings);
	    PlayerInfo[playerid][pFuel] = 80;
	    Update(playerid, pFuelx);
	    xommer -= 80;
		GivePlayerCash(playerid, - price);
		format(strings, sizeof(strings), " Xommer Station \n %d Litri \n /fill <litri> \n Pret per litru: %d",xommer,SBizzInfo[15][sbEntrace]);
	    Update3DTextLabelText(xommerr, 0xFFFFFFFF, strings);
	    Update3DTextLabelText(xommerr1, 0xFFFFFFFF, strings);
	    Update3DTextLabelText(xommerr2, 0xFFFFFFFF, strings);
	    Update3DTextLabelText(xommerr3, 0xFFFFFFFF, strings);
	    Update3DTextLabelText(xommerr4, 0xFFFFFFFF, strings);
	    Update3DTextLabelText(xommerr5, 0xFFFFFFFF, strings);
		return 1;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 15,1944.3397,-1771.5894,13.1224) || IsPlayerInRangeOfPoint(playerid, 15,-2027.7162,150.0180,27.4295) || IsPlayerInRangeOfPoint(playerid, 15,1597.1356,2196.5364,10.5538) || IsPlayerInRangeOfPoint(playerid, 15,-1479.9526,1867.0510,32.3627) || IsPlayerInRangeOfPoint(playerid, 15,1359.0516,474.3736,19.9037))
	{//going                    GOING 14
	    if(going  < 80) return SendClientMessage(playerid,COLOR_WHITE,"Nu mai este Combustibil");
        new price = 80 * SBizzInfo[14][sbEntrace];
		SBizzInfo[14][sbTill] = 80*SBizzInfo[14][sbEntrace];
		sbUpdate(14,sbTillx);
    	format(strings, sizeof(strings), "* Ti-ai incarcat canistra cu 80L Combustibil pentru $%d",price);
	    SendClientMessage(playerid, COLOR_WHITE, strings);
	    PlayerInfo[playerid][pFuel] = 80;
	    going -= 80;
	    Update(playerid, pFuelx);
		GivePlayerCash(playerid, - price);
		format(strings, sizeof(strings), " Going Station \n %d Litri \n /fill <litri> \n Pret per litru: %d",going,SBizzInfo[14][sbEntrace]);
	    Update3DTextLabelText(goingg, 0xFFFFFFFF, strings);
	    Update3DTextLabelText(goingg1, 0xFFFFFFFF, strings);
	    Update3DTextLabelText(goingg2, 0xFFFFFFFF, strings);
	    Update3DTextLabelText(goingg3, 0xFFFFFFFF, strings);
	    Update3DTextLabelText(goingg4, 0xFFFFFFFF, strings);
		return 1;
	}
	else return SendClientMessage(playerid,COLOR_GREY,"** Nu esti la benzinarie!");
}
CMD:checkcan(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pCanistra] == 0) return SendClientMessage(playerid,-1,"Nu aveti canistra");
    format(strings,sizeof(strings),"*Mai aveti %d litri in canistra.",PlayerInfo[playerid][pFuel]);
   	SendClientMessage(playerid,COLOR_WHITE,strings);
    return 1;
}
CMD:up(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsPlayerInRangeOfPoint(playerid,30,2516.9236, 2447.6218, 11.1549) && !IsPlayerInRangeOfPoint(playerid,30,2155.5527, 1597.9889, 1000.0646) && !IsPlayerInRangeOfPoint(playerid,30,2410.7310, 2449.3787, 69.4804)) return SendClientMessage(playerid,-1,"Nu esti la lift");
	if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7)
	{
		SetPlayerPos(playerid,2410.7310, 2449.3787, 69.4804);//up
     	GameTextForPlayer(playerid, "~l~~y~Elevator Used!", 2000, 1);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	return 1;
}
CMD:middle(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsPlayerInRangeOfPoint(playerid,30,2516.9236, 2447.6218, 11.1549) && !IsPlayerInRangeOfPoint(playerid,30,2155.5527, 1597.9889, 1000.0646) && !IsPlayerInRangeOfPoint(playerid,30,2410.7310, 2449.3787, 69.4804)) return SendClientMessage(playerid,-1,"Nu esti la lift");
	if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7)
	{
		SetPlayerPos(playerid,2155.5527, 1597.9889, 1000.0646);//up
     	GameTextForPlayer(playerid, "~l~~y~Elevator Used!", 2000, 1);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	return 1;
}
CMD:down(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsPlayerInRangeOfPoint(playerid,30,2516.9236, 2447.6218, 11.1549) && !IsPlayerInRangeOfPoint(playerid,30,2155.5527, 1597.9889, 1000.0646) && !IsPlayerInRangeOfPoint(playerid,30,2410.7310, 2449.3787, 69.4804)) return SendClientMessage(playerid,-1,"Nu esti la lift");
	if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7)
	{
		SetPlayerPos(playerid,2516.9236, 2447.6218, 11.1549);//up
     	GameTextForPlayer(playerid, "~l~~y~Elevator Used!", 2000, 1);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	return 1;
}
CMD:smoke(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(Cigarretes[playerid] < 1) return SendClientMessage(playerid,-1,"Nu ai tigari, poti cumpara de la un 24/7");
   	ApplyAnimation(playerid, "SMOKING", "M_smk_in", 4.0, 0, 0, 0, 0, 0);
    SetTimerEx("Smoke", 4600, false, "i", playerid);
	Cigarretes[playerid] --;
	format(strings, sizeof(strings), "Mai ai %d tigari in pachet", Cigarretes[playerid]);
	SendClientMessage(playerid,-1,strings);
	format(strings, sizeof(strings), "%s scoate un pachet de tigari, aprinde tigara si incepe sa fumeze", PlayerName(playerid));
	ProxDetector(10.0, playerid, strings,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	return 1;
}
CMD:eathamburger(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(Hamburgers[playerid] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu ai Hamburger, poti cumpara de la un 24/7");
	Hamburgers[playerid] --;
	new Float:health;
	GetPlayerHealth(playerid,health);
	if (health < 75.0)	SetPlayerHealth(playerid, health+25);
	else				SetPlayerHealth(playerid, 100);
	format(strings, sizeof(strings), "%s mananca un Hamburger", PlayerName(playerid));
	ProxDetector(10.0, playerid, strings,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
   	ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:repaircar(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pCheie] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu  ai cheie");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti in masina");
    new Float:health,veh = GetPlayerVehicleID(playerid);
	GetVehicleHealth(veh, health);
	if(health >= 450) return SendClientMessage(playerid, COLOR_RED, "Masina nu are nevoie de reparatii");
    if(repairkey[playerid] == 0) return SendClientMessage(playerid, COLOR_RED,"Ai reparat masina de curand, asteapta...");
    SetVehicleHealth(veh, health+50);
    SendClientMessage(playerid, COLOR_WHITE, "Ai reparat masina");
    repairkey[playerid] = 1;
    SetTimerEx("repairkeys", 2000, false, "i", playerid);
	return 1;
}
CMD:music(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new message[128];
	if(PlayerInfo[playerid][pCDPlayer] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu ai CD-Player!");
	if(sscanf(params,"s[128]",message))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "|__________________ Music __________________|");
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /music [name]");
		SendClientMessage(playerid, COLOR_GREY, "Available names: On, Off, Next");
		SendClientMessage(playerid, COLOR_WHITE, "|___________________________________________|");
		return 1;
	}
 	if(strmatch(message, "on"))
 	{
 	    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~CD Player On", 5000, 5);
	    new channel = Music[playerid];
	    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
	}
    else if(strmatch(message, "off"))
	{
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~CD Player Off", 5000, 5);
  		PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
	}
	else if(strmatch(message, "next"))
	{
	    if(Music[playerid] == 0) { Music[playerid] = 1; }
	    else if(Music[playerid] == 1) { Music[playerid] = 2; }
	    else if(Music[playerid] == 2) { Music[playerid] = 3; }
	    else if(Music[playerid] == 3) { Music[playerid] = 4; }
	    else if(Music[playerid] == 4) { Music[playerid] = 5; }
	    else if(Music[playerid] == 5) { Music[playerid] = 6; }
	    else if(Music[playerid] == 6) { Music[playerid] = 0; }
	    new channel = Music[playerid];
	    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
	}
	else return SendClientMessage(playerid, COLOR_GREY, "** Unknown music command !");
    return 1;
}
CMD:checkhp(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin]<3) return SendClientMessage(playerid,1,"Nu ai acces la aceasta comanda");
	new playa,Float:health;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /checkhp [playerid]");
    if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	GetPlayerHealth(playa,health);
	format(strings,sizeof(strings),"%s are HP: %.3f",PlayerName(playa),health);
	SendClientMessage(playerid,-1,strings);
	return 1;
}
CMD:gps(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pGPS] == 0) return SendClientMessage(playerid,-1,"Nu ai gps, poti cumpara de la un 24/7");
   	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "  Nu esti in masina !");
    ShowPlayerDialog(playerid, 19,DIALOG_STYLE_LIST,"G.P.S Positions",
   		"Joburi\n\
	   	DMW\n\
		PayPoint\n\
		Primarie\n\
	   	L.S.P.D.\n\
   		Pentagon\n\
   		National Guard\n\
		DealerShip\n\
		GPL Place\n\
		Parlament\n\
		Presedentie\n\
		Chilliad Station\n\
		Pirate Boat\n\
		Didier sachs\n\
		victim\n\
		prolaps\n\
		zip Clothes\n\
		binco","Track","Off");
   	SendClientMessage(playerid, COLOR_GREY,"Foloseste GPS si ESC pentru a inchide. Foloseste /gpsfind 0 0 pentru a gasi coordonate!");
	return 1;
}
CMD:gpsfind(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pGPS] == 0) return SendClientMessage(playerid,-1,"Nu ai gps, poti cumpara de la un 24/7");
   	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "  Nu esti in masina !");
	new Float:x,Float:y;
	if(sscanf(params,"fff",x,y)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /gpsfind X si Y (coordonate)");

	new zone[MAX_ZONE_NAME];
    Gps[playerid] = 1;
    TelePosGps[playerid][tX] = x;
	TelePosGps[playerid][tY] = y;
	TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
	format(strings,sizeof(strings),"*[GPS] Locatie %s-   X:%f, Y:%f",Get2DRadarZone(x,y, zone, MAX_ZONE_NAME),x,y);
	SendClientMessage(playerid, COLOR_LIGHTBLUE,"*[GPS] Locatie: PayPoint- Los Santos");
	return 1;
}

CMD:usedildo(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(UsedDildo[playerid] == 1)return SendClientMessage(playerid, COLOR_RED, "* Ai folosit dildoul de curand, asteapta!");
	new weap, ammo;
	GetPlayerWeaponData(playerid, 10, weap, ammo);
	if(weap == 10)//Vibrator argint 13 Vibrator Mare 12 Vibrator alb 11  Vibrator Mov 10
	{
	    TogglePlayerControllable(playerid, 0);
		ApplyAnimation(playerid,"MISC","Scratchballs_01",4.1,1,1,1,1,15000);
		SendClientMessage(playerid, COLOR_ORANGE, "*Ai inceput sa te joci cu Dildoul si te simti foarteee bine");
		GameTextForPlayer(playerid, "~p~Te joci cu un Dildo...",15000,5);
		format(strings, sizeof(strings), "* %s scoate un Dildo mov si incepe sa se joace cu el", PlayerName(playerid));
		ProxDetector(20.0, playerid, strings,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		SetTimerEx("UsingPurpleDildo",15000,0,"i",playerid);
	}
 	else if(weap == 11)
 	{
	    TogglePlayerControllable(playerid, 0);
		ApplyAnimation(playerid,"MISC","Scratchballs_01",4.1,1,1,1,1,15000);
		SendClientMessage(playerid, COLOR_ORANGE, "*Ai inceput sa te joci cu Dildoul si te simti foarteee bine");
		GameTextForPlayer(playerid, "~r~Te joci cu un Dildo...",15000,5);
		format(strings, sizeof(strings), "* %s scoate un Dildo alb si incepe sa se joace cu el", PlayerName(playerid));
		ProxDetector(20.0, playerid, strings,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		SetTimerEx("UsingSmallDildo",15000,0,"i",playerid);
	}
	else if(weap == 12)
	{
	    TogglePlayerControllable(playerid, 0);
		ApplyAnimation(playerid,"MISC","Scratchballs_01",4.1,1,1,1,1,15000);
		SendClientMessage(playerid, COLOR_ORANGE, "*Ai inceput sa te joci cu Dildoul si te simti foarteee bine");
		GameTextForPlayer(playerid, "~b~Te joci cu un Dildo...",15000,5);
		format(strings, sizeof(strings), "* %s scoate un Didldo mare si incepe sa se joace cu el", PlayerName(playerid));
		ProxDetector(20.0, playerid, strings,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		SetTimerEx("UsingLargeDildo",15000,0,"i",playerid);
	}
	else if(weap == 13)
	{
	    TogglePlayerControllable(playerid, 0);
		ApplyAnimation(playerid,"MISC","Scratchballs_01",4.1,1,1,1,1,15000);
		SendClientMessage(playerid, COLOR_ORANGE, "*Ai inceput sa te joci cu Dildoul si te simti foarteee bine");
		GameTextForPlayer(playerid, "~w~Te joci cu un Dildo...",15000,5);
		format(strings, sizeof(strings), "* %s scoate un Dildo argintiu si incepe sa se joace cu el", PlayerName(playerid));
		ProxDetector(20.0, playerid, strings,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		SetTimerEx("UsingBlackDildo",15000,0,"i",playerid);
	}
	return 1;
}

CMD:buy(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (IsPlayerInRangeOfPoint(playerid,3,1359.7999,-1783.4731,13.639))
    {
    	ShowPlayerDialog(playerid, 29, DIALOG_STYLE_LIST, "I.T. Shop", "iPhone\t5000$\nBeats\t3000$", "Cumpara", "Cancel");
		return 1;
 	}
	new b = GetPlayerVirtualWorld(playerid);
    if(b == 0) return SendClientMessage(playerid,COLOR_RED,"Nu esti intr-un interior");
	if(!IsPlayerInRangeOfPoint(playerid,30,BizzInfo[b][bExitX], BizzInfo[b][bExitY], BizzInfo[b][bExitZ])) return SendClientMessage(playerid,-1,"Nu esti intr-un Biz");
    new strong[640];
    if(b == 18 || b == 28)// pizza
	{
	    if(!IsPlayerInRangeOfPoint(playerid,3,375.8652, -119.0789, 1001.4959)) return SendClientMessage(playerid,-1,"Nu esti langa casa de marcat");//24/.7
	    strcat(strong,"{FFFFFF}Pizza Casei\t\t{33CC52}130$\n");
	   	strcat(strong,"{FFFFFF}Carnivora\t\t{33CC52}170$\n");
	   	strcat(strong,"{FFFFFF}Taraneasca\t\t{33CC52}170$\n");
	   	strcat(strong,"{FFFFFF}Margherita\t\t{33CC52}130$\n");
	   	strcat(strong,"{FFFFFF}Funghi\t\t\t{33CC52}140$\n");
	   	strcat(strong,"{FFFFFF}Prosciutto\t\t{33CC52}145$\n");
	   	strcat(strong,"{FFFFFF}Diavolo\t\t\t{33CC52}165$\n");
	   	strcat(strong,"{FFFFFF}Romana\t\t{33CC52}155$\n");
	   	strcat(strong,"{FFFFFF}Quattro Stagioni\t{33CC52}160$\n");
	   	strcat(strong,"{FFFFFF}Rustica\t\t\t{33CC52}170$\n");
	   	strcat(strong,"{FFFFFF}Capricioasa\t\t{33CC52}165$\n");
  		ShowPlayerDialog(playerid, 31, DIALOG_STYLE_LIST, "{00FF00}Well Stacked Pizza",strong, "Buy", "Renunta");
  		return 1;
	}
	if((b >= 5 &&  b <= 11) || (b >= 19 && b <= 25))// cluckin
	{
		if(!IsPlayerInRangeOfPoint(playerid,3, -29.1628,-184.8674,1003.5469)) return SendClientMessage(playerid,-1,"Nu esti langa casa de marcat");//24/.7
		strcat(strong,"{FFFFFF}Servieta\t\t\t{33CC52}1000$\n");
		strcat(strong,"{FFFFFF}Carte de telefon\t\t{33CC52}1000$\n");
		strcat(strong,"{FFFFFF}Zaruri\t\t\t\t{33CC52}500$\n");
	  	strcat(strong,"{FFFFFF}CD-Player\t\t\t{33CC52}2000$\n");
	  	strcat(strong,"{FFFFFF}Cheie\t\t\t\t{33CC52}5000$\n");
	  	strcat(strong,"{FFFFFF}Ochelari\t\t\t{33CC52}4000$\n");
	  	strcat(strong,"{FFFFFF}Camera Foto\t\t\t{33CC52}3000$\n");
	  	strcat(strong,"{FFFFFF}Loz In plic\t\t\t{33CC52}1000$\n");
	  	strcat(strong,"{FFFFFF}Hamburger\t\t\t{33CC52}70$\n");
  		strcat(strong,"{FFFFFF}Moneda\t\t\t{33CC52}500$\n");
	  	strcat(strong,"{FFFFFF}Canistra\t\t\t{33CC52}7000$\n");
	  	strcat(strong,"{FFFFFF}Ceas\t\t\t\t{33CC52}3000$\n");
	  	strcat(strong,"{FFFFFF}Spray Can\t\t\t{33CC52}1000$\n");
	  	strcat(strong,"{FFFFFF}Cigarretes\t\t\t{33CC52}1400$\n");
	  	strcat(strong,"{FFFFFF}Vehicle GPS Add-On\t\t{33CC52}6000$\n");
	  	strcat(strong,"{FFFFFF}Durex\t\t\t\t{33CC52}500$\n");
	  	strcat(strong,"{FFFFFF}Funie\t\t\t\t{33CC52}2000$\n");
	  	strcat(strong,"{FFFFFF}Bandana\t\t\t{33CC52}2000$\n");
	  	strcat(strong,"{FFFFFF}Undita.\t\t\t{33CC52}6000$");
  		ShowPlayerDialog(playerid, 18, DIALOG_STYLE_LIST, "{00FF00}24/7",strong, "Buy", "Renunta");
		return 1;
	}
    if(b == 14 || b == 15 || b == 29)
	{
		if(!IsPlayerInRangeOfPoint(playerid,3,370.1183, -6.2263, 1001.8813)) return SendClientMessage(playerid,-1,"Nu esti langa casa de marcat");//cluckin bell
	   	strcat(strong,"{FFFFFF}Booster\t\t{33CC52}35$\n");
	  	strcat(strong,"{FFFFFF}Crispy Sandwich\t{33CC52}35$\n");
	  	strcat(strong,"{FFFFFF}Fillet \t\t\t{33CC52}95$\n");
	  	strcat(strong,"{FFFFFF}Hot Wings \t\t{33CC52}135$\n");
	  	strcat(strong,"{FFFFFF}Cryspy Strips\t\t{33CC52}130$\n");
	  	strcat(strong,"{FFFFFF}Hot Box\t\t{33CC52}100$\n");
	  	strcat(strong,"{FFFFFF}Snack Box\t\t{33CC52}70$\n");
	  	strcat(strong,"{FFFFFF}Smart Menu\t\t{33CC52}120$\n");
	  	strcat(strong,"{FFFFFF}Meniu Hot Wings\t{33CC52}180$\n");
	  	strcat(strong,"{FFFFFF}Muffins\t\t\t{33CC52}60$\n");
	  	strcat(strong,"{FFFFFF}Inghetata Sundae\t{33CC52}50$\n");
	  	strcat(strong,"{FFFFFF}Tarta cu Ciocaloata\t{33CC52}60$\n");
		ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "{00FF00}Cluckin Bell",strong, "Buy", "Renunta");
		return 1;
	}
	if(b == 27 || b == 26 || b == 17 || b == 16)
	{
        if(!IsPlayerInRangeOfPoint(playerid,2,377.0229,-67.8145,1001.515)) return SendClientMessage(playerid,-1,"Nu esti langa casa de marcat");//Burger Shot mc donalt
	  	strcat(strong,"{FFFFFF}McChicken\t\t\t{33CC52}35$\n");
	  	strcat(strong,"{FFFFFF}McToast Sandwich\t\t{33CC52}35$\n");
	  	strcat(strong,"{FFFFFF}BigMac\t\t\t\t{33CC52}55$\n");
	  	strcat(strong,"{FFFFFF}Chicken Grill\t\t\t{33CC52}135$\n");
	  	strcat(strong,"{FFFFFF}CBO\t\t\t\t{33CC52}80$\n");
	  	strcat(strong,"{FFFFFF}Chicken McNuggets\t\t{33CC52}75$\n");
	  	strcat(strong,"{FFFFFF}Quarter Pounder\t\t{33CC52}85$\n");
	  	strcat(strong,"{FFFFFF}McVeggie\t\t\t{33CC52}95$\n");
	  	strcat(strong,"{FFFFFF}McBites\t\t\t{33CC52}60$\n");
	  	strcat(strong,"{FFFFFF}Double Chesseburger\t\t{33CC52}40$\n");
		ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "{00FF00}Burger Shoot",strong, "Buy", "Renunta");
		return 1;
	}
	if(b == 12 || b == 13)
	{
		if(!IsPlayerInRangeOfPoint(playerid,2,-104.1861,-22.3115,1000.7188)) return SendClientMessage(playerid,-1,"Nu esti langa casa de marcat");//sshop
		strcat(strong,"{FFFFFF}1: Vibrator Mov \t\t{33CC52}$100\n");
	  	strcat(strong,"{FFFFFF}2: Vibrator Alb \t\t{33CC52}$75\n");
	  	strcat(strong,"{FFFFFF}3: Vibrator Mare \t\t{33CC52}$200\n");
	  	strcat(strong,"{FFFFFF}4: Prezervativ \t\t{33CC52}$50\n");
	  	strcat(strong,"{FFFFFF}5: Vibrator Argintiu \t\t{33CC52}$125");
		ShowPlayerDialog(playerid, 22, DIALOG_STYLE_LIST, "{00FF00}Sex Shop",strong, "Buy", "Renunta");
		return 1;
	}
	return 1;
}

CMD:atmhelp(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	for(new x = 0; x < MAX_ATMS; x++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, atmVariables[x][ATMPosX], atmVariables[x][ATMPosY], atmVariables[x][ATMPosZ]))
		ShowPlayerDialog(playerid, 11, DIALOG_STYLE_LIST, "{00FF00}SERVER: Automated Teller Machine", "{FFFFFF}Check Balance{FFFFFF}\n{FFFFFF}Withdraw", "Select", "Renunta");
	}
	return 1;
}
CMD:lotto(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
 	if(GetPlayerCash(playerid) < 1500) return SendClientMessage(playerid, COLOR_GREY, "   Iti trebuie $1,500 pentru a cumpara un bilet de loterie !");
    if(!IsPlayerInRangeOfPoint(playerid, 1, 822.2867,-0.3089,1004.1797) && !IsPlayerInRangeOfPoint(playerid, 1, 822.1622,6.4807,1004.1797) &&
	   !IsPlayerInRangeOfPoint(playerid, 1, 822.1740,4.2276,1004.1797)  && !IsPlayerInRangeOfPoint(playerid, 1, 822.1691,1.8918,1004.1797))
    return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Loterie: {FFFFFF}Nu esti intr-o loterie!");
	new bilet;
	if(sscanf(params,"d",bilet)) return SendClientMessage(playerid, COLOR_WHITE,"{00FF00}Folosire:{FFFFFF} /lotto [numar]");
	if(bilet < 1 || bilet > 80)  return SendClientMessage(playerid, COLOR_GREY, "   Numarul biletului de loterie trebuie sa fie intre 1 si 80 !");
	format(strings, sizeof(strings), "* Ai cumparat un bilet de loterie cu numarul: %d.", bilet);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
	GivePlayerCash(playerid, - 1500);
	PlayerInfo[playerid][pLotto] = bilet;
	Update(playerid, pLottox);
    return 1;
}
CMD:ivn(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin]<8) return 1;
	if(Tele[playerid] == 0)
	{
		Tele[playerid] = 2;
		SendClientMessage(playerid,-1,"IVN ON");
	}
	else
	{
		Tele[playerid] = 0;
//		PlayerPosX[playerid] = OldPlayerPosX[playerid]+0.2;
//		PlayerPosY[playerid] = OldPlayerPosY[playerid]+0.2;
//		PlayerPosZ[playerid] = OldPlayerPosZ[playerid]+0.2;
		SendClientMessage(playerid,COLOR_RED,"IVN OFF");
//		SetTimerEx("UpdatePlayerPos", 2000, false, "i", playerid);
	}
	return 1;
}

CMD:fdeposit(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pLeader] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu ai factiune");
   	new suma,seiful;
	if(sscanf(params,"d",suma)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /fdeposit [suma]");
	if(PlayerInfo[playerid][pLeader] != 0) InFactionSafe[playerid] = PlayerInfo[playerid][pLeader];
	else if(PlayerInfo[playerid][pMember] != 0) InFactionSafe[playerid] = PlayerInfo[playerid][pMember];
	if(GetPlayerCash(playerid) < suma) return SendClientMessage(playerid,COLOR_RED,"Nu ai atatia bani");
	seiful = InFactionSafe[playerid];
	if(!IsPlayerInRangeOfPoint(playerid,2,DynamicFactions[seiful][fcX],DynamicFactions[seiful][fcY],DynamicFactions[seiful][fcZ])) return SendClientMessage(playerid,COLOR_RED,"Nu esti la seif");
    if(suma < 0) return 	SendClientMessage(playerid, COLOR_RED, "** Nu poti pune pe minus!");
	GivePlayerCash(playerid,-suma);
	new oldbalance = DynamicFactions[seiful][fBank];
	DynamicFactions[seiful][fBank] += suma;
    mysql_format(handle, query, 500, "UPDATE `factionsafe` SET `bankfaction` = '%d' WHERE `Factiune` = '%d'",DynamicFactions[seiful][fBank],seiful);
	mysql_tquery(handle, query);
	SendClientMessage(playerid, CRISTIAN, "|____INFORMATII SEIF____|");
	format(strings, sizeof(strings), " Balanta veche: $%s", FormatNumber(oldbalance));
	SendClientMessage(playerid, 0xA4A4A4FF, strings);
	format(strings, sizeof(strings), " Ai depozitat: $%s ", FormatNumber(suma));
	SendClientMessage(playerid, 0xD8D8D8FF, strings);
 	format(strings, sizeof(strings), " Balanta noua: $%s", FormatNumber(DynamicFactions[seiful][fBank]));
	SendClientMessage(playerid, 0xFFFFFFFF, strings);
	SendClientMessage(playerid, CRISTIAN, "|---------------------------------------------| ");
	return 1;
}

CMD:fbalance(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pLeader] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu ai factiune");
   	new seiful;
	if(PlayerInfo[playerid][pLeader] != 0) InFactionSafe[playerid] = PlayerInfo[playerid][pLeader];
	else if(PlayerInfo[playerid][pMember] != 0) InFactionSafe[playerid] = PlayerInfo[playerid][pMember];
	seiful = InFactionSafe[playerid];
	if(!IsPlayerInRangeOfPoint(playerid,2,DynamicFactions[seiful][fcX],DynamicFactions[seiful][fcY],DynamicFactions[seiful][fcZ])) return SendClientMessage(playerid,COLOR_RED,"Nu esti la seif");
   	format(strings, sizeof(strings), " Seiful factiunii tale are $%s.", FormatNumber(DynamicFactions[seiful][fBank]));
  	SendClientMessage(playerid, 0xEEE84BFF, strings);
 	return 1;
}

CMD:fwithdraw(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pLeader] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu ai factiune");
   	new suma,seiful;
	if(sscanf(params,"d",suma)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /fwithdraw [suma]");
	if(PlayerInfo[playerid][pLeader] != 0) InFactionSafe[playerid] = PlayerInfo[playerid][pLeader];
	else if(PlayerInfo[playerid][pMember] != 0) InFactionSafe[playerid] = PlayerInfo[playerid][pMember];
	seiful = InFactionSafe[playerid];
	if(!IsPlayerInRangeOfPoint(playerid,2,DynamicFactions[seiful][fcX],DynamicFactions[seiful][fcY],DynamicFactions[seiful][fcZ])) return SendClientMessage(playerid,COLOR_RED,"Nu esti la seif");
	if(DynamicFactions[seiful][fBank] < suma) return SendClientMessage(playerid,COLOR_RED,"Nu sunt atatia bani in seif");
	if(suma < 0) return 	SendClientMessage(playerid, COLOR_RED, "** Nu poti pune pe minus!");
	GivePlayerCash(playerid,suma);
	DynamicFactions[seiful][fBank] -= suma;
    new oldbalance = DynamicFactions[seiful][fBank];
    mysql_format(handle, query, 500, "UPDATE `factionsafe` SET `bankfaction` = '%d' WHERE `Factiune` = '%d'",DynamicFactions[seiful][fBank],seiful);
	mysql_tquery(handle, query);
	SendClientMessage(playerid, CRISTIAN, "|____INFORMATII SEIF____|");
	format(strings, sizeof(strings), " Balanta veche: $%s", FormatNumber(oldbalance));
	SendClientMessage(playerid, 0xA4A4A4FF, strings);
	format(strings, sizeof(strings), " Ai Extras: $%s ", FormatNumber(suma));
	SendClientMessage(playerid, 0xD8D8D8FF, strings);
 	format(strings, sizeof(strings), " Balanta noua: $%s", FormatNumber(DynamicFactions[seiful][fBank]));
	SendClientMessage(playerid, 0xFFFFFFFF, strings);
	SendClientMessage(playerid, CRISTIAN, "|---------------------------------------------| ");
	return 1;
}

CMD:gplinfo(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	SendClientMessage(playerid, COLOR_WHITE, "[USAGE]: /upgradecar pentru a cumpara butelie!");
	SendClientMessage(playerid, COLOR_WHITE, "[USAGE]: /downgrade pentru vinde butelia masini si dezinstala sistemul GPL!");
	SendClientMessage(playerid, COLOR_WHITE, "[USAGE]: /gplcost pentru a afla pretul de cumparare al buteliei pentru masina ta!");
	SendClientMessage(playerid, COLOR_WHITE, "[USAGE]: /gpldemote pentru a afla pretul de vanzare al buteliei pentru masina ta!");
	SendClientMessage(playerid, COLOR_WHITE, "[USAGE]: /fill in orice benzinarie care detine un rezervor GPL!");
	SendClientMessage(playerid, COLOR_WHITE, "[USAGE]: /gplplace daca nu stii unde este Centrul de Butelii!");
	return 1;
}


CMD:upgradecar(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti in masina");
	if(vInfo[OwnedVeh(GetPlayerVehicleID(playerid))][vTowed] == 1) return SendClientMessage(playerid,COLOR_RED, "Ai deja butelie, foloseste /gpldemote");
	if(!OwnedVeh(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,-1,"Nu este o masina personala");
	if(!IsPlayerInRangeOfPoint(playerid, 2,2260.3010, -84.6362, 26.2435)) return SendClientMessage(playerid,COLOR_RED,"Nu esti unde trebuie, /gplplace");
    if(IsADiesel(GetPlayerVehicleID(playerid))) return SCM(playerid,-1,"Aceasta masina este diesel, nu o poti trece pe gas");

	vInfo[OwnedVeh(GetPlayerVehicleID(playerid))][vTowed] = 1;
  	vUpdate(OwnedVeh(GetPlayerVehicleID(playerid)),vTowedx);
  	TogglePlayerControllable(playerid,0);
	SetTimerEx("freze", 15000, false, "i", playerid);
	SendClientMessage(playerid,COLOR_LIGHTBLUE,"Asteptati pana se instaleaza sistemul GPL");
	DisablePlayerCheckpoint(playerid);
	return 1;
}

CMD:downgrade(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsPlayerInRangeOfPoint(playerid, 2,2260.3010, -84.6362, 26.2435)) return SendClientMessage(playerid,COLOR_RED,"Nu esti unde trebuie, /gplplace");
 	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti in masina");
	if(vInfo[OwnedVeh(GetPlayerVehicleID(playerid))][vTowed] == 0) return SendClientMessage(playerid,COLOR_RED, "Nu aveti butelie, foloseste /upgradecar");
	if(!OwnedVeh(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,-1,"Nu este o masina personala");
	vInfo[OwnedVeh(GetPlayerVehicleID(playerid))][vTowed] = 0;
    vUpdate(OwnedVeh(GetPlayerVehicleID(playerid)),vTowedx);
	SetTimerEx("freze", 7000, false, "i", playerid);
	TogglePlayerControllable(playerid,0);
	GivePlayerCash(playerid,vInfo[GetPlayerVehicleID(playerid)][vPrice]/8);
	SendClientMessage(playerid, 0x09F720C8, "Asteptati pana este dezasamblata butelia!");
	format(strings, sizeof(strings),"Ati vandut Butelia GPL pentru suma de %d $",vInfo[GetPlayerVehicleID(playerid)][vPrice]/8);
	SendClientMessage(playerid, COLOR_WHITE, strings);
	return 1;
}

CMD:gplcost(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
 	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti in masina");
	if(!OwnedVeh(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,-1,"Nu este o masina personala");
	format(strings, sizeof(strings),"O butelie GPL pentru aceasta marca de masina costa %d $.",vInfo[GetPlayerVehicleID(playerid)][vPrice]/4);
	SendClientMessage(playerid, COLOR_WHITE, strings);
 	return 1;
}

CMD:gpldemote(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
 	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti in masina");
	if(!OwnedVeh(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,-1,"Nu este o masina personala");
    format(strings, sizeof(strings),"Pretul de vanzare al Buteliei GPL pentru aceasta marca de masina costa %d $. Foloseste /downgrade",vInfo[GetPlayerVehicleID(playerid)][vPrice]/8);
	SendClientMessage(playerid, COLOR_WHITE, strings);
	return 1;
}

CMD:gplplace(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	CP[playerid] = 22;
    SetPlayerCheckpoint(playerid, 2260.3010, -84.6362, 26.2435, 4.0);
	SendClientMessage(playerid, COLOR_WHITE, "Locul a fost marcat pe harta /location pentru a dezactiva cp-ul");
	return 1;
}

CMD:switch(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!OwnedVeh(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"Nu este o masina personala");
  	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_RED,"Nu esti sofer");
	if(vInfo[OwnedVeh(GetPlayerVehicleID(playerid))][vTowed] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu aveti masina trecuta pe gas");
	if(switched[GetPlayerVehicleID(playerid)] == 1)//este data pe gas
	{
	    switched[GetPlayerVehicleID(playerid)] = 0;
	    TogglePlayerControllable(playerid,0);
		SetTimerEx("freze", 600, false, "i", playerid);
	    SendClientMessage(playerid,COLOR_LIGHTRED, "Ai trecut pe Combustibil");
	}
	else
	{
 		switched[GetPlayerVehicleID(playerid)] = 1;
 		TogglePlayerControllable(playerid,0);
		SetTimerEx("freze", 600, false, "i", playerid);
 		SendClientMessage(playerid,COLOR_LIGHTBLUE, "Ai trecut pe Gas");
	}
	return 1;
}

CMD:take(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(!IsACop(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti politist");
	new playa,message[128],string[144];
	if(sscanf(params,"us[128]",playa,message))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "|__________________ Take Licenses __________________|");
		SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /take [playerid/numejucator] [licensename]");
		SendClientMessage(playerid, COLOR_GREY, "Licente valabile: driving, fly, boatlic, Gunlicense, Weapons, Drugs, Materials, decoder");
		SendClientMessage(playerid, COLOR_WHITE, "|___________________________________________________|");
		return 1;
	}
    if(!ProxDetectorPlayer(8.0, playerid, playa)) return SendClientMessage(playerid,-1,"Nu te afli langa player");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
 	if(strmatch(message, "decoder"))
 	{
        format(string, sizeof(string), "* I-ai luat decodorul lui %s.", PlayerName(playa));
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Ofiterul %s ti-a confiscat decodorul.", PlayerName(playerid));
  		SendClientMessage(playa, COLOR_LIGHTBLUE, string);
		PlayerInfo[playa][pDecoder] = 0;
		Update(playa, pDecoderx);
		return 1;
	}
 	else if(strmatch(message, "driving"))
 	{
        format(string, sizeof(string), "* I-ai luat licenta de condus lui %s.", PlayerName(playa));
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Ofiterul %s ti-a confiscat licenta de condus.", PlayerName(playerid));
  		SendClientMessage(playa, COLOR_LIGHTBLUE, string);
		PlayerInfo[playa][pCarLic] = 0;
		Update(playa, pCarLicx);
		return 1;
	}
	else if(strmatch(message, "fly"))
 	{
        format(string, sizeof(string), "* I-ai luat licenta de zbor lui %s.", PlayerName(playa));
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Ofiterul %s ti-a confiscat licenta de zbor.", PlayerName(playerid));
  		SendClientMessage(playa, COLOR_LIGHTBLUE, string);
		PlayerInfo[playa][pFlyLic] = 0;
		Update(playa, pFlyLicx);
		return 1;
	}
	else if(strmatch(message, "gunlicense"))
 	{
        format(string, sizeof(string), "* I-ai luat licenta de arma lui %s.", PlayerName(playa));
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Ofiterul %s ti-a confiscat licenta de arma.", PlayerName(playerid));
  		SendClientMessage(playa, COLOR_LIGHTBLUE, string);
		PlayerInfo[playa][pGunLic] = 0;
		Update(playa, pGunLicx);
		return 1;
	}
	else if(strmatch(message, "boatlic"))
 	{
        format(string, sizeof(string), "* I-ai luat licenta de barca lui %s.", PlayerName(playa));
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Ofiterul %s ti-a confiscat licenta de barca.", PlayerName(playerid));
  		SendClientMessage(playa, COLOR_LIGHTBLUE, string);
		PlayerInfo[playa][pBoatLic] = 0;
		Update(playa, pBoatLicx);
		return 1;
	}
	else if(strmatch(message, "weapons"))
 	{
        format(string, sizeof(string), "* I-ai luat armele lui %s.", PlayerName(playa));
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Ofiterul %s ti-a confiscat armele/", PlayerName(playerid));
  		SendClientMessage(playa, COLOR_LIGHTBLUE, string);
  		ResetPlayerWeapons(playa);
		return 1;
	}
	else if(strmatch(message, "drugs"))
 	{
        format(string, sizeof(string), "* I-ai luat drogurile lui %s.", PlayerName(playa));
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Ofiterul %s ti-a confiscat drogurile.", PlayerName(playerid));
  		SendClientMessage(playa, COLOR_LIGHTBLUE, string);
    	PlayerInfo[playa][pDrugs] = 0;
		Update(playa, pDrugsx);
		return 1;
	}
	else if(strmatch(message, "materials"))
 	{
        format(string, sizeof(string), "* I-ai luat Materialele lui %s.", PlayerName(playa));
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Ofiterul %s ti-a confiscat Materialele.", PlayerName(playerid));
  		SendClientMessage(playa, COLOR_LIGHTBLUE, string);
    	PlayerInfo[playa][pMaterials] = 0;
		Update(playa, pMaterialsx);
		return 1;
	}
    return 1;
}
CMD:supervehslap(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid,COLOR_RED,"Nu esti admin");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid,COLOR_RED,"Folosire: /svl [playerid]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(isnull(params)) return SendClientMessage(playerid,COLOR_WHITE, "Nume valabile: Condus, Pilotat, Navigat, Pescuit, Arma.");
	new Float:slx, Float:sly, Float:slz;
    if(GetPlayerState(playa) != 2) return SendClientMessage(playerid,COLOR_RED,"**Playernul nu e in masina!");
    GetVehiclePos(GetPlayerVehicleID(playa), slx, sly, slz);
	SetVehiclePos(GetPlayerVehicleID(playa), slx, sly, slz+1000);
	PlayerPlaySound(playa, 1130, slx, sly, slz);
	format(strings, sizeof(strings), "[ADMIN]: %s i-a dat S-V-L lui %s.", PlayerName(playerid), PlayerName(playa));
	AdminsBroadCast(COLOR_LIGHTBLUE,strings, 3);
	format(strings, sizeof(strings), "** I-ai dat S-V-L lui %s (%d) la vehicul!", PlayerName(playa), playa);
	SendClientMessage(playerid,COLOR_LIGHTBLUE,strings);
	SendClientMessage(playa,COLOR_LIGHTBLUE,"*** Ai primit S-V-L!");
	GameTextForPlayer(playa, "~r~Vehicle Slapped!",5000,3);
 	return 1;
}

CMD:svl(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid,COLOR_RED,"Nu esti admin");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid,COLOR_RED,"Folosire: /supervehslap [playerid]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(isnull(params)) return SendClientMessage(playerid,COLOR_WHITE, "Nume valabile: Condus, Pilotat, Navigat, Pescuit, Arma.");
	new Float:slx, Float:sly, Float:slz;
    if(GetPlayerState(playa) != 2) return SendClientMessage(playerid,COLOR_RED,"**Playernul nu e in masina!");
    GetVehiclePos(GetPlayerVehicleID(playa), slx, sly, slz);
	SetVehiclePos(GetPlayerVehicleID(playa), slx, sly, slz+1000);
	PlayerPlaySound(playa, 1130, slx, sly, slz);
	format(strings, sizeof(strings), "[ADMIN]: %s i-a dat S-V-L lui %s.", PlayerName(playerid), PlayerName(playa));
	AdminsBroadCast(COLOR_LIGHTBLUE,strings, 3);
	format(strings, sizeof(strings), "** I-ai dat S-V-L lui %s (%d) la vehicul!", PlayerName(playa), playa);
	SendClientMessage(playerid,COLOR_LIGHTBLUE,strings);
	SendClientMessage(playa,COLOR_LIGHTBLUE,"*** Ai primit S-V-L!");
	GameTextForPlayer(playa, "~r~Vehicle Slapped!",5000,3);
 	return 1;
}



CMD:vslap(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid,COLOR_RED,"Nu esti admin");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid,COLOR_RED,"Folosire: /vslap [playerid]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(isnull(params)) return SendClientMessage(playerid,COLOR_WHITE, "Nume valabile: Condus, Pilotat, Navigat, Pescuit, Arma.");
	new Float:slx, Float:sly, Float:slz;
    if(GetPlayerState(playa) != 2) return SendClientMessage(playerid,COLOR_RED,"**Playernul nu e in masina!");
    GetVehiclePos(GetPlayerVehicleID(playa), slx, sly, slz);
	SetVehiclePos(GetPlayerVehicleID(playa), slx, sly, slz+500);
	PlayerPlaySound(playa, 1130, slx, sly, slz);
	format(strings, sizeof(strings), "[ADMIN]: %s i-a dat Vehicle-Slapped lui %s.", PlayerName(playerid), PlayerName(playa));
	AdminsBroadCast(COLOR_LIGHTBLUE,strings, 3);
	format(strings, sizeof(strings), "** I-ai dat Veh Slap lui %s (%d) la vehicul!", PlayerName(playa), playa);
	SendClientMessage(playerid,COLOR_LIGHTBLUE,strings);
	SendClientMessage(playa,COLOR_LIGHTBLUE,"*** Ai primit Vehicle Slap!");
	GameTextForPlayer(playa, "~r~Vehicle Slapped!",5000,3);
 	return 1;
}

CMD:agl(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid,COLOR_RED,"Nu esti admin");
	new playa,message[128];
	if(sscanf(params,"us[128]",playa,message))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /givelicense  [playerid/numejucator] [licenta]");
		SendClientMessage(playerid, COLOR_WHITE, "Nume valabile: Condus, Pilotat, Navigat, Pescuit, Arma.");
		return 1;
	}
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
 	if(strmatch(message, "condus"))
 	{
       	format(strings, sizeof(strings), "* I-ai dat licenta de condus lui %s.",PlayerName(playa));
		SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
		format(strings, sizeof(strings), "* Administratorul %s ti-a dat licenta de condus.",PlayerName(playerid));
		SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
		PlayerInfo[playa][pCarLic] = 1;
		Update(playa, pCarLicx);
		return 1;
  	}
  	if(strmatch(message, "pilotat"))
	{
       	format(strings, sizeof(strings), "* I-ai dat licenta de pilotat lui %s.",PlayerName(playa));
		SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
		format(strings, sizeof(strings), "* Administratorul %s ti-a dat licenta de pilotat.",PlayerName(playerid));
		SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
		PlayerInfo[playa][pFlyLic] = 1;
		Update(playa, pFlyLicx);
		return 1;
  	}
  	if(strmatch(message, "navigat"))
	{
       	format(strings, sizeof(strings), "* I-ai dat licenta de navigat lui %s.",PlayerName(playa));
		SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
		format(strings, sizeof(strings), "* Administratorul %s ti-a dat licenta de navigat.",PlayerName(playerid));
		SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
		PlayerInfo[playa][pBoatLic] = 1;
		Update(playa, pBoatLicx);
		return 1;
  	}
  	if(strmatch(message, "pescuit"))
	{
       	format(strings, sizeof(strings), "* I-ai dat licenta de pescuit lui %s.",PlayerName(playa));
		SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
		format(strings, sizeof(strings), "* Administratorul %s ti-a dat licenta de pescuit.",PlayerName(playerid));
		SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
		PlayerInfo[playa][pFishLic] = 1;
		Update(playa, pFishLicx);
		return 1;
  	}
  	if(strmatch(message, "arma"))
	{
       	format(strings, sizeof(strings), "* I-ai dat licenta de pescuit lui %s.",PlayerName(playa));
		SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
		format(strings, sizeof(strings), "* Administratorul %s ti-a dat licenta de Arma.",PlayerName(playerid));
		SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
		PlayerInfo[playa][pGunLic] = 1;
		Update(playa, pGunLicx);
		return 1;
  	}
  	else return SendClientMessage(playerid,COLOR_RED,"Invalid Name");
}
CMD:Setspeed(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    new sped;
	if(sscanf(params,"d",sped)) return SendClientMessage(playerid,-1,"/Setspeed [viteza]");
	MOVE_SPEED[playerid] = sped;
	return 1;
}


CMD:flymode(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin]<4) return SendClientMessage(playerid,COLOR_RED,"Nu esti admin destul de mare in grad");
    // Place the player in and out of edit mode
    if(SpectatedID[playerid]!=999 && SpectatedID[playerid]!=998) return SCM(playerid,-1,"Folosesti spectator acum!");
    new Float:x, Float:y, Float:z;
	if(PlayerInfo[playerid][pAdmin] >= 7)
    {
		if(FlyModeA[playerid] == 1)
		{
			TextDrawShowForPlayer(playerid, Time2);
			TextDrawShowForPlayer(playerid, Date);
			TextDrawShowForPlayer(playerid, NameText[playerid]);
    		GetPlayerCameraPos(playerid, x, y, z);
    		FlyPosx[playerid][0] = x;
			FlyPosx[playerid][1] = y;
			FlyPosx[playerid][2] = z;
			CancelFlyMode(playerid);
		}
		else
		{
			TextDrawHideForPlayer(playerid, Time2);
			TextDrawHideForPlayer(playerid, Date);
			TextDrawHideForPlayer(playerid, NameText[playerid]);
			SpectatedID[playerid] = 998;
			FlyMode(playerid);
		}
	}
	else if(PlayerInfo[playerid][pAdmin] < 7)
 	{
 	    if(FlyModeA[playerid] == 1)
		{
			TextDrawShowForPlayer(playerid, Time2);
			TextDrawShowForPlayer(playerid, Date);
			TextDrawShowForPlayer(playerid, NameText[playerid]);
  			CancelFlyMode(playerid);
		}
		else
		{
			TextDrawHideForPlayer(playerid, Time2);
			TextDrawHideForPlayer(playerid, Date);
			TextDrawHideForPlayer(playerid, NameText[playerid]);
 	   		GetPlayerPos(playerid, x, y, z);
    		FlyPosx[playerid][0] = x;
			FlyPosx[playerid][1] = y;
			FlyPosx[playerid][2] = z;
			SpectatedID[playerid] = 998;
			FlyMode(playerid);
		}
 	}
	return 1;
}
CMD:cgraffity(playerid,params[])
{
	if(PlayerInfo[playerid][pLeader] != 5 && PlayerInfo[playerid][pMember] != 5 && PlayerInfo[playerid][pMember] != 15 && PlayerInfo[playerid][pLeader] != 15 && PlayerInfo[playerid][pMember] != 14 && PlayerInfo[playerid][pLeader] != 14) return SendClientMessage(playerid,COLOR_RED,"Nu faci parte din Gang");
    ShowPlayerDialog(playerid, 1998, DIALOG_STYLE_MSGBOX, "Graffity System", "Sigur vrei sa creezi un tatuaj?", "Da", "Nu");
    return 1;
}

CMD:jail(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa,time,message[128];
	if(sscanf(params,"uds[128]",playa,time,message)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /jail [playerid] [minute] [motiv]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	PlayerInfo[playa][pJailTime] = time*60;
	PlayerInfo[playa][pJail] = 1;
	Update(playa,pJailx);
	Update(playa,pJailTimex);
	SpawnPlayer(playa);
	format(strings,sizeof(strings),"%s[%d] a primit AdminJail de la %s[%d] pentru %d minute. Motiv: %s",PlayerName(playa),playa,PlayerName(playerid),playerid,time,message);
	SendClientMessageToAll(-1,strings);
	return 1;
}


CMD:withdraw(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(!IsPlayerInRangeOfPoint(playerid,50,179.89999, -867.59998, 2101.50000) && !IsPlayerInRangeOfPoint(playerid,50,2689.2190,-611.1713,-71.6582) &&!IsPlayerInRangeOfPoint(playerid,50,3439.4658,1198.3929,1000.9741)) return SendClientMessage(playerid, COLOR_GREY, "   Nu esti la banca !");
	new cashdeposit,cashd;
	if(sscanf(params,"d",cashdeposit))
	{
		SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /withdraw [suma]");
		format(strings, sizeof(strings), "  Ai $%d in contul tau bancar.", PlayerInfo[playerid][pAccount]);
		SendClientMessage(playerid, COLOR_GRAD3, strings);
		return 1;
	}
	if (cashdeposit > PlayerInfo[playerid][pAccount] || cashdeposit < 1) return SendClientMessage(playerid, COLOR_GRAD2, "   Nu ai atati bani !");
 	cashd = cashdeposit - cashdeposit/40;
	GivePlayerCash(playerid,cashd);
	PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-cashdeposit;
	format(strings, sizeof(strings), "Ai extras %d$ cu o percepere de taxa de 2.5 la suta. Bani ramasi: %d$", cashd,PlayerInfo[playerid][pAccount]);
	SendClientMessage(playerid, COLOR_YELLOW, strings);
	Update(playerid, pAccountx);
	return 1;
}

CMD:balance(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(!IsPlayerInRangeOfPoint(playerid,50,179.89999, -867.59998, 2101.50000) && !IsPlayerInRangeOfPoint(playerid,50,2689.2190,-611.1713,-71.6582) &&!IsPlayerInRangeOfPoint(playerid,50,3439.4658,1198.3929,1000.9741)) return SendClientMessage(playerid, COLOR_GREY, "   Nu esti la banca !");
	format(strings, sizeof(strings), "  Ai $%d in contul tau bancar.",PlayerInfo[playerid][pAccount]);
	SendClientMessage(playerid, COLOR_YELLOW, strings);
	return 1;
}

CMD:deposit(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(!IsPlayerInRangeOfPoint(playerid,50,179.89999, -867.59998, 2101.50000) && !IsPlayerInRangeOfPoint(playerid,50,2689.2190,-611.1713,-71.6582) &&!IsPlayerInRangeOfPoint(playerid,50,3439.4658,1198.3929,1000.9741)) return SendClientMessage(playerid, COLOR_GREY, "   Nu esti la banca !");
	SendClientMessage(playerid, COLOR_GRAD2, "Usage: /deposit [suma]");
	format(strings, sizeof(strings), "{1580EA}\tCati bani vrei sa depozitezi?\n\t{FFFFFF}Ai $%d in contul tau bancar.\n{1580EA}Bank: {FFFFFF}Scrie suma pe care vrei sa o depozitezi.\nATENTIE! Taxa este de {1580EA}2.5 la suta la extragere{FFFFFF}!", PlayerInfo[playerid][pAccount]);
	ShowPlayerDialog(playerid,257,DIALOG_STYLE_INPUT,"Depozitare",strings,"Depozitare","Iesi");
	return 1;
}
CMD:transfer(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(!IsPlayerInRangeOfPoint(playerid,50,179.89999, -867.59998, 2101.50000) && !IsPlayerInRangeOfPoint(playerid,50,2689.2190,-611.1713,-71.6582) &&!IsPlayerInRangeOfPoint(playerid,50,3439.4658,1198.3929,1000.9741)) return SendClientMessage(playerid, COLOR_GREY, "   Nu esti la banca !");
	if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "   Trebuie sa ai nivelul 3 !");
	new playa,cash;
	if(sscanf(params,"ud",playa,cash))	SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /transfer [playerid/numejucator] [suma]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(!IsPlayerConnected(playa)) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    new comision = cash*5/200;
	new playermoney = PlayerInfo[playerid][pAccount] ;
	if (cash < 1 || playermoney < cash) return SCM(playerid,COLOR_LIGHTRED,"Invalid Transfer");
    if(GetPlayerCash(playerid) < comision)
    {
    	format(strings, sizeof(strings), " Nu ai %d $ in mana sa platesti comisionul.",comision);
		SendClientMessage(playerid, COLOR_RED, strings);
		return 1;
  	}
	PlayerInfo[playerid][pAccount] -= cash;
	PlayerInfo[playa][pAccount] += cash;
	format(strings, sizeof(strings), " Ai platit cash 5%% comision. Acesta a avut valoarea de %d$.",comision);
	GivePlayerCash(playerid,comision);
	SendClientMessage(playerid, COLOR_WHITE, strings);
	format(strings, sizeof(strings), "   Ai transferat $%d in contul lui %s[%d]", cash, PlayerName(playa),playa);
	SendClientMessage(playerid, COLOR_GRAD1, strings);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	PlayerPlaySound(playa, 1052, 0.0, 0.0, 0.0);
	format(strings, sizeof(strings), "   Ai primit $%d in contul tau bancar de la %s[%d]", cash, PlayerName(playerid), playerid);
	SendClientMessage(playa, COLOR_GRAD1, strings);
	format(strings, sizeof(strings), "%s transferd $%d to %s", PlayerName(playerid), cash, PlayerName(playa));
	AdminsBroadCast(COLOR_BLUE,strings,6);
 	printf("%s", strings);
	Update(playerid, pAccountx);
	Update(playa, pAccountx);
	return 1;
}

CMD:bank(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(!IsPlayerInRangeOfPoint(playerid,50,179.89999, -867.59998, 2101.50000) && !IsPlayerInRangeOfPoint(playerid,50,2689.2190,-611.1713,-71.6582) &&!IsPlayerInRangeOfPoint(playerid,50,3439.4658,1198.3929,1000.9741)) return SendClientMessage(playerid, COLOR_GREY, "   Nu esti la banca !");
	SendClientMessage(playerid, COLOR_GRAD2, "Usage: /deposit [suma]");
	format(strings, sizeof(strings), "Cati bani vrei sa depozitezi?\nAi $%d in contul tau bancar.\n{1580EA}Bank: {FFFFFF}Scrie suma pe care vrei sa o depozitezi.\nATENTIE! Taxa este de {1580EA}2.5 la suta la extragere{FFFFFF}!", PlayerInfo[playerid][pAccount]);
	ShowPlayerDialog(playerid,257,DIALOG_STYLE_INPUT,"Depozitare",strings,"Depozitare","Iesi");
	return 1;
}

CMD:time(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pCeas] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu ai un Ceas, poti lua de la un 24/7");
	new rand = PlayerInfo[playerid][pCeas],fftext[20];
	if(rand == 1) fftext = "Rolex";
	if(rand == 2) fftext = "Fossil";
	if(rand == 3) fftext = "TAG";
	if(rand == 4) fftext = "Omega";
	if(rand == 5) fftext = "Cartier";
    new mtext[20];
	new year, month,day;
	getdate(year, month, day);
	if(month == 1) { mtext = "Ianuarie"; }
	else if(month == 2) { mtext = "Februarie"; }
	else if(month == 3) { mtext = "Martie"; }
	else if(month == 4) { mtext = "Aprilie"; }
	else if(month == 5) { mtext = "Mai"; }
	else if(month == 6) { mtext = "Iunie"; }
	else if(month == 7) { mtext = "Iulie"; }
	else if(month == 8) { mtext = "August"; }
	else if(month == 9) { mtext = "Septembrie"; }
	else if(month == 10) { mtext = "Octombrie"; }
	else if(month == 11) { mtext = "Noiembrie"; }
	else if(month == 12) { mtext = "Decembrie"; }
    new hour,minuite,second;
	gettime(hour,minuite,second);
	if (PlayerInfo[playerid][pJailTime] > 0)
	format(strings, sizeof(strings), "~y~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Jail Time: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]-10);
 	else
	format(strings, sizeof(strings), "~y~%d %s~n~~g~|~w~%d:%d~g~|", day, mtext, hour, minuite);
	GameTextForPlayer(playerid, strings, 3000, 1);
	format(strings, sizeof(strings), "* %s scoate un ceas %s si se uita la el", PlayerName(playerid),fftext);
	ProxDetector(10.0, playerid, strings, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
   	ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_watch", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:time4(playerid,params[])
{
   	ApplyAnimation(playerid, "CLOTHES", "CLO_Pose_Watch", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:safeinfo(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pLeader] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu faci parte din factiune");
    new asd = PlayerInfo[playerid][pMember];
    if(IsPlayerInRangeOfPoint(playerid, 4.0,DynamicFactions[asd][fcX],DynamicFactions[asd][fcY],DynamicFactions[asd][fcZ]))
	SendClientMessage(playerid, COLOR_GRAD6,"{0498FB}*** FACTION SEIF ***{C89C37} /fdeposit /fwithdraw /fbalance /fdrugs /fmats ");
	else return SendClientMessage(playerid,COLOR_RED,"Nu esti langa seif!");
	return 1;
}

CMD:fireworks(playerid,params[])
{
    if(IsPlayerInRangeOfPoint(playerid, 2, -202.0053,-42.0859,1002.2734 ) || IsPlayerInRangeOfPoint(playerid, 2, -201.8327,-25.3990,1002.2734) || IsPlayerInRangeOfPoint(playerid, 2,-201.9816,-6.7830,1002.2734))
	{
		if(PlayerInfo[playerid][pFireworks] == 0) ShowPlayerDialog(playerid, 1216, DIALOG_STYLE_LIST, "Magazin de Artificii", "{ffffff}1. Pocnitori cu zgomot (4)\t\t{9c65ff}250$\n{ffffff}2. Pocnitori cu iluminare (4)\t\t{9c65ff}340$\n{ffffff}3. Bombe fumigene (3)\t\t\t{9c65ff}500$\n{ffffff}4. Rachete explozibile (3)\t\t{9c65ff}830$\n{ffffff}5. Tun explozive (10)\t\t\t{9c65ff}9999$", "Alege", "Cancel");
		else ShowPlayerDialog(playerid, 1916, DIALOG_STYLE_MSGBOX, "Magazin de Artificii", "Aveti deja niste focuri de artificii, procurarea altor noi le va inlocui.\nDoriti sa continuati?", "Da", "Nu");
	}
	return 1;
}
CMD:tpoff(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
    if(Eventposs == 0) return SendClientMessage(playerid,COLOR_RED, "nu este niciun event");
    foreach(Player,i)
	Eventteleport[i] = 0;
	Eventposs = 0;
    SendClientMessageToAll(COLOR_WHITE, "Teleportul catre event a fost oprit");
	SendClientMessage(playerid,COLOR_WHITE, "Ai inchis teleportul ");
	return 1;
}

CMD:event(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new result[128];
	if(sscanf(params, "s[128]", result)) return SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /event nume event premiu si ce mai doresti");
 	if(WarStarted>0) return SendClientMessage(playerid, COLOR_GRAD2, "Nu poti face event in timpul warului");
	format(strings,sizeof(strings),"~b~[EVENT TIME]~n~~w~ %s",result);
	TextDrawSetString(Textwarevent,strings);
   	TextDrawShowForAll(Textwarevent);
	return 1;
}
CMD:eo(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
    TextDrawHideForAll(Textwarevent);
	return 1;
}

CMD:tpevent(playerid,params[])
{
	if(Eventposs == 0) return SendClientMessage(playerid,COLOR_RED, "nu este niciun event");
    else if(Eventposs == 1)
    {
        new playerState = GetPlayerState(playerid);
		if (playerState == PLAYER_STATE_DRIVER)
        {
            foreach(Player,i)
    		{
				if(Eventteleport[i] == 1)
				{
					new Float:x, Float:y, Float:z;
   					GetPlayerPos(i, x, y, z);
    				new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, x,y,z+2);
					SetPlayerInterior(playerid,GetPlayerInterior(i));
					SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(i));
					LinkVehicleToInterior(tmpcar, GetPlayerInterior(i));
					SendClientMessage(playerid,COLOR_WHITE, "Te-ai teleportat la event");
				}
    		}
		}
		else if (playerState != PLAYER_STATE_DRIVER) return  SendClientMessage(playerid,COLOR_RED, "Ai nevoie de o masina");
	}
    else if(Eventposs == 2)
    {
        new playerState = GetPlayerState(playerid);
        if (playerState == PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_RED, "Eventul este fara masina");
        foreach(Player,i)
    	{
			if(Eventteleport[i] == 1)
			{
				new Float:x, Float:y, Float:z;
   				GetPlayerPos(i, x, y, z);
  				SetPlayerPos(playerid, x,y,z+2);
   				SetPlayerInterior(playerid,GetPlayerInterior(i));
				SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(i));
		    	SendClientMessage(playerid,COLOR_WHITE, "Te-ai teleportat la event");
   			}
   	    }
	}
	return 1;
}



CMD:startevent(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new type;
	if(sscanf(params,"d",type)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /startevent 1- cu masina    2-fara masina");
    if(type < 1 || type > 2) return SendClientMessage(playerid,COLOR_RED,"Doar 1 si 2 cu masina/ fara masina");
    if(type == 1)
	{
	    Eventposs = 1;
	    Eventteleport[playerid] = 1;
	    format(strings, sizeof(strings), "* %s organzieaza event cu vehicul /tpevent intr-o masina", PlayerName(playerid));
	    SendClientMessageToAll(COLOR_WHITE,strings);
	    SendClientMessage(playerid,COLOR_WHITE, "ai deschis eventul ");
	}
	else if(type == 2)
	{
	    Eventposs = 2;
		Eventteleport[playerid] = 1;
  	    format(strings, sizeof(strings), "* %s organzieaza event fara vehicul /tpevent", PlayerName(playerid));
	    SendClientMessageToAll(COLOR_WHITE,strings);
		SendClientMessage(playerid,COLOR_WHITE, "ai deschis eventul ");
	}
	return 1;
}
CMD:blow(playerid,params[])
{
	//AmmoWork
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pFireworks] < 1) return SendClientMessage(playerid, 0xFF8000AA, "Nu aveti focuri de artificii!");
	if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) !=0) return SendClientMessage(playerid, 0xFF8000AA, "Lansarea artificiilor in interiorul cladirilor este interzisa!");
	if(start[playerid] != 0) return SendClientMessage(playerid, 0xFF8000AA, "Va rugam sa asteptati...");
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
	new Float:x, Float:y, Float:z, Float:angle;
 	GetPlayerPos(playerid, x, y, z);
 	GetPlayerFacingAngle(playerid, angle);
 	x += floatsin(-angle, degrees);
 	y += floatcos(-angle, degrees);
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
	PlayerInfo[playerid][pFireworks] --;
	start[playerid] = 1;
	switch(PlayerInfo[playerid][pAmmoWork])
	{
		case 1:
		{
			object[playerid] = CreateDynamicObject(18717, x, y, z-2.6, 0, 0, 0);
			SetTimerEx("dimstart",6000,0,"d",playerid);
		}
		case 2:
		{
			object[playerid] = CreateDynamicObject(18717, x, y, z-2.6, 0, 0, 0);
			SetTimerEx("svetstart",6000,0,"d",playerid);
		}
		case 3:
		{
			object[playerid] = CreateDynamicObject(18728, x, y, z-2, 0, 0, 0);
			SetTimerEx("destroyFlare",10000,0,"d",playerid);
		}
		case 4:
		{
			switch(PColor[playerid])
			{
				case 1: object[playerid] = CreateDynamicObject(1215, x, y, z-0.5, 0, 0, 0);
				case 2: object[playerid] = CreateDynamicObject(19122, x, y, z-0.5, 0, 0, 0);
				case 3: object[playerid] = CreateDynamicObject(19123, x, y, z-0.5, 0, 0, 0);
				case 4: object[playerid] = CreateDynamicObject(19124, x, y, z-0.5, 0, 0, 0);
				case 5: object[playerid] = CreateDynamicObject(19125, x, y, z-0.5, 0, 0, 0);
				case 6: object[playerid] = CreateDynamicObject(19126, x, y, z-0.5, 0, 0, 0);
				case 7: object[playerid] = CreateDynamicObject(19127, x, y, z-0.5, 0, 0, 0);
			}
			SetTimerEx("startone",6000,0,"d",playerid);
		}
		case 5:
		{
		    object[playerid] = CreateDynamicObject(3013, x, y, z-0.8, 0, 0, 0);
			spark[playerid] = CreateDynamicObject(18718, x,y,z-2.1,0,0,0);//scantei
			PColor[playerid] = 10;
			SetTimerEx("SuperFlare",10000,0,"d",playerid);
		}
	}
 	return 1;
}
forward SuperFlare(playerid);
public SuperFlare(playerid)
{
	new Float:x, Float:y, Float:z;
	GetDynamicObjectPos(object[playerid], x, y, z);
	SetTimerEx("SuperFlareGone",2300,0,"d",playerid);
	return 1;
	
}
forward SuperFlareGone(playerid);
public SuperFlareGone(playerid)
{

	new Float:x, Float:y, Float:z;
	GetDynamicObjectPos(object[playerid], x, y, z);
	if(IsValidDynamicObject(spark[playerid])) DestroyDynamicObject(spark[playerid]);//rosu
    spark[playerid] = CreateDynamicObject(1215, x, y, z, 0, 0, 0);//racheta
	MoveDynamicObject(spark[playerid], x, y, z+50, 10.3);
	SetTimerEx("SuperFlareDestroy",2300,0,"d",playerid);
	return 1;
}

forward SuperFlareDestroy(playerid);
public SuperFlareDestroy(playerid)
{
	new Float:x, Float:y, Float:z;
	GetDynamicObjectPos(spark[playerid], x, y, z);
	CreateExplosion(x,y,z, 0, 5);
	CreateExplosion(x,y,z, 0, 5);
	CreateExplosion(x,y,z, 0, 5);
	CreateExplosion(x,y,z, 0, 5);
	PColor[playerid] --;
	//19295 alb	//19296 rosu	//19297 verde	//19298 albastru
	for(new i;i<16;i++)
 	if(IsValidDynamicObject(flare[playerid][i])) DestroyDynamicObject(flare[playerid][i]);
	flare[playerid][0]  = CreateDynamicObject(19295, x-6.00000, y+0.00000, z+0.00000,   0.00000, 0.00000, 0.00000);
	flare[playerid][1]  = CreateDynamicObject(19295, x+6.00000, y+0.00000, z+0.00000,   0.00000, 0.00000, 0.00000);
	flare[playerid][2]  = CreateDynamicObject(19296, x+0.00000, y+6.00000, z+0.00000,   0.00000, 0.00000, 0.00000);
	flare[playerid][3]  = CreateDynamicObject(19296, x+0.00000, y-6.00000, z+0.00000,   0.00000, 0.00000, 0.00000);
	flare[playerid][4]  = CreateDynamicObject(19297, x-4.50000, y-4.50000, z+0.00000,   0.00000, 0.00000, 0.00000);
	flare[playerid][5]  = CreateDynamicObject(19297, x+4.50000, y+4.50000, z+0.00000,   0.00000, 0.00000, 0.00000);
	flare[playerid][6]  = CreateDynamicObject(19298, x-4.50000, y+4.50000, z+0.00000,   0.00000, 0.00000, 0.00000);
	flare[playerid][7]  = CreateDynamicObject(19298, x+4.50000, y-4.50000, z+0.00000,   0.00000, 0.00000, 0.00000);
	flare[playerid][8]  = CreateDynamicObject(19295, x+0.00000, y-3.00000, z+4.00000,   0.00000, 0.00000, 0.00000);
	flare[playerid][9]  = CreateDynamicObject(19296, x+0.00000, y+3.00000, z+4.00000,   0.00000, 0.00000, 0.00000);
	flare[playerid][10] = CreateDynamicObject(19297, x+3.00000, y+0.00000, z+4.00000,   0.00000, 0.00000, 0.00000);
	flare[playerid][11] = CreateDynamicObject(19298, x-3.00000, y+0.00000, z+4.00000,   0.00000, 0.00000, 0.00000);
	flare[playerid][12] = CreateDynamicObject(19295, x+0.00000, y-3.00000, z-4.00000,   0.00000, 0.00000, 0.00000);
	flare[playerid][13] = CreateDynamicObject(19296, x+3.00000, y+0.00000, z-4.00000,   0.00000, 0.00000, 0.00000);
	flare[playerid][14] = CreateDynamicObject(19297, x+0.00000, y+3.00000, z-4.00000,   0.00000, 0.00000, 0.00000);
	flare[playerid][15] = CreateDynamicObject(19298, x-3.00000, y+0.00000, z-4.00000,   0.00000, 0.00000, 0.00000);
	SetTimerEx("DestroyFlareing",2300,0,"d",playerid);
	if(IsValidDynamicObject(spark[playerid]))							DestroyDynamicObject(spark[playerid]);//racheta
	if(IsValidDynamicObject(object[playerid]) && PColor[playerid] < 1)
	{
		DestroyDynamicObject(object[playerid]);//cutie
        start[playerid] = 0;
        return 1;
	}
	CallLocalFunction("SuperFlare", "d",playerid);
	return 1;
}
forward DestroyFlareing(playerid);
public DestroyFlareing(playerid)
{
	for(new i;i<16;i++)
 	if(IsValidDynamicObject(flare[playerid][i])) DestroyDynamicObject(flare[playerid][i]);
 	return 1;
}
// 18728fum rosu in sus
//18724//explozie stelara
//19295 alb
//19296 rosu
//19297 verde
//19298 albastru


CMD:editb(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 8) return SendClientMessage(playerid, 0xFF8000AA, "Nu aveti acces la aceasta comanda!");
	new message[128],prop;
	if(sscanf(params,"s[128]",message))
	{
		SendClientMessage(playerid, COLOR_WHITE, "|__________________ Edit __________________|");
		SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /editb [name] [ammount] (Pentru afaceri)");
		SendClientMessage(playerid, COLOR_GREY, "Nume valabile: Nivel, Pret, Fonduri, Produse, Nume");
		SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
		return 1;
	}
	for(new i = 0; i < MAX_BIZ; i++)
	if (IsPlayerInRangeOfPoint(playerid,3,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
	{
	    if(strcmp(params, "nivel", true) == 0)
 		{
 		   	if(sscanf(params,"d",prop)) return SendClientMessage(playerid,-1,"{00FF00}Folosire:{FFFFFF} /edit Nivel [LevelToBuy]");
 		    BizzInfo[i][bLevelNeeded] = prop;
 		    bUpdate(i,bLevelNeededx);
			SendClientMessage(playerid,-1,"Nivelul afacerii a fost editat");
 		}
	    if(strcmp(params, "pret", true) == 0)
 		{
 		   	if(sscanf(params,"d",prop)) return SendClientMessage(playerid,-1,"{00FF00}Folosire:{FFFFFF} /edit Pret [PretToBuy]");
 		    BizzInfo[i][bBuyPrice] = prop;
 		    bUpdate(i,bBuyPricex);
			SendClientMessage(playerid,-1,"Pretul afacerii a fost editat");
 		}
	    if(strcmp(params, "fonduri", true) == 0)
 		{
 		   	if(sscanf(params,"d",prop)) return SendClientMessage(playerid,-1,"{00FF00}Folosire:{FFFFFF} /edit Profiruei [BaniDinAfacere]");
 		    BizzInfo[i][bTill] = prop;
 		    bUpdate(i,bTillx);
			SendClientMessage(playerid,-1,"Fondurile afacerii a fost editat");
 		}
	    if(strcmp(params, "produse", true) == 0)
 		{
 		   	if(sscanf(params,"d",prop)) return SendClientMessage(playerid,-1,"{00FF00}Folosire:{FFFFFF} /edit Produse [ProduseInAfacere]");
 		    BizzInfo[i][bProducts] = prop;
 		    bUpdate(i,bProductsx);
			SendClientMessage(playerid,-1,"Produsele afacerii a fost editat");
 		}
	    if(strcmp(params, "name", true) == 0)
 		{
 		    new numele[125];
 		   	if(sscanf(params,"s[125]",numele)) return SendClientMessage(playerid,-1,"{00FF00}Folosire:{FFFFFF} /edit Nume [NumeleAfacerii]");
 		   	format(BizzInfo[i][bMessage], 128, numele);
 		    bUpdate(i,bMessagex);
			SendClientMessage(playerid,-1,"Numele afacerii a fost editat");
 		}
	    if(strcmp(params, "owner", true) == 0)
 		{
 		    new numele[125];
 		   	if(sscanf(params,"s[125]",numele)) return SendClientMessage(playerid,-1,"{00FF00}Folosire:{FFFFFF} /edit owner [NumeleAfacerii]");
 		   	format(BizzInfo[i][bOwner], 128, numele);
 		    bUpdate(i,bOwnerx);
			SendClientMessage(playerid,-1,"Ownerul afacerii a fost editat");
 		}
	    if(strcmp(params, "owned", true) == 0)
 		{
 		    new owned;
 		   	if(sscanf(params,"d",owned)) return SendClientMessage(playerid,-1,"{00FF00}Folosire:{FFFFFF} /edit owner [1-0]");
 		   	BizzInfo[i][bOwned] = owned;
 		    bUpdate(i,bOwnedx);
			SendClientMessage(playerid,-1,"Afacere detinuta a fost editat");
 		}
	}
	return 1;
}


public HouseGate(playerid)
{
	if(EditingObjectId[playerid]  != -1)
	MoveDynamicObject(GateInfo[EditingObjectId[playerid]][gObiect] , GateInfo[EditingObjectId[playerid] ][gPosX],GateInfo[EditingObjectId[playerid] ][gPosY],GateInfo[EditingObjectId[playerid] ][gPosZ], 4.0);
    EditingObjectId[playerid] = -1;
	return 1;
}
CMD:businesshelp(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pBiz] == 255) return SendClientMessage(playerid, COLOR_WHITE, "Nu detii o afacere");
	SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	SendClientMessage(playerid, COLOR_WHITE,"*** BUSINESS HELP *** scrie o comanda pentru ajutor");
	SendClientMessage(playerid, COLOR_GRAD3,"*** BUSINESS *** /bizinfo /bizfee /prodprice, /bizwithdraw");
	SendClientMessage(playerid, COLOR_GRAD4,"*** BUSINESS *** /open /sellbiz(75%% din Pret+Profit) /bizbank");
	return 1;
}
CMD:bizhelp(playerid,params[])
return cmd_businesshelp(playerid,params);

CMD:helpbiz(playerid,params[])
return cmd_businesshelp(playerid,params);

CMD:bizzhelp(playerid,params[])
return cmd_businesshelp(playerid,params);

CMD:prodprice(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pBiz] == 255) return SendClientMessage(playerid, COLOR_WHITE, "Nu detii o afacere");
	new bouse = PlayerInfo[playerid][pBiz],price;
	if(sscanf(params, "d", price)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /prodprice [PretProdus]");
	if(price < 0 ||price > 10000) return SendClientMessage(playerid, COLOR_WHITE, "Suma minima este de $0, suma maxima este de $10000.");
	if (bouse >= 100)
	{
		if(price > SBizzInfo[bouse-100][sbTill]) return SendClientMessage(playerid, COLOR_WHITE, "Nu ai atati bani in afacerea ta.");
 		SBizzInfo[bouse-100][sbPriceProd] = price;
		sbUpdate(bouse-100,sbPriceProdx);
		format(strings, sizeof(strings), "Pretul produselor este acum de $%d.", SBizzInfo[bouse-100][sbPriceProd]);
		return 1;
	}
	else
	{
		if(price > BizzInfo[bouse][bTill]) return SendClientMessage(playerid, COLOR_WHITE, "Nu ai atati bani in afacerea ta.");
  		BizzInfo[bouse][bPriceProd] = price;
		format(strings, sizeof(strings), "Pretul produselor este acum de $%d.", BizzInfo[bouse][bPriceProd]);
		bUpdate(bouse,bPriceProdx);
		SendClientMessage(playerid, COLOR_WHITE, strings);
		return 1;
	}
}

CMD:open(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pBiz] == 255) return SendClientMessage(playerid, COLOR_WHITE, "Nu detii o afacere");
	new biz = PlayerInfo[playerid][pBiz];
	if(PlayerInfo[playerid][pBiz] < 100)
	{
		if (!IsPlayerInRangeOfPoint(playerid,3,BizzInfo[biz][bEntranceX], BizzInfo[biz][bEntranceY], BizzInfo[biz][bEntranceZ]) && !IsPlayerInRangeOfPoint(10,playerid,BizzInfo[biz][bExitX], BizzInfo[biz][bExitY], BizzInfo[biz][bExitZ]))
		return SendClientMessage(playerid,COLOR_RED,"Nu esti la usa afacerii");
 		if(BizzInfo[biz][bLocked] == 1)
		{
			BizzInfo[biz][bLocked] = 0;
			bUpdate(biz,bLockedx);
			GameTextForPlayer(playerid, "~w~Usa ~g~deschisa", 5000, 6);
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			return 1;
		}
		if(BizzInfo[biz][bLocked] == 0)
		{
			BizzInfo[biz][bLocked] = 1;
			sbUpdate(biz,bLockedx);
			GameTextForPlayer(playerid, "~w~Usa ~r~inchisa", 5000, 6);
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			return 1;
		}
	}
	else
	{
		if (!IsPlayerInRangeOfPoint(playerid,3,SBizzInfo[biz][sbPosX], SBizzInfo[biz][sbPosY], SBizzInfo[biz][sbPosZ]))
		return SendClientMessage(playerid,COLOR_RED,"Nu esti langa usa afacerii");
  		if(SBizzInfo[biz][sbLocked] == 1)
		{
			SBizzInfo[biz][sbLocked] = 0;
			sbUpdate(biz,sbLockedx);
			GameTextForPlayer(playerid, "~w~Usa ~g~deschisa", 5000, 6);
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			return 1;
		}
		if(SBizzInfo[biz][sbLocked] == 0)
		{
			SBizzInfo[biz][sbLocked] = 1;
			sbUpdate(biz,sbLockedx);
			GameTextForPlayer(playerid, "~w~Usa ~r~inchisa", 5000, 6);
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			return 1;
		}
	}
    return 1;
}


CMD:bizinfo(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pBiz] == 255) return SendClientMessage(playerid, COLOR_WHITE, "Nu detii o afacere");
	new bouse = PlayerInfo[playerid][pBiz];
	if (bouse >= 100)
 	PrintSBizInfo(playerid,bouse-100);
	else
	PrintBizInfo(playerid,bouse);
	return 1;
}

CMD:bizfee(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pBiz] == 255) return SendClientMessage(playerid, COLOR_WHITE, "Nu detii o afacere");
	new bouse = PlayerInfo[playerid][pBiz],price;
	if(sscanf(params, "d", price)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /bizfee [PretIntrare]");
 	if(price < 0 || price > 3000) return SendClientMessage(playerid, COLOR_WHITE, "Suma minima este de $0, suma maxima este de $1000.");
 	if (bouse >= 100)
	{
		SBizzInfo[bouse-100][sbEntrace] = price;
		sbUpdate(bouse-100,sbEntracex);
		UpdateSBizzText(bouse-100);
		format(strings, sizeof(strings), "Pretul de intrare a fost setat pe $%d.", SBizzInfo[bouse-100][sbEntrace]);
	}
	else
	{
		BizzInfo[bouse][bEntranceCost] = price;
		bUpdate(bouse,bEntranceCostx);
		UpdateBizzText(bouse);
		format(strings, sizeof(strings), "Pretul de intrare a fost setat pe $%d.", BizzInfo[bouse][bEntranceCost]);
	}
	SendClientMessage(playerid, COLOR_WHITE, strings);
 	return 1;
}

CMD:bizwithdraw(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pBiz] == 255) return SendClientMessage(playerid, COLOR_WHITE, "Nu detii o afacere");
	new bouse = PlayerInfo[playerid][pBiz],price;
	if(sscanf(params, "d", price)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /bizwithdraw [suma]");
	if (bouse >= 100)
	format(strings, sizeof(strings), "  Ai $%d depozitati.", SBizzInfo[bouse-100][sbTill]);
	else
	format(strings, sizeof(strings), "  Ai $%d depozitati.", BizzInfo[bouse][bTill]);
	SendClientMessage(playerid, COLOR_GRAD3, strings);
	if (bouse >= 100)
	if(price > SBizzInfo[bouse-100][sbTill] || price < 1) return SendClientMessage(playerid, COLOR_GRAD2, "   Nu ai atati bani!");
	if (bouse < 100)
 	if(price > BizzInfo[bouse][bTill] || price < 1) return SendClientMessage(playerid, COLOR_GRAD2, "   Nu ai atati bani!");
 	if (bouse >= 100)
 	{
		if(!IsPlayerInRangeOfPoint(playerid,10,SBizzInfo[bouse-100][sbPosX],SBizzInfo[bouse-100][sbPosY],SBizzInfo[bouse-100][sbPosZ]))	return SendClientMessage(playerid, COLOR_GRAD2, "   Esti prea departe de afacere!");
 		GivePlayerCash(playerid,price);
		SBizzInfo[bouse-100][sbTill] -= price;
		sbUpdate(bouse-100,sbTillx);
		format(strings, sizeof(strings), "  Ai extras $%d din seiful afacerii. Total ramas: $%d ", price,SBizzInfo[bouse-100][sbTill]);
		SendClientMessage(playerid, COLOR_YELLOW, strings);
		return 1;
	}
	if (bouse < 100)
 	{
 		if (!IsPlayerInRangeOfPoint(playerid,10,BizzInfo[bouse][bExitX],BizzInfo[bouse][bExitY],BizzInfo[bouse][bExitZ])) return SendClientMessage(playerid, COLOR_GRAD2, "   Esti prea departe de afacere");
		GivePlayerCash(playerid,price);
		BizzInfo[bouse][bTill] -= price;
		bUpdate(bouse,bTillx);
		format(strings, sizeof(strings), "  Ai extras $%d din seiful afacerii. Total ramas: $%d ", price,BizzInfo[bouse][bTill]);
		SendClientMessage(playerid, COLOR_YELLOW, strings);
		return 1;
	}
	return 1;
}
CMD:bizbank(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pBiz] == 255) return SendClientMessage(playerid, COLOR_WHITE, "Nu detii o afacere");
	new bouse = PlayerInfo[playerid][pBiz],price;
	if(sscanf(params, "d", price)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /bizbank [suma]");
	if (bouse >= 100)
	format(strings, sizeof(strings), "  Ai $%d depozitati.", SBizzInfo[bouse-100][sbTill]);
	else
	format(strings, sizeof(strings), "  Ai $%d depozitati.", BizzInfo[bouse][bTill]);
	SendClientMessage(playerid, COLOR_GRAD3, strings);
	if (bouse >= 100)
	if(price > GetPlayerCash(playerid) || price < 1) return SendClientMessage(playerid, COLOR_GRAD2, "   Nu ai atati bani!");
	if (bouse < 100)
 	if(price > GetPlayerCash(playerid) || price < 1) return SendClientMessage(playerid, COLOR_GRAD2, "   Nu ai atati bani!");
 	if (bouse >= 100)
 	{
		if(!IsPlayerInRangeOfPoint(playerid,10,SBizzInfo[bouse-100][sbPosX],SBizzInfo[bouse-100][sbPosY],SBizzInfo[bouse-100][sbPosZ]))	return SendClientMessage(playerid, COLOR_GRAD2, "   Esti prea departe de afacere!");
 		GivePlayerCash(playerid,-price);
		SBizzInfo[bouse-100][sbTill] += price;
		sbUpdate(bouse-100,sbTillx);
		format(strings, sizeof(strings), "  Ai depozitat $%d din seiful afacerii. Total ramas: $%d ", price,SBizzInfo[bouse-100][sbTill]);
		SendClientMessage(playerid, COLOR_YELLOW, strings);
		return 1;
	}
	if (bouse < 100)
 	{
 		if (!IsPlayerInRangeOfPoint(playerid,10,BizzInfo[bouse][bExitX],BizzInfo[bouse][bExitY],BizzInfo[bouse][bExitZ])) return SendClientMessage(playerid, COLOR_GRAD2, "   Esti prea departe de afacere");
		GivePlayerCash(playerid,-price);
		BizzInfo[bouse][bTill] += price;
		bUpdate(bouse,bTillx);
		format(strings, sizeof(strings), "  Ai depozitat $%d din seiful afacerii. Total ramas: $%d ", price,BizzInfo[bouse][bTill]);
		SendClientMessage(playerid, COLOR_YELLOW, strings);
		return 1;
	}
	return 1;
}

CMD:buybiz(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new Float:oldposx, Float:oldposy, Float:oldposz;
	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	if(PlayerInfo[playerid][pBiz] != 255) return SendClientMessage(playerid, COLOR_WHITE, "   Deja detii o afacere, scrie /sellbiz daca vrei sa o cumperi pe aceasta.");

	for(new b = 0; b < MAX_SBIZ; b++)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 3, SBizzInfo[b][sbPosX], SBizzInfo[b][sbPosY], SBizzInfo[b][sbPosZ]) && SBizzInfo[b][sbOwned] == 0) continue;
  		if(PlayerInfo[playerid][pLevel] < SBizzInfo[b][sbLevelNeeded]) { format(strings, sizeof(strings), "Iti trebuie nivelul %d!",SBizzInfo[b][sbLevelNeeded]);	return SendClientMessage(playerid, COLOR_GRAD5, strings); }
  		if(GetPlayerCash(playerid) <= SBizzInfo[b][sbPrice]) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani!");

		PlayerInfo[playerid][pBiz] = b+100;
		Update(playerid, pBizx);
		SBizzInfo[b][sbOwned] = 1;
		sbUpdate(b,sbOwnedx);
		SBizzInfo[b][sbTill] = 0;
		sbUpdate(b,sbTillx);
		format(SBizzInfo[b][sbOwner], 128, PlayerName(playerid));
		sbUpdate(b,sbOwnerx);
		GivePlayerCash(playerid,-SBizzInfo[b][sbPrice]);
		PlayerPlayMusic(playerid);
		SendClientMessage(playerid, COLOR_WHITE, "Felicitari pentru noua achizitie.");
		SendClientMessage(playerid, COLOR_WHITE, "Scrie /businesshelp pentru a verifica informatii despre afaceri.");
		UpdateSBizzText(b);
		return 1;
	}
 	for(new b = 0; b < sizeof(BizzInfo); b++)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 3, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0) continue;
  		if(PlayerInfo[playerid][pLevel] < BizzInfo[b][bLevelNeeded]) { format(strings, sizeof(strings), "Iti trebuie nivelul %d!",BizzInfo[b][bLevelNeeded]); return SendClientMessage(playerid, COLOR_GRAD5, strings);}
		if(GetPlayerCash(playerid) <= BizzInfo[b][bBuyPrice]) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani");
  		PlayerInfo[playerid][pBiz] = b;
		BizzInfo[b][bOwned] = 1;
		bUpdate(b,bOwnedx);
		BizzInfo[b][bTill] = 0;
		bUpdate(b,bTillx);
		BizzInfo[b][bLocked] = 0;
		bUpdate(b,bLockedx);
		format(BizzInfo[b][bOwner], 128, PlayerName(playerid));
		bUpdate(b,bOwnerx);
		GivePlayerCash(playerid,-BizzInfo[b][bBuyPrice]);
		PlayerPlayMusic(playerid);

		SetPlayerPos(playerid,BizzInfo[b][bExitX], BizzInfo[b][bExitY], BizzInfo[b][bExitZ]);
		SetPlayerInterior(playerid, BizzInfo[b][bInterior]);
		SetPlayerVirtualWorld(playerid,b);
		TogglePlayerControllable(playerid, 0);
    	SetTimerEx("freze", 1000, 0, "i", playerid);
		GameTextForPlayer(playerid, "~w~Bine ai venit~n~Poti iesi Apasand ~r~ENTER", 5000, 3);
		SendClientMessage(playerid, COLOR_WHITE, "Felicitari pentru noua achizitie.");
		SendClientMessage(playerid, COLOR_WHITE, "Scrie /businesshelp pentru a verifica informatii despre afaceri.");
        Update(playerid, pBizx);
		UpdateBizzText(b);
		return 1;
	}
	return 1;
}


CMD:sellbiz(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new Float:oldposx, Float:oldposy, Float:oldposz;
	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	if(PlayerInfo[playerid][pBiz] == 255) return SendClientMessage(playerid, COLOR_WHITE, " Nu detii o afacere");

	if(PlayerInfo[playerid][pBiz] >= 100)
	{
		if(strcmp(PlayerName(playerid), SBizzInfo[PlayerInfo[playerid][pBiz]-100][sbOwner], true))
		return SendClientMessage(playerid,-1,"Aceasta afacere nu va apartine");
	   	new bouse = PlayerInfo[playerid][pBiz]-100;
		SBizzInfo[bouse][sbLocked] = 0;
		sbUpdate(bouse,sbLockedx);
		SBizzInfo[bouse][sbOwned] = 0;
		sbUpdate(bouse,sbOwnedx);
		format(SBizzInfo[bouse][sbOwner], 128, "The State");
		sbUpdate(bouse,sbOwnerx);
		format(SBizzInfo[bouse][sbCoOwner], 128, "No-one");
		sbUpdate(bouse,sbCoOwnerx);
		GivePlayerCash(playerid,SBizzInfo[bouse][sbPrice]/4*3);
		GivePlayerCash(playerid,SBizzInfo[bouse][sbTill]);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(strings, sizeof(strings), "~w~Felicitari~n~ Ti-ai vandut afacerea ~n~~g~$%d Profit %d ~n~Si 75% din pretul intreg %d", SBizzInfo[bouse][sbTill],SBizzInfo[bouse][sbPrice]/4*3);
		GameTextForPlayer(playerid, strings, 10000, 3);
		SBizzInfo[bouse][sbTill] = 0;
		sbUpdate(bouse,sbCoOwnerx);
		PlayerInfo[playerid][pBiz] = 255;
		Update(playerid, pBizx);
		UpdateSBizzText(bouse);
		return 1;
	}
	else
	{
		if(strcmp(PlayerName(playerid), BizzInfo[PlayerInfo[playerid][pBiz]][bOwner], true))
		return SendClientMessage(playerid,-1,"Aceasta afacere nu va apartine");
		new bouse2 = PlayerInfo[playerid][pBiz];
		BizzInfo[bouse2][bLocked] = 0;
		bUpdate(bouse2,bLockedx);
		BizzInfo[bouse2][bOwned] = 0;
		bUpdate(bouse2,bOwnedx);
		format(BizzInfo[bouse2][bOwner], 128, "The State");
		bUpdate(bouse2,bOwnerx);
		format(BizzInfo[bouse2][bExtortion], 128, "No-one");
		bUpdate(bouse2,bExtortionx);
		BizzInfo[bouse2][bTill] = 0;
		bUpdate(bouse2,bTillx);
		GivePlayerCash(playerid,BizzInfo[bouse2][bBuyPrice]/4*3);
		GivePlayerCash(playerid,BizzInfo[bouse2][bTill]);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(strings, sizeof(strings), "~w~Felicitari~n~ Ti-ai vandut afacerea ~n~~g~$%d Profit %d ~n~Si 75% din pretul intreg %d", BizzInfo[bouse2][bTill],BizzInfo[bouse2][bBuyPrice]/4*3);
		GameTextForPlayer(playerid, strings, 10000, 3);
		UpdateBizzText(bouse2);
		PlayerInfo[playerid][pBiz] = 255;
		Update(playerid, pBizx);
		return 1;
	}
}

CMD:editsb(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 8) return SendClientMessage(playerid, 0xFF8000AA, "Nu aveti acces la aceasta comanda!");
	new message[128],prop;
	if(sscanf(params,"s[128]",message))
	{
		SendClientMessage(playerid, COLOR_WHITE, "|__________________ Edit __________________|");
		SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /editsb [name] [ammount] (Pentru afaceri)");
		SendClientMessage(playerid, COLOR_GREY, "Nume valabile: Nivel, Pret, Fonduri, Produse, Nume");
		SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
		return 1;
	}
	for(new i = 0; i < MAX_BIZ; i++)
	if (IsPlayerInRangeOfPoint(playerid,3,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
	{
 		if(strcmp(params, "nivel", true) == 0)
 		{
 		   	if(sscanf(params,"d",prop)) return SendClientMessage(playerid,-1,"{00FF00}Folosire:{FFFFFF} /edit Nivel [LevelToBuy]");
 		    SBizzInfo[i][sbLevelNeeded] = prop;
 		    sbUpdate(i,sbLevelNeededx);
   			SendClientMessage(playerid,-1,"Nivelul afacerii a fost editat");
 		}
 		if(strcmp(params, "pret", true) == 0)
 		{
 		   	if(sscanf(params,"d",prop)) return SendClientMessage(playerid,-1,"{00FF00}Folosire:{FFFFFF} /edit Pret [PretToBuy]");
 		    SBizzInfo[i][sbPrice] = prop;
 		    sbUpdate(i,sbPricex);
			SendClientMessage(playerid,-1,"Pretul afacerii a fost editat");
 		}
 		if(strcmp(params, "fonduri", true) == 0)
 		{
 		   	if(sscanf(params,"d",prop)) return SendClientMessage(playerid,-1,"{00FF00}Folosire:{FFFFFF} /edit Profiruei [BaniDinAfacere]");
 		    SBizzInfo[i][sbTill] = prop;
 		    sbUpdate(i,sbTillx);
			SendClientMessage(playerid,-1,"Fondurile afacerii a fost editat");
 		}
 		if(strcmp(params, "produse", true) == 0)
 		{
 		   	if(sscanf(params,"d",prop)) return SendClientMessage(playerid,-1,"{00FF00}Folosire:{FFFFFF} /edit Produse [ProduseInAfacere]");
 		    SBizzInfo[i][sbProduse] = prop;
 		    sbUpdate(i,sbProdusex);
			SendClientMessage(playerid,-1,"Produsele afacerii a fost editat");
 		}
 		if(strcmp(params, "name", true) == 0)
 		{
 		    new numele[125];
 		   	if(sscanf(params,"s[125]",numele)) return SendClientMessage(playerid,-1,"{00FF00}Folosire:{FFFFFF} /edit Nume [NumeleAfacerii]");
 		   	format(SBizzInfo[i][sbName], 128, numele);
 		    sbUpdate(i,sbNamex);
			SendClientMessage(playerid,-1,"Numele afacerii a fost editat");
 		}
	}
	return 1;
}


CMD:set(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
  	new car = GetPlayerVehicleID(playerid);
   	if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid,COLOR_RED,"Nu ai rangul administrativ necesar");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti in masina");
    new message[128], ammount;
	if(sscanf(params,"s[128]d",message,ammount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "HINT: /set [name] [ammount]");
		SendClientMessage(playerid, COLOR_WHITE, "Available names: gpl, km, gas, fuel, zile");
	 	return 1;
	}
 	if(strmatch(message, "gpl"))
 	{
		if(ammount < 0 || ammount > 1) return SendClientMessage(playerid, COLOR_GREY, "   Doar 1-0 !");
		vInfo[OwnedVeh(car)][vTowed] = ammount;
        vUpdate(OwnedVeh(car), vTowedx);
	    SendClientMessage(playerid, COLOR_GREY, "GPL Schimbat");
	    return 1;
	}
 	if(strmatch(message, "km"))
 	{
	    VehicleKM[car] = ammount;
	    vInfo[OwnedVeh(car)][vVodo] = ammount;
  		vUpdate(OwnedVeh(car), vVodox);
		SendClientMessage(playerid, COLOR_GREY, "KM schimbati");
	}
	if(strmatch(message, "gas"))
 	{
	    GasCar[car] = ammount;
	    SendClientMessage(playerid, COLOR_GREY, "Combustibulul de gaz schimbat!");
  	}
	if(strmatch(message, "fuel"))
 	{
	    gGas[car] = ammount;
	    SendClientMessage(playerid, COLOR_GREY, "Combustibulul masinii schimbat!");
  	}
  	if(strmatch(message, "zile"))
 	{
	    vInfo[OwnedVeh(car)][vOre] = ammount;
	    vUpdate(OwnedVeh(car),vOrex);
	    SendClientMessage(playerid, COLOR_GREY, "Zilele masinii schimbate!");
  	}
	return 1;
}
CMD:closeatm(playerid,params[])
{
	new atm = GetClosestATM(playerid);
	SetPlayerCheckpoint(playerid,atmVariables[atm][ATMPosX],atmVariables[atm][ATMPosY],atmVariables[atm][ATMPosZ],4);
	SendClientMessage(playerid,-1,"Aveti un checkpoint pe mimap");
	CP[playerid] = 22;
	return 1;
}
CMD:atmclose(playerid,params[])
{
	new atm = GetClosestATM(playerid);
	SetPlayerCheckpoint(playerid,atmVariables[atm][ATMPosX],atmVariables[atm][ATMPosY],atmVariables[atm][ATMPosZ],4);
	SendClientMessage(playerid,-1,"Aveti un checkpoint pe mimap");
	CP[playerid] = 22;
	return 1;
}
CMD:atmcloset(playerid,params[])
{
	new atm = GetClosestATM(playerid);
	SetPlayerCheckpoint(playerid,atmVariables[atm][ATMPosX],atmVariables[atm][ATMPosY],atmVariables[atm][ATMPosZ],4);
	SendClientMessage(playerid,-1,"Aveti un checkpoint pe mimap");
	CP[playerid] = 22;
	return 1;
}
CMD:closteatm(playerid,params[])
{
	new atm = GetClosestATM(playerid);
	SetPlayerCheckpoint(playerid,atmVariables[atm][ATMPosX],atmVariables[atm][ATMPosY],atmVariables[atm][ATMPosZ],4);
	SendClientMessage(playerid,-1,"Aveti un checkpoint pe mimap");
	CP[playerid] = 22;
	return 1;
}
//==========================================================================

CMD:voteaza(playerid,params[])
{
	if(gLogged[playerid] == 0) return 1;
	if(StartVoting==0) return SCM(playerid,-1,"Voturile sunt oprite!");
	if(PlayerInfo[playerid][pConnectTime] < 1800)return SCM(playerid,-1,"Nu ai 30 minute!");
	if(PlayerInfo[playerid][pAchievement11] == 1) return SCM(playerid,-1,"Ai votat deja pe cineva!");
   	new Membrii[2000];

    mysql_format(handle, query, 500,"SELECT * FROM `players` WHERE `Dice` > 0");
	new Cache:Result2 = mysql_query(handle,query);
	for(new i=0;i<cache_get_row_count();i++)
    {
     	cache_get_field_content(i, "username", temp);	format(Participant[i], 128, temp);
		format(strings, sizeof(strings), "{FFFFFF}%s, %s\n",IsOnline(Participant[i]),Participant[i]);
		strcat(Membrii,strings);
	}
    cache_delete(Result2);
	ShowPlayerDialog(playerid, 43, DIALOG_STYLE_LIST, "{FFFFFF}Members", Membrii, "Ok","");
	return 1;
}

CMD:admins(playerid,params[])
{
    new rankul,adminiall,admduty[30],idp,adminion,Membername[128],rankname[30],Membrii[3000],strong[500];
	new Cache:Result = mysql_query(handle, "SELECT NULL FROM `players` WHERE `AdminLevel` > 0");
	adminiall =  cache_num_rows();
	cache_delete(Result);
	new Cache:Result2 = mysql_query(handle, "SELECT NULL FROM `players` WHERE `AdminLevel` > 0 AND `Online` > 0");
	adminion =  cache_num_rows();
	cache_delete(Result2);
    format(strings, sizeof(strings), "{FFFFFF}\t\t\t\t\tIn total sunt [%d/%d] Admini Online %d\n\n",adminion,adminiall);
	strcat(Membrii,strings);

    mysql_format(handle, query, 500,"SELECT * FROM `players` WHERE `AdminLevel`>0 ORDER BY `AdminLevel` DESC");
	new Cache:Result1 = mysql_query(handle,query);
	for(new i=0;i<cache_get_row_count();i++)
    {
     	cache_get_field_content(i, "AdminLevel", temp);			rankul = strval(temp);
     	cache_get_field_content(i, "username", temp);			format(Membername, 128, temp);
        if(IsPlayerConnected(ReturnUser(Membername)))
        {
        	idp = ReturnUser(Membername);
            if(AdminDuty[idp] == 1)
         	format(admduty,128,"{04FB1D}On-Duty");
         	else
			format(admduty,128,"{F20D0D}Off-Duty");
		}
		else
		{
        	idp = -1;
			format(admduty,128,"{F20D0D}Off-Duty");
		}

       	if(rankul == 8)			format(rankname,128,"{4073BF}» Server Owner:\t");
		else if(rankul == 7)	format(rankname,128,"{4073BF}» Server Designer:\t");
		else if(rankul == 6)	format(rankname,128,"{4073BF}» Developer:\t");
		else if(rankul == 5)	format(rankname,128,"{4073BF}» Main Controler:\t");
		else if(rankul == 4)	format(rankname,128,"{4073BF}» Administrator:\t");
		else if(rankul == 3)	format(rankname,128,"{4073BF}» Senior Admin:\t");
		else if(rankul == 2)	format(rankname,128,"{4073BF}» Global Moderator:");
		else if(rankul == 1)	format(rankname,128,"{4073BF}» Trial Staff:\t\t");
        format(strong, sizeof(strong), "{FFFFFF}(Admin %d) %s\t\t%s\t%s\t\t{0D80F2}%s[{FFFFFF}%d{4073BF}]\n",rankul,rankname,admduty,IsOnlinePlayer(Membername),Membername,idp);
		strcat(Membrii,strong);
	}
	cache_delete(Result1);
	ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, "{FFFFFF}Adminii "#SERVERNAME"", Membrii, "Ok","");
	return 1;
}

CMD:members(playerid,params[])
{
    if(PlayerInfo[playerid][pMember] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu faci parte dintr-o factiune");
    new rankul,Membername[20],Membrii[2000];

    format(strings, sizeof(strings), "{FFFFFF}\tIn total sunt [%d/10] membri in Factiunea %d\n",GetFactionMembers(PlayerInfo[playerid][pMember]),PlayerInfo[playerid][pMember]);
	strcat(Membrii,strings);

    mysql_format(handle, query, 500,"SELECT * FROM `players` WHERE `Member`='%d'",PlayerInfo[playerid][pMember]);
	new Cache:Result = mysql_query(handle,query);
	for(new i=0;i<cache_get_row_count();i++)
    {
     	cache_get_field_content(i, "Rank", temp);			rankul = strval(temp);
     	cache_get_field_content(i, "username", temp);		format(Membername, 128, temp);
  		format(strings, sizeof(strings), "{FFFFFF}\tRank:%d | %s\t| Membru:{0D80F2} %s\n",rankul,IsOnline(Membername),Membername);
		strcat(Membrii,strings);
	}
    cache_delete(Result);
	ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, "{FFFFFF}Members", Membrii, "Ok","");
	return 1;
}

CMD:member(playerid, params[])
{return cmd_members(playerid, params);}

CMD:team(playerid, params[])
{return cmd_members(playerid, params);}

CMD:leaders(playerid,params[])
{
	new strong[2600];
    if(GetFactionLeaders(1) != 0)	format(strings,sizeof(strings),"{FFFFFF}ID 01 {0080FF}**LSPD:\t\t\t[%d/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: %s 	| %s   {0D80F2}|Name:{FFFFFF} %s \n",GetFactionMembers(1),GetLasSeen(GetFactionLeader(1)), IsOnline(GetFactionLeader(1)),GetFactionLeader(1));
	else							format(strings,sizeof(strings),"{FFFFFF}ID 01 {0080FF}**LSPD:\t\t\t[0/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: ****-**-** **:**:** 	|  ------    {0D80F2}|Name:{FFFFFF} No-One \n");
    strcat(strong,strings);

    if(GetFactionLeaders(2) != 0)	format(strings,sizeof(strings),"ID 02 {004DFF}**FBI:\t\t\t[%d/10]\t{FFFFFF}{0D80F2}Last On{FFFFFF}: %s 	| %s   {0D80F2}|Name:{FFFFFF} %s \n",GetFactionMembers(2),GetLasSeen(GetFactionLeader(2)), IsOnline(GetFactionLeader(2)),GetFactionLeader(2));
	else						  	format(strings,sizeof(strings),"ID 02 {004DFF}**FBI:\t\t\t[0/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: ****-**-** **:**:** 	|  ------    {0D80F2}|Name:{FFFFFF} No-One \n");
    strcat(strong,strings);

	if(GetFactionLeaders(3) != 0)	format(strings, sizeof(strings), "ID 03 {001AFF}** NG:\t\t\t[%d/10]\t{FFFFFF}{0D80F2}Last On{FFFFFF}: %s 	| %s   {0D80F2}|Name:{FFFFFF} %s \n",GetFactionMembers(3),GetLasSeen(GetFactionLeader(3)), IsOnline(GetFactionLeader(3)),GetFactionLeader(3));
	else						   	format(strings,sizeof(strings),"ID 03 {001AFF}**NG:\t\t\t[0/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: ****-**-** **:**:** 	|  ------    {0D80F2}|Name:{FFFFFF} No-One \n");
	strcat(strong,strings);

	if(GetFactionLeaders(4) != 0)	format(strings, sizeof(strings), "ID 04 {999999}** PRESEDENTIE:\t\t[%d/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: %s 	| %s   {0D80F2}|Name:{FFFFFF} %s \n",GetFactionMembers(4),GetLasSeen(GetFactionLeader(4)), IsOnline(GetFactionLeader(4)),GetFactionLeader(4));
	else						  	format(strings,sizeof(strings),"ID 04 {999999}**PRESEDENTIE:\t\t[0/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: ****-**-** **:**:** 	|  ------    {0D80F2}|Name:{FFFFFF} No-One \n");
 	strcat(strong,strings);

	if(GetFactionLeaders(5) != 0)	format(strings, sizeof(strings), "ID 05 {CA04FB}** RIFA:\t\t\t[%d/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: %s 	| %s   {0D80F2}|Name:{FFFFFF} %s \n",GetFactionMembers(5),GetLasSeen(GetFactionLeader(5)), IsOnline(GetFactionLeader(5)),GetFactionLeader(5));
	else						   	format(strings,sizeof(strings),"ID 05 {CA04FB}** RIFA:\t\t\t[0/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: ****-**-** **:**:** 	|  ------    {0D80F2}|Name:{FFFFFF} No-One \n");
    strcat(strong,strings);

	if(GetFactionLeaders(6) != 0)	format(strings, sizeof(strings), "ID 06 {0DF2F2}** TRIADS:\t\t[%d/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: %s	| %s   {0D80F2}|Name:{FFFFFF} %s \n",GetFactionMembers(6),GetLasSeen(GetFactionLeader(6)), IsOnline(GetFactionLeader(6)),GetFactionLeader(6));
	else						   	format(strings,sizeof(strings),"ID 06 {0DF2F2}** TRIADS:\t\t[0/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: ****-**-** **:**:** 	|  ------    {0D80F2}|Name:{FFFFFF} No-One \n");
	strcat(strong,strings);

	if(GetFactionLeaders(7) != 0)	format(strings, sizeof(strings), "ID 07 {999999}** GUVERN:\t\t[%d/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: %s 	| %s   {0D80F2}|Name:{FFFFFF} %s \n",GetFactionMembers(7),GetLasSeen(GetFactionLeader(7)), IsOnline(GetFactionLeader(7)),GetFactionLeader(7));
	else						   	format(strings,sizeof(strings),"ID 07 {999999}** GUVERN:\t\t[0/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: ****-**-** **:**:** 	|  ------    {0D80F2}|Name:{FFFFFF} No-One \n");
    strcat(strong,strings);

	if(GetFactionLeaders(8) != 0)	format(strings, sizeof(strings), "ID 08 {FFFFFF}** HITMAN:\t\t[%d/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: %s 	| %s   {0D80F2}|Name:{FFFFFF} %s \n",GetFactionMembers(8),GetLasSeen(GetFactionLeader(8)), IsOnline(GetFactionLeader(8)),GetFactionLeader(8));
	else						   	format(strings,sizeof(strings),"ID 08 {FFFFFF}** HITMAN:\t\t[0/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: ****-**-** **:**:** 	|  ------    {0D80F2}|Name:{FFFFFF} No-One \n");
    strcat(strong,strings);

	if(GetFactionLeaders(9) != 0)	format(strings, sizeof(strings), "ID 09 {FFCC00}** NR:\t\t\t[%d/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: %s 	| %s   {0D80F2}|Name:{FFFFFF} %s \n",GetFactionMembers(9),GetLasSeen(GetFactionLeader(9)), IsOnline(GetFactionLeader(9)),GetFactionLeader(9));
  	else						   	format(strings,sizeof(strings),"ID 09 {FFCC00}** NR:\t\t\t[0/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: ****-**-** **:**:** 	|  ------    {0D80F2}|Name:{FFFFFF} No-One \n");
   	strcat(strong,strings);

	if(GetFactionLeaders(10) != 0)	format(strings, sizeof(strings), "ID 10 {FFFF00}** TAXI:\t\t\t[%d/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: %s 	| %s   {0D80F2}|Name:{FFFFFF} %s \n",GetFactionMembers(10),GetLasSeen(GetFactionLeader(10)), IsOnline(GetFactionLeader(10)),GetFactionLeader(10));
	else							format(strings,sizeof(strings),"ID 10 {FFFF00}** TAXI:\t\t\t[0/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: ****-**-** **:**:** 	|  ------    {0D80F2}|Name:{FFFFFF} No-One \n");
    strcat(strong,strings);

	if(GetFactionLeaders(11) != 0)	format(strings, sizeof(strings), "ID 11 {001AFF}** NAVY SEAL:\t\t[%d/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: %s 	| %s   {0D80F2}|Name:{FFFFFF} %s \n",GetFactionMembers(11),GetLasSeen(GetFactionLeader(11)), IsOnline(GetFactionLeader(11)),GetFactionLeader(11));
	else						 	format(strings,sizeof(strings),"ID 11 {001AFF}** NAVY SEAL:\t\t[0/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: ****-**-** **:**:** 	|  ------    {0D80F2}|Name:{FFFFFF} No-One \n");
	strcat(strong,strings);

	if(GetFactionLeaders(12) != 0)	format(strings, sizeof(strings), "ID 12 {999999}** PARLAMENTUL:\t[%d/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: %s 	| %s   {0D80F2}|Name:{FFFFFF} %s \n",GetFactionMembers(12),GetLasSeen(GetFactionLeader(12)), IsOnline(GetFactionLeader(12)),GetFactionLeader(12));
	else						   	format(strings,sizeof(strings),"ID 12 {999999}** PARLAMENTUL:\t[0/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: ****-**-** **:**:** 	|  ------    {0D80F2}|Name:{FFFFFF} No-One \n");
   	strcat(strong,strings);

	if(GetFactionLeaders(13) != 0)	format(strings, sizeof(strings), "ID 13 {FF00E6}** BRATVA:\t\t[%d/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: %s 	| %s   {0D80F2}|Name:{FFFFFF} %s \n",GetFactionMembers(13),GetLasSeen(GetFactionLeader(13)), IsOnline(GetFactionLeader(13)),GetFactionLeader(13));
	else        				  	format(strings,sizeof(strings),"ID 13 {FF00E6}** BRATVA:\t\t[0/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: ****-**-** **:**:** 	|  ------    {0D80F2}|Name:{FFFFFF} No-One \n");
    strcat(strong,strings);

	if(GetFactionLeaders(14) != 0)	format(strings, sizeof(strings), "ID 14 {F70997}** BALLAS:\t\t[%d/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: %s 	| %s   {0D80F2}|Name:{FFFFFF} %s \n",GetFactionMembers(14),GetLasSeen(GetFactionLeader(14)), IsOnline(GetFactionLeader(14)),GetFactionLeader(14));
	else						   	format(strings,sizeof(strings),"ID 14 {F70997}** BALLAS:\t\t[0/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: ****-**-** **:**:** 	|  ------    {0D80F2}|Name:{FFFFFF} No-One \n");
    strcat(strong,strings);

	if(GetFactionLeaders(15) != 0)	format(strings, sizeof(strings), "ID 15 {04FB1D}** SEVILLE: \t\t[%d/10]\t{FFFFFF}{0D80F2}Last On{FFFFFF}: %s 	| %s   {0D80F2}|Name:{FFFFFF} %s \n",GetFactionMembers(15),GetLasSeen(GetFactionLeader(15)), IsOnline(GetFactionLeader(15)),GetFactionLeader(15));
	else						   	format(strings,sizeof(strings),"ID 15 {04FB1D}** SEVILLE:\t\t[0/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: ****-**-** **:**:** 	|  ------    {0D80F2}|Name:{FFFFFF} No-One \n");
    strcat(strong,strings);

	if(GetFactionLeaders(16) != 0)	format(strings, sizeof(strings), "ID 16 {B3944D}** CORLEONE:\t\t[%d/10]\t{FFFFFF}{0D80F2}Last On{FFFFFF}: %s 	| %s   {0D80F2}|Name:{FFFFFF} %s \n",GetFactionMembers(16),GetLasSeen(GetFactionLeader(16)), IsOnline(GetFactionLeader(16)),GetFactionLeader(16));
	else   							format(strings,sizeof(strings),"ID 16 {B3944D}** CORLEONE:\t\t[0/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: ****-**-** **:**:** 	|  ------    {0D80F2}|Name:{FFFFFF} No-One \n");
    strcat(strong,strings);

	if(GetFactionLeaders(17) != 0)	format(strings, sizeof(strings), "ID 17 {004DFF}** CIA:\t\t\t[%d/10]\t{FFFFFF}{0D80F2}Last On{FFFFFF}: %s 	| %s   {0D80F2}|Name:{FFFFFF} %s \n",GetFactionMembers(17),GetLasSeen(GetFactionLeader(17)), IsOnline(GetFactionLeader(17)),GetFactionLeader(17));
	else   							format(strings,sizeof(strings),"ID 17 {004DFF}** CIA:\t\t\t[0/10]{FFFFFF}\t{0D80F2}Last On{FFFFFF}: ****-**-** **:**:** 	|  ------    {0D80F2}|Name:{FFFFFF} No-One \n");
    strcat(strong,strings);

	ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, ""#SERVERNAME" Factions", strong, "Ok","");
	return 1;
}

CMD:leader(playerid, params[])
{return cmd_leaders(playerid, params);}

CMD:factionlist(playerid, params[])
{return cmd_leaders(playerid, params);}

CMD:leadere(playerid, params[])
{return cmd_leaders(playerid, params);}


CMD:lideri(playerid, params[])
{return cmd_leaders(playerid, params);}


CMD:factions(playerid, params[])
{return cmd_leaders(playerid, params);}


CMD:sur(playerid, params[])
{return cmd_surrender(playerid, params);}

CMD:factiuni(playerid, params[])
{return cmd_leaders(playerid, params);}



CMD:helpers(playerid,params[])
{
	SendClientMessage(playerid, 0x00B3FFC8, "{FF3300}________ {ffffff}Helperi Online {FF3300}________");
	foreach(Player,i)
	{
	    if(PlayerInfo[i][pHelper] == 1)
		{
		    format(strings, 256, "{4073BF}» Trial Helper: {ffffff}%s {4073BF}ID:{ffffff}%d", PlayerName(i),i);
		    SendClientMessage(playerid,0xCAFF70AA, strings);
		}
        if(PlayerInfo[i][pHelper] == 2)
		{
  		    format(strings, 256, "{4073BF}» Helper: {ffffff}%s {4073BF}ID: {ffffff}%d", PlayerName(i),i);
	        SendClientMessage(playerid,0x1E90FFAA, strings);
	    }
        if(PlayerInfo[i][pHelper] == 3)
		{
			format(strings, 256, "{4073BF}» Lead Helper: {ffffff}%s{4073BF}ID: {ffffff}%d", PlayerName(i),i);
			SendClientMessage(playerid,0xFFDEADAA, strings);
   		}
    }
    return 1;
}

CMD:cvip(playerid,params[])
{
	if(!gLogged[playerid]) return 1;
	new strong[400];
    strcat(strong,"Dobanda dubla la payday\n");
	strcat(strong,"Respect dublu la payday\n");
	strcat(strong,"4 sloturi la masini, player normali au 2\n");
	strcat(strong,"/togn - opresti chatul news pentru tine\n");
	strcat(strong,"/togw - opresti soapta pentru tine\n");
	strcat(strong,"/togooc - opresti chatul ooc pentru tine\n");
	strcat(strong,"/togfam - opresti chatul factiuni pentru tine\n");
	strcat(strong,"/togac - opresti chatul ac pentru tine\n");
	strcat(strong,"/toglc - opresti chatul local pentru tine\n");
	strcat(strong,"/tognews - opresti news-urile pentru tine\n");
	strcat(strong,"3 000$ in plus la orice rob\n");
	strcat(strong,"Acces la chatul vip /vip text\n");
	strcat(strong,"5 000 000 la achizitionarea contului vip\n");
	strcat(strong,"Playerul vip apare la /vips\n");
	strcat(strong,"3 000$ pentru fiecare tura de job facuta\n");
	strcat(strong,"Grup special forum!\n");
	strcat(strong,"Acces la chat doar pentru vip\n");
	strcat(strong,"Schimbare culoare chat!\n");
	strcat(strong,"/jobs puteti avea 2 joburi!\n");
	ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, "Beneficii VIP", strong, "Ok","");
	return 1;
}
CMD:vip(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new message[128];
	if(PlayerInfo[playerid][pHelper] < 1 && PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pPremiumAccount] == 0) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_WHITE,"/vip [message]");
 	if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(message) || FindIP(message))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe vip: %s",PlayerName(playerid),playerid, message);
        AdminsBroadCast(-1,strings,1);
 	    return 1;
	}
	foreach(Player,i)
    if(PlayerInfo[playerid][pPremiumAccount] > 0 || PlayerInfo[playerid][pAdmin] > 6)
    SCM(i,COLOR_YELLOW,message);
 	return 1;
}
CMD:vips(playerid,params[])
{
	SendClientMessage(playerid, 0xFFFF80C8, "_____ VIP' s Online _____");
	foreach(Player,i)
	{
 		if(PlayerInfo[i][pPremiumAccount] == 1)
		{
		 	format(strings, 256, "{ffffff}» {ffd700}VIP : {ffffff}%s [%d] {FFFF00}", PlayerName(i),i);
	        SendClientMessage(playerid,0xFFDEADAA, strings);
      	}
        if(PlayerInfo[i][pPremiumAccount] == 2)
		{
			format(strings, 256, "{ffffff}» {ffd700}Good VIP: {ffffff}%s [%d] {FFFF00} Level 2", PlayerName(i),i);
	        SendClientMessage(playerid,0xFFDEADAA, strings);
		}
  	    if(PlayerInfo[i][pPremiumAccount] == 3)
  	    {
        	format(strings, 256, "{ffffff}» {ffd700}Hard VIP: {ffffff}%s [%d] {FFFF00} Level 2", PlayerName(i),i);
        	SendClientMessage(playerid,0xCAFF70AA, strings);
    	}
    }
	return 1;
}

CMD:payday(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	format(strings,255,"%s[%d] a dat payday la toti!",PlayerName(playerid),playerid);
	SendClientMessageToAll(-1,strings);
	PayDay();
	return 1;
}


CMD:countdown(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 3) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new countdowns;
	if(sscanf(params,"d",countdowns)) return SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /coutdown [seconds(3-60)]");
	if(countdowns > 60 || countdowns < 3) return SendClientMessage(playerid, COLOR_GREY,"* Seconds must not go above 60 or below 3!");
	CountdownSeconds = countdowns;
	KillTimer(CountTimer);
	CountTimer = SetTimer("CountDowned",1000,true);
	SendClientMessage(playerid,-1,"Countdown started!");
	return 1;
}

CMD:setskin(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa,skin;
	if(sscanf(params,"ud",playa,skin)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /setskin [playerid] [skin]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(skin > 311 || skin < 1) return SendClientMessage(playerid, COLOR_GREY, "Wrong skin ID!");
	PlayerInfo[playa][pSkin] = skin;
	Update(playa,pSkinx);
	SetPlayerSkin(playa,PlayerInfo[playa][pSkin]);
	SCM(playerid,-1,"Skin schimbat");

	return 1;
}

CMD:invite(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
 	new para1;
	if(sscanf(params,"u",para1)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /invite [playerid/numejucator]");
	if(gLogged[para1] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(para1 == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if ((PlayerInfo[para1][pMember] != 0 && PlayerInfo[playerid][pAdmin] != 8)|| (PlayerInfo[para1][pLeader] != 0 && PlayerInfo[playerid][pAdmin] != 8)) return SendClientMessage(playerid,-1,"playerul face parte dintr-o factiune");
	if (PlayerInfo[playerid][pLeader] == 0 ) return SendClientMessage(playerid,-1,"Nu esti Lider");
	if(PlayerInfo[para1][pPunish] > 0) return SendClientMessage(playerid, COLOR_GRAD2, "** Playerul are BlackList!");
	format(strings, sizeof(strings), "{1580EA}Faction: {FFFFFF}%s vrea sa te invite in factiunea lui. Scrie /acccept invite pentru a accepta.", PlayerName(playerid));
	SendClientMessage(para1, COLOR_WHITE, strings);
	format(strings, sizeof(strings), "{1580EA}Faction: {FFFFFF}I-ai trimis lui %s o cerere de intrare in factiune.", PlayerName(para1));
	SendClientMessage(playerid, COLOR_WHITE, strings);
	FactionOffer[para1] = playerid;
	format(strings, sizeof(strings), "%s %d l-a invitat pe %s %d in factiunea lui cu id: %d", PlayerName(playerid),playerid,PlayerName(para1),para1,PlayerInfo[playerid][pLeader]);
	mysql_format(handle, query, 500, "INSERT INTO `factionlog` (`FactionID`,`Efector`,`Receptor`,`Actiunea`,`TimeStamps`) VALUES ('%d','%s','%s','%s','%s')",
	PlayerInfo[playerid][pLeader],PlayerName(playerid),PlayerName(para1),strings,CurrentTimeStamps());
	mysql_query(handle,query);
	SetPlayerToTeamColor(para1);
	return 1;
}



CMD:laser(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
    if(GetPlayerWeapon(playerid) != 30 && GetPlayerWeapon(playerid) != 31) return SendClientMessage(playerid,-1,"Nu ai m4 sau ak47");
	if(PlayerInfo[playerid][pLaser] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu ai laser");
    if(IsPlayerAttachedObjectSlotUsed(playerid,8)) RemovePlayerAttachedObject(playerid,8);
    else
	SetPlayerAttachedObject(playerid, 8, 18643, 6, 0.108249, 0.030232, 0.118051, 28.0, -9.0, 0.0);
	return 1;
}

CMD:buylaser(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
    if(PlayerInfo[playerid][pLaser] == 0) PlayerInfo[playerid][pLaser] = 1;
    else  PlayerInfo[playerid][pLaser] = 0;
	Update(playerid,pLaserx);
	SCM(playerid,-1,"Changed");
	return 1;
}


CMD:tod(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new time;
	if(sscanf(params,"d",time)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /tod [timeofday] (0-23)");
    SetWorldTime(time);
	format(strings, sizeof(strings), "Ora a fost setata in: %d:00.", time);
	BroadCast(COLOR_GRAD1, strings);
	return 1;
}

CMD:unrentveh(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(HireCar[playerid] == 255) return GameTextForPlayer(playerid, "~w~Nu ai masina", 5000, 3);
//	UnLockCar(HireCar[playerid]);
	GameTextForPlayer(playerid, "~w~Ai renuntat la ~n~inchirierea masinii", 5000, 3);
    SetVehicleToRespawn(HireCar[playerid]);
	HireCar[playerid] = 255;
	return 1;
}
CMD:glasses(playerid,params[])
{
	if(PlayerInfo[playerid][pGlasses] != -1)
	{
	    new glasseid, id, tmp[144],idx,skin = GetPlayerSkin(playerid);
		tmp = strtok(params, idx);
  		id = strval(tmp);
        if(id == 0)
		{
		    StopPlayerHoldingObject(playerid);
		    PlayerInfo[playerid][pGlasses] = id;
		    Update(playerid,pGlassesx);
		    GameTextForPlayer(playerid, "~r~Ai dat jos ochelarii", 1000, 3);
    		ApplyAnimation(playerid, "goggles", "goggles_put_on", 4.0, 0, 0, 0, 0, 0);
		    return 1;
		}
		if(id < 0 || id > 33) return SendClientMessage(playerid, 0xFFFFFFAA, "Glasses: /glasses [0 - 33]");
		if(id > 30) goto PutPoliceGlasses;
		else
		{
		    id--;
		    glasseid =  CommonRed + id;
		    PlayerInfo[playerid][pGlasses] = id;
		    Update(playerid,pGlassesx);
			GameTextForPlayer(playerid, "~b~Ti-ai pus ochelarii", 1000, 3);
    		ApplyAnimation(playerid, "goggles", "goggles_put_on", 4.0, 0, 0, 0, 0, 0);
			SetPlayerHoldingObject(playerid, glasseid, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
			return 1;
		}
	    PlayerInfo[playerid][pGlasses] = id;
	    Update(playerid,pGlassesx);
		GameTextForPlayer(playerid, "~b~Ti-ai pus ochelarii", 1000, 3);
    	ApplyAnimation(playerid, "goggles", "goggles_put_on", 4.0, 0, 0, 0, 0, 0);
 		PutPoliceGlasses:
		glasseid = CopGlassesBlack + (id - 31);
		SetPlayerHoldingObject(playerid, glasseid, 2, SkinOffSet[skin][0], floatadd(SkinOffSet[skin][1], 0.004500), SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
	}
	else return SendClientMessage(playerid, COLOR_WHITE,"*Nu ai ochelari. Poti cumpara de la 24/7!");
	return 1;
}
CMD:skydive(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
    new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x, y, z);
	ServerWeapon(playerid, 46, 0);
	SetPlayerPos(playerid,x, y, z+1500);
	SendClientMessage(playerid, COLOR_WHITE, "GO!! GO!! GO!!");
	return 1;
}




CMD:sound(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 3) return	SendClientMessage(playerid, COLOR_GRAD1, "   Nu ai rangul administrativ necesar!");
	new dammount,Float:x,Float:y,Float:z;
	if(sscanf(params,"d",dammount)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /sound [soundid]");
	//if(ValidSounds[dammount]) return SendClientMessage(playerid, COLOR_GRAD2, "Invalid sound");
    GetPlayerPos(playerid, x, y, z);
 	PlayerPlaySound(playerid, dammount,x,y,z);
 	return 1;
}

CMD:checkweapons(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 1) return	SendClientMessage(playerid, COLOR_GRAD1, "   Nu ai rangul administrativ necesar!");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /cwe [playerid]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");

	new sweapon, sammo, gunname[100];
	format(strings, sizeof(strings), "[ADMIN]: Admistrator %s[%d] se uita la armele lui %s [%d].", PlayerName(playerid),playerid,PlayerName(playa),playa);
	AdminsBroadCast(COLOR_LIGHTRED, strings, 1);
 	format(strings, sizeof(strings), "%s (%d) are armele urmatoare:", PlayerName(playa),playa);
    SendClientMessage(playerid, COLOR_LIGHTRED, strings);
	for (new i=0; i<12; i++)
    {
      	GetWeaponName(GetPlayerWeapon(playa), gunname, sizeof(gunname));
	    GetPlayerWeaponData(playa, i, sweapon, sammo);
	    format(strings, sizeof(strings), "Slot %d:    %s    [ID: %d    Ammo: %d]", i, gunname,sweapon, sammo);
	    SendClientMessage(playerid, -1, strings);
    }
	return 1;
}
CMD:cnn(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_RED, "   Nu ai rangul administrativ necesar!");
	if(Comenzi[playerid] < 0) return SendClientMessage(playerid,-1,"Asteapta inainte de a folosi iar comanda");

    new msg[25], ty, time;
    if(sscanf(params, "iis[25]", time, ty, msg)) return SendClientMessage(playerid, -1, "Usage: /announce [Time] [Msg Type] [TEXT]");
    if(ty >= 8 || ty == 0 || ty == 2) return SendClientMessage(playerid, -1, "Doar 1,3,4,5,6,7");
    GameTextForAll(msg, time, ty);
    return 1;
}
/*
CMD:cnn(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_RED, "   Nu ai rangul administrativ necesar!");
	if(Comenzi[playerid] < 0) return SendClientMessage(playerid,-1,"Asteapta inainte de a folosi iar comanda");
	new message[128],txtid;
	if(sscanf(params,"ds[128]",txtid,message)) return SendClientMessage(playerid, COLOR_RED, "{00FF00}Folosire:{FFFFFF} /cnn [3-5]   [textformat ~n~ Newline, ~r~ Red, ~g~ Green, ~b~ Blue, ~w~ White, ~y~, Yellow]");
    if(txtid != 3 && txtid != 4 && txtid !=5) return SendClientMessage(playerid,COLOR_RED,"Atentie Formatul trebuie sa fie 3,4 sau 5!");
 	format(strings, sizeof(strings), "~b~ %s: ~n~~w~%s",PlayerName(playerid),message);
    Comenzi[playerid] = 6;
	foreach(Player,i)
  	GameTextForPlayer(i, strings, 5000, txtid);//
	return 1;
}

CMD:cnnn(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 2) return	SendClientMessage(playerid, COLOR_GRAD1, "   Nu ai rangul administrativ necesar!");
	if(Comenzi[playerid] < 0) return SendClientMessage(playerid,-1,"Asteapta inainte de a folosi iar comanda");
	new message,style;
	if(sscanf(params,"ds[128]",style,message)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /cnnn [3-5] [textformat ~n~ Newline, ~r~ Red, ~g~ Green, ~b~ Blue, ~w~ White, ~y~, Yellow]");
    if(style != 3 && style != 4 && style !=5) return SendClientMessage(playerid,COLOR_RED,"Atentie Formatul trebuie sa fie 3,4 sau 5!");
	format(strings, sizeof(strings), "~w~%s",message);
	Comenzi[playerid] = 6;
	foreach(Player,i)
	GameTextForPlayer(i, strings, 5000, style);
	return 1;
}
*/
CMD:cwe(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 1) return	SendClientMessage(playerid, COLOR_GRAD1, "   Nu ai rangul administrativ necesar!");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /checkweapons [playerid]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");

	new sweapon, sammo, gunname[100];
	format(strings, sizeof(strings), "[ADMIN]: Admistrator %s[%d] se uita la armele lui %s [%d].", PlayerName(playerid),playerid,PlayerName(playa),playa);
	AdminsBroadCast(COLOR_LIGHTRED, strings, 1);
 	format(strings, sizeof(strings), "%s (%d) are armele urmatoare:", PlayerName(playa),playa);
    SendClientMessage(playerid, COLOR_LIGHTRED, strings);
	for (new i=0; i<12; i++)
    {
      	GetWeaponName(i, gunname, sizeof(gunname));
	    GetPlayerWeaponData(playa, i, sweapon, sammo);
	    format(strings, sizeof(strings), "Slot %d:    %s    [ID: %d    Ammo: %d]", i, gunname,sweapon, sammo);
	    SendClientMessage(playerid, -1, strings);
    }
	return 1;
}


CMD:skick(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 4) return	SendClientMessage(playerid, COLOR_GRAD1, "   Nu ai rangul administrativ necesar!");
	new playa,message[40];
	if(sscanf(params,"us[40]",playa,message)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /kick [playerid] [motiv]");
	if(!IsPlayerConnected(playa)) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
 	SendClientMessage(playerid,COLOR_LIGHTRED, "Ai dat skick");
	Kick(playa);
	return 1;
}

CMD:kick(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 2) return	SendClientMessage(playerid, COLOR_GRAD1, "   Nu ai rangul administrativ necesar!");
	new playa,message[40];
	if(sscanf(params,"us[40]",playa,message)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /kick [playerid] [motiv]");
	if(!IsPlayerConnected(playa)) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if (PlayerInfo[playa][pAdmin] > PlayerInfo[playerid][pAdmin]) return   SendClientMessage(playerid, COLOR_ERROR, "Nu potida kick la grade mai mari ca tine");
 	format(strings, sizeof(strings), "[ADMIN]:  %s a primit kick de la %s. Motiv: %s", PlayerName(playa),PlayerName(playerid),message);
	SendClientMessageToAll(COLOR_LIGHTRED, strings);
	KickWithMessage(playa,-1,strings);
	return 1;
}
CMD:crash(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "SYNTAX: /crash [playerid/PartOfName]");
    if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	new targetlevel = PlayerInfo[playa][pAdmin];
	new playerlevel = PlayerInfo[playerid][pAdmin];
	if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* Nu poti folosi comanda pe Admini mai mari ca tine!");
	OnPlayerDisconnect(playa,0);
 	GameTextForPlayer(playa, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 1000, 0);
	GameTextForPlayer(playa, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 2000, 1);
	GameTextForPlayer(playa, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 3000, 2);
	GameTextForPlayer(playa, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 4000, 3);
	GameTextForPlayer(playa, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 5000, 4);
	GameTextForPlayer(playa, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 6000, 5);
	GameTextForPlayer(playa, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 7000, 6);
	format(strings, sizeof(strings), "I-ai dat crash la joc lui %s[%d]", PlayerName(playa),playa);
	SendClientMessage(playerid,COLOR_LIGHTBLUE,strings);
	format(strings, sizeof(strings), "[ADMIN]: %s i-a dat Crash lui %s(%d).",PlayerName(playerid),PlayerName(playa),playa);
	AdminsBroadCast(COLOR_LIGHTRED,strings, 5);
	return 1;
}

CMD:freeze(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /freeze [playerid/numejucator]");
 	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 3) return	SendClientMessage(playerid, COLOR_GRAD1, "   Nu ai rangul administrativ necesar!");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    if(freeze[playa] == 0)
    {
        freeze[playa] = 1;
		TogglePlayerControllable(playa, 0);
		format(strings, sizeof(strings), "[ADMIN]: %s i-a dat freeze lui %s",PlayerName(playerid),PlayerName(playa));
		AdminsBroadCast(COLOR_RED,strings,1);
		format(strings, sizeof(strings), "[ADMIN]: %s ti-a dat freeze",PlayerName(playerid));
		SendClientMessage(playa,COLOR_RED,strings);
	}
	else if(freeze[playa] == 1)
	{
        freeze[playa] = 0;
		TogglePlayerControllable(playa, 1);
		format(strings, sizeof(strings), "[ADMIN]: %s i-a dat UnFreeze lui %s",PlayerName(playerid),PlayerName(playa));
		AdminsBroadCast(-1,strings,1);
		format(strings, sizeof(strings), "[ADMIN]: %s ti-a dat UnFreeze",PlayerName(playerid));
		SendClientMessage(playa,-1,strings);
	}
 	return 1;
}



CMD:bano(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new targetname[128],time,message[128],baneed;
	if(sscanf(params,"s[128]ds[128]",targetname,time,message)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /bano [NumeExact] [zile] [moptiv]");

	mysql_format(handle, query, sizeof(query), "SELECT * FROM `players` WHERE `username` = '%s'", targetname);
	new Cache:result2 = mysql_query(handle,query);
	if(cache_num_rows() < 0)
	{
		format(strings, sizeof(strings), "Nimeni cu numele %s nu este inregistrat",targetname);
        SendClientMessage(playerid, -1, strings);
		cache_delete(result2);
		return 1;
	}
	if(time == 0)	  { baneed = -999; format(strings, sizeof(strings), "[ADMIN]: %s a primit BanOffline de la Admin %s[%d]. Motiv: %s. Durata: PERMANENT", targetname, PlayerName(playerid),playerid, message);}
	else if(time == 1){	baneed = time; format(strings, sizeof(strings), "[ADMIN]: %s a primit BanOffline de la Admin %s[%d]. Motiv: %s. Durata: %d zi", targetname, PlayerName(playerid),playerid, message,baneed);}
	else			  {	baneed = time; format(strings, sizeof(strings), "[ADMIN]: %s a primit BanOffline de la Admin %s[%d]. Motiv: %s. Durata: %d zile", targetname, PlayerName(playerid),playerid, message,baneed);}
	SendClientMessageToAll(COLOR_LIGHTRED, strings);
	mysql_format(handle, query, sizeof(query), "UPDATE `players` SET `Banned` = '%d' WHERE username = '%e'", baneed,targetname);
	mysql_query(handle, query);
    mysql_format(handle, query, 500,"INSERT INTO `banslog` (`BanID`,`user_banned`,`user_banned_ip`,`user_banner`,`ban_reason`,`ban_timestamp`,`ban_time`) VALUES ('','%s',0,'%s','%s',CURRENT_TIMESTAMP,'%d')",
	targetname,
	PlayerName(playerid),
	message,
	baneed);
	mysql_tquery(handle, query);
	return 1;
}


CMD:ban(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa,time,message[128];
	if(sscanf(params,"uds[128]",playa,time,message)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /ban [playerid/numejucator] [zile] [moptiv]");
    if(!IsPlayerConnected(playa)) return SendClientMessage(playerid,COLOR_RED,"PlayerOffline");
    if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
 	if(PlayerInfo[playa][pAdmin] > 0 && PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}ADMWARNING: {FFFFFF}Nu poti bana admini!");
	if(time>101&& PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid,-1,"Foloseste o zile pentru ban permanent");
	if(gLogged[playa] == 1)
	{
		SendClientMessageToAll(0x11D8EEC8, "________________________________Ban Info__________________________________________________");
 		format(strings,sizeof(strings),"User Banat:{FFFFFF} %s[%d]",PlayerName(playa),playa);
		SendClientMessageToAll(0x11D8EEC8,strings);
		format(strings,sizeof(strings),"User IP:{FFFFFF} %s ",PlayerIP(playa));
		SendClientMessageToAll(0x11D8EEC8,strings);
		format(strings,sizeof(strings),"Banat de:{FFFFFF} %s[%d]",PlayerName(playerid),playerid);
		SendClientMessageToAll(0x11D8EEC8,strings);
		format(strings,sizeof(strings),"Motiv:{FFFFFF} %s ",message);
		SendClientMessageToAll(0x11D8EEC8,strings);
		format(strings,sizeof(strings),"DATA/ORA:{FFFFFF} %s",CurrentTimeStamps());
		SendClientMessageToAll(0x11D8EEC8,strings);
		if(time == 0)
		format(strings,sizeof(strings),"Durata Banului:{FFFFFF} PERMANENT");
		else
		format(strings,sizeof(strings),"Durata Banului:{FFFFFF} %d zile",time);
		SendClientMessageToAll(0x11D8EEC8,strings);
    	SendClientMessageToAll(0x11D8EEC8, "__________________________________________________________________________________________");
    	SendClientMessage(playa,COLOR_YELLOW, "Daca ai fost neindreptatit poti face cerere de unban pe forum: www."#SERVERNAME".ro");
		SendClientMessage(playa,COLOR_YELLOW, "Apasa F8 pentru a face poza, fara poza cererea va fi respinsa");
		SendClientMessage(playa,COLOR_YELLOW, "Daca banul a fost corect nu te obosi sa faci cerere");
		if(time == 0)
		PlayerInfo[playa][pBanned] = -999;
		else
		PlayerInfo[playa][pBanned] = time;
		Update(playa, pBannedx);
		strmid(PlayerInfo[playa][pIP], PlayerIP(playa), 0, 100, 255);
		Update(playa, pIPx);
		mysql_format(handle, query, 500,"INSERT INTO `banslog` (`BanID`,`user_banned`,`user_banned_ip`,`user_banner`,`ban_reason`,`ban_timestamp`,`ban_time`) VALUES ('','%s','%s','%s','%s',CURRENT_TIMESTAMP,'%d')",
		PlayerName(playa),
		PlayerIP(playa),
		PlayerName(playerid),
		message,
		time);
		mysql_tquery(handle, query);
    	kiked(playa);
	}
	else
	{
	    SendClientMessageToAll(0x11D8EEC8, "________________________________Ban Info__________________________________________________");
 		format(strings,sizeof(strings),"User Banat:{FFFFFF} %s[%d]",PlayerName(playa),playa);
		SendClientMessageToAll(0x11D8EEC8,strings);
		format(strings,sizeof(strings),"User IP:{FFFFFF} %s ",PlayerIP(playa));
		SendClientMessageToAll(0x11D8EEC8,strings);
		format(strings,sizeof(strings),"Banat de:{FFFFFF} %s[%d]",PlayerName(playerid),playerid);
		SendClientMessageToAll(0x11D8EEC8,strings);
		format(strings,sizeof(strings),"Motiv:{FFFFFF} %s ",message);
		SendClientMessageToAll(0x11D8EEC8,strings);
		format(strings,sizeof(strings),"DATA/ORA:{FFFFFF} %s",CurrentTimeStamps());
		SendClientMessageToAll(0x11D8EEC8,strings);
		if(time == 0)
		format(strings,sizeof(strings),"Durata Banului:{FFFFFF} PERMANENT");
		else
		format(strings,sizeof(strings),"Durata Banului:{FFFFFF} %d zile",time);
		SendClientMessageToAll(0x11D8EEC8,strings);
    	SendClientMessageToAll(0x11D8EEC8, "__________________________________________________________________________________________");
   		format(strings, sizeof(strings),"banip %s", PlayerIP(playa));
    	SendRconCommand(strings);
		SendRconCommand("reloadbans");
		mysql_format(handle, query, 500,"INSERT INTO `banslog` (`BanID`,`user_banned`,`user_banned_ip`,`user_banner`,`ban_reason`,`ban_timestamp`,`ban_time`) VALUES ('','%s','%s','%s','%s',CURRENT_TIMESTAMP,'%d')",
		PlayerName(playa),
		PlayerIP(playa),
		PlayerName(playerid),
		message,
		time);
		mysql_tquery(handle, query);
    	kiked(playa);
	}
	return 1;
}//


CMD:pickup(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pPhoneNumber] == 0) return SendClientMessage(playerid, COLOR_GRAD2, "Nu ai telefon");
	if(Mobile[playerid] != 999) return SendClientMessage(playerid, COLOR_GRAD2, "  Esti deja intr-un apel..");
	foreach(Player,i)
	{
		if(Mobile[i] == playerid)
		{
		   	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		   	format(strings, sizeof(strings), "* %s raspunde la HandsFree", PlayerName(playerid));
		   	else
		   	format(strings, sizeof(strings), "* %s raspunde la telefon.", PlayerName(playerid));
			Mobile[playerid] = i; //caller connecting
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
			SetPlayerAttachedObject(playerid, 9, 330, 6, 0.06, 0.0, 0.0, 0.0, 0.0, 0.0);
			SendClientMessage(i,COLOR_GRAD2, "Apelatul a raspuns!");
  			ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   		}
	}
	return 1;
}
CMD:p(playerid,params[])
return cmd_pickup(playerid,params);


CMD:hangup(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new caller = Mobile[playerid];
    if(PlayerInfo[playerid][pPhoneNumber] == 0) return SendClientMessage(playerid, COLOR_GRAD2, "Nu ai telefon");
	if(caller == 999) return SendClientMessage(playerid,COLOR_RED,"Nu vorbesti la telefon");
	if(!IsPlayerConnected(caller)) return SendClientMessage(playerid,COLOR_RED,"Apelant neconectat");
    if(caller == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"Apelant neconectat");

	SetPlayerSpecialAction(playerid,9);
	ApplyAnimation(playerid, "ped", "phone_out", 4.0, 0, 0, 0, 0, 0);
	RemovePlayerAttachedObject(playerid,0);
    SendClientMessage(caller,  COLOR_GRAD2, "Apelantul ti-a inchis telefonul.");
	CellTime[caller] = 0;
	CellTime[playerid] = 0;
	SendClientMessage(playerid,  COLOR_GRAD2, "Ai inchis apelul.");
	Mobile[caller] = 999;
	Mobile[playerid] = 999;
	CellTime[playerid] = 0;
	return 1;
}

CMD:sms(playerid,params[])
return cmd_txt(playerid,params);

CMD:txt(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pPhoneNumber] == 0) return SendClientMessage(playerid, COLOR_GRAD2, "Nu ai telefon");
    if(GetPlayerCash(playerid) < 100) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Nu ai bani de SMS!");
	new phonenumb,message[128];
	if(sscanf(params,"ds[128]",phonenumb,message)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} (/t)ext [numar] [text chat]");
	if(Mobile[playerid] != 999) return SendClientMessage(playerid, COLOR_GRAD2, "  Deja esti intr-un apel..");
	if(PhoneOnline[playerid] == 0) return SendClientMessage(playerid,-1,"Ai telefonul inchis");
 	format(strings, sizeof(strings), "* %s scoate un telefon si incepe sa tasteze.", PlayerName(playerid));
	ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(message) || FindIP(message))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe sms: ",PlayerName(playerid),playerid, message);
	    AdminsBroadCast(COLOR_RED,strings,7);
	    HackLog(strings);
	    return 1;
	}

	foreach(Player,i)
	{
		if(gLogged[i] == 1)
		{
		    if(PlayerInfo[i][pPhoneNumber] != 0)
		    {
				if(PlayerInfo[i][pPhoneNumber] == phonenumb)
				{
					new giveplayerid = i;
					Mobile[playerid] = giveplayerid; //caller connecting
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PhoneOnline[giveplayerid] == 1)
					        {
     							format(strings, sizeof(strings), "SMS: %s, Catre: %s (%d)", message,PlayerName(giveplayerid),PlayerInfo[giveplayerid][pPhoneNumber]);
     							SendClientMessage(playerid, COLOR_WHITE, "SMS Sent!");
								SendClientMessage(playerid, COLOR_YELLOW, strings);
     							format(strings, sizeof(strings), "SMS: %s, De la: %s (%d)", message,PlayerName(playerid),PlayerInfo[playerid][pPhoneNumber]);
								SendClientMessage(giveplayerid,  COLOR_YELLOW, strings);
								format(strings, sizeof(strings), "~r~$-%d", 100);//SBizzInfo[2][sbEntrace]);
								GameTextForPlayer(playerid, strings, 5000, 1);
								GivePlayerCash(playerid,-100);//SBizzInfo[2][sbEntrace]);
								SBizzInfo[2][sbTill] += SBizzInfo[2][sbEntrace];
								sbUpdate(2,sbTillx);
					           	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					           	Mobile[playerid] = 999;
        						return 1;
							}
							else return SendClientMessage(playerid, COLOR_GRAD2, "Telefon offline");
						}
					}
				}
			}
			else return SendClientMessage(playerid, COLOR_GRAD2, "  Trimiterea mesajului a esuat..");
		}
	}
	return 1;
}

CMD:call(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pPhoneNumber] == 0) return SendClientMessage(playerid, COLOR_GRAD2, "Nu ai telefon");
   	if(Mobile[playerid] != 999) return SendClientMessage(playerid, COLOR_GRAD2, "  Deja esti intr-un apel..");
	new phonenumb;
	if(sscanf(params,"d",phonenumb)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /call [numar]");
	format(strings, sizeof(strings), "* %s scoate un telefon.", PlayerName(playerid));
	ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	if(phonenumb == 112)
	{
		SendClientMessage(playerid, COLOR_WHITE, "INFO: Foloseste tasta T pentru a vorbi la telefon, scrie /hangup pentru a inchide.");
		SendClientMessage(playerid, COLOR_ALLDEPT, "URGENTE: Ce departament cautati, Politia sau SMURD?");
		Mobile[playerid] = 112;
		return 1;
	}
	if(phonenumb == PlayerInfo[playerid][pPhoneNumber])
	{
		SendClientMessage(playerid, COLOR_GRAD2, "  Numar ocupat!");
		Mobile[playerid] = 999;
		return 1;
	}
	foreach(Player,i)
 	{
  		if(PlayerInfo[i][pPhoneNumber] != 0)
	    {
			if(PlayerInfo[i][pPhoneNumber] == phonenumb)
			{
				new giveplayerid = i;
				Mobile[playerid] = giveplayerid; //caller connecting
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(PhoneOnline[giveplayerid] == 1)
				        {
							if (Mobile[giveplayerid] == 999)
							{
   								if(PlayerInfo[playerid][pPremiumAccount] == 1)
								format(strings, sizeof(strings), "Telefonul tau suna - Apelant: %s", PlayerName(playerid));
								else
								format(strings, sizeof(strings), "Telefonul tau suna.");
								SendClientMessage(giveplayerid, COLOR_YELLOW, strings);
								SendClientMessage(giveplayerid,-1,"/pickup pentru a raspunde si /hangup pentru a inchide");
								format(strings, sizeof(strings), "* Telefonul lui %s incepe sa sune.", PlayerName(giveplayerid));
								ProxDetector(30.0, i, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								CellTime[playerid] = 1;
								return 1;
							}
							else return SendClientMessage(playerid, COLOR_GRAD2, "  Numar ocupat!");
						}
						else return SendClientMessage(playerid, COLOR_GRAD2, " Telefon Offline!");
					}
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_GRAD2, "  Numar ocupat!");
	}
	return 1;
}

CMD:ip(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /ip [playerid]");
    if(!IsPlayerConnected(playa)) return SendClientMessage(playerid,COLOR_RED,"PlayerOffline");
    if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	format(strings, sizeof(strings), "Player: %s IP: %s",PlayerName(playa),PlayerIP(playa));
	SendClientMessage(playerid,COLOR_GRAD2,strings);
	return 1;
}
CMD:banip(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
 	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /ip [playerid]");
    if(!IsPlayerConnected(playa)) return SendClientMessage(playerid,COLOR_RED,"PlayerOffline");
	if(playa == INVALID_PLAYER_ID) return SCM(playerid,-1,"Invalid playerid");
    format(strings, sizeof(strings),"banip %s", PlayerIP(playa));
    SendRconCommand(strings);
	SendRconCommand("reloadbans");
    Kick(playa);
	format(strings, sizeof(strings), "**Ia dat ban pe ip lui %s",PlayerName(playa));
	AdminsBroadCast(-1, strings,6);
    AdminLog(strings);
    return 1;
}
CMD:unbanip(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new ip[30];
	if(sscanf(params,"s[128]",ip)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /unbanip [IP-ul]");
    format(strings,sizeof(strings),"unbanip %s",ip);
	SendRconCommand(strings);
	SendRconCommand("reloadbans");
	format(strings, sizeof(strings), "[ADMIN]: %s a dat unban la IP-ul [%s]", PlayerName(playerid),ip);
	AdminsBroadCast(COLOR_YELLOW,strings, 5);
	return 1;
}

CMD:unban(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new message[128],bannedul,fftext[50];
	if(sscanf(params,"s[128]",message)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /unban [NUMELE-EXACT]");

    mysql_format(handle, query, sizeof(query), "SELECT * FROM `players` WHERE `username` = '%s'", message);
	new Cache:result = mysql_query(handle,query);
	mysql_query(handle,query);
	if(cache_num_rows() > 0)
	{
		//SendClientMessage(playerid,COLOR_RED,"Nu exista acest cont");
		cache_get_field_content(0,"Banned", temp);		bannedul = strval(temp);
		cache_delete(result);
		if(bannedul == 0) return SendClientMessage(playerid,-1,"Acest cont nu este banat");
		format(strings,sizeof(strings),"UPDATE `players` SET `Banned`= 0 WHERE `username`='%s'",message);
    	mysql_tquery(handle,strings);
    	if(bannedul == 1) 		format(fftext, sizeof(fftext),"o zi de BAN");
    	if(bannedul == -999) 	format(fftext, sizeof(fftext),"BAN Permanent");
    	else					format(fftext, sizeof(fftext),"%d zile BAN",bannedul);

 	    format(strings, sizeof(strings), "%s a scos Banul lui %s, acesta avea %s !",PlayerName(playerid), message,fftext);
		AdminsBroadCast(0xDC0C0CFF, strings,2);
	}
	return 1;
}

CMD:coin(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAchievement12] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu ai moneda");
	new coin = random(2)+1;
	new coinname[20];
	if(coin == 1) coinname = "Cap";
	else coinname = "Pajura";
	format(strings, sizeof(strings), "*** %s arunca moneda si cade %s", PlayerName(playerid),coinname);
	ProxDetector(15.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return 1;
}

CMD:dice(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAchievement10] == 0) return SendClientMessage(playerid,COLOR_RED,"Nu ai zaruri");
	new dice = random(6)+1,dice2 = random(6)+1;
	format(strings, sizeof(strings), "* %s arunca zarurile si cade %d-%d", PlayerName(playerid),dice,dice2);
	ProxDetector(7.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return 1;
}


CMD:breathtest(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Nu esti politist");
	new playa;
	if(sscanf(params,"u",playa)) return	SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /breathtest [playerid/numejucator]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	new level = GetPlayerDrunkLevel(playa);
	if(!ProxDetectorPlayer(8.0, playerid, playa)) return SendClientMessage(playerid,-1,"Nu te afli langa player");
 	format(strings, sizeof(strings), "* %s scoate un etilotest si il pune pe %s sa sufle.", PlayerName(playerid) ,PlayerName(playa));
	ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
 	if(level > 10)
    {
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "** Rezultat: Alcoolemie mare! **");
	    GameTextForPlayer(playerid,"~w~Jucator~n~~r~Beat!", 8000, 1);
  		return 1;
	}
	else
	{
	   	SendClientMessage(playerid, COLOR_LIGHTBLUE, "** Rezultat: Alcoolemie Scazuta! **");
 		GameTextForPlayer(playerid,"~w~Alcoolemie~n~~r~Scazuta", 8000, 1);
 	}
	return 1;
}

CMD:drugtest(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Nu esti politist");
	new playa;
	if(sscanf(params,"u",playa)) return	SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /breathtest [playerid/numejucator]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	new level = DrugTimer[playerid];
	if(!ProxDetectorPlayer(8.0, playerid, playa)) return SendClientMessage(playerid,-1,"Nu te afli langa player");
 	format(strings, sizeof(strings), "* %s scoate un etilotest si il pune pe %s sa sufle.", PlayerName(playerid) ,PlayerName(playa));
	ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
 	if(level > 0)
    {
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "** Rezultat: Etonobotanice consumate!**");
	    GameTextForPlayer(playerid,"~w~Jucator~n~~r~Drogat!", 8000, 1);
  		return 1;
	}
	else
	{
	   	SendClientMessage(playerid, COLOR_LIGHTBLUE, "** Rezultat: Jucatorul nu are nimic! **");
 		GameTextForPlayer(playerid,"~w~Jucator~n~~r~Curat", 8000, 1);
 	}
	return 1;
}


CMD:pay(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new donate,playa;
	if(sscanf(params,"ud",playa,donate)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /pay [playerid/numejucator] [suma]");
	if(donate > 100 && PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Trebuie sa ai level 3 pentru a plati peste $100!");
	if(donate < 1 || donate > 10000) return SendClientMessage(playerid, COLOR_GRAD1, "Suma nu poate fi mai mica decat $1 sau mai mare decat $100.000.");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(!ProxDetectorPlayer(5.0, playerid, playa)) return SendClientMessage(playerid,COLOR_RED,"nu esti langa player");
	if(PayTimer[playerid] > 0) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Pay: {FFFFFF}Trebuie sa astepti 10 secunde inainte de a mai da /pay!");
	new playermoney = GetPlayerCash(playerid);
	if(playermoney < donate) return SendClientMessage(playerid,-1,"Nu ai atatia bani");

	GivePlayerCash(playerid, -donate);
	GivePlayerCash(playa, donate);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	PlayerPlaySound(playa, 1052, 0.0, 0.0, 0.0);
	ApplyAnimation(playerid,"DEALER","shop_pay",4.1,0,0,0,0,0);
	format(strings, sizeof(strings), "%s scoate %d $ si ii pune in mana lui %s", PlayerName(playerid),donate,PlayerName(playa));
 	ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	PayTimer[playerid] = 10;
	return 1;
}

CMD:drag(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Nu esti politist");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /drag [playerid/numejucator]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 596||GetVehicleModel(GetPlayerVehicleID(playerid)) != 598||GetVehicleModel(GetPlayerVehicleID(playerid)) != 597) return SCM(playerid,-1,"Trebuie sa fii intr-o masina cu 4 locuri de pd");
	if(PlayerCuffed[playa] < 1) return SendClientMessage(playerid,-1,"Playerul nu are catuse");
	if(!ProxDetectorPlayer(8.0, playerid, playa)) return SendClientMessage(playerid,-1,"Nu te afli langa player");
	foreach(Player,i)
	{
		if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid))
		{
		 	if(GetPlayerVehicleSeat(i) != 2)
		 	{
				PutPlayerInVehicle(playa, GetPlayerVehicleID(playerid), 2);
				format(strings, sizeof(strings), "Ofiterul %s l-a bagat in spate pe %s.", PlayerName(playerid), PlayerName(playa));
				ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				GameTextForPlayer(playa, "~r~Imobilizat" ,2500, 3);
				TogglePlayerControllable(playa, 0);
				return 1;
  			}
  			else if(GetPlayerVehicleSeat(i) != 3)
		 	{
				PutPlayerInVehicle(playa, GetPlayerVehicleID(playerid), 3);
				format(strings, sizeof(strings), "Ofiterul %s l-a bagat in spate pe %s.", PlayerName(playerid), PlayerName(playa));
				ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				GameTextForPlayer(playa, "~r~Imobilizat" ,2500, 3);
				TogglePlayerControllable(playa, 0);
				return 1;
  			}
  			else if(GetPlayerVehicleSeat(i) != 3)
		 	{
				PutPlayerInVehicle(playa, GetPlayerVehicleID(playerid), 2);
				format(strings, sizeof(strings), "Ofiterul %s il urca pe locul din dreapta pe %s.", PlayerName(playerid), PlayerName(playa));
				ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				GameTextForPlayer(playa, "~r~Imobilizat", 2500, 3);
				TogglePlayerControllable(playa, 0);
				return 1;
  			}
  		}
	}
	return 1;
}

CMD:cuff(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Nu esti politist");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /handcuffs [playerid/numejucator]");
    if(!IsPlayerConnected(playa)) return SendClientMessage(playerid,COLOR_RED,"Player Deconectat");
    if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"Invalid player ID");
    if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(GetPlayerWantedLevel(playa) < 1) return SendClientMessage(playerid, COLOR_GREY, "  Playerul nu are wanted!");
    if(IsACop(playa)) return SendClientMessage(playerid, COLOR_GREY, "  Playerul este politist!");
    if(PlayerCuffs[playerid] < 1) return SendClientMessage(playerid,-1,"Nu ai catuse");
    if(PlayerCuffed[playa] > 0) return SendClientMessage(playerid, COLOR_GREY, "   Playerul are deja catuse puse!");
 	if(!ProxDetectorPlayer(8.0, playerid, playa)) return SendClientMessage(playerid,-1,"Nu te afli langa player");
   	if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Nu iti poti pune singur catuse");
    if(IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(playa)) return SendClientMessage(playerid, COLOR_GREY, "Nu poti da cuff din masina");

	format(strings, sizeof(strings), "* %s scoate catusele si il incatuseaza pe %s.", PlayerName(playerid) ,PlayerName(playa));
	ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	GameTextForPlayer(playa, "~r~Cuffed", 2500, 3);
	PlayerCuffed[playa] = 1;
	PlayerCuffs[playerid] --;
	SetPlayerSpecialAction(playa,SPECIAL_ACTION_CUFFED);
	SetTimerEx("CuffedPlayer", 30000, false, "i", playa);
    SetPlayerAttachedObject(playa, 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
	SCM(playerid,COLOR_LIGHTBLUE,"Scrie /drag pentru a baga suspectul in masina de politie!");
	GameTextForPlayer(playerid, "~w~Grabeste-te suspectul poate rupe catusele", 2500, 4);
	return 1;
}
CMD:handcuffs(playerid,params[])
return cmd_cuff(playerid,params);

CMD:uncuff(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Nu esti politist");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /unucff [playerid/numejucator]");
 	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    if(IsACop(playa)) return SendClientMessage(playerid, COLOR_GREY, "  Playerul este politist!");
    if(PlayerCuffed[playa] < 1) return SendClientMessage(playerid, COLOR_GREY, "   Playerul nu are catuse puse!");
 	if(!ProxDetectorPlayer(8.0, playerid, playa)) return SendClientMessage(playerid,-1,"Nu te afli langa player");
	format(strings, sizeof(strings), "* %s foloseste cheie si ii scoate lui %s catusele.", PlayerName(playerid) ,PlayerName(playa));
	ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	GameTextForPlayer(playa, "~b~UnCuffed", 2500, 3);
	TogglePlayerControllable(playa, 1);
	PlayerCuffed[playa] = 0;
	PlayerCuffs[playerid] ++;
	SetPlayerSpecialAction(playa, SPECIAL_ACTION_NONE);
	if(IsPlayerAttachedObjectSlotUsed(playa, 9)) RemovePlayerAttachedObject(playa, 9);
 	return 1;
}


CMD:housemenu(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(GetPlayerVirtualWorld(playerid) == 0) return SendClientMessage(playerid,-1,"Nu te afli in casa");
	if(!IsPlayerInRangeOfPoint(playerid,10, HouseInfo[GetPlayerVirtualWorld(playerid)][hPosX1], HouseInfo[GetPlayerVirtualWorld(playerid)][hPosY1], HouseInfo[GetPlayerVirtualWorld(playerid)][hPosZ1])) return SendClientMessage(playerid,-1,"Nu esti la usa casei");
 	if(strcmp(HouseInfo[GetPlayerVirtualWorld(playerid)][hOwner], PlayerName(playerid))) return SendClientMessage(playerid,-1,"Aceasta casa nu iti apartine");
	ShowPlayerDialog(playerid, 301, DIALOG_STYLE_LIST, "{00BC00}Meniul {F6F6F6}Casei", "{00BC00}1. {F6F6F6}Vinde casa\n{00BC00}2. {F6F6F6}Inchide/Descuie usa\n{00BC00}3. {F6F6F6}Seiful casei\n{00BC00}4. {F6F6F6}Securitate\n{00BC00}5. {F6F6F6}Altele", "Alege", "Iesi");
	SendClientMessage(playerid, -1, " ");
	SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Casa: {FFFFFF}Alege ce vrei sa faci...");
    SavePHouse(GetPlayerVirtualWorld(playerid));
 	return 1;
}


CMD:hm(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(GetPlayerVirtualWorld(playerid) == 0) return SendClientMessage(playerid,-1,"Nu te afli in casa");
	if(!IsPlayerInRangeOfPoint(playerid,10, HouseInfo[GetPlayerVirtualWorld(playerid)][hPosX1], HouseInfo[GetPlayerVirtualWorld(playerid)][hPosY1], HouseInfo[GetPlayerVirtualWorld(playerid)][hPosZ1])) return SendClientMessage(playerid,-1,"Nu esti la usa casei");
 	if(strcmp(HouseInfo[GetPlayerVirtualWorld(playerid)][hOwner], PlayerName(playerid))) return SendClientMessage(playerid,-1,"Aceasta casa nu iti apartine");
	ShowPlayerDialog(playerid, 301, DIALOG_STYLE_LIST, "{00BC00}Meniul {F6F6F6}Casei", "{00BC00}1. {F6F6F6}Vinde casa\n{00BC00}2. {F6F6F6}Inchide/Descuie usa\n{00BC00}3. {F6F6F6}Seiful casei\n{00BC00}4. {F6F6F6}Securitate\n{00BC00}5. {F6F6F6}Altele", "Alege", "Iesi");
	SendClientMessage(playerid, -1, " ");
	SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Casa: {FFFFFF}Alege ce vrei sa faci...");
    SavePHouse(GetPlayerVirtualWorld(playerid));
 	return 1;
}

CMD:id(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new tmp[256],idx;
	tmp = strtok(params, idx);
	if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /id [playerid/numejucator]");
	new target;
	target = ReturnUser(tmp);
	new sstring[256];
	if(!IsPlayerConnected(target)) return SendClientMessage(playerid,-1,"Player Offline");
    if(target == INVALID_PLAYER_ID) return SendClientMessage(playerid,-1,"Invalid PlayerID");
 	format(sstring, sizeof(sstring), "ID: (%d) %s",target,PlayerName(target));
	SendClientMessage(playerid, COLOR_GRAD1, sstring);
	return 1;
}


CMD:bigears(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu esti autorizat sa folosesti aceasta comanda");
    if (!BigEar[playerid])
	{
		BigEar[playerid] = 1;
		SendClientMessage(playerid, COLOR_GRAD2, "Acum poti vedea tot ce scrie server-ul.");
	}
	else if (BigEar[playerid])
	{
		BigEar[playerid] = 0;
		SendClientMessage(playerid, COLOR_GRAD2, "Acum nu mai vezi tot ce scrie server-ul.");
	}
 	return 1;
}


CMD:w(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pMute] >0) return SendClientMessage(playerid, COLOR_LIGHTRED, "ai mute!");
	new playa,message[128];
 	if(sscanf(params,"us[128]",playa,message)) return SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /w [playerid] [text]");
    if(!IsPlayerConnected(playa)) return SendClientMessage(playerid,COLOR_RED,"Player Deconectat");
    if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"Invalid player ID");
	if(!ProxDetectorPlayer(8.0, playerid, playa)) return SendClientMessage(playerid,COLOR_RED,"Nu esti langa player");
	if(gWhisper[playa] != 1) return SendClientMessage(playerid, COLOR_WHITE, "{a9c4e4}Whisper: {FFFFFF}Acel jucator are chat-ul whisper dezactivat!");
    if(playa == playerid)
    {
		format(strings, sizeof(strings), "* %s vorbeste singur.", PlayerName(playerid));
		ProxDetector(15.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 1;
	}
	format(strings, sizeof(strings), "* %s ii sopteste ceva lui %s", PlayerName(playerid),PlayerName(playa));
	ProxDetector(15.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(strings, sizeof(strings), "%s iti sopteste: %s", PlayerName(playerid),message);
	SendClientMessage(playa, COLOR_YELLOW, strings);
 	return 1;
}


CMD:cw(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pMute] >0) return SendClientMessage(playerid, COLOR_LIGHTRED, "ai mute!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti in masina");
	new message[128];
 	if(sscanf(params,"s[128]",message)) return SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /cw [text]");
	foreach(Player,i)
	{
		if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid))
		{
			format(strings, sizeof(strings), "(In vehicul) %s spune: %s", PlayerName(playerid), message);
			SendClientMessage(i, COLOR_WHITE, strings);
  		}
  	}
 	return 1;
}


CMD:par(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pMute] >0) return SendClientMessage(playerid, COLOR_LIGHTRED, "ai mute!");
    if(!IsPlayerInRangeOfPoint(playerid, 3.0,-2691.00,367.3381,1050.15)) return SendClientMessage(playerid,-1,"Nu esti langa microfon");
	new message[128];
 	if(sscanf(params,"s[128]",message)) return SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /par [chat]");
	if(AdminDuty[playerid] == 1)
 	format(strings, sizeof(strings), "{AE519B}Admin Microphone: %s !!", message);
	else
  	format(strings, sizeof(strings), "{AE5164}%s Microphone: %s !!", PlayerName(playerid), message);
	ProxDetector(70.0, playerid, strings,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
 	return 1;
}

CMD:free(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pJob2] != 2 && PlayerInfo[playerid][pJob1] != 2) return SendClientMessage(playerid, COLOR_GREY, "  Nu esti avocat");
    if(PlayerInfo[playerid][pLawSkill] >= 401) ApprovedLawyer[playerid] = 1;
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /free [playerid/numejucator]");
	if(!IsPlayerConnected(playa)) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Nu te poti elibera singur");
	if(WantLawyer[playa] == 0) return SendClientMessage(playerid, COLOR_GREY, "Playerul nu a cerut avocat");
	if(PlayerInfo[playa][pJail] == 0 && ApprovedLawyer[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Playerul nu este in puscarie sau nu vrea avocat");
	format(strings, sizeof(strings), "* L-ai eliberat pe %s din jail.", PlayerName(playa));
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
	format(strings, sizeof(strings), "* Ai fost eliberat pe cautiune de avocat %s.", PlayerName(playerid));
	SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
	ApprovedLawyer[playerid] = 0;
	WantLawyer[playa] = 0;
	CallLawyer[playa] = 0;
	JailPrice[playa] = 0;
 	CanFreeLawyer[playerid] = 480;
	new price = PlayerInfo[playerid][pLawSkill]*100;
	PlayerInfo[playa][pJailTime] = 1;
	Update(playa, pJailTimex);
	format(strings,sizeof(strings), "%s %d [CMD] -> /free %s %d bani %d",PlayerName(playerid),playerid,PlayerName(playa),playa,price);
	JobLog(strings);
	PlayerInfo[playerid][pLawSkill] +=2;
	Update(playerid, pLawSkillx);
	if(PlayerInfo[playerid][pLawSkill] == 50)
		SendClientMessage(playerid, COLOR_YELLOW, "* Skilul tau de avocat este acum Level 2, Vei lua mai multi bani si elibera mai repede.");
	else if(PlayerInfo[playerid][pLawSkill] == 100)
		SendClientMessage(playerid, COLOR_YELLOW, "* Skilul tau de avocat este acum Level 3, Vei lua mai multi bani si elibera mai repede.");
	else if(PlayerInfo[playerid][pLawSkill] == 200)
		SendClientMessage(playerid, COLOR_YELLOW, "* Skilul tau de avocat este acum Level 4, Vei lua mai multi bani si elibera mai repede.");
	else if(PlayerInfo[playerid][pLawSkill] == 400)
		SendClientMessage(playerid, COLOR_YELLOW, "* Skilul tau de avocat este acum Level 5, Vei lua mai multi bani si elibera oricand.");
	return 1;
}

CMD:arrest(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, " Nu esti politist");
    if(!IsPlayerInRangeOfPoint(playerid,6, 1568.6150,-1690.8213,5.8906) &&  !IsPlayerInRangeOfPoint(playerid,6, 2337.2202,2458.4097,14.9688))
	return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Arrest: {FFFFFF}Nu esti la Locul de arrest!");
	if(OnDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "** You are not on Duty!");
 	new playa;
 	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /arrest [playerid]");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(!IsPlayerConnected(playa)) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(GetPlayerVehicleID(playa) != GetPlayerVehicleID(playerid)) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este in masina ta!");
    if(playa == playerid) return SendClientMessage(playerid,COLOR_RED,"Nu te poti aresta singur");

    new price = GetPlayerWantedLevel(playa) * 300;
	format(strings, sizeof(strings), "~g~+%d",price);
	GameTextForPlayer(playerid, strings, 5000, 3);
	GivePlayerCash(playerid, price);
	PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
	GivePlayerCash(playa, - price);
	PlayerInfo[playa][pArrestedTime] += 1;
	Update(playa, pArrestedTimex);
	PlayerInfo[playa][pJail] = 1;
	Update(playa, pJailx);
	PlayerInfo[playa][pJailTime] = GetPlayerWantedLevel(playa)*300;
	Update(playa, pJailTimex);
	format(strings, sizeof(strings), "* Esti in inchisoare pentru %d secunde si ai pierdut $%d amenda, pentru ca ai fost arestat.", PlayerInfo[playa][pJailTime], price);
	SendClientMessage(playa, COLOR_LIGHTRED, strings);
	PlayerInfo[playa][pWanted] = 0;
	Update(playa, pWantedx);
	SetPlayerWantedLevel(playa, 0);
	WantedLeft[playa] = 0;
	format(strings, sizeof(strings), "* L-ai arestat pe %s !", PlayerName(playa));
	SendClientMessage(playerid, COLOR_GREY, strings);
	TogglePlayerControllable(playa, 0);
	SetTimerEx("freze",500, 0, "i", playa);
	ResetPlayerWeapons(playa);
	SetPlayerInterior(playa, 0);
	PlayerCuffed[playa] = 0;
	SetPlayerSpecialAction(playa, SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(playa, 9);
	SetPlayerPos(playa,1564.4834, -1671.7292, 12.4190);
	SetPlayerVirtualWorld(playa, 0);
  	WantLawyer[playa] = 1;
    if(PlayerInfo[playerid][pMember]==1 || PlayerInfo[playerid][pLeader]==1)
	format(strings, sizeof(strings), "<< Officer %s l-a arestat pe %s pentru %d minute.Amenda %d>>",PlayerName(playerid),PlayerName(playa),PlayerInfo[playa][pJailTime]/60,price);
	else if(PlayerInfo[playerid][pMember]==2||PlayerInfo[playerid][pLeader]==2 || PlayerInfo[playerid][pMember]==17||PlayerInfo[playerid][pLeader]==17)
 	format(strings, sizeof(strings), "<< Agentul %s l-a arestat pe %s pentru %d minute.Amenda %d>>",PlayerName(playerid),PlayerName(playa),PlayerInfo[playa][pJailTime]/60,price);
	if(PlayerInfo[playerid][pMember]==3 || PlayerInfo[playerid][pLeader]==3 || PlayerInfo[playerid][pMember]==11 || PlayerInfo[playerid][pLeader]==11)
	format(strings, sizeof(strings), "<< Soldat %s l-a arestat pe %s pentru %d minute.Amenda %d>>",PlayerName(playerid),PlayerName(playa),PlayerInfo[playa][pJailTime]/60,price);
	SendDepartamentMessage(COLOR_ALLDEPT, strings);
	return 1;
}

CMD:tazer(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, " Nu esti politist");
    if(GetPlayerWeapon(playerid) != 23) return SendClientMessage(playerid, 0xFFFFFFFF, "{1580EA}Tazer: {FFFFFF}Ai nevoie de un SD Pistol(Silencer).");
	if(Tazer[playerid] == 0)
	{
		Tazer[playerid] = 1;
		format(strings, sizeof(strings), "{1580EA}Tazer: {FFFFFF}Ti-ai pus electrosocuri la arma, %s.", PlayerName(playerid));
		SendClientMessage(playerid, 0xFFFFFFFF, strings);
		return 1;
	}
	else if(Tazer[playerid] == 1)
 	{
	    Tazer[playerid] = 0;
	    format(strings, sizeof(strings), "{1580EA}Tazer: {FFFFFF}Ti-ai scos electrosocurile de la arma, %s.", PlayerName(playerid));
		SendClientMessage(playerid, 0xFFFFFFFF, strings);
		return 1;
	}
	else return Tazer[playerid] = 0;
}
CMD:aclear(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin]==0) return SendClientMessage(playerid, COLOR_GRAD1, " Nu esti autorizat");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /clear <playerid/PartOfName>");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	format(strings, sizeof(strings), "* I-ai sters wantedul lui %s.", PlayerName(playa));
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
	format(strings, sizeof(strings), "* Admin %s ti-a sters wantedul.", PlayerName(playerid));
	SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
	PlayerInfo[playa][pWanted] = 0;
	Update(playa, pWantedx);
	SetPlayerWantedLevel(playa, 0);
	return 1;
}

CMD:clear(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, " Nu esti politist");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /clear <playerid/PartOfName>");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if (!IsPlayerInRangeOfPoint(playerid, 3, 1557.7107,-1698.8716,16.1974)) return SendClientMessage(playerid, COLOR_GRAD2, "  Nu esti la sectia de politie!");
    if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Nu iti poti da clear singur!");
	format(strings, sizeof(strings), "* I-ai sters wantedul lui %s.", PlayerName(playa));
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
	format(strings, sizeof(strings), "* Officer %s ti-a sters wantedul.", PlayerName(playerid));
	SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
	PlayerInfo[playa][pWanted] = 0;
	Update(playa, pWantedx);
	SetPlayerWantedLevel(playa, 0);
	return 1;
}

CMD:gov(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, "ai mute!");
	if(PlayerInfo[playerid][pLeader] == 0 && PlayerInfo[playerid][pMember] == 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, "Nu esti intr-o factiune");
	if(PlayerInfo[playerid][pRank] < 5) return SendClientMessage(playerid, COLOR_GREY, "   Iti trebuie Rank 5 pentru a folosi aceasta comanda !");
	new message[128];
	if(sscanf(params,"s[128]",message)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} (/gov)ernment [text]");
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
	{
		SendClientMessageToAll(COLOR_WHITE, "|___________ Government News Announcement ___________|");
		format(strings, sizeof(strings), "L.S.P.D.- %s: %s", PlayerName(playerid), message);
		SendClientMessageToAll(COLOR_BLUE, strings);
		return 1;
	}
	if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
		SendClientMessageToAll(COLOR_WHITE, "|___________ Government News Announcement ___________|");
		format(strings, sizeof(strings), "F.B.I.- %s: %s",  PlayerName(playerid), message);
		SendClientMessageToAll(COLOR_BLUE, strings);
		return 1;
	}
	if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
	{
		SendClientMessageToAll(COLOR_WHITE, "|___________ Government News Announcement ___________|");
		format(strings, sizeof(strings), "National Guard- %s: %s", PlayerName(playerid), message);
		SendClientMessageToAll(COLOR_BLUE, strings);
		return 1;
	}
	if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
	{
		SendClientMessageToAll(COLOR_WHITE, "|___________ Government News Announcement ___________|");
		format(strings, sizeof(strings), "Portavionul- %s: %s",  PlayerName(playerid), message);
		SendClientMessageToAll(COLOR_BLUE, strings);
		return 1;
	}
	if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
	{
		SendClientMessageToAll(COLOR_WHITE, "|___________ Government News Announcement ___________|");
		format(strings, sizeof(strings), "Presedentia- %s: %s",  PlayerName(playerid), message);
		SendClientMessageToAll(COLOR_BLUE, strings);
		return 1;
	}
	if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
	{
		SendClientMessageToAll(COLOR_WHITE, "|___________ Government News Announcement ___________|");
		format(strings, sizeof(strings), "Guvernul- %s: %s",  PlayerName(playerid), message);
		SendClientMessageToAll(COLOR_BLUE, strings);
		return 1;
	}
	if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
	{
		SendClientMessageToAll(COLOR_WHITE, "|___________ Government News Announcement ___________|");
		format(strings, sizeof(strings), "Parlamentul- %s: %s",  PlayerName(playerid), message);
		SendClientMessageToAll(COLOR_BLUE, strings);
		return 1;
	}
	if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
	{
	    SendClientMessageToAll(COLOR_WHITE, "|___________ Government News Announcement ___________|");
		format(strings, sizeof(strings), "C.I.A.- %s: %s",  PlayerName(playerid), message);
		SendClientMessageToAll(COLOR_BLUE, strings);
		return 1;
	}
 	return 1;
}

CMD:showbadge(playerid,params[])
return cmd_badge(playerid,params);
CMD:badge(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, " Nu esti politist");
	new playa,rtext[64], ftext[64];
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /badge <playerid/PartOfName>");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(!ProxDetectorPlayer(8.0, playerid, playa)) return SendClientMessage(playerid,COLOR_RED,"Nu esti langa player");
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
	{
	    strmid(ftext, "L.S.P.D.", 0, 64, 64);
		if(PlayerInfo[playerid][pRank] == 9) 		rtext = "Chestor-Sef";
	    else if(PlayerInfo[playerid][pRank] == 8)  	rtext = "Chestor";
	    else if(PlayerInfo[playerid][pRank] == 7)  	rtext = "Comisar";
		else if(PlayerInfo[playerid][pRank] == 6)  	rtext = "Subcomisar";
		else if(PlayerInfo[playerid][pRank] == 5)  	rtext = "Prim Inspector";
		else if(PlayerInfo[playerid][pRank] == 4)  	rtext = "Inspector";
		else if(PlayerInfo[playerid][pRank] == 3)  	rtext = "Subinspector";
		else if(PlayerInfo[playerid][pRank] == 2)  	rtext = "Agent-Sef";
		else if(PlayerInfo[playerid][pRank] == 1)  	rtext = "Agent";
	}
	else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
	    strmid(ftext, "F.B.I.", 0, 64, 64);
	    if(PlayerInfo[playerid][pRank] == 9) 		rtext = "Director";
	    else if(PlayerInfo[playerid][pRank] == 8)	rtext = "Director Adjunct";
	    else if(PlayerInfo[playerid][pRank] == 7)   rtext = "Asistent Director";
		else if(PlayerInfo[playerid][pRank] == 6)   rtext = "Prim-Sef de divie";
		else if(PlayerInfo[playerid][pRank] == 5)  	rtext = "Sef de divizie";
		else if(PlayerInfo[playerid][pRank] == 4)   rtext = "Agent Special de Comanda";
		else if(PlayerInfo[playerid][pRank] == 3)   rtext = "Agent Special";
		else if(PlayerInfo[playerid][pRank] == 2)   rtext = "Agent Secret";
		else if(PlayerInfo[playerid][pRank] == 1) 	rtext = "Cadet";
	}
	else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
	{

	    strmid(ftext, "N.G.", 0, 64, 64);
	    if(PlayerInfo[playerid][pRank] == 9) 		rtext =  "Colonel";
		else if(PlayerInfo[playerid][pRank] == 8)   rtext =  "Maior";
	    else if(PlayerInfo[playerid][pRank] == 7)   rtext =  "Capitan";
    	else if(PlayerInfo[playerid][pRank] == 6)   rtext =  "Locotenent";
		else if(PlayerInfo[playerid][pRank] == 5)   rtext =  "Plutonier";
		else if(PlayerInfo[playerid][pRank] == 4)   rtext =  "Sergent";
		else if(PlayerInfo[playerid][pRank] == 3)   rtext =  "Caporal";
		else if(PlayerInfo[playerid][pRank] == 2)   rtext =  "Fruntas";
		else if(PlayerInfo[playerid][pRank] == 1)   rtext =  "Soldat";
	}
	else if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
	{
	    strmid(ftext,"C.I.A.", 0, 64, 64);
   		if(PlayerInfo[playerid][pRank] == 9) 		rtext =  "Director";
	    else if(PlayerInfo[playerid][pRank] == 8)   rtext =  "Director Adjunct";
	    else if(PlayerInfo[playerid][pRank] == 7)   rtext =  "Asistent Director";
		else if(PlayerInfo[playerid][pRank] == 6)   rtext =  "Prim-Sef de divie";
		else if(PlayerInfo[playerid][pRank] == 5)   rtext =  "Sef de divizie";
		else if(PlayerInfo[playerid][pRank] == 4)   rtext =  "Agent Special de Comanda";
		else if(PlayerInfo[playerid][pRank] == 3)   rtext =  "Agent Special";
		else if(PlayerInfo[playerid][pRank] == 2)   rtext =  "Agent Secret";
		else if(PlayerInfo[playerid][pRank] == 1)   rtext =  "Cadet";
	}
	else if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
	{
	    strmid(ftext, "NAVY-SEAL", 0, 64, 64);
        if(PlayerInfo[playerid][pRank] == 9) 		rtext =  "Comandor";
		else if(PlayerInfo[playerid][pRank] == 8)   rtext =  "Capitan-Comandor";
	    else if(PlayerInfo[playerid][pRank] == 7)   rtext =  "Locotentent-Comandor";
     	else if(PlayerInfo[playerid][pRank] == 6)   rtext =  "Aspirant";
		else if(PlayerInfo[playerid][pRank] == 5)   rtext =  "Plutonier";
		else if(PlayerInfo[playerid][pRank] == 4)   rtext =  "Sergent";
		else if(PlayerInfo[playerid][pRank] == 3)   rtext =  "Caporal";
		else if(PlayerInfo[playerid][pRank] == 2)   rtext =  "Fruntas";
		else if(PlayerInfo[playerid][pRank] == 1)   rtext =  "Soldat";
	}
	format(strings, sizeof(strings), "{a9c4e4}-- BADGE {ee5555}%s{a9c4e4} --", PlayerName(playerid));
	SendClientMessage(playa, COLOR_WHITE, strings);
	format(strings, sizeof(strings), "{a9c4e4}?Faction: {ee5555}%s{a9c4e4} | Rank: {ee5555}%s", ftext, rtext);
	SendClientMessage(playa, COLOR_WHITE, strings);
	SendClientMessage(playa, COLOR_WHITE, "");
    format(strings, sizeof(strings), "{ee5555}%s--- %s{a9c4e4}ii arata lui {ee5555}%s {a9c4e4}insigna.",rtext,PlayerName(playerid), PlayerName(playa));
	ProxDetector(20.0, playerid, strings,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
	return 1;
}

CMD:m(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, " Nu esti politist");
	new newcar = GetPlayerVehicleID(playerid);
	if(!IsACopCar(newcar) && !IsAnFbiCar(newcar) && !IsAnCiaCar(newcar) && !IsNgCar(newcar) && !IsAnNavyCar(newcar)) return SendClientMessage(playerid,-1,"Nu esti in masina");
    if(OnDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "Nu esti OnDuty!");
	new message[128];
	if(sscanf(params,"s[128]",message)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /m [text]");
    if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Trebuie sa fii intr-o masina!");
   	if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(message) || FindIP(message))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe megaphone: ",PlayerName(playerid),playerid, message);
	    AdminsBroadCast(COLOR_RED,strings,7);
	    HackLog(strings);
	    return 1;
	}
	if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1)
	{
 		format(strings, sizeof(strings), "[L.S.P.D.- %s:o< %s]",PlayerName(playerid), message);
		ProxDetector(60.0, playerid, strings,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
 		printf("%s", strings);
 		return 1;
	}
	if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2)
	{
 		format(strings, sizeof(strings), "[F.B.I.- %s:o< %s]",PlayerName(playerid), message);
		ProxDetector(60.0, playerid, strings,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
 		printf("%s", strings);
	}
	if(PlayerInfo[playerid][pMember] == 17||PlayerInfo[playerid][pLeader] == 17)
	{
 		format(strings, sizeof(strings), "[C.I.A.- %s:o< %s]",PlayerName(playerid), message);
		ProxDetector(60.0, playerid, strings,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
 		printf("%s", strings);
	}
	if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
	{
 		format(strings, sizeof(strings), "[N.G.- %s:o< %s]",PlayerName(playerid), message);
		ProxDetector(60.0, playerid, strings,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
 		printf("%s", strings);
	}
	if(PlayerInfo[playerid][pMember] == 11||PlayerInfo[playerid][pLeader] == 11)
	{
 		format(strings, sizeof(strings), "[NAVY.SEAL- %s:o< %s]",PlayerName(playerid), message);
		ProxDetector(60.0, playerid, strings,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
 		printf("%s", strings);
	}
	return 1;
}
CMD:megaphone(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, " Nu esti politist");
	new newcar = GetPlayerVehicleID(playerid);
	if(!IsACopCar(newcar) && !IsAnFbiCar(newcar) && !IsAnCiaCar(newcar) && !IsNgCar(newcar) && !IsAnNavyCar(newcar)) return SendClientMessage(playerid,-1,"Nu esti in masina");
    if(OnDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "Nu esti OnDuty!");
	new message[128];
	if(sscanf(params,"s[128]",message)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /megaphone [text]");
    if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Trebuie sa fii intr-o masina!");
   	if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(message) || FindIP(message))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe megaphone: ",PlayerName(playerid),playerid, message);
	    AdminsBroadCast(COLOR_RED,strings,7);
	    HackLog(strings);
	    return 1;
	}
	if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1)
	{
 		format(strings, sizeof(strings), "[L.S.P.D.- %s:o< %s]",PlayerName(playerid), message);
		ProxDetector(60.0, playerid, strings,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
 		printf("%s", strings);
 		return 1;
	}
	if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2)
	{
 		format(strings, sizeof(strings), "[F.B.I.- %s:o< %s]",PlayerName(playerid), message);
		ProxDetector(60.0, playerid, strings,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
 		printf("%s", strings);
	}
	if(PlayerInfo[playerid][pMember] == 17||PlayerInfo[playerid][pLeader] == 17)
	{
 		format(strings, sizeof(strings), "[C.I.A.- %s:o< %s]",PlayerName(playerid), message);
		ProxDetector(60.0, playerid, strings,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
 		printf("%s", strings);
	}
	if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
	{
 		format(strings, sizeof(strings), "[N.G.- %s:o< %s]",PlayerName(playerid), message);
		ProxDetector(60.0, playerid, strings,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
 		printf("%s", strings);
	}
	if(PlayerInfo[playerid][pMember] == 11||PlayerInfo[playerid][pLeader] == 11)
	{
 		format(strings, sizeof(strings), "[NAVY.SEAL- %s:o< %s]",PlayerName(playerid), message);
		ProxDetector(60.0, playerid, strings,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
 		printf("%s", strings);
	}
	return 1;
}


CMD:ticket(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, " Nu esti politist");
    if(OnDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "Nu esti OnDuty!");
	new playa,price,message[128];
	if(sscanf(params,"uds[128]",playa,price,message)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /ticket [playerid/numejucator] [price] [reason]");
	if(price < 1 || price > 10000) return SendClientMessage(playerid, COLOR_GREY, "Amenda trebuie sa fie intre 1 si 10.000!");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
 	if(!ProxDetectorPlayer(8.0, playerid, playa)) return SendClientMessage(playerid, COLOR_GREY, "   Acel jucator nu este langa tine !");
 	if(PlayerInfo[playa][pLevel] < 2) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Ticket: {FFFFFF}Nu poti da amenda unui jucator de level 1");
	format(strings, sizeof(strings), "* I-ai acordat lui %s o amenda in valoare de %d. Motiv: %s", PlayerName(playa), price, message);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
	format(strings, sizeof(strings), "* Officer %s ti-a dat o amenda in valoare de %d$. Motiv: %s", PlayerName(playerid), price, message);
	SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
	SendClientMessage(playa, COLOR_LIGHTBLUE, "* Scrie /accept ticket, pentru a achita amenda");
	TicketOffer[playa] = playerid;
	TicketMoney[playa] = price;
	return 1;
}

CMD:service(playerid, params[])
{
    if(isnull(params))
	{
		SendClientMessage(playerid, COLOR_WHITE, "|__________________ Service Names __________________|");
		SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Usage:{FFFFFF} /service [name]");
		SendClientMessage(playerid, COLOR_GREY, "Available names: Taxi, Bus, Medic, Mechanic");
		SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________|");
		return 1;
	}
	if(strcmp(params, "taxi", true) == 0)
	{
		if(TaxiDrivers < 1) return   SendClientMessage(playerid, COLOR_GREY, "   Nu sunt taximetristi online, incearca mai tarziu !");
        if(TransportDuty[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "   Nu poti suna la taxi !");
	    format(strings, sizeof(strings), "** %s are nevoie de taxi. (scrie /accept taxi pentru a prelua)", PlayerName(playerid));
    	FactionsBroadCast(10, COLOR_GREEN, strings);
	    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ai sunat la taxi, asteapta un raspuns.");
		TaxiCall = playerid;
		return 1;
	}
	if(strcmp(params, "medic", true) == 0)
	{
	    new Counth=0;
		foreach(Player,i)
 	 	if(OnJob[i] == 4)Counth++;
		if(Counth==0) return  SendClientMessage(playerid, COLOR_GREY, "  Nu sunt medici online, incearca mai tarziu!");
	    format(strings, sizeof(strings), "** %s are nevoie de medic.", PlayerName(playerid));
	    SendJobMessage(4, COLOR_LIGHTRED, strings);
    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Un medic va veni la tine!");
    	return 1;
	}
	return 1;
}

CMD:cancel(playerid, params[])
{
	if(isnull(params))
	{
		SendClientMessage(playerid, COLOR_WHITE, "|__________________ Cancel __________________|");
		SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /cancel [name]");
		SendClientMessage(playerid, COLOR_GREY, "Available names: Sex, Drugs, Repair, Lawyer, Bodyguard, Live, Refill, Car, Boxing");
		SendClientMessage(playerid, COLOR_GREY, "Available names: Taxi, Bus, Medic, Mechanic, Paper, Ticket, Witness, Marriage, Divorce");
		SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
		return 1;
	}
	if(strcmp(params, "ticket", true) == 0)
 	{
	 	TicketOffer[playerid] = 999;
		TicketMoney[playerid] = 0;
		SendClientMessage(playerid,-1,"Ticket anulat!");
 	}
	else if(strcmp(params, "drugs", true) == 0)
	{
		DrugOffer[playerid] = 999;
		DrugPrice[playerid] = 0;
		DrugGram[playerid] = 0;
		SendClientMessage(playerid,-1,"Droguri anulata!");
	}
	else if(strcmp(params, "marriage", true) == 0)
 	{
		ProposeOffer[ProposeOffer[playerid]] = 999;
		ProposeOffer[playerid] = 999;
		SendClientMessage(playerid,-1,"Propunere anulata!");
	}
 	else if(strcmp(params, "lawyer", true) == 0)
 	{
	 	WantLawyer[playerid] = 0;
	 	CallLawyer[playerid] = 0;
		SendClientMessage(playerid,-1,"Avocat anulat!");
	}
	else if(strcmp(params, "box", true) == 0)
	{
		BoxOffer[BoxOffer[playerid]] = 999;
		BoxOffer[playerid] = 999;
		SendClientMessage(playerid,-1,"Box anulat!");
	}
	else if(strcmp(params, "bodyguard", true) == 0)
	{
		GuardOffer[playerid] = 999;
		GuardPrice[playerid] = 0;
		SendClientMessage(playerid,-1,"Bodyguard anulat!");
	}
	else if(strcmp(params, "live", true) == 0)
	{
		LiveOffer[TalkingLive[playerid]] = 999;
		LiveOffer[playerid] = 999;
        TalkingLive[TalkingLive[playerid]] = 999;
        TalkingLive[playerid] = 999;
		SendClientMessage(playerid,-1,"Live anulat!");
	}
	else if(strcmp(params, "taxi", true) == 0)
 	{
  		if(TaxiCall >= 999) return SendClientMessage(playerid,-1,"Nu ai apelat la taxi");
        if(TransportDuty[playerid] == 1 && TaxiCallTime[playerid] > 0)
	    {
			TaxiAccepted[playerid] = 999;
			GameTextForPlayer(playerid, "~w~Ai inchis comanda", 5000, 1);
			TaxiCallTime[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			TaxiCall = 999;
		}
  		else
    	{
			if(IsPlayerConnected(TaxiCall))
			{
				if(TaxiCall == playerid)		TaxiCall = 999;
				foreach(Player,i)
				{
					if(TaxiAccepted[i] < 999)
     				{
						if(TaxiAccepted[i] == playerid)
						{
      						TaxiAccepted[i] = 999;
            				GameTextForPlayer(i, "~w~Taximetristul~n~~r~Ti-a anulat comanda", 5000, 1);
			         		TaxiCallTime[i] = 0;
							DisablePlayerCheckpoint(playerid);
							GameTextForPlayer(playerid, "~w~Ai inchis comanda", 5000, 1);
							DisablePlayerCheckpoint(i);
							SendClientMessage(playerid,-1,"Comanda anulat!");
						}
					}
				}
			}
		}
	}
 	return 1;
}



CMD:accept(playerid, params[])
{
    if(isnull(params))
	{
		SendClientMessage(playerid, COLOR_WHITE, "|__________________ Accept __________________|");
		SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /Accept [name]");
		SendClientMessage(playerid, COLOR_GREY, "Available names: Sex, Drugs, Repair, Lawyer, Bodyguard, Live, Refill, Car, Boxing");
		SendClientMessage(playerid, COLOR_GREY, "Available names: Taxi, Bus, Medic, Mechanic, Paper, Ticket, Witness, Marriage, Divorce");
		SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
		return 1;
	}
	if(strcmp(params, "refill", true) == 0)
	{
	    if(RefillOffer[playerid] != 999)
		{
            new car = GetPlayerVehicleID(playerid), fuel;
            if(gGas[car] > 99) return SendClientMessage(playerid,COLOR_RED,"Ai rezervorul plin!");
			if(!IsPlayerConnected(RefillOffer[playerid])) return SendClientMessage(playerid,-1,"Player deconectat");
            if(GetPlayerCash(playerid) < RefillPrice[playerid]) return SendClientMessage(playerid,-1,"Nu ai atatia bani");
            if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Info: {FFFFFF}Nu ai level 2!");
            PlayerInfo[RefillOffer[playerid]][pMechSkill] ++;
            Update(RefillOffer[playerid], pMechSkillx);
			if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 50)
			SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Skilul tau de Mechanic este acum Level 2, acum poti da mai mult combustibil playerilor.");
			else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 100)
			SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Skilul tau de Mechanic este acum Level 3, acum poti da mai mult combustibil playerilor.");
			else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 200)
			SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Skilul tau de Mechanic este acum Level 4, acum poti da mai mult combustibil playerilor.");
			else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 400)
			SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Skilul tau de Mechanic este acum Level 5, acum poti da mai mult combustibil playerilor.");
			new level = PlayerInfo[RefillOffer[playerid]][pMechSkill];
			if(level >= 0 && level <= 50)
			fuel = 15;
			else if(level >= 51 && level <= 100)
			fuel = 40;
			else if(level >= 101 && level <= 200)
			fuel = 60;
			else if(level >= 201 && level <= 400)
			fuel = 80;
			else if(level >= 401)
			fuel = 100;
   			format(strings, sizeof(strings), "* Ti-ai pus in rezervor %dl, pentru $%d de la mecanicul %s.",fuel,RefillPrice[playerid],PlayerName(RefillOffer[playerid]));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
			format(strings, sizeof(strings), "* I-ai pus in rezervorul masinii lui %s %dl, ai primit $%d.",PlayerName(playerid),fuel,RefillPrice[playerid]);
			SendClientMessage(RefillOffer[playerid], COLOR_LIGHTBLUE, strings);
			GivePlayerCash(RefillOffer[playerid], RefillPrice[playerid]);
			GivePlayerCash(playerid, -RefillPrice[playerid]);
			if(gGas[car] + fuel <= 100)
			gGas[car] += fuel;
			else
			gGas[car] = 100;
  	        RefillOffer[playerid] = 999;
			RefillPrice[playerid] = 0;
			return 1;
   		}
   	}
   	else if(strcmp(params, "drugs", true) == 0)
  	{
 		if(DrugOffer[playerid] < 999)
  		{
			if(GetPlayerCash(playerid) < DrugPrice[playerid]) return SendClientMessage(playerid,COLOR_RED,"Nu ai bani!");
  			if(PlayerInfo[playerid][pDrugs] > 20) return SendClientMessage(playerid,COLOR_RED,"ai peste 20 grame!");
	        if(!IsPlayerConnected(DrugOffer[playerid])) return SendClientMessage(playerid,COLOR_RED,"Dealer offline");
            if(PlayerInfo[DrugOffer[playerid]][pDrugs] <1 ) return SendClientMessage(playerid,COLOR_RED,"Playerul nu mai are droguri!");

			format(strings, sizeof(strings), "* You bought %d gram for $%d from Drug Dealer %s.",DrugGram[playerid],DrugPrice[playerid],PlayerName(DrugOffer[playerid]));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
			format(strings, sizeof(strings), "* %s has bought your %d gram, the $%d was added to your PayCheck.",PlayerName(playerid),DrugGram[playerid],DrugPrice[playerid]);
			SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, strings);
			GivePlayerCash(DrugOffer[playerid], DrugPrice[playerid]);
			PlayerInfo[DrugOffer[playerid]][pDrugsSkill] ++;
			Update(DrugOffer[playerid], pDrugsSkillx);
			GivePlayerCash(playerid, -DrugPrice[playerid]);
			PlayerInfo[playerid][pDrugs] += DrugGram[playerid];
			PlayerInfo[DrugOffer[playerid]][pDrugs] -= DrugGram[playerid];
			if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 50)
			SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Skillul tau de Dealer este acum 2, poti cumpara droguri mai ieftin");
			else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 100)
			SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Skillul tau de Dealer este acum 3, poti cumpara droguri mai ieftin");
			else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 200)
			SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Skillul tau de Dealer este acum 4, poti cumpara droguri mai ieftin");
			else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 400)
			SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Skillul tau de Dealer este acum 5, poti cumpara droguri mai ieftin");
            DrugOffer[playerid] = 999;
			DrugPrice[playerid] = 0;
			DrugGram[playerid] = 0;
			Update(playerid, pDrugsx);
			Update(DrugOffer[playerid], pDrugsx);
			return 1;
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Drugs: {FFFFFF}Nimeni nu a oferit droguri!");
	}
   	else if(strcmp(params, "box", true) == 0)
  	{
 		if(BoxOffer[playerid] < 999)
		{
			if(!IsPlayerConnected(BoxOffer[playerid])) return SendClientMessage(playerid,-1,"Player deconectat");
            new points;
	        new mypoints;
         	new level = PlayerInfo[BoxOffer[playerid]][pBoxSkill];
			if(level >= 0 && level <= 50)  			points = 40;
			else if(level >= 51 && level <= 100)  	points = 50;
			else if(level >= 101 && level <= 200) 	points = 60;
			else if(level >= 201 && level <= 400)	points = 70;
			else if(level >= 401) 					points = 80;
			if(PlayerInfo[playerid][pJob2] == 6 || PlayerInfo[playerid][pJob1] == 6)
   			{
				new clevel = PlayerInfo[playerid][pBoxSkill];
				if(clevel >= 0 && clevel <= 50)  		mypoints = 40;
				else if(clevel >= 51 && clevel <= 100)  mypoints = 50;
				else if(clevel >= 101 && clevel <= 200) mypoints = 60;
				else if(clevel >= 201 && clevel <= 400) mypoints = 70;
				else if(clevel >= 401)  				mypoints = 80;
			}
			else
   		    mypoints = 30;

			format(strings, sizeof(strings), "* Ai acceptat sa te lupti cu %s, el va lupta cu %d Health.",PlayerName(BoxOffer[playerid]),mypoints);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
			format(strings, sizeof(strings), "* %s a acceptat sa se lupte cu tine, te vei lupta cu %d Health.",PlayerName(playerid),points);
			SendClientMessage(BoxOffer[playerid], COLOR_LIGHTBLUE, strings);
			SetPlayerHealth(playerid, mypoints);
			SetPlayerHealth(BoxOffer[playerid], points);
			SetPlayerInterior(playerid, 5); SetPlayerInterior(BoxOffer[playerid], 5);
			SetPlayerPos(playerid, 762.9852,2.4439,1001.5942); SetPlayerFacingAngle(playerid, 131.8632);
			SetPlayerPos(BoxOffer[playerid], 758.7064,-1.8038,1001.5942); SetPlayerFacingAngle(BoxOffer[playerid], 313.1165);
			TogglePlayerControllable(playerid, 0); TogglePlayerControllable(BoxOffer[playerid], 0);
			GameTextForPlayer(playerid, "~r~Waiting", 3000, 1); GameTextForPlayer(BoxOffer[playerid], "~r~Waiting", 3000, 1);
			new dstring[MAX_PLAYER_NAME];
			new wstring[MAX_PLAYER_NAME];
			format(dstring, sizeof(dstring), "%s", PlayerName(playerid));
			strmid(wstring, dstring, 0, strlen(dstring), 255);
			if(strcmp(Titel[TitelName] ,wstring, true ) == 0 )
			{
				format(strings, sizeof(strings), "Boxing News: Boxing Champion %s will fight VS %s, in 60 seconds (Grove Street Gym).",  PlayerName(playerid), PlayerName(BoxOffer[playerid]));
				OOCNews(COLOR_WHITE,strings);
				TBoxer = playerid;
				BoxDelay = 60;
			}
			format(dstring, sizeof(dstring), "%s", PlayerName(BoxOffer[playerid]));
			strmid(wstring, dstring, 0, strlen(dstring), 255);
			if(strcmp(Titel[TitelName] ,wstring, true ) == 0 )
			{
				format(strings, sizeof(strings), "Boxing News: Campionul la Box %s va lupta cu %s, in 60 de secunde (la Grove Street Gym).",  PlayerName(BoxOffer[playerid]), PlayerName(playerid));
				OOCNews(COLOR_WHITE,strings);
				TBoxer = BoxOffer[playerid];
				BoxDelay = 60;
			}
			BoxWaitTime[playerid] = 1;
			BoxWaitTime[BoxOffer[playerid]] = 1;
			if(BoxDelay < 1) BoxDelay = 20;
			InRing = 1;
			Boxer1 = BoxOffer[playerid];
			Boxer2 = playerid;
			PlayerBoxing[playerid] = 1;
			PlayerBoxing[BoxOffer[playerid]] = 1;
			BoxOffer[playerid] = 999;
			return 1;
		}
		return 1;
	}
	else if(strcmp(params, "bodyguard", true) == 0)
  	{
		if(GuardOffer[playerid] < 999)
		{
  			if(GetPlayerCash(playerid)< GuardPrice[playerid]) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani");
  		    if(!IsPlayerConnected(GuardOffer[playerid]))  return SendClientMessage(playerid,-1,"Player deconectat");
 	        if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Nu ai level 2!");
			format(strings, sizeof(strings), "* Ai acceptat protectia lui %s pentru %d$",PlayerName(GuardOffer[playerid]),GuardPrice[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
			format(strings, sizeof(strings), "* %s ti-a acceptat protectia, ai primit $%d.",PlayerName(playerid),GuardPrice[playerid]);
			SendClientMessage(GuardOffer[playerid], COLOR_LIGHTBLUE, strings);
			GivePlayerCash(GuardOffer[playerid], GuardPrice[playerid]);
			GivePlayerCash(playerid, -GuardPrice[playerid]);
			GuardOffer[playerid] = 999;
			GuardPrice[playerid] = 0;
			if(!IsACop(playerid))
			SetPlayerArmour(playerid, 50);
			else
			SetPlayerArmour(playerid, 100);
			return 1;
		}
	}
   	else if(strcmp(params, "marriage", true) == 0)
  	{
		if(ProposeOffer[playerid] < 999)
		{
			if(!IsPlayerInRangeOfPoint(playerid,10, -1988.6638,1117.8837,54.4726)) return  SendClientMessage(playerid, COLOR_GREY, "   Nu esti la biserica din San Fierro !");
  	        if(!IsPlayerConnected(ProposeOffer[playerid]))  return SendClientMessage(playerid,-1,"Player deconectat");
            if(!ProxDetectorPlayer(10.0, playerid, ProposeOffer[playerid]))  return SendClientMessage(playerid,-1,"Nu esti langa Player");
    	    if(MarryWitness[ProposeOffer[playerid]] == 999) return  SendClientMessage(playerid, COLOR_GREY, "   Nunta nu are un martor /witness!");
   		    if(!IsPlayerConnected(MarryWitness[ProposeOffer[playerid]]))  return SendClientMessage(playerid,-1,"Martor deconectat");
            if(!ProxDetectorPlayer(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]]))  return SendClientMessage(playerid,-1,"Nu esti langa martor");
        	format(strings, sizeof(strings), "* I-ai acceptat cererea in casatorie a lui %s", PlayerName(ProposeOffer[playerid]));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
			format(strings, sizeof(strings), "* %s Ti-a acceptat cererea in casatorie.", PlayerName(playerid));
			SendClientMessage(ProposeOffer[playerid], COLOR_LIGHTBLUE, strings);
			format(strings, sizeof(strings), "Preot: %s o iei pe %s de sotie (scrie 'da', orice altceva va anula nunta)", PlayerName(playerid), PlayerName(ProposeOffer[playerid]));
			SendClientMessage(playerid, COLOR_WHITE, strings);
			MarriageCeremoney[playerid] = 1;
			ProposedTo[ProposeOffer[playerid]] = playerid;
			GotProposedBy[playerid] = ProposeOffer[playerid];
			MarryWitness[ProposeOffer[playerid]] = 999;
			ProposeOffer[playerid] = 999;
			return 1;
		}
	}
   	else if(strcmp(params, "live", true) == 0)
  	{
		if(LiveOffer[playerid] < 999)
		{
			if(!IsPlayerConnected(LiveOffer[playerid])) return SendClientMessage(playerid,COLOR_RED,"Player deconectat!");
	        if (!ProxDetectorPlayer(5.0, playerid, LiveOffer[playerid])) return SendClientMessage(playerid,COLOR_RED,"Playerul nu e langa tine!");
   			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You are frozen till the Live Conversation ends.");
			SendClientMessage(LiveOffer[playerid], COLOR_LIGHTBLUE, "* You are frozen till the Live Conversation ends (use /live again).");
			TogglePlayerControllable(playerid, 1);
			TogglePlayerControllable(LiveOffer[playerid], 1);
			TalkingLive[playerid] = LiveOffer[playerid];
			TalkingLive[LiveOffer[playerid]] = playerid;
			LiveOffer[playerid] = 999;
			return 1;
		}
	    else return SendClientMessage(playerid, COLOR_GREY, " Nimeni nu ti-a oferit un LIVE!");
  	}

   	else if(strcmp(params, "taxi", true) == 0)
 	{
  		if(TransportDuty[playerid] != 1) return    SendClientMessage(playerid, COLOR_GREY, "  Nu esti taximetrist !");
        if(TaxiCallTime[playerid] > 0) return        SendClientMessage(playerid, COLOR_GREY, " Ai acceptat deja o comanda!");
        if(TaxiCall >= 999) return        SendClientMessage(playerid, COLOR_GREY, " Ai deja o comanda!");
		if(!IsPlayerConnected(TaxiCall))  return        SendClientMessage(playerid, COLOR_GREY, "Player offline");

		format(strings, sizeof(strings), "*Ai acceptat apelul de la %s, ai un market pe minimap.",PlayerName(TaxiCall));
		SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
  		format(strings, sizeof(strings), "* Taxi Driver %s ti-a acceptat apelul, asteapta sa vina.",PlayerName(playerid));
		SendClientMessage(TaxiCall, COLOR_LIGHTBLUE, strings);
		GameTextForPlayer(playerid, "~w~Taxi Acceptat~n~~r~Du-te la marker", 5000, 1);
		TaxiCallTime[playerid] = 1;
		TaxiAccepted[playerid] = TaxiCall;
		TaxiCall = 999;
		return 1;
	}

   	else if(strcmp(params, "lawyer", true) == 0)
 	{
 	    new playa = GetClosestPlayer(playerid);
		if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
		if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
		if (!IsACop(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti politist");
        if(PlayerInfo[playa][pJob2] != 2 && PlayerInfo[playa][pJob1] != 2) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este avocat");
		format(strings, sizeof(strings), "* I-ai permis lui %s sa elibereze o persona din puscarie.", PlayerName(playa));
		SendClientMessage(playerid, COLOR_LIGHTBLUE,strings);
		format(strings, sizeof(strings), "* Officer %s ti-a aprobat sa eliberezi pe cineva din puscarie. (use /free)", PlayerName(playerid));
		SendClientMessage(playa, COLOR_LIGHTBLUE,strings);
		ApprovedLawyer[playa] = 1;
  		return 1;
	}
   	else if(strcmp(params, "car", true) == 0)
 	{
		if(OwnableCarOffer[playerid] < 999)
		{
			if(OwnableCarID[playerid] == 0) return 1;
   			if(OwnableCarPrice[playerid] == 0 || OwnableCarPrice[playerid] > 999999999) return 1;
            if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Car: {FFFFFF}Ai nevoie de level 3!");
  		    if(GetPlayerCash(playerid) < OwnableCarPrice[playerid]) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani");
        	if(!IsPlayerConnected(OwnableCarOffer[playerid])) return SendClientMessage(playerid,COLOR_RED,"Vanzator offline");
		    new ivID = OwnableCarID[playerid], Float:Pos[4];
      		GetVehiclePos(ivID, Pos[0], Pos[1], Pos[2]);
			GetVehicleZAngle(ivID, Pos[3]);
			if(PlayerInfo[playerid][pCar1] == 0) PlayerInfo[playerid][pCar1] = OwnableCarID[playerid];
			else if(PlayerInfo[playerid][pCar2] == 0) PlayerInfo[playerid][pCar2] = OwnableCarID[playerid];
			else if(PlayerInfo[playerid][pCar3] == 0) PlayerInfo[playerid][pCar3] = OwnableCarID[playerid];
			if(PlayerInfo[OwnableCarOffer[playerid]][pCar1] != 0) PlayerInfo[OwnableCarOffer[playerid]][pCar1] = 0;
			else if(PlayerInfo[OwnableCarOffer[playerid]][pCar2] != 0) PlayerInfo[OwnableCarOffer[playerid]][pCar2] = 0;
			else if(PlayerInfo[OwnableCarOffer[playerid]][pCar3] != 0) PlayerInfo[OwnableCarOffer[playerid]][pCar3] = 0;
			vInfo[OwnedVeh(ivID)][vPosX] = Pos[0];
			vInfo[OwnedVeh(ivID)][vPosY] = Pos[1];
			vInfo[OwnedVeh(ivID)][vPosZ] = Pos[2];
			vInfo[OwnedVeh(ivID)][vPosA] = Pos[3];
			strmid(vInfo[OwnedVeh(ivID)][vOwner], PlayerName(playerid), 0, 20, 20);
			strmid(vInfo[OwnedVeh(ivID)][vPlate], ""#SERVERNAME"", 0, 32, 32);
			vInfo[OwnedVeh(ivID)][vLocked] = 1;
			vInfo[OwnedVeh(ivID)][vTowed] = 0;
			GivePlayerCash(playerid, -OwnableCarPrice[playerid]);
			GivePlayerCash(OwnableCarOffer[playerid], OwnableCarPrice[playerid]);
			SetVehicleNumberPlate(ivID, ""#SERVERNAME"");
			SetVehicleToRespawn(ivID);
			SetVehiclePos(ivID, Pos[0], Pos[1], Pos[2]);
			SetVehicleZAngle(ivID, Pos[3]);
            vUpdate(OwnedVeh(ivID), vPosXx);
            vUpdate(OwnedVeh(ivID), vPosYx);
            vUpdate(OwnedVeh(ivID), vPosZx);
            vUpdate(OwnedVeh(ivID), vPosAx);
            vUpdate(OwnedVeh(ivID), vOwnerx);
            vUpdate(OwnedVeh(ivID), vPlatex);
            vUpdate(OwnedVeh(ivID), vLockedx);
            vUpdate(OwnedVeh(ivID), vTowedx);
		    OwnableCarOffer[playerid] = 999;
			OwnableCarID[playerid] = 0;
			OwnableCarPrice[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD2, "** Scrie /ajutormasina pentru a vedea comenzile!");
			return 1;
  		}
	}
   	else if(strcmp(params, "sex", true) == 0)
 	{
		if(SexOffer[playerid] < 999)
		{
			if(GetPlayerCash(playerid) < SexPrice[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Nu ai destui bani!");
			if(!IsPlayerConnected(SexOffer[playerid]))return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Nu ai destui bani!");
    	    new Car = GetPlayerVehicleID(playerid);
		    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Nu esti in masina");
		    if(!IsPlayerInVehicle(SexOffer[playerid], Car)) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Nu esti in masina");
	        if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Avertisment: {FFFFFF}Nu ai level 2!");
   			format(strings, sizeof(strings), "* Ai facut sex cu curva de %s, pentru $%d.", PlayerName(SexOffer[playerid]), SexPrice[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
			format(strings, sizeof(strings), "* %s a facut sex cu el, ai primit $%d.", PlayerName(playerid), SexPrice[playerid]);
			SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, strings);
			GivePlayerCash(SexOffer[playerid],SexPrice[playerid]);
			GivePlayerCash(playerid, -SexPrice[playerid]);
			SexTimer[playerid] = 10;
			SexTimer[SexOffer[playerid]] = 10;
			PlayerInfo[SexOffer[playerid]][pSexSkill] ++;
			Update(SexOffer[playerid], pSexSkillx);
			if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 50)
			SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Skillul tau de prostituata este acum Level 2, acum oferi un sex mai bun(health) si sanse scazute la STD.");
			else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 100)
			SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Skillul tau de prostituata este acum Level  3, acum oferi un sex mai bun(health) si sanse scazute la STD.");
			else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 200)
			SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Skillul tau de prostituata este acum Level  4, acum oferi un sex mai bun(health) si sanse scazute la STD.");
			else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 400)
			SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Skillul tau de prostituata este acum Level  5, acum oferi un sex mai bun(health) si sanse scazute la STD.");
			if(STDPlayer[playerid] == 0)
			{
			    if(Condom[playerid] < 1)
				{
        	    	new Float:health;
				    GetPlayerHealth(playerid, health);
				    new level = PlayerInfo[SexOffer[playerid]][pSexSkill];
				    if(level >= 0 && level <= 50)
				    {
						SetPlayerHealth(playerid, 100.0);
						new rand = random(sizeof(STD1));
						STDPlayer[playerid] = STD1[rand];
						STDPlayer[SexOffer[playerid]] = STD1[rand];
						if(STD1[rand] == 0)      { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ai primit 30HP fara STD."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Nu ai luat STD in timpul sexului.");}
						else if(STD1[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ai primit 30HP + Chlamydia din cauza Sexului."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ai luat Chlamydia din cauza Sexului.");}
						else if(STD1[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ai primit 30HP + Gonorrhea din cauza Sexului."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ai luat Gonorrhea din cauza Sexului.");}
						else if(STD1[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ai primit 30HP + Syphilis din cauza Sexului."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ai luat Syphilis din cauza Sexului.");}
					}
					else if(level >= 51 && level <= 100)
				    {
				        SetPlayerHealth(playerid, 100.0);
						new rand = random(sizeof(STD2));
						STDPlayer[playerid] = STD2[rand];
						STDPlayer[SexOffer[playerid]] = STD2[rand];
						if(STD2[rand] == 0) 	{  SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ai primit 60HP fara STD."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*  Nu ai luat STD in timpul sexului.");}
						else if(STD2[rand] == 1){  SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ai primit 60HP + Chlamydia din cauza Sexului."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ai luat Chlamydia din cauza Sexului.");}
						else if(STD2[rand] == 2){ SendClientMessage(playerid, COLOR_LIGHTBLUE, "*  Ai primit 60HP + Gonorrhea din cauza Sexului."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ai luat Gonorrhea din cauza Sexului.");}
						else if(STD2[rand] == 3){  SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ai primit 60HP + Syphilis din cauza Sexului."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ai luat Syphilis din cauza Sexului.");}
					}
					else if(level >= 101 && level <= 200)
				    {
				        SetPlayerHealth(playerid, 100.0);
						new rand = random(sizeof(STD3));
						STDPlayer[playerid] = STD3[rand];
						STDPlayer[SexOffer[playerid]] = STD3[rand];
						if(STD3[rand] == 0)     {  SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ai primit 90HP fara STD."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*  Nu ai luat STD in timpul sexului.");}
						else if(STD3[rand] == 1){  SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ai primit 90HP + Chlamydia din cauza Sexului."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ai luat Chlamydia din cauza Sexului.");}
						else if(STD3[rand] == 2){  SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ai primit 90HP + Gonorrhea din cauza Sexului."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ai luat Gonorrhea din cauza Sexului.");}
						else if(STD3[rand] == 3){  SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ai primit 90HP + Syphilis din cauza Sexului."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ai luat Syphilis din cauza Sexului.");}
					}
					else if(level >= 201 && level <= 400)
				    {
				        SetPlayerHealth(playerid, 100.0);
						new rand = random(sizeof(STD4));
						STDPlayer[playerid] = STD4[rand];
						STDPlayer[SexOffer[playerid]] = STD4[rand];
						if(STD4[rand] == 0)     { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ai primit 120HP fara STD."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*  Nu ai luat STD in timpul sexului.");}
						else if(STD4[rand] == 1){ SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ai primit 120HP + Chlamydia din cauza Sexului."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ai luat Chlamydia din cauza Sexului.");}
						else if(STD4[rand] == 2){ SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ai primit 120HP + Gonorrhea din cauza Sexului."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ai luat Gonorrhea din cauza Sexului.");}
						else if(STD4[rand] == 3){ SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ai primit 120HP + Syphilis din cauza Sexului."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ai luat Syphilis din cauza Sexului.");}
					}
					else if(level >= 401)
					{
					    SetPlayerHealth(playerid, 100.0);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Skilul tau este 5 acum vei da health maxim fara sanse de STD.");
						SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Skilul curvei este maxim acum va da health maxim fara sanse de STD.");
					}
				}
				else
				{
					SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Playerul a folosit prezervativ");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ai folosit un prezervativ");
					Condom[playerid] --;
	 			}
			}
			else
			{
				SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Nenorocitul asta are STD. Nu vrei sa ti-o tragi cu el.");
  				SexOffer[playerid] = 999;
				return 1;
			}
   		}
	}
 	else if(strcmp(params, "ticket", true) == 0)
 	{
 	    if(TicketOffer[playerid] == 999) return 1;
 	    if(GetPlayerCash(playerid) < TicketMoney[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Ticket: {FFFFFF}Nu ai destui bani!");
		format(strings, sizeof(strings), "* Ai platit o amenda in valoare de %d $ Ofiterului %s", TicketMoney[playerid], PlayerName(TicketOffer[playerid]));
		SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
		format(strings, sizeof(strings), "* %s ti-a platit amenda in valoare de %d$.", PlayerName(playerid), TicketMoney[playerid]);
		SendClientMessage(TicketOffer[playerid], COLOR_LIGHTBLUE, strings);
		GivePlayerCash(playerid, - TicketMoney[playerid]);
		GivePlayerCash(TicketOffer[playerid], TicketMoney[playerid]);
		TicketOffer[playerid] = 999;
		TicketMoney[playerid] = 0;
 	}
	else if(strcmp(params, "invite", true) == 0)
	{
		if(FactionOffer[playerid] != 999)
		{
  			format(strings, sizeof(strings), "{1580EA}Faction: {FFFFFF}Ai acceptat invitatia lui %s pentru a intra in factiune!", PlayerName(FactionOffer[playerid]));
			SendClientMessage(playerid, COLOR_WHITE, strings);
			new para1 = playerid, ftext[30];

			format(strings, sizeof(strings), "%s %d a acceptat invitatia lui %s %d in factiunea lui cu id: %d", PlayerName(playerid),playerid,PlayerName(FactionOffer[playerid]),FactionOffer[playerid],PlayerInfo[FactionOffer[playerid]][pLeader]);

			mysql_format(handle, query, 500, "INSERT INTO `factionlog` (`FactionID`,`Efector`,`Receptor`,`Actiunea`,`TimeStamps`) VALUES ('%d','%s','%s','%s','%s')",
			PlayerInfo[FactionOffer[playerid]][pLeader],PlayerName(playerid),PlayerName(FactionOffer[playerid]),strings,CurrentTimeStamps());
			mysql_query(handle,query);
			if(PlayerInfo[FactionOffer[playerid]][pLeader] == 1)		{	ftext = "Police Departament";	ChosenSkin[playerid] = 300;	PlayerInfo[playerid][pSkin] = 300;			}
   			else if(PlayerInfo[FactionOffer[playerid]][pLeader] == 2)	{	ftext = "FBI";	  				ChosenSkin[playerid] = 286;	PlayerInfo[playerid][pSkin] = 286;			}
	        else if(PlayerInfo[FactionOffer[playerid]][pLeader] == 3)	{	ftext = "National Guard";		ChosenSkin[playerid] = 285;	PlayerInfo[playerid][pSkin] = 287;			}
	        else if(PlayerInfo[FactionOffer[playerid]][pLeader] == 4)	{	ftext = "Agentia Prezidentia";	ChosenSkin[playerid] = 17;	PlayerInfo[playerid][pSkin] = 70;			}
	        else if(PlayerInfo[FactionOffer[playerid]][pLeader] == 5)	{	ftext = "Rifa Gang";			ChosenSkin[playerid] = 273;	PlayerInfo[playerid][pSkin] = 273;			}
	        else if(PlayerInfo[FactionOffer[playerid]][pLeader] == 6)	{	ftext = "Triads";				ChosenSkin[playerid] = 123;	PlayerInfo[playerid][pSkin] = 125;			}
	        else if(PlayerInfo[FactionOffer[playerid]][pLeader] == 7)	{	ftext = "Guvernul";				ChosenSkin[playerid] = 171;	PlayerInfo[playerid][pSkin] = 249;			}
	        else if(PlayerInfo[FactionOffer[playerid]][pLeader] == 8)	{	ftext = "Hitman Agency";		ChosenSkin[playerid] = 249;	PlayerInfo[playerid][pSkin] = 249;			}
	        else if(PlayerInfo[FactionOffer[playerid]][pLeader] == 9)	{	ftext = "ABC Studio";			ChosenSkin[playerid] = 171;	PlayerInfo[playerid][pSkin] = 148;			}
	        else if(PlayerInfo[FactionOffer[playerid]][pLeader] == 10)	{	ftext = "Taxi Cab Company";		ChosenSkin[playerid] = 255;	PlayerInfo[playerid][pSkin] = 255;			}
	        else if(PlayerInfo[FactionOffer[playerid]][pLeader] == 11)	{	ftext = "Navy Seal";			ChosenSkin[playerid] = 59;	PlayerInfo[playerid][pSkin] = 59;			}
	        else if(PlayerInfo[FactionOffer[playerid]][pLeader] == 12)	{	ftext = "Parlament";			ChosenSkin[playerid] = 187;	PlayerInfo[playerid][pSkin] = 187;			}
            else if(PlayerInfo[FactionOffer[playerid]][pLeader] == 13)	{ 	ftext = "Russian Bratva";   	ChosenSkin[playerid] = 125;	PlayerInfo[playerid][pSkin] = 124;			}
			else if(PlayerInfo[FactionOffer[playerid]][pLeader] == 14)	{	ftext = "Ballas Gang";			ChosenSkin[playerid] = 103;	PlayerInfo[playerid][pSkin] = 103;			}
	        else if(PlayerInfo[FactionOffer[playerid]][pLeader] == 15)	{	ftext = "Sevile Gang";			ChosenSkin[playerid] = 269;	PlayerInfo[playerid][pSkin] = 269;			}
	        else if(PlayerInfo[FactionOffer[playerid]][pLeader] == 16)	{	ftext = "Corleone"; 			ChosenSkin[playerid] = 126;	PlayerInfo[playerid][pSkin] = 126;			}
		    else if(PlayerInfo[FactionOffer[playerid]][pLeader] == 17)	{	ftext = "CIA";					ChosenSkin[playerid] = 276;	PlayerInfo[playerid][pSkin] = 276;			}
	        else return 1;
			PlayerInfo[para1][pMember] = PlayerInfo[FactionOffer[playerid]][pLeader];
			PlayerInfo[para1][pRank] = 1;
			Update(para1, pMemberx);
			Update(para1, pRankx);
			SelectCharID[playerid] = PlayerInfo[playerid][pMember];
			SelectCharPlace[para1] = 1;
			PlayerInfo[para1][pFwarn] =0;
			Update(para1, pFwarnx);
			printf("News: %s has invited %s to join %s.", PlayerName(FactionOffer[playerid]), PlayerName(playerid), ftext);
			format(strings, sizeof(strings), "Ai intrat in %s, ai fost invitat de Liderul %s", ftext, PlayerName(FactionOffer[playerid]));
			SendClientMessage(para1, COLOR_LIGHTBLUE, strings);
			format(strings, sizeof(strings), "** L-ai invitat pe %s sa intre in %s.", PlayerName(playerid),ftext);
			SendClientMessage(FactionOffer[playerid], COLOR_LIGHTBLUE, strings);
			SetPlayerInterior(para1,0);
			TogglePlayerControllable(para1, 0);
			PlayerInfo[para1][pSkin] = ChosenSkin[para1];
			Update(para1,pSkinx);
			SetPlayerToTeamColor(para1);
			PlayerInfo[para1][pSpawn] = 1;
	    	SendClientMessage(para1, COLOR_WHITE, "Acum spawnul tau este la HQ/Factiune");
	    	Update(para1,pSpawnx);
	    	SetPlayerPos(para1,-2158.9033, 252.8161, 40.9432);
	    	SetPlayerCameraPos(para1,-2155.0632, 252.8161, 43.5232);
	    	SetPlayerCameraLookAt(para1,-2158.9033, 252.8161, 42.1432);
	    	SetPlayerFacingAngle(playerid,-90);
		   	SetPlayerWeather(playerid, 0);
            SetPlayerTime(playerid, 12, 0);
			FactionOffer[playerid] = 999;
			SetPlayerVirtualWorld(playerid, playerid);
   			ShowPlayerDialog(para1, 427, DIALOG_STYLE_MSGBOX,"{FFFFFF}Clothes:", "{FFFFFF}Apasa 'Next' pentru a schimba hainele.\nApasa 'Done' sa cumperi aceste haine.","{FFFFFF}Next", "{FFFFFF}Done");
   		}
	}
	else if(strcmp(params, "repair", true) == 0)
	{
	    if(RepairOffer[playerid] != 999)
	    {
		    if(GetPlayerCash(playerid) < RepairPrice[playerid]) return SendClientMessage(playerid,-1,"Nu ai atatia bani");
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Nu esti in masina");
	        if(!IsPlayerConnected(RepairOffer[playerid])) return SendClientMessage(playerid,-1,"Player deconectat");
            if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Warning: {FFFFFF}Nu ai level 2 2!");
	        RepairCar[playerid] = GetPlayerVehicleID(playerid);
	        SetVehicleHealth(RepairCar[playerid], 1000.0);
			format(strings, sizeof(strings), "* Masina ti-a fost reparata pentru $%d de mecanicul %s.",RepairPrice[playerid],PlayerName(RepairOffer[playerid]));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
			format(strings, sizeof(strings), "* Ai reparat masina lui %s pentru $%d.",PlayerName(playerid),RepairPrice[playerid]);
			SendClientMessage(RepairOffer[playerid], COLOR_LIGHTBLUE, strings);
			PlayerInfo[RepairOffer[playerid]][pMechSkill] ++;
			Update(RepairOffer[playerid], pMechSkillx);
			if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 50)
			SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Skilul tau de Mechanic este acum Level 2, acum poti da mai mult combustibil playerilor.");
			else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 100)
			SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Skilul tau de Mechanic este acum Level 3, acum poti da mai mult combustibil playerilor.");
			else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 200)
			SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Skilul tau de Mechanic este acum Level 4, acum poti da mai mult combustibil playerilor.");
			else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 400)
			SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Skilul tau de Mechanic este acum Level 5, acum poti da mai mult combustibil playerilor.");
			GivePlayerCash(RepairOffer[playerid], RepairPrice[playerid]);
			GivePlayerCash(playerid, -RepairPrice[playerid]);
			RepairOffer[playerid] = 999;
			RepairPrice[playerid] = 0;
			RepairVehicle(GetPlayerVehicleID(playerid));
			return 1;
		}
	}
	else if(strcmp(params, "car", true) == 0)
	{
	}
	return 1;
}

CMD:adv(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "  Nu ai rangul administrativ necesar!");
 	LoadCreatedCars();
	SendClientMessage(playerid, COLOR_GREY, "  Vehiculele create au fost distruse !");
 	return 1;
}
CMD:car(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_LIGHTRED, "Aceasta comanda este interzisa adminilor cu level mai mic de 7!");
	new car,color1,color2,Float:X,Float:Y,Float:Z;
	if(sscanf(params,"ddd", car,color1,color2)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /car [model] [color] [color2]");
	if(car < 400 || car > 611) { SendClientMessage(playerid, COLOR_GREY, "   Modelul vehiculului trebuie sa fie cuprins intre 400 si 611 !"); return 1; }
	if(color1 < 0 && color1 >= 126 && color1<=128 && color1 >= 255) { SendClientMessage(playerid, COLOR_GREY, "   Culoare invalida."); return 1; }
	if(color2 < 0 && color2 >= 126 && color2<=128 && color2 >= 255) { SendClientMessage(playerid, COLOR_GREY, "   Culoare invalida."); return 1; }
	GetPlayerPos(playerid, X,Y,Z);
	if(ServerVeh>=50)
	ServerVeh=-1;
	ServerVeh++;
    DestroyVehicle(CreatedCarsOn[ServerVeh]);
	CreatedCarsOn[ServerVeh] = CreateVehicle(car, X,Y,Z, 0.0, color1, color2, 7200);
	CreatedCars[CreatedCarsOn[ServerVeh]] = 1;
	LinkVehicleToInterior(CreatedCarsOn[ServerVeh], GetPlayerInterior(playerid));
	format(strings, sizeof(strings), "%s[%d] a cret vehiculul %s (Model:%d){00FF00}[ID:%d]", PlayerName(playerid),playerid,GetVehicleName(GetVehicleModel(CreatedCarsOn[ServerVeh])),GetVehicleModel(CreatedCarsOn[ServerVeh]),CreatedCarsOn[ServerVeh]);
	AdminsBroadCast(-1,strings,PlayerInfo[playerid][pAdmin]);
	PutPlayerInVehicle(playerid, CreatedCarsOn[ServerVeh], 0);
	VehicleKM[CreatedCarsOn[ServerVeh]]=0;
	return 1;
}
/*
CMD:locations(playerid,params[])
{
	new Float:detectiv = 		GetPlayerDistanceFromPoint(playerid, 1553.3972, -1675.7295, 15.1811);//Detectiv
	new Float:irondelivery = 	GetPlayerDistanceFromPoint(playerid, 807.6293, 1691.5919, 	4.2492);//irondelivery
	new Float:cemment = 		GetPlayerDistanceFromPoint(playerid, -2124.01,  -129.0673, 	34.2796);//cement
	new Float:pompier =			GetPlayerDistanceFromPoint(playerid, -2011.81,  81.0124, 	26.6754);//pompier
    new Float:cuter = 			GetPlayerDistanceFromPoint(playerid, -2269.884, 206.4622, 	34.143);//cutter
	new Float:petrol =			GetPlayerDistanceFromPoint(playerid, 268.1016,  1405.6270, 	9.4336);//petrol
	new Float:vanzator = 		GetPlayerDistanceFromPoint(playerid, 1100.0519, -1207.3170, 16.7723);//vanzator
	new Float:farmer = 			GetPlayerDistanceFromPoint(playerid, -381.5272, -1426.590,	26.15115);//farmer
	new Float:ziare = 			GetPlayerDistanceFromPoint(playerid, 1793.6096, -1297.3680, 12.3718);//ziare
    new Float:autobus = 		GetPlayerDistanceFromPoint(playerid, 1794.9957, -1914.4486, 12.3633);//autobus
	new Float:fueel = 			GetPlayerDistanceFromPoint(playerid, -1040.168, -569.3936, 	30.9911);//fuel
 	new Float:boxeur = 			GetPlayerDistanceFromPoint(playerid, 2229.8308, -1722.0974, 12.5534);//boxeur
	new Float:sweeper = 		GetPlayerDistanceFromPoint(playerid, 1648.2423, -1827.8595, 12.5276);//sweeper
	new Float:paramedic = 		GetPlayerDistanceFromPoint(playerid, 1178.2936, -1338.9949, 14.1181);//paramedic
    new Float:mechanic = 		GetPlayerDistanceFromPoint(playerid, 1785.2502, -2029.1366, 12.4725);//mechanic
 	new Float:avocat =			GetPlayerDistanceFromPoint(playerid, 1554.78,   -1675.12,	16.3);//avocat
  	new Float:gascolector = 	GetPlayerDistanceFromPoint(playerid, 2888.1289, 2046.3055, 	9.7843);//gascolector
    new Float:sanddelyvery = 	GetPlayerDistanceFromPoint(playerid, 355.9168,  959.1389, 	26.4392);//sand delivery
 	new Float:lumberjack = 		GetPlayerDistanceFromPoint(playerid, -512.2859, -80.3909, 	61.1940);//lumberjack
  	new Float:Transportator = 		GetPlayerDistanceFromPoint(playerid, 2442.8506, -2091.6267, 12.5371);//Transportator
    new Float:pescar = 			GetPlayerDistanceFromPoint(playerid, -783.3960, 674.6196,	9.3844);//pescar
    new strong[1000];
	format(strong, sizeof(strong),"1. Detectiv\t\t\t %0.1f \tm\n2. Avocat\t\t\t %0.1f \tm\n3. Mecanic\t\t\t %0.1f \tm\n4. Bodyguard\t\t\t %0.1f \tm\n5. Paramedic\t\t\t %0.1f \tm\n6. Sweeper\t\t\t %0.1f \tm\n7. Boxeur\t\t\t %0.1f \tm\n8.Fuel Delivery\t\t\t %0.1f \tm\n9. Sofer de autobuz\t\t %0.1f \tm\n10. Vanzator de ziare\t\t %0.1f \tm\n11. Fermier\t\t\t %0.1f \tm",detectiv,avocat,mechanic,0.0,paramedic,sweeper,boxeur,fueel,autobus,ziare,farmer);
	format(strong, sizeof(strong),"%s\n12. Vanzator\t\t\t %0.1f \tm\n13. Petrol Delivery\t\t %0.1f \tm\n14. Cutter\t\t\t %0.1f \tm\n15. Pompier\t\t\t %0.1f \tm\n16. Ciment Delivery\t\t %0.1f \tm\n17. Iron Delivery\t\t %0.1f \tm\n18. Gas Collector\t\t %0.1f \tm\n19. Sand Delivery\t\t %0.1f \tm\n20. Lumberjack\t\t\t %0.1f \tm\n21. Transportator\t\t\t %0.1f \tm\n22. Pescar\t\t\t %0.1f \tm",strong,vanzator,petrol,cuter,pompier,cemment,irondelivery,gascolector,sanddelyvery,lumberjack,Transportator,pescar);
	ShowPlayerDialog(playerid,6960,DIALOG_STYLE_LIST,"JOBS",strong,"SELECT CP", "DELETE CP");
	return 1;
}*/


CMD:fightstyle(playerid,params[])
{

	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    new strong[500],fstext[30],fstext2[30],fstext3[30],fstext4[30],fstext5[30],fstext6[30];
    if(PlayerInfo[playerid][pAchievement1] == 1)//normal
	fstext = "{00D50B}DA{FFFFFF}";
    else
    fstext = "{E4130E}NU{FFFFFF}";

	if(PlayerInfo[playerid][pAchievement2] == 1)//box
	fstext2 = "{00D50B}DA{FFFFFF}";
    else
    fstext2 = "{E4130E}NU{FFFFFF}";

	if(PlayerInfo[playerid][pAchievement3] == 1)//kung fu
	fstext3 = "{00D50B}DA{FFFFFF}";
    else
    fstext3 = "{E4130E}NU{FFFFFF}";

	if(PlayerInfo[playerid][pAchievement4] == 1)//knee head
	fstext4 = "{00D50B}DA{FFFFFF}";
    else
    fstext4 = "{E4130E}NU{FFFFFF}";

	if(PlayerInfo[playerid][pAchievement5] == 1)//grabnkink
	fstext5 = "{00D50B}DA{FFFFFF}";
    else
    fstext5 = "{E4130E}NU{FFFFFF}";

	if(PlayerInfo[playerid][pAchievement6] == 1)//elbow
	fstext6 = "{00D50B}DA{FFFFFF}";
    else
    fstext6 = "{E4130E}NU{FFFFFF}";


	format(strong, sizeof(strong),"{FFFFFF}Normal\t Ivatat %s\n\
									{FFFFFF}Box\t Ivatat %s\n\
									{FFFFFF}Kung Fu\t Ivatat %s\n\
									{FFFFFF}Knee Head\t Ivatat %s\n\
									{FFFFFF}Grab'n Kick\t Ivatat %s\n\
									{FFFFFF}El Bow\t Ivatat %s",
								    fstext,fstext2,fstext3,fstext4,fstext5,fstext6);
	ShowPlayerDialog(playerid,6962,DIALOG_STYLE_LIST,"{1580EA}Fight Style: {FFFFFF}Alege stilul tau de lupta",strong,"Take", "Ok");
	return 1;
}
/*


if(dialogid == 358)
	{
		//new string[256];
	    //if(!response) { SetPlayerVirtualWorld(playerid, 2); SetPlayerInterior(playerid, 0); SetPlayerPos(playerid, -2033.2408,-117.5540,1035.1719); SetCameraBehindPlayer(playerid); SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Grotti Autos: {FFFFFF}Poti reveni oricand pentru a cumpara o masina."); TogglePlayerControllable(playerid, 1); GameTextForPlayer(playerid, "", 5000, 3); CarCategory[playerid] = 0; CarStep[playerid] = 0;}
	    switch(listitem)
    	{
	    	case 0://Normal
 	    	{
 	    	    SendClientMessage(playerid, COLOR_LIGHTBLUE, "{1580EA}Stiluri de lupta: {FFFFFF}Acum te poti lupta normal.");
 	    	    SetPlayerFightingStyle(playerid, 4);
 	    	    return 1;
			}
			case 1://Boxing
			{
			    if(PlayerInfo[playerid][pBoxingSkill] >= 100)
			    {
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "{1580EA}Stiluri de lupta: {FFFFFF}Acum te poti lupta ca un boxeur.");
			    SetPlayerFightingStyle(playerid, 5);
			    return 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "{1580EA}Stiluri de lupta: {FFFFFF}Nu ai invatat sa te lupti ca un boxeur!"); return 1;
			    }
			}
			case 2://Karate
			{
			    if(PlayerInfo[playerid][pKarateSkill] >= 100)
			    {
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "{1580EA}Stiluri de lupta: {FFFFFF}Acum te poti lupta folosind arta Kung Fu.");
			    SetPlayerFightingStyle(playerid, 6);
			    return 1;
       			}
			    else
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "{1580EA}Stiluri de lupta: {FFFFFF}Nu ai invatat sa te lupti folosind arta Kung Fu!"); return 1;
			    }
			}
			case 3://Grabkick
			{
			    if(PlayerInfo[playerid][pGrabkickSkill] >= 100)
			    {
			    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "{1580EA}Stiluri de lupta: {FFFFFF}Acum te poti lupta folosind Grab Kick.");
			    	SetPlayerFightingStyle(playerid, 7);
			    	return 1;
       			}
			    else
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "{1580EA}Stiluri de lupta: {FFFFFF}Nu ai invatat sa te lupti folosind Grab Kick!"); return 1;
			    }
			}
		}
	}
	*/

CMD:licenses(playerid,params[])
{

	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");



	new Float:CarDMW  =	GetPlayerDistanceFromPoint(playerid,1219.0480, -1812.2429, 16.6041);//
    new Float:FlyDMW  = GetPlayerDistanceFromPoint(playerid, 1957.1649,-2183.6143,13.5469);//
    new Float:BoatDMW = GetPlayerDistanceFromPoint(playerid, 436.4564,-1900.2853,2.8703);//
    new Float:FishDMW = GetPlayerDistanceFromPoint(playerid, 523.6387,-1812.9382,6.5713);//
    new Float:GunDMW = GetPlayerDistanceFromPoint(playerid, 1567.7362,-1674.7607,16.1974);//
    new strong[500];
    new cartext[30];
    if(PlayerInfo[playerid][pCarLic] == 1)
    cartext = "{00D50B}DA{FFFFFF}";
    else
    cartext = "{E4130E}NU{FFFFFF}";

    new flytext[30];
    if(PlayerInfo[playerid][pFlyLic] == 1)
    flytext = "{00D50B}DA{FFFFFF}";
    else
    flytext = "{E4130E}NU{FFFFFF}";

	new boattext[30];
	if(PlayerInfo[playerid][pBoatLic] == 1)
    boattext = "{00D50B}DA{FFFFFF}";
    else
    boattext = "{E4130E}NU{FFFFFF}";

    new fishtext[30];
    if(PlayerInfo[playerid][pFishLic] == 1)
    fishtext = "{00D50B}DA{FFFFFF}";
    else
    fishtext = "{E4130E}NU{FFFFFF}";

    new guntext[30];
    if(PlayerInfo[playerid][pGunLic] == 1)
    guntext = "{00D50B}DA{FFFFFF}";
    else
    guntext = "{E4130E}NU{FFFFFF}";

	format(strong, sizeof(strong),"{FFFFFF}Driving\t License %s\t Distance %.2f m\n\
									{FFFFFF}Flying\t License %s\t Distance %.2f m\n\
									{FFFFFF}Boat\t License %s\t Distance %.2f m\n\
									{FFFFFF}Fish\t License %s\t Distance %.2f m\n\
									{FFFFFF}Gun\t License %s\t Distance %.2f m",
																				cartext,CarDMW,
																				flytext,FlyDMW,
																				boattext,BoatDMW,
																				fishtext,FishDMW,
																				guntext,GunDMW);

	ShowPlayerDialog(playerid,6961,DIALOG_STYLE_LIST,"Licenses",strong,"Take", "Ok");
	format(strings, sizeof(strings), "* %s se uita in portfolel la licentele sale.", PlayerName(playerid));
	ProxDetector(20.0, playerid, strings, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
	return 1;
}
CMD:jpl(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pHelper] < 1 && PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new playa;
	if(sscanf(params,"u", playa)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /jpl [playerid/numejucator]");
	if(!IsPlayerConnected(playa)) return 1;
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	SetPlayerInterior(playa, 3);
    SetPlayerVirtualWorld(playa, 0);
    SetTimerEx("freze", 2000, 0, "i", playa);
   	TogglePlayerControllable(playa, 0);
    SetPlayerPos(playa, 363.6320,173.7412,1008.3828);
	format(strings, sizeof(strings), "%s[%d] l-a trimis pe %s[%d] la JobPoint", PlayerName(playerid),playerid,PlayerName(playa),playa);
	AdminsBroadCast(COLOR_GRAD1, strings,1);
	format(strings, sizeof(strings), "   %s te-a trimis la Ilegal JobPoint", PlayerName(playerid));
	SendClientMessage(playa, COLOR_GRAD1, strings);

	return 1;
}
CMD:flyl(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pHelper] < 1 && PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new playa;
	if(sscanf(params,"u", playa)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /flyl [playerid/numejucator]");
	if(!IsPlayerConnected(playa)) return 1;
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	SetPlayerInterior(playa, 0);
    SetPlayerVirtualWorld(playa, 0);
    SetPlayerPos(playa, 1957.1649,-2183.6143,13.5469);
	format(strings, sizeof(strings), "%s[%d] l-a trimis pe %s[%d] la DMW Plane", PlayerName(playerid),playerid,PlayerName(playa),playa);
	AdminsBroadCast(COLOR_GRAD1, strings,1);
	format(strings, sizeof(strings), "   %s te-a trimis la Ilegal DMW Plane", PlayerName(playerid));
	SendClientMessage(playa, COLOR_GRAD1, strings);

	return 1;
}

CMD:sail(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pHelper] < 1 && PlayerInfo[playerid][pAdmin] < 1) return  SendClientMessage(playerid,COLOR_RED,"Nu ai acces la aceasta comanda");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /sail [playerid/numejucator]");
 	if(!IsPlayerConnected(playa)) return 1;
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    format(strings, sizeof(strings), "{1580EA}Teleport: {FFFFFF}L-ai teleportat pe %s la DMV de Barca!", PlayerName(playa));
    SendClientMessage(playerid, COLOR_WHITE, strings);
    format(strings, sizeof(strings), "{1580EA}Teleport: {FFFFFF}%s te-a teleportat la DMV de Barca!", PlayerName(playerid));
	SendClientMessage(playa, COLOR_WHITE, strings);
	SetPlayerPos(playa, 436.4564,-1900.2853,2.8703);
 	SetPlayerInterior(playa, 0);
  	SetPlayerVirtualWorld(playa, 0);
	return 1;
}


CMD:buylicenses(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(IsPlayerInRangeOfPoint(playerid,3,523.6387,-1812.9382,6.5713))
    {

	    if(PlayerInfo[playerid][pFishLic] != 0) return SendClientMessage(playerid, COLOR_RED, "Ai deja permis de pescuit");
    	if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid, COLOR_RED, "Ai nevoie de 5.000$ $");
        PlayerInfo[playerid][pFishLic] = 1;
        Update(playerid, pFishLicx);
		SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Info: {FFFFFF}Ai cumparat permis de pescuit!");
		GivePlayerCash(playerid, -5000);
		return 1;
  	}
  	if(IsPlayerInRangeOfPoint(playerid,3,1567.7362,-1674.7607,16.1974))
    {
        if(PlayerInfo[playerid][pLevel]<2) return SendClientMessage(playerid,-1,"Ai nevoie de level 2");
	    if(PlayerInfo[playerid][pGunLic] != 0) return SendClientMessage(playerid, COLOR_RED, "Ai deja permis de port arma");
    	if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid, COLOR_RED, "Ai nevoie de 5.000$ $");
        PlayerInfo[playerid][pGunLic] = 1;
        Update(playerid, pGunLicx);
		SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Info: {FFFFFF}Ai cumparat permis de PortArma!");
		GivePlayerCash(playerid, -5000);
		return 1;
  	}
	return 1;
}


CMD:exam(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(IsPlayerInRangeOfPoint(playerid,3,1219.0480, -1812.2429, 16.6041))
    {
 		if(PlayerInfo[playerid][pCarLic] != 0) return SendClientMessage(playerid, COLOR_RED, "Ai deja permisul de conducere");
    	if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid, COLOR_RED, "Ai nevoie de 5000 $");
		TakingLesson[playerid] = 2;
		SendClientMessage(playerid, COLOR_YELLOW, "DMV: Urca-te intr-o masina pentru a da testul!");
		return 1;
	}
	else if(IsPlayerInRangeOfPoint(playerid,4,1957.1649,-2183.6143,13.5469))
	{
	    if(PlayerInfo[playerid][pLevel]  <3) return SendClientMessage(playerid,-1,"Ai nevoie de level 3 pentru permisul de zbor");
	    if(PlayerInfo[playerid][pFlyLic] != 0) return SendClientMessage(playerid, COLOR_RED, "Ai deja permisul de conducere");
    	if(GetPlayerCash(playerid) < 20000) return SendClientMessage(playerid, COLOR_RED, "Ai nevoie de 20000 $");
		TakingLesson[playerid] = 1;
		SendClientMessage(playerid, COLOR_YELLOW, "DMV: Urca-te intr-un avion pentru a da testul!");
		return 1;
 	}
 	else if(IsPlayerInRangeOfPoint(playerid,3,436.4564,-1900.2853,2.8703))
	{
	    if(PlayerInfo[playerid][pBoatLic] != 0) return SendClientMessage(playerid, COLOR_RED, "Ai deja Licenta de Barca");
    	if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid, COLOR_RED, "Ai nevoie de 5000 $");
		TakingLesson[playerid] = 3;
		SendClientMessage(playerid, COLOR_YELLOW, "DMW: Urca-te intr-o barca pentru a da testul!");
		return 1;
	}
 	return 1;
}

CMD:plantbomb(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
 	new playerState = GetPlayerState(playerid),vehicleid = GetPlayerVehicleID(playerid);
 	if(PlayerInfo[playerid][pBombe] < 1) return SendClientMessage(playerid,COLOR_RED,"nu ai bomba, poti cumpara de la BlackMarket");
	if (playerState == PLAYER_STATE_PASSENGER) return SendClientMessage(playerid,0xFFFF00FF,"Poti pune bomba de pe locul soferului");
    if (plantata[playerid] != 999) return SendClientMessage(playerid,0xFF0000FF,"Ai plantat deja o bomba /detonate!");
  	if (playerState == PLAYER_STATE_DRIVER)
	{
		if(bomba[vehicleid] != 0) return SendClientMessage(playerid,0xFFFF00FF,"Masina are eja bomba");
  		format(strings,sizeof(strings),"Mai ai %d bombe, nu porni motorul masini",PlayerInfo[playerid][pBombe]-1);
		SendClientMessage(playerid,0xFFFF00FF,strings);
		PlayerInfo[playerid][pBombe] --;
		Update(playerid,pBombex);
		bomba[vehicleid] = 1;
		return 1;
 	}
	plantata[playerid] = playerid;
  	format(strings,sizeof(strings),"Mai ai %d bombe din %d",PlayerInfo[playerid][pBombe] -1,PlayerInfo[playerid][pBombe]);
   	SendClientMessage(playerid,0xFFFF00FF,strings);
   	new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid,x,y,z);
    SendClientMessage(playerid,0xFFFF00FF,"/detonate");
    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
    bomb[playerid] = CreateDynamicObject(1252,x,y,z,-1,0.0,1.0);
    PlayerInfo[playerid][pBombe] --;
	Update(playerid,pBombex);
	return 1;
}

CMD:desarm(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
   	new Float:x, Float:y, Float:z;
 	foreach(Player,i)
	{
	    if(plantata[i]!=999)
	    {
			GetDynamicObjectPos(bomb[i], x, y, z);
   			if(IsPlayerInRangeOfPoint(playerid,5.0,x,y,z))
   			{
    		    DestroyDynamicObject(bomb[i]);
    		   	GameTextForPlayer(i,"~n~~n~~r~Bomba a fost dezamorsata",1500,3);
			    plantata[i] = 999;
   	 		}
	  	}
	}
    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
    SendClientMessage(playerid,-1,"Asteapta sa dezamorsezi bomba");
    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
   	return 1;
}

CMD:detonate(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(plantata[playerid] == 999) return SendClientMessage(playerid,COLOR_RED,"Nu ai plantat o bomba");
    SendClientMessage(playerid,-1,"Bomba a explodat");
    new Float:x, Float:y, Float:z;
 	GetDynamicObjectPos(bomb[playerid], x, y, z);
    CreateExplosion(x,y,z,7,70.0);
    plantata[playerid] = 999;
    DestroyDynamicObject(bomb[playerid]);
	return 1;
}
CMD:buybomb(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] <6) return SendClientMessage(playerid,COLOR_RED,"Nu ai rangul administrativ necesar!");
	if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid,COLOR_RED,"Nu ai suficienti bani");
    PlayerInfo[playerid][pBombe] ++;
	Update(playerid,pBombex);
	GivePlayerCash(playerid,-5000);
	format(strings,sizeof(strings),"Acum ai %d ",PlayerInfo[playerid][pBombe]);
   	SendClientMessage(playerid,0xFFFF00FF,strings);
   	return 1;
}

CMD:elevator(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti politist");
	if(!IsPlayerInRangeOfPoint(playerid,1.0,1582.4136,-1676.9941,5.8945) && !IsPlayerInRangeOfPoint(playerid,1.0,1571.5780,-1668.1753,12.3498) && !IsPlayerInRangeOfPoint(playerid,1.0,1571.5381,-1668.1748,16.1974) &&
	!IsPlayerInRangeOfPoint(playerid,1.0,1571.5780,-1668.1753,19.7344) && !IsPlayerInRangeOfPoint(playerid,1.0,1557.7257,-1675.2711,28.3955) && IsPlayerInRangeOfPoint(playerid,1.0,1571.5780,-1668.1753,23.3572))
	return SendClientMessage(playerid, COLOR_RED,"Nu esti la LSPD lift");
	SendClientMessage(playerid, 0x0000FFC8,"/roof ");
 	SendClientMessage(playerid, 0x0000FFC8,"/etaj1 ");
	SendClientMessage(playerid, 0x0000FFC8,"/parter ");
	SendClientMessage(playerid, 0x0000FFC8,"/subsol ");
	SendClientMessage(playerid, 0x0000FFC8,"/parcare ");
	return 1;
}
CMD:vestiar(playerid,params[])
{
	if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
	{
    	if (IsPlayerInRangeOfPoint(playerid, 2, -780.3086,496.1252,1371.7490))
    	{
	       	TogglePlayerControllable(playerid, 0);
	       	ShowMenuForPlayer(myMenu, playerid);
	       	return 1;
       	}
    }
	else if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
    {
       	if (IsPlayerInRangeOfPoint(playerid, 2, 439.0473,-12.3510,1000.7344))
       	{
       		TogglePlayerControllable(playerid, 0);
	       	ShowMenuForPlayer(myMenu, playerid);
	       	return 1;
     	}
    }
    else if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
    {
       	if (IsPlayerInRangeOfPoint(playerid, 2, 947.6393,-44.0573,1001.1166))
       	{
       		TogglePlayerControllable(playerid, 0);
	      	ShowMenuForPlayer(myMenu, playerid);
	      	return 1;
     	}
    }
    else if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
    {
       	if (IsPlayerInRangeOfPoint(playerid, 2, 754.0857,-26.6147,1000.5905))
       	{
      		TogglePlayerControllable(playerid, 0);
	       	ShowMenuForPlayer(myMenu, playerid);
	       	return 1;
     	}
    }
    else if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
    {
       	if (IsPlayerInRangeOfPoint(playerid, 2, 940.8465,-18.9934,1000.9297))
       	{
       		TogglePlayerControllable(playerid, 0);
	       	ShowMenuForPlayer(myMenu, playerid);
	       	return 1;
     	}
    }
    else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
    {
       	if (IsPlayerInRangeOfPoint(playerid, 2, 451.2389,-57.6298,999.6982))
        {
        	TogglePlayerControllable(playerid, 0);
	       	ShowMenuForPlayer(myMenu, playerid);
	       	return 1;
   		}
    }
  	else return SendClientMessage(playerid, COLOR_GREY,"**Nu esti la vestiar.");
	return 1;
}
CMD:faction(playerid,params[])
return cmd_f(playerid,params);
CMD:family(playerid,params[])
return cmd_f(playerid,params);
CMD:famyli(playerid,params[])
return cmd_f(playerid,params);

CMD:f(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new result[128];
	if(sscanf(params,"s[128]",result)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /f [chat]");
    if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
	if (PlayerInfo[playerid][pLeader] ==0 && PlayerInfo[playerid][pMember] == 0) return SCM(playerid,-1,"Nu esti intr-o factiune");
    new member = PlayerInfo[playerid][pMember];
 	if(member==5)
	{
		if(PlayerInfo[playerid][pRank] == 9) { format(strings, sizeof(strings), "** (( Lider %s: %s )) **", PlayerName(playerid), result); }
	    else if(PlayerInfo[playerid][pRank] == 8) { format(strings, sizeof(strings), "** (( Boss %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(strings, sizeof(strings), "** (( Patsani %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(strings, sizeof(strings), "** (( Corona %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(strings, sizeof(strings), "** (( Mano Derecha %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(strings, sizeof(strings), "** (( Proscrito %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(strings, sizeof(strings), "** (( Miembro %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(strings, sizeof(strings), "** (( Asociado %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(strings, sizeof(strings), "** (( Forastero %s: %s ))  **", PlayerName(playerid), result); }
		FactionsBroadCast(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, strings);
    }
    else if(member==6)
    {
		if(PlayerInfo[playerid][pRank] == 9) { format(strings, sizeof(strings), "** (( Lider %s: %s )) **", PlayerName(playerid), result); }
        else if(PlayerInfo[playerid][pRank] == 8) { format(strings, sizeof(strings), "** (( Golden Katana %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(strings, sizeof(strings), "** (( Shan Chu %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(strings, sizeof(strings), "** (( Fu Shan %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(strings, sizeof(strings), "** (( Red Dragon %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(strings, sizeof(strings), "** (( White Soul %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(strings, sizeof(strings), "** (( Shatei %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(strings, sizeof(strings), "** (( Wakashu %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(strings, sizeof(strings), "** (( Gaij in %s: %s ))  **", PlayerName(playerid), result); }
		FactionsBroadCast(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, strings);
	}
	else if(member==8)
	{
		if(PlayerInfo[playerid][pRank] == 9) { format(strings, sizeof(strings), "** (( Lider %s: %s )) **", PlayerName(playerid), result); }
	    else if(PlayerInfo[playerid][pRank] == 8) { format(strings, sizeof(strings), "** (( Prim-Vice-Director %s: %s )) **", PlayerName(playerid), result); }
	    else if(PlayerInfo[playerid][pRank] == 7) { format(strings, sizeof(strings), "** (( Vice-Director %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(strings, sizeof(strings), "** (( Special Agent-sef %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(strings, sizeof(strings), "** (( Special Agent %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(strings, sizeof(strings), "** (( Agent-sef %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(strings, sizeof(strings), "** (( Agent %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(strings, sizeof(strings), "** (( Marksman %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(strings, sizeof(strings), "** (( Mercenary %s: %s ))  **", PlayerName(playerid), result); }
		FactionsBroadCast(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, strings);
	}
	else if(member==9)
	{
		if(PlayerInfo[playerid][pRank] == 9) { format(strings, sizeof(strings), "** (( Lider %s: %s )) **", PlayerName(playerid), result); }
	    else if(PlayerInfo[playerid][pRank] == 8) { format(strings, sizeof(strings), "** (( Producator %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(strings, sizeof(strings), "** (( Manager %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(strings, sizeof(strings), "** (( Editor-Sef %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(strings, sizeof(strings), "** (( Editor %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(strings, sizeof(strings), "** (( Secretar %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(strings, sizeof(strings), "** (( Jurnalist-sef %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(strings, sizeof(strings), "** (( Jurnalist %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(strings, sizeof(strings), "** (( Salariat %s: %s ))  **", PlayerName(playerid), result); }
		FactionsBroadCast(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, strings);
	}
	else if(member==10)
	{
		if(PlayerInfo[playerid][pRank] == 9) { format(strings, sizeof(strings), "** (( Lider %s: %s )) **", PlayerName(playerid), result); }
	    else if(PlayerInfo[playerid][pRank] == 8) { format(strings, sizeof(strings), "** (( Taxi Cab. Owner %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(strings, sizeof(strings), "** (( Shift Supervisor %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(strings, sizeof(strings), "** (( Shift %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(strings, sizeof(strings), "** (( Dispatcher %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(strings, sizeof(strings), "** (( Taxi hard %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(strings, sizeof(strings), "** (( Taxi rocky %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(strings, sizeof(strings), "** (( Taxi easy %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(strings, sizeof(strings), "** (( Taximetrist %s: %s ))  **", PlayerName(playerid), result); }
		FactionsBroadCast(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, strings);
	}
	else if(member==13)
	{
		if(PlayerInfo[playerid][pRank] == 9) { format(strings, sizeof(strings), "** (( Lider %s: %s )) **", PlayerName(playerid), result); }
        else if(PlayerInfo[playerid][pRank] == 8) { format(strings, sizeof(strings), "** (( Sovietnik %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(strings, sizeof(strings), "** (( Kassir %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(strings, sizeof(strings), "** (( Brigadier %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(strings, sizeof(strings), "** (( Boevik %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(strings, sizeof(strings), "** (( Krysha %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(strings, sizeof(strings), "** (( Torpedo %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(strings, sizeof(strings), "** (( Byki %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(strings, sizeof(strings), "** (( Shestyorka %s: %s ))  **", PlayerName(playerid), result); }
		FactionsBroadCast(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, strings);
	}
	else if(member==14)
	{
		if(PlayerInfo[playerid][pRank] == 9) { format(strings, sizeof(strings), "** (( Lider %s: %s )) **", PlayerName(playerid), result); }
        else if(PlayerInfo[playerid][pRank] == 8) { format(strings, sizeof(strings), "** (( Original Gangsta %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(strings, sizeof(strings), "** (( Top O.G (SIC) %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(strings, sizeof(strings), "** (( Top O.G (FIC) %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(strings, sizeof(strings), "** (( Homie %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(strings, sizeof(strings), "** (( Fresh Balla %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(strings, sizeof(strings), "** (( Hood Balla %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(strings, sizeof(strings), "** (( Trusted Balla %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(strings, sizeof(strings), "** (( Gangsta %s: %s ))  **", PlayerName(playerid), result); }
		FactionsBroadCast(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, strings);
	}
	else if(member==15)
	{
		if(PlayerInfo[playerid][pRank] == 9) { format(strings, sizeof(strings), "** (( Lider %s: %s )) **", PlayerName(playerid), result); }
        else if(PlayerInfo[playerid][pRank] == 8) { format(strings, sizeof(strings), "** (( Double O.G. %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(strings, sizeof(strings), "** (( Big Gangster %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(strings, sizeof(strings), "** (( Original Gangster  %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(strings, sizeof(strings), "** (( Street Gangster %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(strings, sizeof(strings), "** (( Soulja %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(strings, sizeof(strings), "** (( Thugs %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(strings, sizeof(strings), "** (( Big Homies %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(strings, sizeof(strings), "** (( Homies %s: %s ))  **", PlayerName(playerid), result); }
		FactionsBroadCast(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, strings);
	}
	else if(member==16)
	{
		if(PlayerInfo[playerid][pRank] == 9) { format(strings, sizeof(strings), "** (( Lider %s: %s )) **", PlayerName(playerid), result); }
        else if(PlayerInfo[playerid][pRank] == 8) { format(strings, sizeof(strings), "** (( Done %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(strings, sizeof(strings), "** (( Capo Bastone %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(strings, sizeof(strings), "** (( Capo Crimini %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(strings, sizeof(strings), "** (( Capo Regime %s: %s )) **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(strings, sizeof(strings), "** (( Sgarrista %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(strings, sizeof(strings), "** (( Piciotto %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(strings, sizeof(strings), "** (( Giovane D'honore %s: %s ))  **", PlayerName(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(strings, sizeof(strings), "** (( Outsider %s: %s ))  **", PlayerName(playerid), result); }
		FactionsBroadCast(PlayerInfo[playerid][pMember], 0x7BDDA5AA, strings);
	}
	else return	SendClientMessage(playerid, COLOR_GRAD2, "  Nu faci parte dintr-o familie");
	factionloguri(strings);
 	return 1;
}

CMD:r(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new result[128];
	if(sscanf(params,"s[128]",result)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /r [radio chat]");
    if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
	{
		if(PlayerInfo[playerid][pRank] == 9) 		format(strings, sizeof(strings), " Chestor-Sef %s: %s, terminat. ", PlayerName(playerid), result);
	    else if(PlayerInfo[playerid][pRank] == 8)  	format(strings, sizeof(strings), " Chestor %s: %s, terminat. ", PlayerName(playerid), result);
	    else if(PlayerInfo[playerid][pRank] == 7)  	format(strings, sizeof(strings), " Comisar %s: %s, terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 6)  	format(strings, sizeof(strings), " Subcomisar %s: %s, terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 5)  	format(strings, sizeof(strings), " Prim Inspector %s: %s, terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 4)  	format(strings, sizeof(strings), " Inspector %s: %s, terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 3)  	format(strings, sizeof(strings), " Subinspector %s: %s, terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 2)  	format(strings, sizeof(strings), " Agent-Sef %s: %s, terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 1)  	format(strings, sizeof(strings), " Agent %s: %s, terminat. ", PlayerName(playerid), result);
		FactionsBroadCast(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, strings);
	}
	else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
	    if(PlayerInfo[playerid][pRank] == 9) 		format(strings, sizeof(strings), " Director %s: %s,terminat. ", PlayerName(playerid), result);
	    else if(PlayerInfo[playerid][pRank] == 8) 	format(strings, sizeof(strings), " Director Adjunct %s: %s,terminat. ", PlayerName(playerid), result);
	    else if(PlayerInfo[playerid][pRank] == 7)   format(strings, sizeof(strings), " Asistent Director %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 6)   format(strings, sizeof(strings), " Prim-Sef de divie %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 5)   format(strings, sizeof(strings), " Sef de divizie %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 4)   format(strings, sizeof(strings), " Agent Special de Comanda %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 3)   format(strings, sizeof(strings), " Agent Special %s: %s,terminat.  ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 2)   format(strings, sizeof(strings), " Agent Secret %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 1) 	format(strings, sizeof(strings), " Cadet %s: %s,terminat. ", PlayerName(playerid), result);
        FactionsBroadCast(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, strings);
	}
	else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
	{
	    if(PlayerInfo[playerid][pRank] == 9) 		format(strings, sizeof(strings), " Colonel %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 8)   format(strings, sizeof(strings), " Maior %s: %s,terminat. ", PlayerName(playerid), result);
	    else if(PlayerInfo[playerid][pRank] == 7)   format(strings, sizeof(strings), " Capitan %s: %s,terminat. ", PlayerName(playerid), result);
    	else if(PlayerInfo[playerid][pRank] == 6)   format(strings, sizeof(strings), " Locotenent %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 5)   format(strings, sizeof(strings), " Plutonier %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 4)   format(strings, sizeof(strings), " Sergent %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 3)   format(strings, sizeof(strings), " Caporal %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 2)   format(strings, sizeof(strings), " Fruntas %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 1)   format(strings, sizeof(strings), " Soldat %s: %s,terminat. ", PlayerName(playerid), result);
		FactionsBroadCast(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, strings);
	}
	else if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
	{
   		if(PlayerInfo[playerid][pRank] == 9) 		format(strings, sizeof(strings), " Director %s: %s,terminat. ", PlayerName(playerid), result);
	    else if(PlayerInfo[playerid][pRank] == 8)   format(strings, sizeof(strings), " Director Adjunct %s: %s,terminat. ", PlayerName(playerid), result);
	    else if(PlayerInfo[playerid][pRank] == 7)   format(strings, sizeof(strings), " Asistent Director %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 6)   format(strings, sizeof(strings), " Prim-Sef de divie %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 5)   format(strings, sizeof(strings), " Sef de divizie %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 4)   format(strings, sizeof(strings), " Agent Special de Comanda %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 3)   format(strings, sizeof(strings), " Agent Special %s: %s,terminat.  ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 2)   format(strings, sizeof(strings), " Agent Secret %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 1)   format(strings, sizeof(strings), " Cadet %s: %s,terminat. ", PlayerName(playerid), result);
		FactionsBroadCast(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, strings);
	}
	else if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
	{
        if(PlayerInfo[playerid][pRank] == 9) 		format(strings, sizeof(strings), " Comandor %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 8)   format(strings, sizeof(strings), " Capitan-Comandor %s: %s,terminat. ", PlayerName(playerid), result);
	    else if(PlayerInfo[playerid][pRank] == 7)   format(strings, sizeof(strings), " Locotentent-Comandor %s: %s,terminat. ", PlayerName(playerid), result);
     	else if(PlayerInfo[playerid][pRank] == 6)   format(strings, sizeof(strings), " Aspirant %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 5)   format(strings, sizeof(strings), " Plutonier %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 4)   format(strings, sizeof(strings), " Sergent %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 3)   format(strings, sizeof(strings), " Caporal %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 2)   format(strings, sizeof(strings), " Fruntas %s: %s,terminat. ", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 1)   format(strings, sizeof(strings), " Soldat %s: %s,terminat. ", PlayerName(playerid), result);
		FactionsBroadCast(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, strings);
	}
	else if(PlayerInfo[playerid][pMember]==4||PlayerInfo[playerid][pLeader]==4)
	{
		if(PlayerInfo[playerid][pLeader] == 4)
		format(strings, sizeof(strings), "** Presedintele %s: %s, terminat. **", PlayerName(playerid), result);
		else
 		format(strings, sizeof(strings), "** Agent Prezidential %s: %s, terminat. **", PlayerName(playerid), result);
  		FactionsBroadCast(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, strings);
	}
	else if(PlayerInfo[playerid][pMember]==7||PlayerInfo[playerid][pLeader]==7)
	{
		if(PlayerInfo[playerid][pLeader] == 7)
		format(strings, sizeof(strings), "** Prim-Ministru %s: %s, terminat. **", PlayerName(playerid), result);
        else
		format(strings, sizeof(strings), "** Agent guvernamental %s: %s, terminat. **", PlayerName(playerid), result);
  		FactionsBroadCast(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, strings);
	}
	else if(PlayerInfo[playerid][pMember]==12||PlayerInfo[playerid][pLeader]==12)
	{
		if(PlayerInfo[playerid][pLeader] == 12)
		format(strings, sizeof(strings), "**Parlamentar %s: %s, terminat. **", PlayerName(playerid), result);
        else
  		format(strings, sizeof(strings), "** Parlamentar %s: %s, terminat. **", PlayerName(playerid), result);
		FactionsBroadCast(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, strings);
	}
	else return SendClientMessage(playerid,COLOR_RED,"Nu aveti statie radio");
	factionloguri(strings);
	return 1;
}
CMD:d(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	//if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la comanda!");
	new result[128];
	if(sscanf(params,"s[128]",result)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /r [radio chat]");
    if(PlayerInfo[playerid][pMute] > 0) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
	{
		if(PlayerInfo[playerid][pRank] == 9) 		format(strings, sizeof(strings), "Chestor-Sef %s: %s, terminat***", PlayerName(playerid), result);
	    else if(PlayerInfo[playerid][pRank] == 8)  	format(strings, sizeof(strings), "Chestor %s: %s, terminat***", PlayerName(playerid), result);
	    else if(PlayerInfo[playerid][pRank] == 7)  	format(strings, sizeof(strings), "Comisar %s: %s, terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 6)  	format(strings, sizeof(strings), "Subcomisar %s: %s, terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 5)  	format(strings, sizeof(strings), "Prim Inspector %s: %s, terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 4)  	format(strings, sizeof(strings), "Inspector %s: %s, terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 3)  	format(strings, sizeof(strings), "Subinspector %s: %s, terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 2)  	format(strings, sizeof(strings), "Agent-Sef %s: %s, terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 1)  	format(strings, sizeof(strings), "Agent %s: %s, terminat. ", PlayerName(playerid), result);
		SendDepartamentMessage(COLOR_ALLDEPT, strings);
	}
	else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
	    if(PlayerInfo[playerid][pRank] == 9) 		format(strings, sizeof(strings), "Director %s: %s,terminat***", PlayerName(playerid), result);
	    else if(PlayerInfo[playerid][pRank] == 8) 	format(strings, sizeof(strings), "Director Adjunct %s: %s,terminat***", PlayerName(playerid), result);
	    else if(PlayerInfo[playerid][pRank] == 7)   format(strings, sizeof(strings), "Asistent Director %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 6)   format(strings, sizeof(strings), "Prim-Sef de divie %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 5)   format(strings, sizeof(strings), "Sef de divizie %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 4)   format(strings, sizeof(strings), "Agent Special de Comanda %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 3)   format(strings, sizeof(strings), "Agent Special %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 2)   format(strings, sizeof(strings), "Agent Secret %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 1) 	format(strings, sizeof(strings), "Cadet %s: %s,terminat***", PlayerName(playerid), result);
        SendDepartamentMessage(COLOR_ALLDEPT, strings);
	}
	else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
	{
	    if(PlayerInfo[playerid][pRank] == 9) 		format(strings, sizeof(strings), "Colonel %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 8)   format(strings, sizeof(strings), "Maior %s: %s,terminat***", PlayerName(playerid), result);
	    else if(PlayerInfo[playerid][pRank] == 7)   format(strings, sizeof(strings), "Capitan %s: %s,terminat***", PlayerName(playerid), result);
    	else if(PlayerInfo[playerid][pRank] == 6)   format(strings, sizeof(strings), "Locotenent %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 5)   format(strings, sizeof(strings), "Plutonier %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 4)   format(strings, sizeof(strings), "Sergent %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 3)   format(strings, sizeof(strings), "Caporal %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 2)   format(strings, sizeof(strings), "Fruntas %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 1)   format(strings, sizeof(strings), "Soldat %s: %s,terminat***", PlayerName(playerid), result);
		SendDepartamentMessage(COLOR_ALLDEPT, strings);
	}
	else if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
	{
   		if(PlayerInfo[playerid][pRank] == 9) 		format(strings, sizeof(strings), "Director %s: %s,terminat***", PlayerName(playerid), result);
	    else if(PlayerInfo[playerid][pRank] == 8)   format(strings, sizeof(strings), "Director Adjunct %s: %s,terminat***", PlayerName(playerid), result);
	    else if(PlayerInfo[playerid][pRank] == 7)   format(strings, sizeof(strings), "Asistent Director %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 6)   format(strings, sizeof(strings), "Prim-Sef de divie %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 5)   format(strings, sizeof(strings), "Sef de divizie %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 4)   format(strings, sizeof(strings), "Agent Special de Comanda %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 3)   format(strings, sizeof(strings), "Agent Special %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 2)   format(strings, sizeof(strings), "Agent Secret %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 1)   format(strings, sizeof(strings), "Cadet %s: %s,terminat***", PlayerName(playerid), result);
		SendDepartamentMessage(COLOR_ALLDEPT, strings);
	}
	else if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
	{
        if(PlayerInfo[playerid][pRank] == 9) 		format(strings, sizeof(strings), "Comandor %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 8)   format(strings, sizeof(strings), "Capitan-Comandor %s: %s,terminat***", PlayerName(playerid), result);
	    else if(PlayerInfo[playerid][pRank] == 7)   format(strings, sizeof(strings), "Locotentent-Comandor %s: %s,terminat***", PlayerName(playerid), result);
     	else if(PlayerInfo[playerid][pRank] == 6)   format(strings, sizeof(strings), "Aspirant %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 5)   format(strings, sizeof(strings), "Plutonier %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 4)   format(strings, sizeof(strings), "Sergent %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 3)   format(strings, sizeof(strings), "Caporal %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 2)   format(strings, sizeof(strings), "Fruntas %s: %s,terminat***", PlayerName(playerid), result);
		else if(PlayerInfo[playerid][pRank] == 1)   format(strings, sizeof(strings), "Soldat %s: %s,terminat***", PlayerName(playerid), result);
		SendDepartamentMessage(COLOR_ALLDEPT, strings);
	}
	else if(PlayerInfo[playerid][pMember]==4||PlayerInfo[playerid][pLeader]==4)
	{
		if(PlayerInfo[playerid][pLeader] == 4)
		format(strings, sizeof(strings), "Presedintele %s: %s, terminat***", PlayerName(playerid), result);
		else
 		format(strings, sizeof(strings), "Agent Prezidential %s: %s, terminat**", PlayerName(playerid), result);
  		SendDepartamentMessage(COLOR_ALLDEPT, strings);
	}
	else if(PlayerInfo[playerid][pMember]==7||PlayerInfo[playerid][pLeader]==7)
	{
		if(PlayerInfo[playerid][pLeader] == 7)
		format(strings, sizeof(strings), "Prim-Ministru %s: %s, terminat***", PlayerName(playerid), result);
        else
		format(strings, sizeof(strings), "Agent guvernamental %s: %s, terminat***", PlayerName(playerid), result);
  		SendDepartamentMessage(COLOR_ALLDEPT, strings);
	}
	else if(PlayerInfo[playerid][pMember]==12||PlayerInfo[playerid][pLeader]==12)
	{
		if(PlayerInfo[playerid][pLeader] == 12)
		format(strings, sizeof(strings), "Parlamentar %s: %s, terminat***", PlayerName(playerid), result);
        else
  		format(strings, sizeof(strings), "Parlamentar %s: %s, terminat***", PlayerName(playerid), result);
		SendDepartamentMessage(COLOR_ALLDEPT, strings);
	}
	else if(PlayerInfo[playerid][pJob2] == 10|| PlayerInfo[playerid][pJob1] == 10)
    {
		format(strings, sizeof(strings), "Candidat Medical %s: %s, terminat***", PlayerName(playerid), result);
		SendDepartamentMessage(COLOR_ALLDEPT, strings);
	}
	else return SendClientMessage(playerid,COLOR_RED,"Nu prindeti frecventa departamentului");
	factionloguri(strings);
	return 1;
}
CMD:roof(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti politist");
	if(!IsPlayerInRangeOfPoint(playerid,1.0,1582.4136,-1676.9941,5.8945) && !IsPlayerInRangeOfPoint(playerid,1.0,1571.5780,-1668.1753,12.3498) && !IsPlayerInRangeOfPoint(playerid,1.0,1571.5381,-1668.1748,16.1974) &&
	!IsPlayerInRangeOfPoint(playerid,1.0,1571.5780,-1668.1753,19.7344) && !IsPlayerInRangeOfPoint(playerid,1.0,1557.7257,-1675.2711,28.3955) && IsPlayerInRangeOfPoint(playerid,1.0,1571.5780,-1668.1753,23.3572))
	return SendClientMessage(playerid, COLOR_RED,"Nu esti la LSPD lift");
    SetPlayerPos(playerid,1557.7257,-1675.2711,28.3955);
  	SetPlayerInterior(playerid, 0);
 	SetPlayerVirtualWorld(playerid, 0);
 	return 1;
}
CMD:etaj1(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti politist");
	if(!IsPlayerInRangeOfPoint(playerid,1.0,1582.4136,-1676.9941,5.8945) && !IsPlayerInRangeOfPoint(playerid,1.0,1571.5780,-1668.1753,12.3498) && !IsPlayerInRangeOfPoint(playerid,1.0,1571.5381,-1668.1748,16.1974) &&
	!IsPlayerInRangeOfPoint(playerid,1.0,1571.5780,-1668.1753,19.7344) && !IsPlayerInRangeOfPoint(playerid,1.0,1557.7257,-1675.2711,28.3955) && IsPlayerInRangeOfPoint(playerid,1.0,1571.5780,-1668.1753,23.3572))
	return SendClientMessage(playerid, COLOR_RED,"Nu esti la LSPD lift");
    SetPlayerPos(playerid,1571.5780,-1668.1753,19.7344);
  	SetPlayerInterior(playerid, 0);
 	SetPlayerVirtualWorld(playerid, 0);
 	return 1;
}
CMD:parter(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti politist");
	if(!IsPlayerInRangeOfPoint(playerid,1.0,1582.4136,-1676.9941,5.8945) && !IsPlayerInRangeOfPoint(playerid,1.0,1571.5780,-1668.1753,12.3498) && !IsPlayerInRangeOfPoint(playerid,1.0,1571.5381,-1668.1748,16.1974) &&
	!IsPlayerInRangeOfPoint(playerid,1.0,1571.5780,-1668.1753,19.7344) && !IsPlayerInRangeOfPoint(playerid,1.0,1557.7257,-1675.2711,28.3955) && IsPlayerInRangeOfPoint(playerid,1.0,1571.5780,-1668.1753,23.3572))
	return SendClientMessage(playerid, COLOR_RED,"Nu esti la LSPD lift");
   	SetPlayerPos(playerid,1571.5381,-1668.1748,16.1974); //parter
  	SetPlayerInterior(playerid, 0);
 	SetPlayerVirtualWorld(playerid, 0);
 	return 1;
}
CMD:subsol(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti politist");
	if(!IsPlayerInRangeOfPoint(playerid,1.0,1582.4136,-1676.9941,5.8945) && !IsPlayerInRangeOfPoint(playerid,1.0,1571.5780,-1668.1753,12.3498) && !IsPlayerInRangeOfPoint(playerid,1.0,1571.5381,-1668.1748,16.1974) &&
	!IsPlayerInRangeOfPoint(playerid,1.0,1571.5780,-1668.1753,19.7344) && !IsPlayerInRangeOfPoint(playerid,1.0,1557.7257,-1675.2711,28.3955) && IsPlayerInRangeOfPoint(playerid,1.0,1571.5780,-1668.1753,23.3572))
	return SendClientMessage(playerid, COLOR_RED,"Nu esti la LSPD lift");
   	SetPlayerPos(playerid,1571.5780,-1668.1753,12.3498); //subsol
  	SetPlayerInterior(playerid, 0);
 	SetPlayerVirtualWorld(playerid, 0);
 	return 1;
}
CMD:parcare(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti politist");
	if(!IsPlayerInRangeOfPoint(playerid,1.0,1582.4136,-1676.9941,5.8945) && !IsPlayerInRangeOfPoint(playerid,1.0,1571.5780,-1668.1753,12.3498) && !IsPlayerInRangeOfPoint(playerid,1.0,1571.5381,-1668.1748,16.1974) &&
	!IsPlayerInRangeOfPoint(playerid,1.0,1571.5780,-1668.1753,19.7344) && !IsPlayerInRangeOfPoint(playerid,1.0,1557.7257,-1675.2711,28.3955) && IsPlayerInRangeOfPoint(playerid,1.0,1571.5780,-1668.1753,23.3572))
	return SendClientMessage(playerid, COLOR_RED,"Nu esti la LSPD lift");
   	SetPlayerPos(playerid,1582.4136,-1676.9941,5.8945);  //parcare
  	SetPlayerInterior(playerid, 0);
 	SetPlayerVirtualWorld(playerid, 0);
 	return 1;
}
CMD:changepass(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(aprobat[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, " Ai nevoie de aprobare de la owner!");
	new message[128];
	if(sscanf(params,"s[128]",message)) return SendClientMessage(playerid, COLOR_WHITE, "Use: /changepass [new pass]");
	if(strlen(message) <= 5 || strlen(message) > 20) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Parola: {FFFFFF}Parola trebuie sa fie intre 5 si 20 caractere!");
   	format(strings,sizeof(strings),"UPDATE `players` SET `password`='%s' WHERE `username`='%s'",message, PlayerName(playerid));
    mysql_tquery(handle,strings);
	aprobat[playerid] = 0;
	SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Server: {FFFFFF}Ti-ai schimbat parola.");
	return 1;
}
CMD:aprove(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /aprove [playerid/numejucator]");
 	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    aprobat[playa] = 1;
	format(strings, sizeof(strings), "%s a fost de acord sa schimbi parola.", PlayerName(playerid));
	SendClientMessage(playa, COLOR_GRAD1, strings);
	format(strings, sizeof(strings), " %s este aprobat sa schimbe parola acum.", PlayerName(playa));
	SendClientMessage(playerid, COLOR_GRAD1, strings);
	return 1;
}
CMD:fuelstations(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
    //rafinarie = 1000000;

//    format(string, sizeof(string), " Rafinaria Xommer\n Mai avem %d Litri de Combustibil",rafinarie);
  //  Update3DTextLabelText(rafinariee, 0xFFFFFFFF, string);

   	gaso =  100000;
	going =  100000;
	xommer = 100000;

	format(strings, sizeof(strings), " Going Station \n %d Litri \n /fill <litri> \n Pret per litru: %d",going,20);
	UpdateDynamic3DTextLabelText(goingg, 0xFFFFFFFF, strings);
	UpdateDynamic3DTextLabelText(goingg1, 0xFFFFFFFF, strings);
	UpdateDynamic3DTextLabelText(goingg2, 0xFFFFFFFF, strings);
 	UpdateDynamic3DTextLabelText(goingg3, 0xFFFFFFFF, strings);
 	UpdateDynamic3DTextLabelText(goingg4, 0xFFFFFFFF, strings);

	format(strings, sizeof(strings), " Gaso Station \n %d Litri \n /fill <litri> \n Pret per litru: %d",gaso,20);
	UpdateDynamic3DTextLabelText(gasoo, 0xFFFFFFFF, strings);
	UpdateDynamic3DTextLabelText(gasoo1, 0xFFFFFFFF, strings);
	UpdateDynamic3DTextLabelText(gasoo2, 0xFFFFFFFF, strings);
	UpdateDynamic3DTextLabelText(gasoo3, 0xFFFFFFFF, strings);
	UpdateDynamic3DTextLabelText(gasoo4, 0xFFFFFFFF, strings);
	UpdateDynamic3DTextLabelText(gasoo5, 0xFFFFFFFF, strings);

	format(strings, sizeof(strings), " Xommer Station \n %d Litri \n /fill <litri> \n Pret per litru: %d",xommer,20);
    UpdateDynamic3DTextLabelText(xommerr, 0xFFFFFFFF, strings);
    UpdateDynamic3DTextLabelText(xommerr1, 0xFFFFFFFF, strings);
    UpdateDynamic3DTextLabelText(xommerr2, 0xFFFFFFFF, strings);
    UpdateDynamic3DTextLabelText(xommerr3, 0xFFFFFFFF, strings);
    UpdateDynamic3DTextLabelText(xommerr4, 0xFFFFFFFF, strings);
    UpdateDynamic3DTextLabelText(xommerr5, 0xFFFFFFFF, strings);


	format(strings, sizeof(strings), "[ADMIN]: Toate Benzinariile au fost umplute de %s.", PlayerName(playerid));
	BroadCast(COLOR_WHITE,strings);
	GameTextForAll("~w~Station ~n~~g~Refueled!",5000,1);
	return 1;
}

CMD:giverpall(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	foreach(Player,i)
	{
		if(gLogged[i] != 0)
 		{
            PlayerInfo[i][pRespect] ++;
            format(strings, sizeof(strings), "{1580EA}[ADMIN]{FFFFFF}%s a dat cate 1 RP tuturor, acum ai %d.",PlayerName(playerid), PlayerInfo[i][pRespect]);
            SendClientMessage(i,COLOR_LIGHTGREEN,strings);
        	Update(i, pRespectx);
		}
	}
	return 1;
}
CMD:levelall(playerid,params[])
return cmd_givelevelall(playerid,params);
CMD:givelevelall(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	foreach(Player,i)
	{
		if(gLogged[i] != 0)
 		{
            PlayerInfo[i][pLevel] ++;
            format(strings, sizeof(strings), "{1580EA}[ADMIN]{FFFFFF}%s a dat cate 1 level tuturor, acum ai %d.",PlayerName(playerid), PlayerInfo[i][pLevel]);
            SendClientMessage(i,COLOR_LIGHTGREEN,strings);
            Update(i, pLevelx);
 		}
	}
	return 1;
}
CMD:rewardall(playerid,params[])
return cmd_moneyall(playerid,params);

CMD:moneyall(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
   	new suma;
	if(sscanf(params,"d",suma)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /rewardall [suma]");
	foreach(Player,i)
	{
		if(gLogged[i] != 0)
 		{
            GivePlayerCash(i,suma);
            format(strings, sizeof(strings), "{1580EA}[ADMIN]{FFFFFF}%s a dat tuturor suma de %d.",PlayerName(playerid), suma);
            SendClientMessage(i,COLOR_LIGHTGREEN,strings);
   		}
	}
	return 1;
}

CMD:fine(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
   	new suma,playa;
	if(sscanf(params,"ud",playa,suma)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /fine [playerid] [suma]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    GivePlayerCash(playa,-suma);
    format(strings, sizeof(strings), "{1580EA}[ADMIN]{FFFFFF}%s te-a amendat cu suma de.",PlayerName(playerid), suma);
    SendClientMessage(playa,COLOR_LIGHTGREEN,strings);
	return 1;
}

CMD:cc(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	foreach(Player,i)
	{
   	 	if(PlayerInfo[i][pAdmin] >= 7)
      	ClearChatbox(i, 2);
   		else
   		ClearChatbox(i, 100);
	}
	format(strings, 256, "{ee5555}[ADMIN]: {a9c4e4}[%d]%s a folosit comanda /clearchat.",playerid,PlayerName(playerid));
	AdminsBroadCast(COLOR_YELLOW,strings,1);
	GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~Chat Sters",1500,3);
	return 1;
}


CMD:unwarn(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa,message[128];
	if(sscanf(params,"us[128]",playa,message)) return SendClientMessage(playerid,-1,"/unwarn [playerid] [Motiv]");
    if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(PlayerInfo[playa][pWarns] < 1) return SendClientMessage(playerid,COLOR_RED,"Playerul are 0 warnuri");
	PlayerInfo[playa][pWarns] --;
    Update(playa,pWarnsx);
    format(strings, sizeof(strings),"%s[%d] a primit UN-WARN de la Admin %s[%d]. Motiv: %s",PlayerName(playa),playa,PlayerName(playerid),playerid,message);
    SendClientMessageToAll(COLOR_LIGHTBLUE,strings);
    return 1;
}

CMD:warn(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa,message[128];
	if(sscanf(params,"us[128]",playa,message)) return SendClientMessage(playerid,-1,"/warn [playerid] [Motiv]");
    if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(PlayerInfo[playa][pWarns] < 4)
	{
	    PlayerInfo[playa][pWarns] ++;
	    Update(playa,pWarnsx);
	    format(strings, sizeof(strings),"%s[%d] a primit WARN de la Admin %s[%d]. Motiv: %s",PlayerName(playa),playa,PlayerName(playerid),playerid,message);
	    SendClientMessageToAll(COLOR_LIGHTRED,strings);
	    return 1;
	}
    PlayerInfo[playa][pWarns] = 0;
	Update(playa,pWarnsx);
 	format(strings, sizeof(strings),"%s[%d] a primit WARN de la Admin %s[%d]. Motiv: %s",PlayerName(playa),playa,PlayerName(playerid),message);
	SendClientMessageToAll(COLOR_LIGHTRED,strings);
    SendClientMessageToAll(0x11D8EEC8, "________________________________Ban Info__________________________________________________");
 	format(strings,sizeof(strings),"User Banat:{FFFFFF} %s[%d]",PlayerName(playa),playa);
	SendClientMessageToAll(0x11D8EEC8,strings);
	format(strings,sizeof(strings),"User IP:{FFFFFF} %s ",PlayerIP(playa));
	SendClientMessageToAll(0x11D8EEC8,strings);
	format(strings,sizeof(strings),"Banat de:{FFFFFF} "#SERVERNAME"-Bot");
	SendClientMessageToAll(0x11D8EEC8,strings);
	format(strings,sizeof(strings),"Motiv:{FFFFFF} 4/4 Warnuri");
	SendClientMessageToAll(0x11D8EEC8,strings);
	format(strings,sizeof(strings),"DATA/ORA:{FFFFFF} %s",CurrentTimeStamps());
	SendClientMessageToAll(0x11D8EEC8,strings);
	format(strings,sizeof(strings),"Durata Banului:{FFFFFF} 4 zile",4);
	SendClientMessageToAll(0x11D8EEC8,strings);
    SendClientMessageToAll(0x11D8EEC8, "__________________________________________________________________________________________");
    SendClientMessage(playa,COLOR_YELLOW, "Daca ai fost neindreptatit poti face cerere de unban pe forum: www."#SERVERNAME".ro");
	SendClientMessage(playa,COLOR_YELLOW, "Apasa F8 pentru a face poza, fara poza cererea va fi respinsa");
	SendClientMessage(playa,COLOR_YELLOW, "Daca banul a fost corect nu te obosi sa faci cerere");
	PlayerInfo[playa][pBanned] = 4;
	Update(playa, pBannedx);
	strmid(PlayerInfo[playa][pIP], PlayerIP(playa), 0, 100, 255);
	Update(playa, pIPx);
	mysql_format(handle, query, 500,"INSERT INTO `banslog` (`BanID`,`user_banned`,`user_banned_ip`,`user_banner`,`ban_reason`,`ban_timestamp`,`ban_time`) VALUES ('','%s','%s',"#SERVERNAME"-BOT,4/4Warnuri,CURRENT_TIMESTAMP,'%d')",
	PlayerName(playa),
	PlayerIP(playa),
	PlayerName(playerid),
	message,
	4);
	mysql_tquery(handle, query);
    kiked(playa);
	return 1;
}
CMD:sendxtoy(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa,playa2;
	if(sscanf(params,"uu",playa,playa2)) return SendClientMessage(playerid,-1,"/sendxtoy [Playerid] to [Playerid2]");
    if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(gLogged[playa2] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa2 == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");



    if (PlayerInfo[playa][pAdmin] > 7 && PlayerInfo[playa2][pAdmin] < 7)
   	{
		SendClientMessage(playerid, COLOR_GRAD1, "Intreaba adminul daca vrea sa te aduca.");
		format(strings, sizeof(strings), "   %s vrea sa il trimita pe %s la tine.", PlayerName(playerid),PlayerName(playa));
		SendClientMessage(playa2, COLOR_GRAD1, strings);
		return 1;
	}
	new Float:plocx,Float:plocy,Float:plocz;
	GetPlayerPos(playa2, plocx, plocy, plocz);
	SetPlayerInterior(playa,GetPlayerInterior(playa2));
	SetPlayerVirtualWorld(playa, GetPlayerVirtualWorld(playa2));
	format(strings, sizeof(strings), "%s[%d] il teleporteaza pe %s[%d] la %s[%d]", PlayerName(playerid),playerid,PlayerName(playa),playa,PlayerName(playa2),playa2);
	if (GetPlayerState(playa) == 2)
	{
		SetVehiclePos(GetPlayerVehicleID(playa), plocx, plocy+4, plocz);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playa), GetPlayerVirtualWorld(playa2));
		LinkVehicleToInterior(GetPlayerVehicleID(playa), GetPlayerInterior(playa2));
	}
	else
	SetPlayerPos(playa,plocx,plocy+2, plocz);
	SendClientMessage(playa, COLOR_GRAD1, "   Ai fost teleportat");
	if(PlayerInfo[playerid][pAdmin] > 0)
	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	if(PlayerInfo[playerid][pHelper] > 0)
	AdminsBroadCast(-1, strings,1);
	return 1;
}

CMD:cage(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa,message[128];
	if(sscanf(params,"us[128]",playa,message)) return SendClientMessage(playerid,-1,"/cage [Playerid] [Motiv]");
    if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(caged[playa] != 0) return SendClientMessage(playerid,COLOR_RED,"Playerul este deja in cusca!");
    CagePlayer(playerid);
	format(strings, sizeof(strings),"%s[%d] a fost bagat in cusca de Admin %s[%d] pe motiv: %s",PlayerName(playa),playa,PlayerName(playerid),playerid,message);
    SendClientMessageToAll(COLOR_LIGHTRED,strings);
    return 1;
}

CMD:uncage(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa,message[128];
	if(sscanf(params,"us[128]",playa,message)) return SendClientMessage(playerid,-1,"/uncage [Playerid] [Motiv]");
	if(caged[playa] == 0) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este in cusca!");
    UnCagePlayer(playerid);
	format(strings, sizeof(strings),"%s[%d] a fost scos din cusca de Admin %s[%d] pe motiv: %s",PlayerName(playa),playa,PlayerName(playerid),playerid,message);
    SendClientMessageToAll(COLOR_LIGHTBLUE,strings);
    return 1;
}

CMD:game(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "SYNTAX: /game [playerid/PartOfName]");
    if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	new Float:slx, Float:sly, Float:slz;
	new targetlevel = PlayerInfo[playa][pAdmin];
	new playerlevel = PlayerInfo[playerid][pAdmin];
	if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* Nu poti folosi comanda pe Admini mai mari ca tine!");
	SetPlayerHealth(playa, 1);
	GetPlayerPos(playa, slx, sly, slz);
	SetPlayerPos(playa, slx, sly, slz+50000000);
	PlayerPlaySound(playa, /*1130*/1190, slx, sly, slz+50000000);
	format(strings, sizeof(strings), "[ADMIN]: %s had Fucked %s(%d)'s Game.",PlayerName(playerid), PlayerName(playa), playa);
	AdminsBroadCast(COLOR_LIGHTRED,strings, 5);
	GameTextForPlayer(playa, "~r~Game Fucked!",5000,3);
	format(strings, sizeof(strings), "** I-ai futut jocul lui %s", PlayerName(playa));
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
 	return 1;
}

CMD:ungame(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "SYNTAX: /game [playerid/PartOfName]");
    if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	new targetlevel = PlayerInfo[playa][pAdmin];
	new playerlevel = PlayerInfo[playerid][pAdmin];
	if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* Nu poti folosi comanda pe Admini mai mari ca tine!");
	SetPlayerHealth(playa, 100);
	SpawnPlayer(playa);
	format(strings, sizeof(strings), "[ADMIN]: %s had UnFucked %s(%d)'s Game.",PlayerName(playerid), PlayerName(playa), playa);
	AdminsBroadCast(COLOR_LIGHTRED,strings, 5);
	GameTextForPlayer(playa, "~b~Game UnFucked!",5000,3);
	format(strings, sizeof(strings), "** I-ai rezolvat jocul lui %s", PlayerName(playa));
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
 	return 1;
}


//--------------------------------[Explode]---------------------------------------------------------------------
CMD:explode(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /explode [playerid/PartOfName]");
    if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	new targetlevel = PlayerInfo[playa][pAdmin];
	new playerlevel = PlayerInfo[playerid][pAdmin];
	if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* Nu poti folosi comanda pe Admini mai mari ca tine!");
	format(strings, sizeof(strings), "[ADMIN]: %s i-a dat EXPLODE lui %s (%d)",PlayerName(playerid),PlayerName(playa),playa);
	AdminsBroadCast(COLOR_LIGHTRED,strings, 4);
	format(strings, sizeof(strings), "Administrator %s ti-a dat EXPLODE",PlayerName(playerid));
	SendClientMessage(playa, TEAM_GROVE_COLOR, strings);
	new Float:boomx, Float:boomy, Float:boomz;
	GetPlayerPos(playa,boomx, boomy, boomz);
	CreateExplosion(boomx, boomy , boomz, 7, 1);
 	return 1;
}

// ----------------------------------------------- BURN ---------------------------------------

CMD:burn(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /burn [playerid/PartOfName]");
    if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	new targetlevel = PlayerInfo[playa][pAdmin];
	new playerlevel = PlayerInfo[playerid][pAdmin];
	if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* Nu poti folosi comanda pe Admini mai mari ca tine!");
	format(strings, sizeof(strings), "[ADMIN]: %s i-a dat BURN lui %s (%d)",PlayerName(playerid),PlayerName(playa),playa);
	AdminsBroadCast(COLOR_LIGHTRED,strings, 2);
	format(strings, sizeof(strings), "Administrator %s ti-a dat BURN",PlayerName(playerid));
	SendClientMessage(playa, TEAM_GROVE_COLOR, strings);
	new Float:boomx, Float:boomy, Float:boomz;
	GetPlayerPos(playa,boomx, boomy, boomz);
	CreateExplosion(boomx, boomy , boomz, 1, 1);
	return 1;
}

CMD:setcarhp(playerid,params[])
{

    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa,health;
	if(sscanf(params,"ud",playa,health)) return SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /setcarhp [playerid] [HEALTH]");
    if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	new targetlevel = PlayerInfo[playa][pAdmin];
	new playerlevel = PlayerInfo[playerid][pAdmin];
	if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* Nu poti folosi comanda pe Admini mai mari ca tine!");
    if(!IsPlayerInAnyVehicle(playa)) SendClientMessage(playerid,COLOR_RED,"Playerul nu e in masina");
	SetVehicleHealth(GetPlayerVehicleID(playa), health*10);
 	format(strings, 256, "[ADMIN]: %s a setat viata masinii lui %s la %d.", PlayerName(playerid),PlayerName(playa),health);
	AdminsBroadCast(COLOR_LIGHTRED,strings, 6);
	format(strings, sizeof(strings), "Administrator %s ti-a setat HP masinii %d",PlayerName(playerid), health);
	SendClientMessage(playa, TEAM_GROVE_COLOR, strings);
 	return 1;
}

CMD:punch(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /punch [playerid/PartOfName]");
    if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	new Float:slx, Float:sly, Float:slz;
	new targetlevel = PlayerInfo[playa][pAdmin];
	new playerlevel = PlayerInfo[playerid][pAdmin];
	if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* Nu poti folosi comanda pe Admini mai mari ca tine!");
	GetPlayerPos(playa, slx, sly, slz);
	SetPlayerPos(playa, slx, sly, slz+20);
	PlayerPlaySound(playa, 1130, slx, sly, slz+20);
	format(strings, sizeof(strings), "[ADMIN]: %s ii da un Pumn lui %s (%d).",PlayerName(playerid), PlayerName(playa), playa);
	AdminsBroadCast(COLOR_LIGHTRED,strings, 3);
	GameTextForPlayer(playa, "~r~Punched!",5000,3);
	return 1;
}


CMD:mute(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa,time,message[128];
	if(sscanf(params,"uds[128]",playa,time,message)) return SendClientMessage(playerid,-1,"/mute [Playerid] [Minute] [Motiv]");
    if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
   	new targetlevel = PlayerInfo[playa][pAdmin];
	new playerlevel = PlayerInfo[playerid][pAdmin];
	if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* Nu poti folosi comanda pe Admini mai mari ca tine!");

    PlayerInfo[playa][pMute] = time*60;
    Update(playa,pMutex);
    if(time != 0)
    format(strings, sizeof(strings),"%s[%d] a primit Mute %d minute de la Admin %s[%d]. Motiv: %s",PlayerName(playa),playa,time,PlayerName(playerid),playerid,message);
	else
	format(strings, sizeof(strings),"%s[%d] a primit UnMute de la Admin %s[%d]. Motiv: %s",PlayerName(playa),playa,PlayerName(playerid),playerid,message);
    SendClientMessageToAll(COLOR_LIGHTBLUE,strings);
    return 1;
}

CMD:we(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa,gun,ammso;
	if(sscanf(params,"udd",playa,gun,ammso))
	{
		SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /weaponequip [playerid/PartOfName] [weaponid] [ammo]");
		SendClientMessage(playerid, COLOR_GRAD4, "1(Brass) 2(Nite) 3(Club) 4(knife) 5(bat) 6(Shovel) 7(Cue) 8(Katana) 9(Chainsaw) 10-13(Dildo)");
		SendClientMessage(playerid, COLOR_GRAD4, "14(Flowers) 15(Cane) 16(Grenades) 17(Teargas) 18(Molotovs) 22(Pistol) 23(SPistol) 24(Eagle)");
		SendClientMessage(playerid, COLOR_GRAD4, "25(Shotgun) 26(sawn-off) 27(Combat) 28(TEC9) 29(MP5) 30(AK47) 31(M4) 32(MAC10) 33(Country)");
		SendClientMessage(playerid, COLOR_GRAD3, "34(Sniper) 35(RPG) 37(Flamethrower) 38(Minigun) 41(spray) 42(exting) 43(Camera) 46(Parachute)");
		return 1;
	}
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(gun < 1||gun > 46 ||gun==19||gun==20||gun==21||gun==44||gun==45) return SendClientMessage(playerid, COLOR_GRAD1, "** Invalid WeaponID!");
	if(ammso <1||ammso > 49999) return SendClientMessage(playerid, COLOR_GRAD1, "   Numarul gloantelor trebuie sa fie cuprins intre 1 si 99,999!");
	ServerWeapon(playa, gun, ammso);
	return 1;
}

CMD:givegunallrange(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new gun,ammso;
	if(sscanf(params,"dd",gun,ammso))
	{
		SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /givegunallrange [weaponid] [ammo]");
		SendClientMessage(playerid,	COLOR_GRAD4,"Gloantele vor trebui sa fie intre 1 si 999");
		SendClientMessage(playerid, COLOR_GRAD4, "3(Club) 4(knife) 5(bat) 6(Shovel) 7(Cue) 8(Katana) 10-13(Dildo) 14(Flowers) 16(Grenades) 18(Molotovs) 22(Pistol) 23(SPistol)");
		SendClientMessage(playerid, COLOR_GRAD3, "24(Eagle) 25(shotgun) 29(MP5) 30(AK47) 31(M4) 33(Rifle) 34(Sniper) 37(Flamethrower) 41(spray) 42(exting) 43(Camera) 46(Parachute)");
		return 1;
	}
	if(gun < 1 ||gun > 46||gun==27||gun==1||gun==2||gun==9||gun==17||gun==19||gun==20||gun==21||gun==36||gun==38||gun==39||gun==40||gun==44||gun==45) return SendClientMessage(playerid, COLOR_GRAD1, "   wrong WeaponID!");
	if(ammso <1|| ammso > 999) return SendClientMessage(playerid, COLOR_GRAD1, "Munitia trebuie sa fie intre 1 si 999!");
	format(strings, sizeof(strings), "{1580EA}[ADMIN]{a9c4e4} %s a dat arma[ID:%d] cu %d gloante!", PlayerName(playerid),gun,ammso);
 	foreach(Player,i)
	{
		if (ProxDetectorPlayer(20, playerid, i))
		ServerWeapon(i, gun, ammso);
		SendClientMessage(i,COLOR_LIGHTRED, strings);
	}
	return 1;
}


CMD:deagleevent(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	foreach(Player,i)
	{
    	if(ProxDetectorPlayer(40, playerid, i))
	   	ServerWeapon(i, 24, 500);
 	}
	return 1;
}

CMD:healevent(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	foreach(Player,i)
 	{
 	    if(ProxDetectorPlayer(40, playerid, i))
 	    {
    		if(IsPlayerInAnyVehicle(i))
      		RepairVehicle(GetPlayerVehicleID(i));
       		SetPlayerHealth(i, 100);
		}
	}
	return 1;
}

CMD:unarmevent(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	foreach(Player,i)
	{
	    if(ProxDetectorPlayer(40, playerid, i))
 	    {
    		ResetPlayerWeapons(i);
		}
	}
 	return 1;
}


CMD:unfrezeevent(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	foreach(Player,i)
	{
	    if(ProxDetectorPlayer(40, playerid, i))
 	    {
    		TogglePlayerControllable(i, 1);
		}
	}
	return 1;
}

CMD:freezeevent(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	foreach(Player,i)
	{
	    if(ProxDetectorPlayer(40, playerid, i))
 	    {
    		TogglePlayerControllable(i, 0);
		}
	}
	return 1;
}


CMD:armourevent(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	foreach(Player,i)
	{
		if(ProxDetectorPlayer(40, playerid, i))
 	    {
		 	SetPlayerArmour(i, 100);
		}
	}
 	return 1;
}

CMD:unarm(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /freeze [playerid/numejucator]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    ResetPlayerWeapons(playa);
    format(strings, sizeof(strings), "{1580EA}[Info:] {FFFFFF}%s i-a scos toate armele lui %s.", PlayerName(playerid), PlayerName(playa));
    AdminsBroadCast(COLOR_LIGHTBLUE, strings, 1);
    return 1;
}
CMD:disarm(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /freeze [playerid/numejucator]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    ResetPlayerWeapons(playa);
    format(strings, sizeof(strings), "{1580EA}[Info:] {FFFFFF}%s i-a scos toate armele lui %s.", PlayerName(playerid), PlayerName(playa));
    AdminsBroadCast(COLOR_LIGHTBLUE, strings, 1);
    return 1;
}

CMD:belt(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new veh = GetPlayerVehicleID(playerid);
    if(IsModelABike(veh)) return SendClientMessage(playerid,-1,"Foloseste /helmet");
	if(IsABike(veh)) return SendClientMessage(playerid,COLOR_RED,"Nu ai nevoie de centura");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti in masina");
	if(SeatBelt[playerid] == 0)
	{
		SeatBelt[playerid] = 1;
		format(strings, sizeof(strings), "%s isi pune centura.", PlayerName(playerid));
		ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 1;
	}
	if(SeatBelt[playerid] == 1)
	{
		SeatBelt[playerid] = 0;
		format(strings, sizeof(strings), "%s isi da jos centura.", PlayerName(playerid));
		ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 1;
	}
	return 1;
}
CMD:helmet(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new veh = GetPlayerVehicleID(playerid);
    if(!IsModelABike(veh)) return SendClientMessage(playerid,-1,"Foloseste /belt");
	if(IsABike(veh)) return SendClientMessage(playerid,COLOR_RED,"Nu ai nevoie de centura");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti in masina");
	if(SeatBelt[playerid] == 0)
	{
	   	if(!IsPlayerAttachedObjectSlotUsed(playerid,9))
 		SetPlayerAttachedObject(playerid, 9, 18645, 2, 0.070890, 0.007468, -0.006614, 94.054161, 79.343078, 355.367126, 1.000000, 1.000000, 1.000000 );
		format(strings, sizeof(strings), "%s isi pune casca.", PlayerName(playerid));
		ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  		SeatBelt[playerid] = 1;
		return 1;
 	}
	if(SeatBelt[playerid] == 1)
	{
	    SeatBelt[playerid] = 0;
		format(strings, sizeof(strings), "%s isi scoate casca.", PlayerName(playerid));
		ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		RemovePlayerAttachedObject(playerid,9);
		return 1;
	}
	return 1;
}

CMD:checkbelt(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 4 && !IsACop(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new playa;
	if(sscanf(params,"u",playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /checkbelt [playerid/numejucator]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    if(!IsPlayerInAnyVehicle(playa)) return SendClientMessage(playerid,COLOR_RED,"Playerul nu e in masina");
	if(!ProxDetectorPlayer(8.0, playerid, playa)) return SendClientMessage(playerid,COLOR_RED,"Nu esti langa player");
    SendClientMessage(playerid,-1,"Esti langa player");
    if(SeatBelt[playa] == 1)
    {
    	if(!IsModelABike(GetPlayerVehicleID(playa)))
		format(strings, sizeof(strings), "%s poarta centura", PlayerName(playa));
		else
		format(strings, sizeof(strings), "%s poarta casca", PlayerName(playa));
		SendClientMessage(playerid, COLOR_RED, strings);
		return 1;
	}
	if(SeatBelt[playa] == 0)
    {
    	if(!IsModelABike(GetPlayerVehicleID(playa)))
		format(strings, sizeof(strings), "%s nu poarta centura", PlayerName(playa));
		else
		format(strings, sizeof(strings), "%s nu poarta casca", PlayerName(playa));
		SendClientMessage(playerid, COLOR_RED, strings);
		return 1;
	}
	return 1;
}


CMD:su(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 4 && !IsACop(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	if(PlayerInfo[playerid][pRank] < 2 && PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_RED, "Ai nevoie de rank 2");
	new playa,wanted,message[128];
	if(sscanf(params,"uds[128]",playa,wanted,message)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /su [playerid/numejucator] [wantedlevel] [reason]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if(PlayerInfo[playa][pJailTime]> 0) return SCM(playerid,COLOR_RED,"Playerul are jail!");
    if(IsACop(playa) && PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_WHITE, "Nu poti da in urmarire politisti!");
    if(wanted > 8 || wanted < 1) SendClientMessage(playerid, COLOR_WHITE, "Nivelul de urmarire trebuie sa fie intre 1 si 8 !");
	if(GetPlayerWantedLevel(playa) >= 8) return SCM(playerid,-1,"Suspectul are wanred maxim");
	if(GetPlayerWantedLevel(playa) + wanted > 8) return SCM(playerid,-1,"Daca acorzi acest wanted playerul depaseste WANTED 8");
	SetPlayerWantedLevel(playa,GetPlayerWantedLevel(playa)+wanted);
   	format(strings, sizeof(strings), "Ai comis o crima (%s). Reclamant: %s.",message,PlayerName(playerid));
    SendClientMessage(playa, COLOR_LIGHTRED, strings);
    format(strings, sizeof(strings),"Wanted Level: %d", GetPlayerWantedLevel(playa));
    SendClientMessage(playa, COLOR_YELLOW, strings);
    format(PlayerInfo[playerid][pCrima], 128, message);
    Update(playerid,pCrimax);
	WantedLeft[playa] = 0;
    foreach(Player,i)
 	{
 		if(IsACop(i))
 		{
  			format(strings, sizeof(strings), "PR: Toate unitatile APB: Reclamant: %s",PlayerName(playerid));
     		SendClientMessage(i, TEAM_BLUE_COLOR, strings);
       		format(strings, sizeof(strings), "PR: Crima: %s | Suspect: %s | Nivel de urmarire: %d",message,PlayerName(playa),GetPlayerWantedLevel(playa));
         	SendClientMessage(i, TEAM_BLUE_COLOR, strings);
			PlayCrimeReportForPlayer(playa, i, 17);
			format(PlayerInfo[i][pCrima], 128, "Ucidere Politist");
            Update(i,pCrimax);
   		}
 	}
    return 1;
}

CMD:wanted(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 2 && !IsACop(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new x=0;
	SendClientMessage(playerid, COLOR_GREEN, "Current Wanted Suspects:");
    foreach(Player,i)
 	{
	    if(PlayerInfo[i][pWanted] > 0)
	    {
  			format(strings, sizeof(strings), "%s[%d]:Wanted %d-%s", PlayerName(i),i,PlayerInfo[i][pWanted],PlayerInfo[i][pCrima]);
			SendClientMessage(playerid, COLOR_YELLOW, strings);
	  		x ++;
		}
	}
	if(x !=0)
 	format(strings, sizeof(strings), "%d suspecti",x);
 	else
 	format(strings, sizeof(strings), "Lista este goala");
	SendClientMessage(playerid, COLOR_YELLOW, strings);
	return 1;
}
CMD:jailed(playerid,params[])
return cmd_jl(playerid,params);
CMD:jl(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 3 && !IsACop(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
    new count = 0;
	SendClientMessage(playerid, COLOR_LIGHTGREEN, "{a9c4e4}|___Jucatori Arestati___|");
    foreach(Player,i)
	{
	    if(PlayerInfo[i][pJail] != 0)
	    {
 			format(strings, sizeof(strings), "{ee5555}[%d]%s - {a9c4e4}Timp ramas in arest: {ee5555}%d", i,PlayerName(i),PlayerInfo[i][pJailTime]);
			SendClientMessage(playerid,COLOR_WHITE,strings);
			count++;
		}
		if(count == 0) return 	SendClientMessage(playerid,COLOR_LIGHTRED,"* Nu sunt jucatori arestati.");
	}
	return 1;
}

CMD:rrballs(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	DeleteAllRoadblocks();
    foreach(Player,i)
	{
		if(PlayerInfo[i][pAdmin] > 3 || IsACop(i))
		{
			format(strings,sizeof(strings),"[HQ]: Officer %s a luat toate barierele, terminat.",PlayerName(playerid));
			SendClientMessage(i, COLOR_LIGHTRED, strings);
		}
 	}
	GameTextForPlayer(playerid,"~b~All ~w~Roadblocks ~r~Removed!",3000,1);
    return 1;
}

CMD:rrball(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 3 && !IsACop(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	DeleteAllClosedRoadblocks(playerid);
    foreach(Player,i)
	{
		if(PlayerInfo[i][pAdmin] > 3 || IsACop(i))
		{
			format(strings,sizeof(strings),"[HQ]: Officer %s a luat toate barierele de langa el, terminat.",PlayerName(playerid));
			SendClientMessage(i, COLOR_LIGHTRED, strings);
		}
 	}
	GameTextForPlayer(playerid,"~b~All ~w~Roadblocks ~r~Removed!",3000,1);
    return 1;
}


CMD:rub(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 3 && !IsACop(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
   	DeleteClosestRoadblock(playerid);
    foreach(Player,i)
	{
		if(PlayerInfo[i][pAdmin] > 3 || IsACop(i))
		{
			format(strings,sizeof(strings),"[HQ]: Officer %s a luat o bariera, terminat.",PlayerName(playerid));
			SendClientMessage(i, COLOR_LIGHTRED, strings);
		}
 	}
	GameTextForPlayer(playerid,"~w~Roadblock ~r~Removed!",3000,1);
    return 1;
}

IsAnyHaveWanted()
{
	foreach(Player,i)
	if(PlayerInfo[i][pWanted] > 0)
    return 1;
   	return 0;
}

CMD:track(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 3 && PlayerInfo[playerid][pMember] != 2) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	if(PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_RED, "Nu ai  rank pentru aceasta comanda");
    if(PlayerSledTime[playerid] > 0) return SendClientMessage(playerid,COLOR_GREY,"Deja interceptati o convorbire! /offtrack");
    new num;
	if(sscanf(params,"d",num)) return   SendClientMessage(playerid, COLOR_GRAD2, "Folositi: /track [nr. de tel.]");
	foreach(Player,i)
 	{
		if(PlayerInfo[i][pPhoneNumber] == num)
  		{
    		if(Mobile[i] != 999)
      		{
        		PlayerSledTime[playerid] = 10;
          		PlayerSledID[playerid] = i;
            	SendClientMessage(playerid,COLOR_WHITE,"Ati inceput interceptarea convorbirilor de pe acest numar!");
             	return true;
           	}
           	SendClientMessage(playerid,COLOR_GREY,"Acest numar de telefon nu emite niciun semnal!");
      	}
   	}
	return 1;
}
CMD:offtrack(playerid,params[])
{
	SendClientMessage(playerid,COLOR_GREY,"Nu mai interceptezi convorbirea!");
    PlayerSledTime[playerid] = 0;
}

CMD:crb(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 3 && !IsACop(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	if(IsACop(playerid) && PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_RED, "Nu ai  rank pentru aceasta comanda");
    if(!IsAnyHaveWanted() && PlayerInfo[playerid][pAdmin]<2) return SCM(playerid,COLOR_LIGHTRED,"Nu este wanted pe server nu ai nevie de bariere!");
	new rb, Float:plocx,Float:plocy,Float:plocz,Float:ploca;
	if(sscanf(params,"d",rb))
	{
		SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /crb [Roadblock ID]");
		SendClientMessage(playerid, COLOR_GRAD1, "| 1: Small Roadblock | 2: Medium Roadblock |");
		SendClientMessage(playerid, COLOR_GRAD1, "| 3: Big Roadblock     | 4: Cone                       | 5: Detour Sign");
		SendClientMessage(playerid, COLOR_GRAD1, "| 6: Will Be Sign        | 7: Line Closed Sign     | 8: Nails small");
		SendClientMessage(playerid, COLOR_RED,   "| 9: platforma            | 10: gard                      | 11: poarta [ADMINS ONLY]");
		return 1;
	}
 	if(rb == 9 && PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid,-1,"Nu ai acces la aceasta bariera");
 	if(rb == 10 && PlayerInfo[playerid][pAdmin] <3) return SendClientMessage(playerid,-1,"Nu ai acces la aceasta bariera");
 	if(rb == 11 && PlayerInfo[playerid][pAdmin] <3) return SendClientMessage(playerid,-1,"Nu ai acces la aceasta bariera");
    GetPlayerPos(playerid, plocx, plocy, plocz);
    GetPlayerFacingAngle(playerid,ploca);
    if(rb == 1)
    CreateRoadblock(1459,plocx,plocy,plocz,ploca,0);
	else if (rb == 2)
    CreateRoadblock(978,plocx,plocy,plocz+0.6,ploca,0);//2
	else if (rb == 3)
    CreateRoadblock(981,plocx,plocy,plocz+0.9,ploca+180,0);//3
	else if (rb == 4)
    CreateRoadblock(1238,plocx,plocy,plocz+0.2,ploca,0);//4
	else if (rb == 5)
    CreateRoadblock(1425,plocx,plocy,plocz+0.6,ploca,0);//5
	else if (rb == 6)
    CreateRoadblock(3265,plocx,plocy,plocz-0.5,ploca,0);//6
	else if (rb == 7)
    CreateRoadblock(3091,plocx,plocy,plocz+0.5,ploca+180,0);//7
	else if (rb == 8)
    CreateRoadblock(2892, plocx, plocy, plocz-0.1,ploca-90,1);//8
	else if (rb == 9)
    CreateRoadblock(6959,plocx,plocy,plocz,ploca,0);//9
	else if (rb == 10)
    CreateRoadblock(19913,plocx+0.4,plocy+0.4,plocz+2,ploca,0);
 	else if (rb == 11)
    CreateRoadblock(980,plocx,plocy,plocz+2,ploca,0);
    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
    GameTextForPlayer(playerid,"~w~Roadblock ~b~Placed!",3000,1);
	foreach(Player,i)
	{
		if(PlayerInfo[i][pAdmin] > 3 || IsACop(i))
		{
        	format(strings,sizeof(strings),"[HQ]: Officer %s A pus o bariera langa el, over.",PlayerName(playerid));
			SendClientMessage(i, COLOR_LIGHTRED, strings);
		}
	}
	return 1;
}

CMD:buylevel(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pLevel] < 1) return 1;
	new nxtlevel = PlayerInfo[playerid][pLevel]+1;
	new costlevel = nxtlevel*levelcost;//10k for testing purposes
	new expamount = nxtlevel*levelexp;
	if(GetPlayerCash(playerid) < costlevel)
	{
		format(strings, sizeof(strings), "   Nu ai destui bani ($%d) !",costlevel);
		SendClientMessage(playerid, COLOR_GRAD1, strings);
		return 1;
	}
	if (PlayerInfo[playerid][pRespect] < expamount)
	{
		format(strings, sizeof(strings), "   Iti trebuie %d puncte RP, si ai [%d] !",expamount,PlayerInfo[playerid][pRespect]);
		SendClientMessage(playerid, COLOR_GRAD1, strings);
		return 1;
	}
	format(strings, sizeof(strings), "~g~LEVEL UP~n~~w~Acum ai nivelul %d", nxtlevel);
	GameTextForPlayer(playerid, strings, 5000, 1);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	PlayerPlayMusic(playerid);
	GivePlayerCash(playerid,-costlevel);
	PlayerInfo[playerid][pLevel]++;
	Update(playerid, pLevelx);
    PlayerInfo[playerid][pRespect] -= expamount;
	Update(playerid, pRespectx);
	return 1;
}
CMD:setjob(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa,ammount;
	if(sscanf(params,"ud",playa,ammount))  return SendClientMessage(playerid, -1, "Folosire: /setjob [playerid] [jobid]!");
	if(!IsPlayerConnected(playa)) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(ammount < 0) return SendClientMessage(playerid,COLOR_RED,"invalid ammount");
    PlayerInfo[playa][pJob1] = ammount;
	Update(playa, pJob1x);
	format(strings, sizeof(strings), "%s[%d] are acum Jobul 1 ID:%d", PlayerName(playa),playa,ammount);
	SendClientMessage(playerid, COLOR_GRAD1, strings);
	return 1;
}
CMD:setjob2(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa,ammount;
	if(sscanf(params,"ud",playa,ammount))  return SendClientMessage(playerid, -1, "Folosire: /setjob [playerid] [jobid]!");
	if(!IsPlayerConnected(playa)) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(ammount < 0) return SendClientMessage(playerid,COLOR_RED,"invalid ammount");
    PlayerInfo[playa][pJob2] = ammount;
	Update(playa, pJob2x);
	format(strings, sizeof(strings), "%s[%d] are acum Jobul 2 ID:%d", PlayerName(playa),playa,ammount);
	SendClientMessage(playerid, COLOR_GRAD1, strings);
	return 1;
}
CMD:setstat(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new playa,code,ammount;
	if(sscanf(params,"udd",playa,code,ammount))
	{
		SendClientMessage(playerid, COLOR_GRAD2, "{FFFFFF}Folosire: /setstat [playerid/numejucator]{FF1A00} [code] {FFFFFF}[ammount]");
		SendClientMessage(playerid, COLOR_GRAD4, "|1 Level |2 sex |3 varsta |4 bani |5 banca |6 Tel |7 Vip |8 Skin |9 OreJucate |10 Warn |11 FWarn |12 Respect |13 Deaths  ");
		SendClientMessage(playerid, COLOR_GRAD4, "|14 kills |15 drug |16 Mats |17 WDeath |18 Punish |19 Crime |20 Arestari |21 Yeni |22 Leasing |23 Fighting |24 Lotto |25 Job1 ");
		SendClientMessage(playerid, COLOR_GRAD4, "|26 Job2 |27 House |28 Bizz |29 Rent |30 Motel |31 DetS |32 SexS |33 JackS |34 BoxS |35 NewsS |36 DrugsS |37 Slots");
		SendClientMessage(playerid, COLOR_GRAD4, "|38 Car1 |39 Car2 |40 Car3 |41 Car4 |42 Car5 |43 Car6 |44 Car7 |45 Car8");
		return 1;
	}
	if(!IsPlayerConnected(playa)) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(code < 1 || code > 45) return SendClientMessage(playerid,COLOR_RED,"intre 1 si 37");
	if(ammount < 0) return SendClientMessage(playerid,COLOR_RED,"invalid ammount");
  	switch(code)
	{
		case 1:
		{
			PlayerInfo[playa][pLevel] = ammount;
			Update(playa, pLevelx);
			format(strings, sizeof(strings), "%s[%d] are acum Level %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 2:
		{
			PlayerInfo[playa][pSex] = ammount;
			Update(playa, pSexx);
			format(strings, sizeof(strings), "%s[%d] are acum Sex %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 3:
		{
			PlayerInfo[playa][pAge] = ammount;
			Update(playa, pAgex);
			format(strings, sizeof(strings), "%s[%d] are acum Varsta %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 4:
		{
		    SetPlayerCash(playa,ammount);
			format(strings, sizeof(strings), "%s[%d] are acum Bani %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 5:
		{
			PlayerInfo[playa][pAccount] = ammount;
			Update(playa, pAccountx);
			format(strings, sizeof(strings), "%s[%d] are acum Banca %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 6:
		{
			PlayerInfo[playa][pPhoneNumber] = ammount;
			Update(playa, pPhoneNumberx);
			format(strings, sizeof(strings), "%s[%d] are acum Telefon %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 7:
		{
		    if (PlayerInfo[playerid][pAdmin] < 7 && !IsPlayerAdmin(playerid)) return SendClientMessage(playerid, COLOR_RED,"Nu ai acces la aceasta comanda");
			PlayerInfo[playa][pPremiumAccount] = ammount;
			Update(playa, pPremiumAccountx);
			format(strings, sizeof(strings), "%s[%d] are acum VIP %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 8:
		{
			PlayerInfo[playa][pSkin] = ammount;
			Update(playa, pSkinx);
			SetPlayerSkin(playa,PlayerInfo[playa][pSkin]);
			format(strings, sizeof(strings), "%s[%d] are acum Skin %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 9:
		{
			PlayerInfo[playa][pConnectTime] = ammount*3600;
			Update(playa, pConnectTimex);
			format(strings, sizeof(strings), "%s[%d] are acum Ore %d", PlayerName(playa),playa,ammount*3600);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 10:
		{
			PlayerInfo[playa][pWarns] = ammount;
			Update(playa, pWarnsx);
			format(strings, sizeof(strings), "%s[%d] are acum Warnuri %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 11:
		{
			PlayerInfo[playa][pFwarn] = ammount;
			Update(playa, pFwarn);
			format(strings, sizeof(strings), "%s[%d] are acum FWarn %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 12:
		{
			PlayerInfo[playa][pRespect] = ammount;
			Update(playa, pRespectx);
			format(strings, sizeof(strings), "%s[%d] are acum Respect %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 13:
		{
			PlayerInfo[playa][pDeath] = ammount;
			Update(playa, pDeathx);
			format(strings, sizeof(strings), "%s[%d] are acum Death %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 14:
		{
			PlayerInfo[playa][pKill] = ammount;
			Update(playa, pKillx);
			format(strings, sizeof(strings), "%s[%d] are acum Kills %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 15:
		{
			PlayerInfo[playa][pDrugs] = ammount;
			Update(playa, pDrugsx);
			format(strings, sizeof(strings), "%s[%d] are acum Drugs %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 16:
		{
			PlayerInfo[playa][pMaterials] = ammount;
			Update(playa, pMaterialsx);
			format(strings, sizeof(strings), "%s[%d] are acum Mats %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 17:
		{
			PlayerInfo[playa][pWantedDeaths] = ammount;
			Update(playa, pWantedDeathsx);
			format(strings, sizeof(strings), "%s[%d] are acum WantedD %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 18:
		{
			PlayerInfo[playa][pPunish] = ammount;
			Update(playa, pPunishx);
			format(strings, sizeof(strings), "%s[%d] are acum Punish %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 19:
		{
			PlayerInfo[playa][pCrime] = ammount;
			Update(playa, pCrimex);
			format(strings, sizeof(strings), "%s[%d] are acum Level %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 20:
		{
			PlayerInfo[playa][pArrestedTime] = ammount;
			Update(playa, pArrestedTimex);
			format(strings, sizeof(strings), "%s[%d] are acum Arestari %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 21:
		{
			PlayerInfo[playa][pYeni] = ammount;
			Update(playa, pYenix);
			format(strings, sizeof(strings), "%s[%d] are acum Yeni %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 22:
		{
			PlayerInfo[playa][pLeasing] = ammount;
			Update(playa, pLeasingx);
			format(strings, sizeof(strings), "%s[%d] are acum Leasing %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 23:
		{
			PlayerInfo[playa][pFightStyle] = ammount;
			Update(playa, pFightStylex);
			format(strings, sizeof(strings), "%s[%d] are acum FightStyle %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 24:
		{
			PlayerInfo[playa][pLotto] = ammount;
			Update(playa, pLottox);
			format(strings, sizeof(strings), "%s[%d] are acum Lotto %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 25:
		{
			PlayerInfo[playa][pJob1] = ammount;
			Update(playa, pJob1x);
			format(strings, sizeof(strings), "%s[%d] are acum Job1 %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 26:
		{
			PlayerInfo[playa][pJob2] = ammount;
			Update(playa, pJob2x);
			format(strings, sizeof(strings), "%s[%d] are acum Job2 %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 27:
		{
			PlayerInfo[playa][pHouse] = ammount;
			Update(playa, pHousex);
			format(strings, sizeof(strings), "%s[%d] are acum House %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 28:
		{
			PlayerInfo[playa][pBiz] = ammount;
			Update(playa, pBizx);
			format(strings, sizeof(strings), "%s[%d] are acum Bizz %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 29:
		{
			HireCar[playerid] = ammount;
			format(strings, sizeof(strings), "%s[%d] are acum RentKey %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 30:
		{
			PlayerInfo[playa][pHotel] = ammount;
			Update(playa, pHotelx);
			format(strings, sizeof(strings), "%s[%d] are acum Motel %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 31:
		{
			PlayerInfo[playa][pDetSkill] = ammount;
			Update(playa, pDetSkillx);
			format(strings, sizeof(strings), "%s[%d] are acum DetSkill %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 32:
		{
			PlayerInfo[playa][pSexSkill] = ammount;
			Update(playa, pSexSkillx);
			format(strings, sizeof(strings), "%s[%d] are acum SexSkill %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 33:
		{
			PlayerInfo[playa][pJackSkill] = ammount;
			Update(playa, pJackSkillx);
			format(strings, sizeof(strings), "%s[%d] are acum ackSkill %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 34:
		{
			PlayerInfo[playa][pBoxSkill] = ammount;
			Update(playa, pBoxSkillx);
			format(strings, sizeof(strings), "%s[%d] are acum BoxSkill %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 35:
		{
			PlayerInfo[playa][pNewsSkill] = ammount;
			Update(playa, pNewsSkillx);
			format(strings, sizeof(strings), "%s[%d] are acum NewsSkill %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 36:
		{
			PlayerInfo[playa][pDrugsSkill] = ammount;
			Update(playa, pDrugsSkillx);
			format(strings, sizeof(strings), "%s[%d] are acum Detskil %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 37:
		{
			PlayerInfo[playa][pSlots] = ammount;
			Update(playa, pSlotsx);
			format(strings, sizeof(strings), "%s[%d] are acum Slots %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
		case 38:
		{
			PlayerInfo[playa][pCar1] = ammount;
			format(strings, sizeof(strings), "%s[%d] are acum Car1 %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
	    case 39:
		{
			PlayerInfo[playa][pCar2] = ammount;
			format(strings, sizeof(strings), "%s[%d] are acum Car2 %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}

	    case 40:
		{
			PlayerInfo[playa][pCar3] = ammount;
			format(strings, sizeof(strings), "%s[%d] are acum Car3 %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
	    case 41:
		{
			PlayerInfo[playa][pCar4] = ammount;
			format(strings, sizeof(strings), "%s[%d] are acum Car4 %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
	    case 42:
		{
			PlayerInfo[playa][pCar5] = ammount;
			format(strings, sizeof(strings), "%s[%d] are acum Car5 %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
	    case 43:
		{
			PlayerInfo[playa][pCar6] = ammount;
			format(strings, sizeof(strings), "%s[%d] are acum Car6 %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}

	    case 44:
		{
			PlayerInfo[playa][pCar7] = ammount;
			format(strings, sizeof(strings), "%s[%d] are acum Car7 %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
	    case 45:
		{
			PlayerInfo[playa][pCar8] = ammount;
			format(strings, sizeof(strings), "%s[%d] are acum Car8 %d", PlayerName(playa),playa,ammount);
			SendClientMessage(playerid, COLOR_GRAD1, strings);
		}
	}
 	return 1;
}

CMD:fly(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");

	new
	Float:fPX, Float:fPY, Float:fPZ,
    Float:fVX, Float:fVY, Float:fVZ,
	Float:object_x2, Float:object_y2, Float:object_z2;

    GetPlayerCameraPos(playerid, fPX, fPY, fPZ);
    GetPlayerCameraFrontVector(playerid, fVX, fVY, fVZ);

    object_x2 = fPX + floatmul(fVX, 34.0);
    object_y2 = fPY + floatmul(fVY, 34.0);
    object_z2 = fPZ + floatmul(fVZ, 34.0);

  	SetPlayerPos(playerid,object_x2, object_y2, object_z2);
 	return 1;
}

CMD:vw(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	if(z > 540 && !IsPlayerInRangeOfPoint(playerid, 30.0, 2688.3943,-610.2411,-71.6582) && !IsPlayerInRangeOfPoint(playerid, 60.0, 2590.7793,-1510.5199,-48.9141))
	return SendClientMessage(playerid, 0xFF0000C8, "Nu poti da vw intr-un interior!");
	if(z <= 540)
  	SetPlayerInterior(playerid, 0);
 	SetPlayerVirtualWorld(playerid, 0);
	SendClientMessage(playerid, 0xFFFF00C8, "Ti-ai setat vw si interiorul 0");
	return 1;
}

CMD:aduty(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new Float:AX,Float:AY,Float:AZ;
	GetPlayerPos(playerid, AX,AY,AZ);
	SetPlayerPos(playerid, AX,AY,AZ+1);
	if(AdminDuty[playerid]==0)
	{
		DutyLabel[playerid] = Create3DTextLabel("Admin On Duty",0xFF000099,0,0,0,50,-1,1);
		Attach3DTextLabelToPlayer(DutyLabel[playerid], playerid, 0,0,0);
		PlayerSavedSkinPas[playerid] = GetPlayerSkin(playerid);
		SetPlayerSkin(playerid, 292);
   		format(strings, sizeof(strings),"{E5E5E5}[ADMIN]:{FF3300} %s {E5E5E5}este la datorie ca admin {FF3300}%d", PlayerName(playerid),PlayerInfo[playerid][pAdmin]);
		SendClientMessageToAll(0x2FC0D0C8, strings);
		AdminDuty[playerid] = 1;
		SetPlayerColor(playerid, 0x389CD1FF);
		SetPlayerHealth(playerid,99999);
		SetPlayerArmour(playerid,99999);
	}
	else if(AdminDuty[playerid]==1)
	{
		format(strings, sizeof(strings),"{E5E5E5}[ADMIN]: {F70909}%s {E5E5E5}nu mai este la datorie ca admin", PlayerName(playerid));
		SendClientMessageToAll(0x2FC0D0C8, strings);
		AdminDuty[playerid] = 0;
		SetPlayerHealth(playerid,100);
		SetPlayerArmour(playerid,0);
		SetPlayerToTeamColor(playerid);
		SetPlayerSkin(playerid,PlayerSavedSkinPas[playerid]);
		Delete3DTextLabel(DutyLabel[playerid]);
	}
	return 1;
}

CMD:hduty(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new Float:AX,Float:AY,Float:AZ;
	GetPlayerPos(playerid, AX,AY,AZ);
	SetPlayerPos(playerid, AX,AY,AZ+0.6);
	if(TesterDuty[playerid]==0)
	{
		PlayerSavedSkinPas[playerid] = GetPlayerSkin(playerid);
		SetPlayerSkin(playerid, 293);
		format(strings, sizeof(strings),"[HELPER]: %s este acum Helper Duty,/sos pentru ajutor", PlayerName(playerid));
		SendClientMessageToAll(0xa9c4e4FF, strings);
		TesterDuty[playerid] = 1;
		SetPlayerColor(playerid, 0x9ACD32FF);
		SetPlayerHealth(playerid,99999);
		DutyLabel[playerid] = Create3DTextLabel("Helper On Duty",0x62979DC8,0,0,0,50,-1,1);
		Attach3DTextLabelToPlayer(DutyLabel[playerid], playerid, 0,0,0);
	}
	else if(TesterDuty[playerid]==1)
	{
		format(strings, sizeof(strings), "* Helper %s este acum off-duty.", PlayerName(playerid));
		SendClientMessageToAll(0xa9c4e4FF, strings);
		TesterDuty[playerid] = 0;
		SetPlayerHealth(playerid,100);
		SetPlayerArmour(playerid,0);
		SetPlayerToTeamColor(playerid);
		SetPlayerSkin(playerid,PlayerSavedSkinPas[playerid]);
		Delete3DTextLabel(DutyLabel[playerid]);
	}
	return 1;
}
CMD:sbiz(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new x;
	if(sscanf(params,"d",x)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /sbiz [id]");
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerPos(playerid,SBizzInfo[x][sbPosX],SBizzInfo[x][sbPosY],SBizzInfo[x][sbPosZ]);
	GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
	return 1;
}
CMD:biz(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new x;
	if(sscanf(params,"d",x)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /biz [id]");
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerPos(playerid,BizzInfo[x][bEntranceX],BizzInfo[x][bEntranceY],BizzInfo[x][bEntranceZ]);
	GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
	return 1;
}

CMD:house(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new housenum;
	if(sscanf(params,"d",housenum)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /house [housenumber]");
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerPos(playerid,HouseInfo[housenum][hPosX],HouseInfo[housenum][hPosY],HouseInfo[housenum][hPosZ]);
	GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
	return 1;
}


CMD:asellbiz(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new bizumber;
	if(sscanf(params,"d",bizumber)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /asellbiz [biznumber]");

	if(bizumber >= 100)
	{
	   	new bizn = bizumber-100;
		SBizzInfo[bizn][sbLocked] = 0;
		sbUpdate(bizn,sbLockedx);
		SBizzInfo[bizn][sbOwned] = 0;
		sbUpdate(bizn,sbOwnedx);
		format(SBizzInfo[bizn][sbOwner], 128, "The State");
		sbUpdate(bizn,sbOwnerx);
		format(SBizzInfo[bizn][sbCoOwner], 128, "No-one");
		sbUpdate(bizn,sbCoOwnerx);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(strings, sizeof(strings), "~w~Ai vandut ~b~sbizul~w~ cu id %d",bizn);
		GameTextForPlayer(playerid, strings, 10000, 3);
		SBizzInfo[bizn][sbTill] = 0;
		sbUpdate(bizn,sbCoOwnerx);
		UpdateSBizzText(bizn);
		return 1;
	}
	else
	{
		new bouse2 = bizumber;
		BizzInfo[bouse2][bLocked] = 0;
		bUpdate(bouse2,bLockedx);
		BizzInfo[bouse2][bOwned] = 0;
		bUpdate(bouse2,bOwnedx);
		format(BizzInfo[bouse2][bOwner], 128, "The State");
		bUpdate(bouse2,bOwnerx);
		format(BizzInfo[bouse2][bExtortion], 128, "No-one");
		bUpdate(bouse2,bExtortionx);
		BizzInfo[bouse2][bTill] = 0;
		bUpdate(bouse2,bTillx);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(strings, sizeof(strings), "~w~Ai vandut ~r~bizul~w~ cu id %d",bouse2);
		GameTextForPlayer(playerid, strings, 10000, 3);
		UpdateBizzText(bouse2);
		return 1;
	}
}


CMD:asellhouse(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new house = 0;
	if(sscanf(params,"d",house)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /asellhouse [housenumber]");
	if(house == 0) return 1;
    format(strings, sizeof(strings), "Unbought");
	strmid(HouseInfo[house][hName], strings, 0, 100, 100);
	hUpdate(house,hNamex);
	strmid(HouseInfo[house][hOwner], "Unbought", 0, 60, 60);
	hUpdate(house,hOwnerx);
	hUpdate(house, hOwnerx);
	HouseInfo[house][hPrice] = 0;
	hUpdate(house, hPricex);
 	SavePHouse(house);
 	return 1;
}


CMD:houseo(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new housenum;
	if(sscanf(params,"d",housenum)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /houseo [housenumber]");
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerPos(playerid,HouseInfo[housenum][hPosX1],HouseInfo[housenum][hPosY1],HouseInfo[housenum][hPosZ1]);
	GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
	SetPlayerInterior(playerid,HouseInfo[housenum][hInt]);
	return 1;
}

CMD:createatm(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 8) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new proplev,Float:Xx,Float:Yx,Float:Zx,Float:a;
 	if(sscanf(params,"d",proplev)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /createatm <id>");
	if(proplev != 79) return 1;
	GetPlayerPos(playerid, Xx,Yx,Zx);
	GetPlayerFacingAngle(playerid,a);
	++ Total_ATM;
	atmVariables[Total_ATM][ATMPosX] = Xx;
	atmVariables[Total_ATM][ATMPosY] = Yx;
	atmVariables[Total_ATM][ATMPosZ] = Zx-1;
	atmVariables[Total_ATM][ATMPosRot] = a-180;

	mysql_format(handle, query, sizeof(query) ,"INSERT INTO `atms` (`atmId`,`atmPosX`,`atmPosY`,`atmPosZ`,`atmPosRotZ`) VALUES ('%d','%f','%f','%f','%f')",
	Total_ATM,
	atmVariables[Total_ATM][ATMPosX],
	atmVariables[Total_ATM][ATMPosY],
	atmVariables[Total_ATM][ATMPosZ],
	atmVariables[Total_ATM][ATMPosRot]);
	mysql_tquery(handle,query);
	atmVariables[Total_ATM][ObjectId] = CreateDynamicObject(2618, atmVariables[Total_ATM][ATMPosX], atmVariables[Total_ATM][ATMPosY], atmVariables[Total_ATM][ATMPosZ], 0,0, atmVariables[Total_ATM][ATMPosRot], -1, -1, -1, 500.0);
    format(strings, sizeof(strings), "{00BC00}ATM {F6F6F6}%d\n {00BC00}Aici puteti extrage{F6F6F6} banii\n{00BC00}/atmhelp {F6F6F6}pentru ajutor",Total_ATM);
	atmVariables[Total_ATM][TextLabel] = CreateDynamic3DTextLabel(strings, COLOR_YELLOW, atmVariables[Total_ATM][ATMPosX], atmVariables[Total_ATM][ATMPosY], atmVariables[Total_ATM][ATMPosZ], 50.0);
    atmicon[Total_ATM] = CreateDynamicMapIcon(atmVariables[Total_ATM][ATMPosX], atmVariables[Total_ATM][ATMPosY], atmVariables[Total_ATM][ATMPosZ], 38, -1, 0, 0, -1, 250.0);
	return 1;
}
CMD:deleteatm(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 8) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new proplev;
 	if(sscanf(params,"d",proplev)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /createatm <id>");
	if(proplev != 79) return 1;
	for(new x = 0; x < MAX_ATMS; x++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, atmVariables[x][ATMPosX], atmVariables[x][ATMPosY], atmVariables[x][ATMPosZ]))
		{
			-- Total_ATM;
	    	DestroyDynamicObject(atmVariables[x][ObjectId]);
        	DestroyDynamic3DTextLabel(atmVariables[x][TextLabel]);
        	SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Atm distrus");
			mysql_format(handle, query, 500, "DELETE FROM `atms` WHERE `atmId` = %d",x);
			mysql_tquery(handle, query);
			DestroyDynamicMapIcon(atmicon[x]);
     	}
   	}
	return 1;
}


CMD:movesbiz(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new proplev;
	if(sscanf(params,"d",proplev)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /movesbiz [sbizid]");
   	mysql_format(handle, query, sizeof(query), "SELECT * FROM `sbiz` WHERE `sbID` = '%d'", proplev);
	new Cache:result = mysql_query(handle,query);
	if(cache_num_rows() < 0)
	{
		SendClientMessage(playerid,COLOR_RED,"Nu exista acest sbiz");
		cache_delete(result);
		return 1;
	}
    new Float:X,Float:Y,Float:Z;
    GetPlayerPos(playerid,X,Y,Z);
    format(strings,sizeof(strings),"{ee5555}AdmCmd: {a9c4e4}**Sub Afacerea %d a fost mutata in pozitia %f - %f - %f",proplev,X,Y,Z);
	AdminsBroadCast(COLOR_WHITE,strings,1);
 	SBizzInfo[proplev][sbPosX] = X;
	sbUpdate(proplev,sbPosXx);
	SBizzInfo[proplev][sbPosY] = Y;
	sbUpdate(proplev,sbPosYx);
	SBizzInfo[proplev][sbPosZ] = Z;
	sbUpdate(proplev,sbPosYx);
	DestroyDynamicPickup(PickupSbiz[proplev]);
	PickupSbiz[proplev] = CreateDynamicPickup(1274, 23, SBizzInfo[proplev][sbPosX], SBizzInfo[proplev][sbPosY], SBizzInfo[proplev][sbPosZ]);
	DestroyDynamic3DTextLabel(SBizzLabel[proplev]);
	DestroyDynamicMapIcon(sbizzicon[proplev]);
	if(SBizzInfo[proplev][sbOwned] == 0)
	{
	    format(strings,sizeof(strings),"{00BC00}De Vanzare!\nNume: {F6F6F6} %s \n{00BC00}Detinator: {F6F6F6}%s\n{00BC00}Pret: {F6F6F6}$%d\n{00BC00}Level: {F6F6F6}%d\n{00BC00}ID-ul afacerii: {F6F6F6}%d",
		SBizzInfo[proplev][sbName], SBizzInfo[proplev][sbOwner],SBizzInfo[proplev][sbPrice], SBizzInfo[proplev][sbLevelNeeded], proplev);
		UpdateDynamic3DTextLabelText(SBizzLabel[proplev], COLOR_GRAD4, strings);
		sbizzicon[proplev] = CreateDynamicMapIcon(SBizzInfo[proplev][sbPosX], SBizzInfo[proplev][sbPosY], SBizzInfo[proplev][sbPosZ], 52, -1, 0, 0, -1, 250.0);
	}
	if(SBizzInfo[proplev][sbOwned] == 1)
	{
		format(strings, sizeof(strings), "{00BC00}Nume: {F6F6F6}%s\n{00BC00}Detinator: {F6F6F6} %s \n{00BC00}Intrare: {F6F6F6}$%d\n{00BC00}ID-ul afacerii: {F6F6F6}%d",
		SBizzInfo[proplev][sbName], SBizzInfo[proplev][sbOwner],SBizzInfo[proplev][sbEntrace], proplev);
		UpdateDynamic3DTextLabelText(SBizzLabel[proplev], COLOR_GRAD4, strings);
		sbizzicon[proplev] = CreateDynamicMapIcon(SBizzInfo[proplev][sbPosX], SBizzInfo[proplev][sbPosY], SBizzInfo[proplev][sbPosZ], 36, -1, 0, 0, -1, 250.0);
	}
	SBizzLabel[proplev] = CreateDynamic3DTextLabel(strings,COLOR_GRAD4,SBizzInfo[proplev][sbPosX], SBizzInfo[proplev][sbPosY], SBizzInfo[proplev][sbPosZ]+0.2,10.0);
	UpdateSBizzText(proplev);
	return 1;
}

CMD:movebiz(playerid,params[])
{
	new string[188];
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new proplev,Float:X,Float:Y,Float:Z;
	if(sscanf(params,"d",proplev)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /movebiz <bizid>");
    mysql_format(handle, query, sizeof(query), "SELECT * FROM `biz` WHERE `ID` = '%d'", proplev);
	new Cache:result = mysql_query(handle,query);
	if(cache_num_rows() < 0)
	{
		SendClientMessage(playerid,COLOR_RED,"Nu exista acest biz");
		cache_delete(result);
		return 1;
	}
    GetPlayerPos(playerid,X,Y,Z);
	format(string,sizeof(string),"{ee5555}AdmCmd: {a9c4e4}**Sub Afacerea %d a fost mutata in pozitia %f - %f - %f",proplev,X,Y,Z);
 	AdminsBroadCast(COLOR_WHITE,string,1);
  	BizzInfo[proplev][bEntranceX] = X;
    BizzInfo[proplev][bEntranceY] = Y;
    BizzInfo[proplev][bEntranceZ] = Z;
	bUpdate(proplev,bEntranceXx);
	bUpdate(proplev,bEntranceYx);
	bUpdate(proplev,bEntranceZx);
	DestroyDynamicPickup(Pickupbiz[proplev]);
	DestroyDynamicMapIcon(bizzicon[proplev]);
	DestroyDynamic3DTextLabel(BizzLabel[proplev]);
	if(BizzInfo[proplev][bOwned] == 0)
  	{
  		Pickupbiz[proplev] =  CreateDynamicPickup(1274, 1, BizzInfo[proplev][bEntranceX], BizzInfo[proplev][bEntranceY], BizzInfo[proplev][bEntranceZ]);
        format(string, sizeof(string), "{00BC00}De Vanzare!\nNume: {F6F6F6}%s\n{00BC00}Detinator: {F6F6F6}-\n{00BC00}Pret: {F6F6F6}$%d\n{00BC00}Level: {F6F6F6}%d\n{00BC00}ID-ul afacerii: {F6F6F6}%d", BizzInfo[proplev][bMessage], BizzInfo[proplev][bBuyPrice], BizzInfo[proplev][bLevelNeeded], BizzInfo[proplev][bID]);
    	BizzLabel[proplev] = CreateDynamic3DTextLabel(string,COLOR_GRAD4,BizzInfo[proplev][bEntranceX], BizzInfo[proplev][bEntranceY], BizzInfo[proplev][bEntranceZ]+0.2,10.0);
		bizzicon[proplev] = CreateDynamicMapIcon(BizzInfo[proplev][bEntranceX], BizzInfo[proplev][bEntranceY], BizzInfo[proplev][bEntranceZ], BizzInfo[proplev][bIcon], -1, 0, 0, -1, 250.0);
	}
	if(BizzInfo[proplev][bOwned] == 1)
	{
   	    Pickupbiz[proplev] = CreateDynamicPickup(1274, 1, BizzInfo[proplev][bEntranceX], BizzInfo[proplev][bEntranceY], BizzInfo[proplev][bEntranceZ]);
		format(string, sizeof(string), "{00BC00}Nume: {F6F6F6}%s\n{00BC00}Detinator: {F6F6F6}%s\n{00BC00}Extortion: {F6F6F6}%s\n{00BC00}Intrare: {F6F6F6}$%d\n{00BC00}ID-ul afacerii: {F6F6F6}%d", BizzInfo[proplev][bMessage], BizzInfo[proplev][bOwner], BizzInfo[proplev][bExtortion], BizzInfo[proplev][bEntranceCost], BizzInfo[proplev][bID]);
		BizzLabel[proplev] = CreateDynamic3DTextLabel(string,COLOR_GRAD4,BizzInfo[proplev][bEntranceX], BizzInfo[proplev][bEntranceY], BizzInfo[proplev][bEntranceZ]+0.2,10.0);
		bizzicon[proplev] = CreateDynamicMapIcon(BizzInfo[proplev][bEntranceX], BizzInfo[proplev][bEntranceY], BizzInfo[proplev][bEntranceZ], BizzInfo[proplev][bIcon], -1, 0, 0, -1, 250.0);
	}
    UpdateBizzText(proplev);
	return 1;
}

CMD:movehouse(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new proplev,Float:Xx,Float:Yx,Float:Zx;
	if(sscanf(params,"d",proplev)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /movehouse <houseid>");
    mysql_format(handle, query, sizeof(query), "SELECT * FROM `houses` WHERE `hID` = '%d'", proplev);
	new Cache:result = mysql_query(handle,query);
	if(cache_num_rows() < 0)
	{
		SendClientMessage(playerid,COLOR_RED,"Nu exista aceasta casa");
		cache_delete(result);
		return 1;
	}
	else
	{
	    DestroyDynamic3DTextLabel(HouseLabel[proplev]);
		DestroyDynamicPickup(HousePickup[proplev]);
		DestroyDynamicPickup(HousePickup1[proplev]);
		GetPlayerPos(playerid,Xx,Yx,Zx);
		format(strings,sizeof(strings),"{ee5555}[ADMIN]{a9c4e4}** Casa cu id %d a fost mutata in pozitia %f - %f - %f",proplev,Xx,Yx,Zx);
  		AdminsBroadCast(COLOR_WHITE,strings,1);
		HouseInfo[proplev][hPosX] = Xx;
		HouseInfo[proplev][hPosY] = Yx;
		HouseInfo[proplev][hPosZ] = Zx;
		DestroyDynamicMapIcon(HouseIcon[proplev]);
		if(HouseInfo[proplev][hOwned] == 0) 	HouseIcon[proplev] = CreateDynamicMapIcon(HouseInfo[proplev][hPosX], HouseInfo[proplev][hPosY], HouseInfo[proplev][hPosZ], 31, -1, 0, 0, -1, 250.0);
	    else 							HouseIcon[proplev] = CreateDynamicMapIcon(HouseInfo[proplev][hPosX], HouseInfo[proplev][hPosY], HouseInfo[proplev][hPosZ], 32, -1, 0, 0, -1, 250.0);
	    hUpdate(proplev, hPosXx);
		hUpdate(proplev, hPosYx);
		hUpdate(proplev, hPosZx);
		SavePHouse(proplev);
		return 1;
	}
}
CMD:hint(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new ivInt;
	if(sscanf(params,"d", ivInt)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /hint <interior");
	if(ivInt > 14) return SendClientMessage(playerid, COLOR_RED, "Interior gresit, intre 1-14");
    new house = 0;
	for(new i=0; i<MAX_HOUSES; i++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, HouseInfo[i][hPosX], HouseInfo[i][hPosY], HouseInfo[i][hPosZ]))
        house = i;
	}
	if(house == 0) return SendClientMessage(playerid, COLOR_RED, "Nicio casa langa tine...");
	new Float:IntPos[3];
   	new inter;
	if(ivInt == 1)			{IntPos[0] = 2260.1033; IntPos[1] = -1135.8979; IntPos[2] = 1050.6328; 	inter = 10;}
   	else if(ivInt == 2)		{IntPos[0] = 2270.0928; IntPos[1] = -1210.5386; IntPos[2] = 1047.5625; 	inter = 10;}
	else if(ivInt == 3)		{IntPos[0] = 2495.9844; IntPos[1] = -1692.5309; IntPos[2] = 1014.7422; 	inter = 3;}
	else if(ivInt == 4)		{IntPos[0] = 1261.1458; IntPos[1] = -785.4218; 	IntPos[2] = 1091.9063; 	inter = 5;}
	else if(ivInt == 5)		{IntPos[0] = -2158.5891;IntPos[1] = 642.6080; 	IntPos[2] = 1052.3750; 	inter = 1;}
  	else if(ivInt == 6)		{IntPos[0] = 2365.2297; IntPos[1] = -1135.0736; IntPos[2] = 1050.8750; 	inter = 8;}
	else if(ivInt == 7)		{IntPos[0] = 235.3843; 	IntPos[1] = 1187.5225; 	IntPos[2] = 1080.2578; 	inter = 3;}
	else if(ivInt == 8)		{IntPos[0] = 225.756989;IntPos[1] = 1240.000000;IntPos[2] = 1082.149902;inter = 2;}
	else if(ivInt == 9)		{IntPos[0] = 223.1182; 	IntPos[1] = 1287.5566; 	IntPos[2] = 1082.1406; 	inter = 1;}
	else if(ivInt == 10)	{IntPos[0] = 295.0950;	IntPos[1] = 1472.8076; 	IntPos[2] = 1080.2578; 	inter = 15;}
	else if(ivInt == 11)	{IntPos[0] = 327.9580; 	IntPos[1] = 1478.3060; 	IntPos[2] = 1084.4375; 	inter = 15;}
	else if(ivInt == 12)	{IntPos[0] = 385.803986;IntPos[1] = 1471.769897;IntPos[2] = 1080.209961;inter = 15;}
	else if(ivInt == 13)	{IntPos[0] = 2282.9983; IntPos[1] = -1139.7643; IntPos[2] = 1050.8984; 	inter = 11;}
	else if(ivInt == 14)    {IntPos[0] = 1378.4421; IntPos[1] = -820.4313; 	IntPos[2] = 1092.3916; 	inter = 1;}

	HouseInfo[house][hPosX1] = IntPos[0];
	HouseInfo[house][hPosY1] = IntPos[1];
	HouseInfo[house][hPosZ1] = IntPos[2];
	HouseInfo[house][hInt] = inter;
	hUpdate(house, hPosX1x);
	hUpdate(house, hPosY1x);
	hUpdate(house, hPosZ1x);
	hUpdate(house, hIntx);
	DestroyDynamicPickup(HousePickup1[house]);
	SavePHouse(house);
	format(strings, sizeof(strings), "{1580EA}Interior: {FFFFFF}Ai schimbat interiorul in %d!", ivInt);
	SendClientMessage(playerid, COLOR_WHITE, strings);
    HousePickup1[house] = CreateDynamicPickup(1273, 1, HouseInfo[house][hPosX1], HouseInfo[house][hPosY1], HouseInfo[house][hPosZ1], house);
	return 1;
}

CMD:hprice(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new price,house=0;
	if(sscanf(params,"d", price)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /hprice <pret");
	for(new i=0; i<MAX_HOUSES; i++)
	{if(IsPlayerInRangeOfPoint(playerid,3.0, HouseInfo[i][hPosX], HouseInfo[i][hPosY], HouseInfo[i][hPosZ])) house = i;}
	if(house != 0)
	{
		HouseInfo[house][hValue] = price;
		hUpdate(house, hValuex);
		format(strings, sizeof(strings), "{1580EA}CASA: {FFFFFF}Ai schimbat valoarea casei in %d!", price);
		SendClientMessage(playerid, COLOR_WHITE, strings);
		SavePHouse(house);
		return 1;
	}
	else return SendClientMessage(playerid, COLOR_RED, "Nicio casa langa tine...");
}

CMD:hcreate(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_RED, "Nu ai rangul administrativ necesar!");
	new
   	Float:Pos[3],
   	Float:IntPos[3],
	hint,hprice,level;
	if(sscanf(params,"ddd", hint,hprice,level)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /hcreate <hint> <hprice> <level>");
    if(hint == 1)		{IntPos[0] = 2260.1033; IntPos[1] = -1135.8979; IntPos[2] = 1050.6328; 	hint= 10;}
	else if(hint == 2)  {IntPos[0] = 2270.0928; IntPos[1] = -1210.5386; IntPos[2] = 1047.5625; 	hint= 10;}
	else if(hint == 3)  {IntPos[0] = 2495.9844; IntPos[1] = -1692.5309; IntPos[2] = 1014.7422; 	hint= 3; }
	else if(hint == 4)  {IntPos[0] = 1298.7764; IntPos[1] = -796.2800; 	IntPos[2] = 1084.0078; 	hint= 5; }
 	else if(hint == 5)  {IntPos[0] = -2158.5891;IntPos[1] = 642.6080; 	IntPos[2] = 1052.3750; 	hint= 1; }
	else if(hint == 6)	{IntPos[0] = 2365.2297; IntPos[1] = -1135.0736; IntPos[2] = 1050.8750; 	hint= 8; }
	else if(hint == 7)	{IntPos[0] = 235.3843; 	IntPos[1] = 1187.5225; 	IntPos[2] = 1080.2578;	hint= 3; }
	else if(hint == 8)  {IntPos[0] = 225.756989;IntPos[1] = 1240.000000;IntPos[2] = 1082.149902;hint= 2; }
	else if(hint == 9)	{IntPos[0] = 223.1182; 	IntPos[1] = 1287.5566; 	IntPos[2] = 1082.1406;	hint= 1; }
	else if(hint == 10)	{IntPos[0] = 295.0950; 	IntPos[1] = 1472.8076; 	IntPos[2] = 1080.2578; 	hint= 15;}
	else if(hint == 11) {IntPos[0] = 327.9580; 	IntPos[1] = 1478.3060; 	IntPos[2] = 1084.4375; 	hint= 15;}
	else if(hint == 12)	{IntPos[0] = 385.803986;IntPos[1] = 1471.769897;IntPos[2] = 1080.209961;hint= 15;}
	else if(hint == 13)	{IntPos[0] = 2282.9983; IntPos[1] = -1139.7643; IntPos[2] = 1050.8984; 	hint= 11;}
	else if(hint == 14)	{IntPos[0] = 444.646911;IntPos[1] = 508.239044; IntPos[2] = 1001.419494;hint= 12;}
	else if(hint == 15)	{IntPos[0] = 1378.4421; IntPos[1] = -820.4313; 	IntPos[2] = 1092.3916; 	hint= 1; }
	else return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Foloseste interiorul intre 1 si 15");
	if(hprice < 10 || hprice > 100000000) return SendClientMessage(playerid, COLOR_WHITE, "Nu poti pret decat intre 10 si 100.000.000");
	if(level <= 1 || level > 40) return SendClientMessage(playerid, COLOR_WHITE, "Nu poti pune acest level");
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	++ Total_House_Created;
	HouseInfo[Total_House_Created][hPosX] 	= Pos[0];
	HouseInfo[Total_House_Created][hPosY] 	= Pos[1];
	HouseInfo[Total_House_Created][hPosZ] 	= Pos[2];
	HouseInfo[Total_House_Created][hPosX1] 	= IntPos[0];
	HouseInfo[Total_House_Created][hPosY1] 	= IntPos[1];
	HouseInfo[Total_House_Created][hPosZ1] 	= IntPos[2];
	strmid(HouseInfo[Total_House_Created][hName], "Unbought", 0, 255, 255);
	strmid(HouseInfo[Total_House_Created][hOwner], "Unbought", 0, 255, 255);
	strmid(HouseInfo[Total_House_Created][hPassword], "None", 0, 255, 255);
	HouseInfo[Total_House_Created][hValue] = hprice;
	HouseInfo[Total_House_Created][hStorage] = 0;
	HouseInfo[Total_House_Created][hWorld] = GetPlayerVirtualWorld(playerid);
	HouseInfo[Total_House_Created][hInt] = hint;
	HouseInfo[Total_House_Created][hDog] = 0;
	HouseInfo[Total_House_Created][hCamera] = 0;
	HouseInfo[Total_House_Created][hPrivacy] = 0;
	HouseInfo[Total_House_Created][hUpgradeLock] = hint;
	HouseInfo[Total_House_Created][hPrice] = 0;
	HouseInfo[Total_House_Created][hLock] = 1;
	HouseInfo[Total_House_Created][hLevel] = level;
	HouseInfo[Total_House_Created][hOwned] = 0;
	HouseInfo[Total_House_Created][hForSale] = GetPlayerVirtualWorld(playerid);
	mysql_format(handle, query, sizeof(query) ,"INSERT INTO `houses` (`hID`,`PosX`,`PosY`,`PosZ`,`PosX1`,`PosY1`,`PosZ1`,`Name`,`Owner`,`Owned`,`Password`,`Value`,`Storage`,`World`,`Interior`,`Dog`,`Privacy`,`UpgradeLock`,`ForSale`,`Price`,`Lock`,`Level`,`Alarma`,`Camera`,`Caine`) VALUES ('%d','%f','%f','%f','%f','%f','%f','%s','%s','%d','%s','%d','%d','%d','%d','%d','%d','%d','%d','%d','%d','%d','%d','%d','%d')",
	Total_House_Created,
	HouseInfo[Total_House_Created][hPosX],
	HouseInfo[Total_House_Created][hPosY],
	HouseInfo[Total_House_Created][hPosZ],
	HouseInfo[Total_House_Created][hPosX1],
	HouseInfo[Total_House_Created][hPosY1],
	HouseInfo[Total_House_Created][hPosZ1],
	HouseInfo[Total_House_Created][hName],
	HouseInfo[Total_House_Created][hOwner],
	HouseInfo[Total_House_Created][hOwned],
	HouseInfo[Total_House_Created][hPassword],
	HouseInfo[Total_House_Created][hValue],
	HouseInfo[Total_House_Created][hStorage],
	HouseInfo[Total_House_Created][hWorld],
	HouseInfo[Total_House_Created][hInt],
	HouseInfo[Total_House_Created][hDog],
	HouseInfo[Total_House_Created][hPrivacy],
 	HouseInfo[Total_House_Created][hUpgradeLock],
	HouseInfo[Total_House_Created][hForSale],
	HouseInfo[Total_House_Created][hPrice],
	HouseInfo[Total_House_Created][hLock],
	HouseInfo[Total_House_Created][hLevel],
	HouseInfo[Total_House_Created][hProtection1],
	HouseInfo[Total_House_Created][hProtection2],
	HouseInfo[Total_House_Created][hProtection3]);
	mysql_tquery(handle,query);
	new locktext[10];
	if(HouseInfo[Total_House_Created][hLock] == 0) locktext = "Unlocked";
	else if(HouseInfo[Total_House_Created][hLock] != 0) locktext = "Locked";
	if(HouseInfo[Total_House_Created][hWorld] == 0) HouseIcon[Total_House_Created] = CreateDynamicMapIcon(HouseInfo[Total_House_Created][hPosX], HouseInfo[Total_House_Created][hPosY], HouseInfo[Total_House_Created][hPosZ], 31, -1, 0, 0, -1, 250.0);
	HousePickup[Total_House_Created] = CreateDynamicPickup(1273, 1, HouseInfo[Total_House_Created][hPosX], HouseInfo[Total_House_Created][hPosY], HouseInfo[Total_House_Created][hPosZ], HouseInfo[Total_House_Created][hWorld]);
    HousePickup1[Total_House_Created] = CreateDynamicPickup(1273, 1, HouseInfo[Total_House_Created][hPosX1], HouseInfo[Total_House_Created][hPosY1], HouseInfo[Total_House_Created][hPosZ1], Total_House_Created);
	if(HouseInfo[Total_House_Created][hUpgradeLock] != 13) format(strings, sizeof(strings), "{00BC00}De vanzare!\nNume: {F6F6F6}-\n{00BC00}Detinator: {F6F6F6}-\n{00BC00}Pret: {F6F6F6}$%s\n{00BC00}Nivel: {F6F6F6}%d\n{00BC00}ID-ul proprietatii: {F6F6F6}%d", FormatNumber(HouseInfo[Total_House_Created][hValue]), HouseInfo[Total_House_Created][hLevel], Total_House_Created);
	else format(strings, sizeof(strings), "{00BC00}De inchiriat!\nNume: {F6F6F6}-\n{00BC00}Detinator: {F6F6F6}-\n{00BC00}Pret: {F6F6F6}$%s\n{00BC00}Nivel: {F6F6F6}%d\n{00BC00}ID-ul proprietatii: {F6F6F6}%d", FormatNumber(HouseInfo[Total_House_Created][hValue]), HouseInfo[Total_House_Created][hLevel], Total_House_Created);
	HouseLabel[Total_House_Created] = CreateDynamic3DTextLabel(strings, 0xFFFFFFFF, HouseInfo[Total_House_Created][hPosX], HouseInfo[Total_House_Created][hPosY], HouseInfo[Total_House_Created][hPosZ]+0.2, 20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
	SavePHouse(Total_House_Created);
	SendClientMessage(playerid, COLOR_WHITE, "Casa creata!");
	return 1;
}


CMD:sendls(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pHelper] < 1 && PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new playa;
	if(sscanf(params,"u", playa)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /sendls [playerid/numejucator]");
	if(!IsPlayerConnected(playa)) return  SendClientMessage(playerid,COLOR_RED,"Playerul nu este conectat");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	SetPlayerInterior(playa, 0);
    SetPlayerVirtualWorld(playa, 0);
    SetPlayerPos(playa,1529.6,-1691.2,13.3);
	format(strings, sizeof(strings), "%s[%d] l-a trimis pe %s[%d] la Los Santos", PlayerName(playerid),playerid,PlayerName(playa),playa);
	AdminsBroadCast(COLOR_GRAD1, strings,1);
	format(strings, sizeof(strings), "   %s te-a trimis la Los Santos", PlayerName(playerid));
	SendClientMessage(playa, COLOR_GRAD1, strings);

	return 1;
}

CMD:job(playerid,params[])
return cmd_takejob(playerid,params);

CMD:takejob(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsPlayerInRangeOfPoint(playerid, 4, 362.0987,173.7009,1008.3828)) return SendClientMessage(playerid,-1,"Nu esti la JobPoint");
 	ShowPlayerDialog(playerid, 699, DIALOG_STYLE_LIST, "Weapons", "{FFFFFF}Detectiv\nAvocat\nBodyGuard\nParamedic\nSweeper\nBoxeur\nMecanic\nTransportator\nPaper Boy\nPizza boy\nFermier\nTaietor de iarba\nPompier\n Barcagiu\n Lumberjack\nFuel delivery", "select", "cancel");
	return 1;
}


CMD:bm(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsPlayerInRangeOfPoint(playerid, 4.0,287.70,-109.44,1001.52)) return SendClientMessage(playerid,-1,"Nu esti la BlackMarket");
    if(PlayerInfo[playerid][pPremiumAccount] < 1)
	ShowPlayerDialog(playerid, 6969, DIALOG_STYLE_LIST, "Weapons", "{FFFFFF}AK-47\t\t\t5000$\nUzzy\t\t\t5000$\nTec 9\t\t\t5000$\nCombat Shotgun\t5000$\nSawnoff Shotgun\t5000$\nDecodor\t\t250000$\nHealth + Armour\t5000$\nBomba\t\t\t5000$\nSniper\t\t\t5000$\nIlegal Jobs\t\t5", "select", "cancel");
 	else
    ShowPlayerDialog(playerid, 6969, DIALOG_STYLE_LIST, "Weapons", "{FFFFFF}AK-47\t\t\t5000$\nUzzy\t\t\t5000$\nTec 9\t\t\t5000$\nCombat Shotgun\t5000$\nSawnoff Shotgun\t5000$\nDecodor\t\t250000$\nHealth + Armour\t5000$\nBomba\t\t\t5000$\nSniper\t\t\t5000$\nIlegal Jobs\t\t5\nIlegal Jobs 2\t\t5", "select", "cancel");
	return 1;
}

CMD:jpi(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pHelper] < 1 && PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new playa;
	if(sscanf(params,"u", playa)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /jpi [playerid/numejucator]");
	if(!IsPlayerConnected(playa)) return  SendClientMessage(playerid,COLOR_RED,"Playerul nu este conectat");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	SetPlayerInterior(playa, 0);
    SetPlayerVirtualWorld(playa, 0);
    SetPlayerPos(playa, 1488.9806, -1720.4487, 8.5766);
	format(strings, sizeof(strings), "%s[%d] l-a trimis pe %s[%d] la Joburi Ilegale", PlayerName(playerid),playerid,PlayerName(playa),playa);
	AdminsBroadCast(COLOR_GRAD1, strings,1);
	format(strings, sizeof(strings), "   %s te-a trimis la Ilegal JobPoint", PlayerName(playerid));
	SendClientMessage(playa, COLOR_GRAD1, strings);

	return 1;
}


CMD:dealer(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pHelper] < 1 && PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new playa;
	if(sscanf(params,"u", playa)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /dealer [playerid/numejucator]");
	if(!IsPlayerConnected(playa)) return  SendClientMessage(playerid,COLOR_RED,"Playerul nu este conectat");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	SetPlayerInterior(playa, 0);
    SetPlayerVirtualWorld(playa, 0);
    SetPlayerPos(playa, -2038.2167, -98.7986, 35.7962);
	format(strings, sizeof(strings), "%s[%d] l-a trimis pe %s[%d] la dealer", PlayerName(playerid),playerid,PlayerName(playa),playa);
	AdminsBroadCast(COLOR_GRAD1, strings,1);
	format(strings, sizeof(strings), "   %s te-a trimis la dealer", PlayerName(playerid));
	SendClientMessage(playa, COLOR_GRAD1, strings);
	return 1;
}

CMD:primarie(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pHelper] < 1 && PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new playa;
	if(sscanf(params,"u", playa)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /primarie [playerid/numejucator]");
   	if(!IsPlayerConnected(playa)) return  SendClientMessage(playerid,COLOR_RED,"Playerul nu este conectat");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	SetPlayerInterior(playa, 0);
    SetPlayerVirtualWorld(playa, 0);
    SetPlayerPos(playa,1481.1838, -1766.6888, 19.3774);
	format(strings, sizeof(strings), "%s[%d] l-a trimis pe %s[%d] la primarie", PlayerName(playerid),playerid,PlayerName(playa),playa);
	AdminsBroadCast(COLOR_GRAD1, strings,1);
	format(strings, sizeof(strings), "   %s te-a trimis la primarie", PlayerName(playerid));
	SendClientMessage(playa, COLOR_GRAD1, strings);

	return 1;
}
CMD:dmw(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pHelper] < 1 && PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new playa;
	if(sscanf(params,"u", playa)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /dmw [playerid/numejucator]");
	if(!IsPlayerConnected(playa)) return  SendClientMessage(playerid,COLOR_RED,"Playerul nu este conectat");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	SetPlayerInterior(playa, 0);
    SetPlayerVirtualWorld(playa, 0);
    SetPlayerPos(playa,1218.8914, -1812.9503, 17.1455);
	SendClientMessage(playa, COLOR_LIGHTBLUE, "**  Ai fost teleportat la LSPD.");
	format(strings, sizeof(strings), "%s[%d] l-a trimis pe %s[%d] la DMW", PlayerName(playerid),playerid,PlayerName(playa),playa);
	AdminsBroadCast(COLOR_GRAD1, strings,1);
	format(strings, sizeof(strings), "   %s te-a trimis la DMW", PlayerName(playerid));
	SendClientMessage(playa, COLOR_GRAD1, strings);

	return 1;
}
CMD:setint(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new playa,intid;
	if(sscanf(params,"ud", playa,intid)) return	SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /setint [playerid] [intid]");
	if(!IsPlayerConnected(playa)) return  SendClientMessage(playerid,COLOR_RED,"Playerul nu este conectat");
 	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
 	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Player nu este conectat");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	SetPlayerInterior(playa, intid);
	format(strings, sizeof(strings), "%s[%d] i-a setat lui %s[%d] interiorul %d", PlayerName(playerid),playerid,PlayerName(playa),playa, intid);
	AdminsBroadCast(COLOR_GRAD1, strings,1);
	format(strings, sizeof(strings), "   %s ti-a setat interiorul pe %d.", PlayerName(playerid), intid);
	SendClientMessage(playa, COLOR_GRAD1, strings);

 	return 1;
}
CMD:setvw(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new playa,intid;
	if(sscanf(params,"ud", playa,intid)) return	SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /setvw [playerid] [intid]");
	if(!IsPlayerConnected(playa)) return  SendClientMessage(playerid,COLOR_RED,"Playerul nu este conectat");
 	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
 	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Player nu este conectat");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	SetPlayerVirtualWorld(playa, intid);
	format(strings, sizeof(strings), "%s[%d] i-a setat lui %s[%d] virtualworld %d", PlayerName(playerid),playerid,PlayerName(playa),playa, intid);
	AdminsBroadCast(COLOR_GRAD1, strings,1);
	format(strings, sizeof(strings), "   %s ti-a setat virtualworld pe %d.", PlayerName(playerid), intid);
	SendClientMessage(playa, COLOR_GRAD1, strings);

 	return 1;
}
CMD:weatherall(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new dammount;
	if(sscanf(params,"d", dammount)) return	SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /weather [weatherid]");
 	if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	if(dammount < 0||dammount > 45) return SendClientMessage(playerid, COLOR_GREY, "   ID-ul vremii trebuie sa fie cuprins intre 0 si 45 !");
	SetWeather(dammount);
	format(strings, 256, "{FFFFFF}%s[%d] a setat vremea pentru toti la %d.", PlayerName(playerid),playerid,dammount);
	BroadCast(COLOR_YELLOW,strings);

	return 1;
}
CMD:weather(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new dammount;
	if(sscanf(params,"d", dammount)) return	SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /weatherall [weatherid]");
 	if (PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	if(dammount < 0||dammount > 45) return SendClientMessage(playerid, COLOR_GREY, "   ID-ul vremii trebuie sa fie cuprins intre 0 si 45 !");
	SetPlayerWeather(playerid, dammount);
	SendClientMessage(playerid, COLOR_GREY, "   Vremea a fost setata pentru tine !");
	format(strings, 256, "{FFFFFF}%s[%d] a si-a setat vremea %d.", PlayerName(playerid),playerid,dammount);
	AdminsBroadCast(COLOR_YELLOW,strings,1);

	return 1;
}

CMD:changeweather(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	RandomWeather();
	format(strings, 256, "{FFFFFF}%s[%d] a schimbat vremea.", PlayerName(playerid),playerid);
	BroadCast(COLOR_YELLOW,strings);

	return 1;
}


CMD:jetpack(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new playa;
	if(sscanf(params,"u", playa)) return	SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /jetpack [playerid]");
	if(!IsPlayerConnected(playa)) return  SendClientMessage(playerid,COLOR_RED,"Playerul nu este conectat");
 	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
 	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Player nu este conectat");
	if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
    SetPlayerSpecialAction(playa,2);
    format(strings, 256, "{FFFFFF}%s[%d] i-a dat un jetpack lui %s[%d].", PlayerName(playerid),playerid,PlayerName(playa),playa);
	AdminsBroadCast(COLOR_YELLOW,strings,1);
	format(strings, 256, "{FFFFFF}%s[%d] ti-a dat un jetpack", PlayerName(playerid),playerid);
	SendClientMessage(playa,COLOR_YELLOW,strings);

	return 1;
}

CMD:xgoto(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new Float:x,Float:y,Float:z;
	if(sscanf(params,"fff", x,y,z)) return	SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /xgoto X Y Z");
	if (PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	SetPlayerPos(playerid,x,y,z);
	format(strings, 256, "{FFFFFF}%s[%d] a dat goto la coordonatele %f %f %f.", PlayerName(playerid),playerid,x,y,z);

	return 1;
}

CMD:a(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new message[128];
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_WHITE,"/a [message]");
 	if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(message) || FindIP(message))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe a: %s",PlayerName(playerid),playerid, message);
	    AdminsBroadCast(COLOR_RED,strings,7);
	    return 1;
	}
 	format(strings, sizeof(strings),"*%d-Admin %s: %s",PlayerInfo[playerid][pAdmin], PlayerName(playerid), message);
	AdminsBroadCast(0x04FBB0C8,strings,1);
 	format(strings, sizeof(strings),"*%d-Admin %s: %s",PlayerInfo[playerid][pAdmin], PlayerName(playerid), message);

	return 1;
}
CMD:h(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new message[128];
	if(PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_WHITE,"/h [message]");
 	if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(message) || FindIP(message))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe h: %s",PlayerName(playerid),playerid, message);
	    AdminsBroadCast(COLOR_RED,strings,7);
	    return 1;
	}
 	format(strings, sizeof(strings),"*%d-Helper %s: %s",PlayerInfo[playerid][pHelper], PlayerName(playerid), message);
	HelpersBroadCast(0x97F20DC8,strings);
	if(PlayerInfo[playerid][pAdmin]>0)
	AdminsBroadCast(0x97F20DC8,strings,PlayerInfo[playerid][pAdmin]);
	return 1;
}
CMD:ha(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new message[128];
	if(PlayerInfo[playerid][pHelper] < 1 && PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_WHITE,"/ha [message]");
 	if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(message) || FindIP(message))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe ha: %s",PlayerName(playerid),playerid, message);
	    AdminsBroadCast(COLOR_RED,strings,7);
	    return 1;
	}
 	format(strings, sizeof(strings),"*HA %s: %s",PlayerName(playerid), message);
	AdminsBroadCast(COLOR_LIGHTGREEN,strings,1);
	HelpersBroadCast(COLOR_LIGHTGREEN,strings);
	return 1;
}
CMD:respawn(playerid,params[])
return cmd_spawn(playerid,params);

CMD:spawn(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new playa;
	if(sscanf(params, "u", playa)) return SendClientMessage(playerid, COLOR_WHITE,"/spawn [playerid]");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
 	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Player nu este conectat");
	SpawnPlayer(playa);
 	format(strings, sizeof(strings),"*%d-Admin %s: ia dat spawn lui %s",PlayerInfo[playerid][pAdmin], PlayerName(playerid), PlayerName(playa));
	AdminsBroadCast(COLOR_LIGHTRED,strings,1);
	Tele[playa] = 1;
    PlayerPosX[playa] = OldPlayerPosX[playa]+0.2;
	PlayerPosY[playa] = OldPlayerPosY[playa]+0.2;
	PlayerPosZ[playa] = OldPlayerPosZ[playa]+0.2;
	SetTimerEx("UpdatePlayerPos", 2000, false, "i", playa);
	return 1;
}

CMD:lock(playerid, params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    new Float:x,Float:y,Float:z;
    new veh = LastCar[playerid];
	if(OwnedVeh(veh)) return SCM(playerid,COLOR_RED,"Foloseste /vlock");// && strmatch(vInfo[OwnedVeh(veh)][vOwner],  PlayerName(playerid)))
    if(VehLocked[veh] == 1) return GameTextForPlayer(playerid, "~r~Already Locked", 1000, 3);
   	if(veh != INVALID_VEHICLE_ID && veh != 0)
	{
		VehLocked[veh] = 0;
	    GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet,boot,objective);
		SetVehicleParamsEx(veh, engine, lights, alarm, VEHICLE_PARAMS_OFF, bonnet, boot, objective);
	}
    GetVehiclePos(veh,x,y,z);
	if(!IsPlayerInRangeOfPoint(playerid,20,x,y,z)) return SendClientMessage(playerid,COLOR_RED,"Nu esti langa masina!");
	PlayerLocked[playerid] = veh;
	VehLocked[veh] = 1;
    GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet,boot,objective);
	SetVehicleParamsEx(veh, engine, lights, alarm, VEHICLE_PARAMS_ON, bonnet, boot, objective);
   	format(strings, sizeof(strings), "~n~~n~~n~~n~~n~~r~%s %d~n~] Locked ]",GetVehicleName(GetVehicleModel(veh)),veh);
	GameTextForPlayer(playerid, strings, 1000, 3);
	return 1;
}
CMD:vlock(playerid, params[])
{
    for(new car=0; car<MAX_VEHICLES; car++)
    {
    	if(OwnedVeh(car))
    	{
    	    new Float:x,Float:y,Float:z;
		    GetVehiclePos(car,x,y,z);
			if(IsPlayerInRangeOfPoint(playerid,10,x,y,z))
			{
				if(OwnedVeh(car) && strmatch(vInfo[OwnedVeh(car)][vOwner],  PlayerName(playerid)))
  				{
  				    if(vInfo[OwnedVeh(car)][vLocked] == 0)
  				    {
	  					vInfo[OwnedVeh(car)][vLocked] = 1;
	    				vUpdate(OwnedVeh(car), vLockedx);
     					SetVehicleParamsForPlayer(car,playerid,0,0);
					   	format(strings, sizeof(strings), "~n~~n~~n~~n~~n~~r~%s %d~n~] Locked ]",GetVehicleName(GetVehicleModel(car)),car);
						GameTextForPlayer(playerid, strings, 1000, 3);
						return 1;
					}
					else
					{
	  					vInfo[OwnedVeh(car)][vLocked] = 0;
	    				vUpdate(OwnedVeh(car), vLockedx);
     					SetVehicleParamsForPlayer(car,playerid,0,0);
					   	format(strings, sizeof(strings), "~n~~n~~n~~n~~n~~b~%s %d~n~] UnLocked ]",GetVehicleName(GetVehicleModel(car)),car);
						GameTextForPlayer(playerid, strings, 1000, 3);
					}
				}
			}
		}
	}
	return 1;
}
	
CMD:unlock(playerid, params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new veh = LastCar[playerid];
	if(OwnedVeh(veh)) return SCM(playerid,COLOR_RED,"Foloseste /vlock");// && strmatch(vInfo[OwnedVeh(veh)][vOwner],  PlayerName(playerid)))
    if(veh == INVALID_VEHICLE_ID || veh == 0) return SendClientMessage(playerid,COLOR_RED,"Nu ai o masina pe care sa o incui");
	if(VehLocked[veh] == 0) return GameTextForPlayer(playerid, "~b~Already UnLocked", 1000, 3);
	VehLocked[veh] = 0;
   	format(strings, sizeof(strings), "~n~~n~~n~~n~~n~~b~%s %d~n~] UnLocked ]",GetVehicleName(GetVehicleModel(veh)),veh);
	GameTextForPlayer(playerid, strings, 1000, 3);
    GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet,boot,objective);
	SetVehicleParamsEx(veh, engine, lights, alarm, VEHICLE_PARAMS_OFF, bonnet, boot, objective);
	return 1;
}
CMD:numberplate(playerid,params[])
{
 	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
 	if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid,COLOR_RED,"Nu esti autorizat sa folosesti aceasta comanda!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti in masina!");
	new	ivID = GetPlayerVehicleID(playerid),result[128];
	if(sscanf(params, "s[128]",result)) return SendClientMessage(playerid, COLOR_WHITE,"/numberplate [Nume]");

	if(!OwnedVeh(ivID)) SetVehicleNumberPlate(ivID,result);
	else
	{
	    strmid(vInfo[OwnedVeh(ivID)][vPlate], result, 0, 32, 32);
		SetVehicleNumberPlate(ivID, result);
		vUpdate(OwnedVeh(ivID), vPlatex);
	}
	format(strings,sizeof(strings),"Numarul masinii este acum %s",result);
	SCM(playerid,-1,strings);
	return 1;
}

CMD:alock(playerid,params[])
{
 	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
 	if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid,COLOR_RED,"Nu esti autorizat sa folosesti aceasta comanda!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti in masina!");
	new	ivID = GetPlayerVehicleID(playerid);
	if(!OwnedVeh(ivID)) return SendClientMessage(playerid, COLOR_RED, "{FFFFFF}Nu poti seta acest vehicul");
	if(vInfo[OwnedVeh(ivID)][vLocked] == 0)
	{
		vInfo[OwnedVeh(ivID)][vLocked] = 1;
		vUpdate(OwnedVeh(ivID), vLocked);
		SCM(playerid,-1,"Masina incuiata");
	}
	else
	{
		vInfo[OwnedVeh(ivID)][vLocked] = 0;
		vUpdate(OwnedVeh(ivID), vLocked);
		SCM(playerid,-1,"Masina descuiata");
	}
	return 1;
}

CMD:vsetowner(playerid,params[])
{
 	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
 	if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid,COLOR_RED,"Nu esti autorizat sa folosesti aceasta comanda!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti in masina!");
	new	ivID = GetPlayerVehicleID(playerid),result[128];
	if(!OwnedVeh(ivID)) return SendClientMessage(playerid, COLOR_RED, "{FFFFFF}Nu poti seta acest vehicul");

	if(sscanf(params, "s[128]",result)) return SendClientMessage(playerid, COLOR_WHITE,"/vsetowner [Nume]");
	strmid(vInfo[OwnedVeh(ivID)][vOwner], result, 0, 20, 20);
	vUpdate(OwnedVeh(ivID), vOwnerx);
	format(strings,sizeof(strings),"Ownerul masinii este acum %s",result);
	SCM(playerid,-1,strings);
	return 1;
}

CMD:asellcar(playerid,params[])
{
 	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
 	if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid,COLOR_RED,"Nu esti autorizat sa folosesti aceasta comanda!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti in masina!");
	new
	ivID = GetPlayerVehicleID(playerid),
	Float:Pos[4];
	GetVehiclePos(ivID, Pos[0], Pos[1], Pos[2]);
	GetVehicleZAngle(ivID, Pos[3]);
	if(!OwnedVeh(ivID)) return SendClientMessage(playerid, COLOR_RED, "{FFFFFF}Nu poti vinde acest vehicul");
	if(!IsPlayerConnected(ReturnUser(vInfo[OwnedVeh(ivID)][vOwner]))) SendClientMessage(playerid, COLOR_GREY, "deconectat!");
	if(!IsPlayerConnected(ReturnUser(vInfo[OwnedVeh(ivID)][vOwner]))) SendClientMessage(playerid, COLOR_GREY, "conectat!");
	new playa = ReturnUser(vInfo[OwnedVeh(ivID)][vOwner]);
	if(vInfo[OwnedVeh(ivID)][vVariabila] == 0)
	{
	    SendClientMessage(playa,-1,"Masina ti-a fost vanduta de admin");
  		SendClientMessage(playerid, COLOR_GREY, "Ai vandut vehiculul!");
        strmid(vInfo[OwnedVeh(ivID)][vOwner], "The State", 0, 20, 20);
		printf("=- Vehicle id: %i has been destroy by: %s -=", OwnedVeh(ivID), PlayerName(playerid));
  		mysql_format(handle, query, 500, "DELETE FROM `vehicles` WHERE `CarID` = %d",vInfo[OwnedVeh(ivID)][vCariD]);
		mysql_tquery(handle, query);
 	    RemovePlayerFromVehicle(ivID);
	    DestroyVehicle(ivID);
     	return 1;
	}
    return 1;
}

CMD:sellcar(playerid,params[])
{
 	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti in masina!");
	new
	ivID = GetPlayerVehicleID(playerid),
	Float:Pos[4];
	GetVehiclePos(ivID, Pos[0], Pos[1], Pos[2]);
	GetVehicleZAngle(ivID, Pos[3]);
	if(!OwnedVeh(ivID)) return SendClientMessage(playerid, COLOR_RED, "{FFFFFF}Nu poti vinde acest vehicul");
	if(strcmp(vInfo[OwnedVeh(ivID)][vOwner], PlayerName(playerid))) return SendClientMessage(playerid,-1,"Acest vehicul nu iti apartine");
	if(vInfo[OwnedVeh(ivID)][vVariabila] == 0)
	{
	    if(PlayerInfo[playerid][pCar1] == ivID) PlayerInfo[playerid][pCar1] = 0;
		if(PlayerInfo[playerid][pCar2] == ivID) PlayerInfo[playerid][pCar2] = 0;
		if(PlayerInfo[playerid][pCar3] == ivID) PlayerInfo[playerid][pCar3] = 0;
		if(PlayerInfo[playerid][pCar4] == ivID) PlayerInfo[playerid][pCar4] = 0;
		if(PlayerInfo[playerid][pCar5] == ivID) PlayerInfo[playerid][pCar5] = 0;
		if(PlayerInfo[playerid][pCar6] == ivID) PlayerInfo[playerid][pCar6] = 0;
		if(PlayerInfo[playerid][pCar7] == ivID) PlayerInfo[playerid][pCar7] = 0;
		if(PlayerInfo[playerid][pCar8] == ivID) PlayerInfo[playerid][pCar8] = 0;
        strmid(vInfo[OwnedVeh(ivID)][vOwner], "The State", 0, 20, 20);
		new vehpriceee = vInfo[OwnedVeh(ivID)][vPrice]/4 * 3;
		GivePlayerCash(playerid, vehpriceee);
		format(strings, sizeof(strings), "Ai primit pe Vehicul %d $", vehpriceee);
		SendClientMessage(playerid, COLOR_GREY, strings);
  		SendClientMessage(playerid, COLOR_GREY, "Ti-ai vandut vehiculul!");
		printf("=- Vehicle id: %i has been sold and destroy to dealer by: %s -=", OwnedVeh(ivID), PlayerName(playerid));
        PlayerInfo[playerid][pLeasing] = 0;
        Update(playerid,pLeasingx);
		mysql_format(handle, query, 500, "DELETE FROM `vehicles` WHERE `CarID` = %d",vInfo[OwnedVeh(ivID)][vCariD]);
		mysql_tquery(handle, query);
 	    RemovePlayerFromVehicle(ivID);
	 	Total_Player_Vehicles[playerid] --;
	    DestroyVehicle(ivID);
		return 1;
	}
   	if(vInfo[OwnedVeh(ivID)][vVariabila] != 0)
 	{
 	    if(PlayerInfo[playerid][pCar1] == ivID) PlayerInfo[playerid][pCar1] = 0;
		if(PlayerInfo[playerid][pCar2] == ivID) PlayerInfo[playerid][pCar2] = 0;
		if(PlayerInfo[playerid][pCar3] == ivID) PlayerInfo[playerid][pCar3] = 0;
		if(PlayerInfo[playerid][pCar4] == ivID) PlayerInfo[playerid][pCar4] = 0;
		if(PlayerInfo[playerid][pCar5] == ivID) PlayerInfo[playerid][pCar5] = 0;
		if(PlayerInfo[playerid][pCar6] == ivID) PlayerInfo[playerid][pCar6] = 0;
		if(PlayerInfo[playerid][pCar7] == ivID) PlayerInfo[playerid][pCar7] = 0;
		if(PlayerInfo[playerid][pCar8] == ivID) PlayerInfo[playerid][pCar8] = 0;
        strmid(vInfo[OwnedVeh(ivID)][vOwner], "The State", 0, 20, 20);
        new vehpriceee = 100000;
		GivePlayerCash(playerid, vehpriceee);
		format(strings, sizeof(strings), "Ai primit pe Vehicul %d $", vehpriceee);
		SendClientMessage(playerid, COLOR_GREY, strings);
 		SendClientMessage(playerid, COLOR_GREY, "Ti-ai vandut vehiculul!");
 		printf("=- Vehicle id: %i has been sold to dealer by: %s -=", OwnedVeh(ivID), PlayerName(playerid));
 		PlayerInfo[playerid][pLeasing] = 0;
        Update(playerid,pLeasingx);
		mysql_format(handle, query, 500, "DELETE FROM `vehicles` WHERE `CarID` = %d",vInfo[OwnedVeh(ivID)][vCariD]);
		mysql_tquery(handle, query);
 	    RemovePlayerFromVehicle(ivID);
	 	Total_Player_Vehicles[playerid] --;
	    DestroyVehicle(ivID);
	    return 1;
    }
    return 1;
}


CMD:apark(playerid,params[])
{
 	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new ivID = GetPlayerVehicleID(playerid),Float:Pos[4];
	if(OwnedVeh(ivID) == 0 && DealerVeh(ivID) == 0) return SendClientMessage(playerid, COLOR_RED, "{1580EA}Park: {FFFFFF}Nu poti parca acest vehicul!");
	if(OwnedVeh(ivID))
	{
        GetVehiclePos(ivID, Pos[0], Pos[1], Pos[2]);
	    GetVehicleZAngle(ivID, Pos[3]);
        vInfo[OwnedVeh(ivID)][vPosX] = Pos[0];
	    vInfo[OwnedVeh(ivID)][vPosY] = Pos[1];
	    vInfo[OwnedVeh(ivID)][vPosZ] = Pos[2];
	    vInfo[OwnedVeh(ivID)][vPosA] = Pos[3];
	    vUpdate(OwnedVeh(ivID), vPosXx);
	    vUpdate(OwnedVeh(ivID), vPosYx);
	    vUpdate(OwnedVeh(ivID), vPosZx);
	    vUpdate(OwnedVeh(ivID), vPosAx);

        SetVehicleToRespawn(ivID);
		SetVehiclePos(ivID, Pos[0], Pos[1], Pos[2]);
		SetVehicleZAngle(ivID, Pos[3]);
		PutPlayerInVehicle(playerid, ivID, 0);
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
		VehicleEngine[GetPlayerVehicleID(playerid)] = 0;
		SendClientMessage(playerid, COLOR_GREY, "{1580EA}Park: {FFFFFF}Vehiculul a fost parcat.");
		printf("=- Vehicle id: %i has been parked by: %s at: x: %.2f .. y: %.2f .. z: %.2f .. a: %.2f -=", OwnedVeh(ivID), PlayerName(playerid), Pos[0], Pos[1], Pos[2], Pos[3]);
		return 1;
	}
	if(DealerVeh(ivID))
	{
	    if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la masina aceasta");
	    GetVehiclePos(ivID, Pos[0], Pos[1], Pos[2]);
	    GetVehicleZAngle(ivID, Pos[3]);
        dInfo[DealerVeh(ivID)][dPosX] = Pos[0];
	    dInfo[DealerVeh(ivID)][dPosY] = Pos[1];
	    dInfo[DealerVeh(ivID)][dPosZ] = Pos[2];
	    dInfo[DealerVeh(ivID)][dPosA] = Pos[3];
	    dUpdate(DealerVeh(ivID), dPosXx);
	    dUpdate(DealerVeh(ivID), dPosYx);
	    dUpdate(DealerVeh(ivID), dPosZx);
	    dUpdate(DealerVeh(ivID), dPosAx);

        SetVehicleToRespawn(ivID);
		SetVehiclePos(ivID, Pos[0], Pos[1], Pos[2]);
		SetVehicleZAngle(ivID, Pos[3]);
		PutPlayerInVehicle(playerid, ivID, 0);
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
		VehicleEngine[GetPlayerVehicleID(playerid)] = 0;
		SendClientMessage(playerid, COLOR_GREY, "{1580EA}Park: {FFFFFF}Vehiculul a fost parcat.");
		printf("=- VehicleDealer id: %i has been parked by: %s at: x: %.2f .. y: %.2f .. z: %.2f .. a: %.2f -=", DealerVeh(ivID), PlayerName(playerid), Pos[0], Pos[1], Pos[2], Pos[3]);
		return 1;
	}
	return 1;
}

CMD:vpark(playerid,params[])
{
 	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti in masina!");
	new
	ivID = GetPlayerVehicleID(playerid),
	Float:Pos[4];
	GetVehiclePos(ivID, Pos[0], Pos[1], Pos[2]);
	GetVehicleZAngle(ivID, Pos[3]);
	if(OwnedVeh(ivID) == 0) return SendClientMessage(playerid, COLOR_RED, "{FFFFFF}Nu esti intr-un vehicul personal");
	if(strcmp(vInfo[OwnedVeh(ivID)][vOwner], PlayerName(playerid))) return SendClientMessage(playerid,-1,"Acest vehicul nu iti apartine");

	vInfo[OwnedVeh(ivID)][vPosX] = Pos[0];
	vInfo[OwnedVeh(ivID)][vPosY] = Pos[1];
	vInfo[OwnedVeh(ivID)][vPosZ] = Pos[2];
	vInfo[OwnedVeh(ivID)][vPosA] = Pos[3];
	vUpdate(OwnedVeh(ivID), vPosXx);
	vUpdate(OwnedVeh(ivID), vPosYx);
	vUpdate(OwnedVeh(ivID), vPosZx);
	vUpdate(OwnedVeh(ivID), vPosAx);
    SetVehicleToRespawn(ivID);
	SetVehiclePos(ivID, Pos[0], Pos[1], Pos[2]);
	SetVehicleZAngle(ivID, Pos[3]);
	PutPlayerInVehicle(playerid, ivID, 0);
	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
	VehicleEngine[GetPlayerVehicleID(playerid)] = 0;
	SendClientMessage(playerid, COLOR_GREY, "{1580EA}Park: {FFFFFF}Vehiculul tau a fost parcat.");
	printf("=- Vehicle id: %i has been parked by: %s at: x: %.2f .. y: %.2f .. z: %.2f .. a: %.2f -=", OwnedVeh(ivID), PlayerName(playerid), Pos[0], Pos[1], Pos[2], Pos[3]);
	return 1;
}

CMD:vcolor(playerid,params[])
{
 	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti in masina!");
	new color1,color2,ivID = GetPlayerVehicleID(playerid),Float:Pos[4];
	GetVehiclePos(ivID, Pos[0], Pos[1], Pos[2]);
	GetVehicleZAngle(ivID, Pos[3]);
	if(OwnedVeh(ivID) == 0) return SendClientMessage(playerid, COLOR_RED, "{FFFFFF}Nu esti intr-un vehicul personal");
	if(strcmp(vInfo[OwnedVeh(ivID)][vOwner], PlayerName(playerid))) return SendClientMessage(playerid,-1,"Acest vehicul nu iti apartine");
    if(sscanf(params, "dd",color1,color2)) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Folosire:{FFFFFF} /vcolor [Color 1] [Color 2]");
    if(GetPlayerCash(playerid) < 1449) return  SendClientMessage(playerid, COLOR_GREY,"** Nu ai destui bani! (1500).");
    //if(color1>=128 && color1 <= 255 && PlayerInfo[playerid][pPremiumAccount] != 1) return SendClientMessage(playerid, COLOR_WHITE, "** Doar Vipurile pot pune culori hidden!");
    //if(color2>=128 && color2 <= 255 && PlayerInfo[playerid][pPremiumAccount] != 1) return SendClientMessage(playerid, COLOR_WHITE, "** Doar Vipurile pot pune culori hidden!");
 	if(color1 < 0 && color1 >= 126 && color1<=128 && color1 >= 252) return SendClientMessage(playerid, COLOR_GREY, "** ID gresit!");
   	if(color2 < 0 && color2 >= 126 && color2<=128 && color2 >= 252) return SendClientMessage(playerid, COLOR_GREY, "** ID gresit!");
	if(color1 < 0 || color2 < 0) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}VColor: {FFFFFF}Culoare incorecta!");
 	vInfo[OwnedVeh(ivID)][vColor1] = color1;
    vInfo[OwnedVeh(ivID)][vColor2] = color2;
    vUpdate(OwnedVeh(ivID), vColor1x);
	vUpdate(OwnedVeh(ivID), vColor2x);
	GivePlayerCash(playerid, -1500);
	GameTextForPlayer(playerid, "~w~Taxa:~n~~r~-$1500", 5000, 1);
	ChangeVehicleColor(ivID, color1, color2);
 	return 1;
}


CMD:vsellto(playerid,params[])
{
 	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti in masina!");
	new	ivID = GetPlayerVehicleID(playerid),Float:Pos[4],playa,pricecar;
	GetVehiclePos(ivID, Pos[0], Pos[1], Pos[2]);
	GetVehicleZAngle(ivID, Pos[3]);
	if(OwnedVeh(ivID) == 0) return SendClientMessage(playerid, COLOR_RED, "{FFFFFF}Nu poti vinde acest vehicul");
	if(strcmp(vInfo[OwnedVeh(ivID)][vOwner], PlayerName(playerid))) return SendClientMessage(playerid,-1,"Acest vehicul nu iti apartine");
	if(sscanf(params, "ud",playa,pricecar)) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Folosire:{FFFFFF} /vsellto <playerid/PartOfName> <pret>");
 	if(pricecar < 1000) return SendClientMessage(playerid,COLOR_RED,"Nu poti vinde o masina cu pret mai mic de 100$!");

	new car1=0, car2=0, car3=0, carnr = 0;
 	for(new i=0; i<MAX_VEHICLES; i++)
	{
		if(strmatch(vInfo[OwnedVeh(i)][vOwner], PlayerName(playa)))
  		{
			if(car1 == 0)		{	car1 = i;	carnr ++;	continue;	}
			else if(car2 == 0)	{	car2 = i;	carnr ++;	continue;	}
			else if(car3 == 0)	{	car3 = i;	carnr ++;	continue;	}
   		}
	}

	if(PlayerInfo[playa][pCar1] != 0 && PlayerInfo[playa][pCar2] != 0 && PlayerInfo[playa][pCar3] != 0) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Acel jucator are deja 3 vehicule, poate cumpara una de la dealer!");
    if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Vehicul: {FFFFFF}Iti trebuie nivelul 3 pentru a vinde acest vehicul!");
    OwnableCarOffer[playa] = playerid;
	OwnableCarID[playa] = GetPlayerVehicleID(playerid);
	OwnableCarPrice[playa] = pricecar;
	format(strings, sizeof(strings), "{1580EA}Vehicul Personal: {FFFFFF}%s vrea sa iti vanda vehiculul pentru $%d. Scrie /accept pentru a accepta.", PlayerName(playerid), pricecar);
	SendClientMessage(playa, COLOR_WHITE, strings);
	format(strings, sizeof(strings), "{1580EA}Vehicul Personal: {FFFFFF}I-ai oferit lui %s vehiculul tau pentru $%d.", PlayerName(playa), pricecar);
	SendClientMessage(playerid, COLOR_WHITE, strings);
	return 1;
}

CMD:ajutormasina(playerid,params[])
{
 	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    SendClientMessage(playerid, -1, "Pentru masina personala aveti comanda /v");
    SendClientMessage(playerid, -1, "Pentru orice masina aveti comanda /veh");
  	SendClientMessage(playerid, -1, "Pentru frana de mana folositi /handbrake");
	return 1;
}
CMD:vehhelp(playerid,params[])
{
 	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    SendClientMessage(playerid, -1, "Pentru masina personala aveti comanda /v");
    SendClientMessage(playerid, -1, "Pentru orice masina aveti comanda /veh");
  	SendClientMessage(playerid, -1, "Pentru frana de mana folositi /handbrake");
	return 1;
}

CMD:v(playerid,params[])
{
	SendClientMessage(playerid, COLOR_WHITE, "Available names: /vlock /findcar /vpark, /lock, /unlock, /vsell, /vsellto, /vcolor, /vsetcode, /vplate, /vremovemods");
	return 1;
}

CMD:findcar(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    new car1=0, car2=0, car3=0, car4=0, car5=0, car6=0, car7=0, car8=0;
    for(new i=0; i<MAX_VEHICLES; i++)
    {
	    if(strmatch(vInfo[OwnedVeh(i)][vOwner], PlayerName(playerid)))
     	{
	    	if(car1 == 0) { car1 = i; continue; }
	        else if(car2 == 0) { car2 = i; continue; }
	        else if(car3 == 0) { car3 = i; continue; }
	        else if(car4 == 0) { car4 = i; continue; }
	        else if(car5 == 0) { car5 = i; continue; }
	        else if(car6 == 0) { car6 = i; continue; }
	        else if(car7 == 0) { car7 = i; continue; }
	        else if(car8 == 0) { car8 = i; continue; }
      	}
    }
	if(car1 == 0 && car2 == 0 && car3 == 0 && car4 == 0 && car5 == 0 && car6 == 0 && car7 == 0 && car8 == 0)	return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Nu ai un vehicul!");
	new carfinded;
	if(sscanf(params, "d",carfinded)) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Folosire:{FFFFFF} /findcar [1/2/3...]");
	if(carfinded<1||carfinded>8) return 1;
	if(carfinded == 1 && car1 == 0) return 1;
	if(carfinded == 2 && car2 == 0) return 1;
	if(carfinded == 3 && car3 == 0) return 1;
	if(carfinded == 4 && car4 == 0) return 1;
	if(carfinded == 5 && car5 == 0) return 1;
	if(carfinded == 6 && car6 == 0) return 1;
	if(carfinded == 7 && car7 == 0) return 1;
	if(carfinded == 8 && car8 == 0) return 1;
   	new Float:x,Float:y,Float:z;
   	if(carfinded == 1 && car1!=0)
   	GetVehiclePos(car1, x, y, z);
   	if(carfinded == 2 && car2!=0)
   	GetVehiclePos(car2, x, y, z);
   	if(carfinded == 3 && car3!=0)
   	GetVehiclePos(car3, x, y, z);
   	if(carfinded == 4 && car4!=0)
   	GetVehiclePos(car4, x, y, z);
   	if(carfinded == 5 && car5!=0)
   	GetVehiclePos(car5, x, y, z);
   	if(carfinded == 6 && car6!=0)
   	GetVehiclePos(car6, x, y, z);
   	if(carfinded == 7 && car7!=0)
   	GetVehiclePos(car7, x, y, z);
   	if(carfinded == 8 && car8!=0)
   	GetVehiclePos(car8, x, y, z);
	SendClientMessage(playerid,COLOR_WHITE,"{1580EA}Locate: {FFFFFF}Vehiculul tau se afla la punctul rosu de pe harta.");
	SetPlayerCheckpoint(playerid, x, y, z, 6);
   	CP[playerid] = 80;
	return 1;
}

CMD:vremovemods(playerid,params[])
{
 	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti in masina!");
	new ivID = GetPlayerVehicleID(playerid),Float:oX, Float:oY, Float:oZ;
    GetVehiclePos(ivID, oX, oY, oZ);
	GetVehicleZAngle(ivID, oZ);
	if(OwnedVeh(ivID) == 0) return SendClientMessage(playerid, COLOR_RED, "{FFFFFF}Nu esti intr-un vehicul personal");
	if(strcmp(vInfo[OwnedVeh(ivID)][vOwner], PlayerName(playerid))) return SendClientMessage(playerid,-1,"Acest vehicul nu iti apartine");

 	vInfo[OwnedVeh(ivID)][vComponent0] = 0; //Wheels
	vInfo[OwnedVeh(ivID)][vComponent1] = 0;//Nitro
	vInfo[OwnedVeh(ivID)][vComponent2] = 0;//hydraulics
 	vInfo[OwnedVeh(ivID)][vComponent3] = 0;//Spoiler
 	vInfo[OwnedVeh(ivID)][vComponent4] = 0;//Hood
 	vInfo[OwnedVeh(ivID)][vComponent5] = 0;//Roof
	vInfo[OwnedVeh(ivID)][vComponent6] = 0;//SideSkirts
 	vInfo[OwnedVeh(ivID)][vComponent7] = 0;//Lamps
 	vInfo[OwnedVeh(ivID)][vComponent8] = 0;//Exhaust
 	vInfo[OwnedVeh(ivID)][vComponent9] = 0;//Stereo
 	vInfo[OwnedVeh(ivID)][vComponent10] = 0;//FrontBumper
 	vInfo[OwnedVeh(ivID)][vComponent11] = 0;//RearBumper
	vInfo[OwnedVeh(ivID)][vComponent12] = 0;//RightVent
	vInfo[OwnedVeh(ivID)][vComponent13] = 0;//LeftVent
	vInfo[OwnedVeh(ivID)][vPaintJ] = 6;
	vInfo[OwnedVeh(ivID)][vPosX] = oX;
	vInfo[OwnedVeh(ivID)][vPosY] = oY;
	vInfo[OwnedVeh(ivID)][vPosZ] = oZ;
	ChangeVehiclePaintjob(GetPlayerVehicleID(playerid), 6);
	ChangeVehicleColor(GetPlayerVehicleID(playerid), 0, 0);
	SendClientMessage(playerid, COLOR_GREY, "{1580EA}Vehicul Personal: {FFFFFF}Ai scos tot tuningul de pe masina!");
	new	vCreated = OwnedVeh(ivID);   DestroyVehicle(ivID);
	new	NewVeh = CreateVehicle(vInfo[vCreated][vModel], vInfo[vCreated][vPosX], vInfo[vCreated][vPosY], vInfo[vCreated][vPosZ], vInfo[vCreated][vPosA], vInfo[vCreated][vColor1], vInfo[vCreated][vColor2], 500000);
    SetVehicleNumberPlate(NewVeh, vInfo[vCreated][vPlate]);
    ChangeVehiclePaintjob(NewVeh, vInfo[vCreated][vPaintJ]);
    OwnedVeh(NewVeh) = vCreated;
    PutPlayerInVehicle(playerid, NewVeh, 0);
	vUpdate(OwnedVeh(ivID), vPosXx);
    vUpdate(OwnedVeh(ivID), vPosYx);
	vUpdate(OwnedVeh(ivID), vPosZx);
	vUpdate(OwnedVeh(ivID), vPosAx);
	vUpdate(OwnedVeh(ivID), vComponent1x);
    vUpdate(OwnedVeh(ivID), vComponent2x);
    vUpdate(OwnedVeh(ivID), vComponent3x);
    vUpdate(OwnedVeh(ivID), vComponent4x);
    vUpdate(OwnedVeh(ivID), vComponent5x);
	vUpdate(OwnedVeh(ivID), vComponent6x);
    vUpdate(OwnedVeh(ivID), vComponent7x);
	vUpdate(OwnedVeh(ivID), vComponent8x);
	vUpdate(OwnedVeh(ivID), vComponent9x);
	vUpdate(OwnedVeh(ivID), vComponent10x);
	vUpdate(OwnedVeh(ivID), vComponent11x);
	vUpdate(OwnedVeh(ivID), vComponent12x);
	vUpdate(OwnedVeh(ivID), vComponent13x);
	printf("=- Vehicle id: %i has had all its mods removed -=", OwnedVeh(ivID));
	return 1;
}
CMD:vplate(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti in masina!");
	new ivID = GetPlayerVehicleID(playerid);
	if(OwnedVeh(ivID) == 0) return SendClientMessage(playerid, COLOR_RED, "{FFFFFF}Nu esti intr-un vehicul personal");
	if(strcmp(vInfo[OwnedVeh(ivID)][vOwner], PlayerName(playerid))) return SendClientMessage(playerid,-1,"Acest vehicul nu iti apartine");
    if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_RED,"Nu esti sofer");
	if(!IsPlayerInRangeOfPoint(playerid, 5, 1038.4540,-1100.9812,23.5506)){CP[playerid] = 23;SendClientMessage(playerid,-1,"Nu esti la inmatriculari auto, Du-te la CP de pe minimap!");SetPlayerCheckpoint(playerid, 1038.4540,-1100.9812,23.5506, 5.0); return 1;}
    ShowPlayerDialog(playerid,359,DIALOG_STYLE_INPUT,"{ee5555}Car {a9c4e4}Plate","{FFFFFF}Scrie numarul de inmatriculare!","OK","Exit");
	return 1;
}
CMD:vsetcode(playerid,params[])
{
 	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti in masina!");
	new ivID = GetPlayerVehicleID(playerid), ammounts;
	if(!OwnedVeh(ivID)) return SendClientMessage(playerid, COLOR_RED, "{FFFFFF}Nu este o masina personala");
	if(strcmp(vInfo[OwnedVeh(ivID)][vOwner], PlayerName(playerid))) return SendClientMessage(playerid,-1,"Acest vehicul nu iti apartine");
 	if(sscanf(params, "d", ammounts)) return SendClientMessage(playerid, COLOR_WHITE,"Folosire: /vsetcode [codul]");
   	format(strings, sizeof(strings), "Vehciul Cod: %d. A fost schimbat in %d", vInfo[OwnedVeh(ivID)][vCarCode],ammounts);
	SendClientMessage(playerid,COLOR_LIGHTRED, strings);
	vInfo[OwnedVeh(ivID)][vCarCode] = ammounts;
    vUpdate(OwnedVeh(ivID), vCarCodex);
    VehiclePass[ivID] = ammounts;
    format(strings, sizeof(strings), "Scrie /carcode %d pentru a porni motorul", vInfo[OwnedVeh(ivID)][vCarCode]);
	SendClientMessage(playerid,COLOR_LIGHTRED, strings);
	return 1;
}

CMD:destroycar(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new vCarID = GetPlayerVehicleID(playerid);
	if(DealerVeh(vCarID))
	{
	    if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la distrugerea acestei masini");
		mysql_format(handle, query, 500, "DELETE FROM `dealership` WHERE `CarID` = %d",dInfo[DealerVeh(vCarID)][dCariD]);
		mysql_tquery(handle, query);
 	    RemovePlayerFromVehicle(vCarID);
	    DestroyVehicle(vCarID);
		SendClientMessage(playerid, COLOR_GREY, "{FFFFFF}Vehiculul a fost distrus.");
		printf("=- VehicleDealer id: %i %d has been destroyed by %s -=", DealerVeh(vCarID),GetVehicleName(vCarID),PlayerName(playerid));
  	}
  	else if(CreatedCars[vCarID] != 0) //if vehicleid is valid, unnecessary... if 0, DestroyVehicle will fail
	{
 	    new oldcar = GetCreatedId(vCarID);
		DestroyVehicle(vCarID); //it's the vehicleid stored in CreatedCars, not "i".
		CreatedCars[vCarID] = 0; //no more vehicleid stored
		SendClientMessage(playerid, COLOR_GREY, "{FFFFFF}Vehiculul a fost distrus.");
		CreatedCarsOn[oldcar] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
		CreatedCars[oldcar] = 2; //no more vehicleid stored
	}
  	return 1;
}



CMD:vr(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "nu sti in masina");
    SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
    SendClientMessage(playerid, COLOR_GREY, "   Vehicul reparat !");
    RepairVehicle(GetPlayerVehicleID(playerid));
 	return 1;
}
CMD:fixveh(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "nu sti in masina");
    SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
    SendClientMessage(playerid, COLOR_GREY, "   Vehicul reparat !");
    RepairVehicle(GetPlayerVehicleID(playerid));
 	return 1;
}


CMD:rentroom(playerid,params[])
{
	if(gLogged[playerid] == 0) return 1;
   	for(new i = 0; i < MAX_HOUSES; i++)
	{
	    if(IsPlayerInRangeOfPoint(playerid,1.5, HouseInfo[i][hPosX], HouseInfo[i][hPosY], HouseInfo[i][hPosZ]))
		{
			if(HouseInfo[i][hDog] != 1) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Chirie: {FFFFFF}Aceasta proprietate nu are camere de inchiriat!");
  			if(GetPlayerCash(playerid) < HouseInfo[i][hPrivacy]) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Chirie: {FFFFFF}Nu ai bani de chirie!");
	        new house=0;
	        for(new h=0; h<MAX_HOUSES; h++)
	        {
	   			if(strfind(HouseInfo[h][hOwner], PlayerName(playerid), true) != -1)
				{
		            if(house == 0)
					{
						house = h;
						continue;
					}
				}
				if(house > 0) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Chirie: {FFFFFF}Nu poti inchiria o camera in timp ce detii o casa!");
                if(PlayerInfo[playerid][pHouse] != 255) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Chirie: {FFFFFF}Deja inchiriezi o camera! scrie /unrentroom");
		  		SetPlayerInterior(playerid, HouseInfo[i][hInt]);
		        SetPlayerPos(playerid, HouseInfo[i][hPosX1], HouseInfo[i][hPosY1], HouseInfo[i][hPosZ1]);
		        SetPlayerVirtualWorld(playerid, i);
		        EnteredHouse[playerid] = i;
				PlayerInfo[playerid][pHouse] = i;
		        Update(playerid, pHousex);
	 		   	SetTimerEx("freze", 1000, 0, "i", playerid);
				TogglePlayerControllable(playerid, 0);
				GivePlayerCash(playerid,-HouseInfo[i][hPrivacy]);
				GivePlayerCash(ReturnUser(HouseInfo[i][hOwner]),HouseInfo[i][hPrivacy]);
		        format(strings, sizeof(strings), "{1580EA}Chirie: {FFFFFF}Felicitari! Acum inchiriezi o camera in casa lui %s! Scrie /unrentroom pentru a parasi chiria.", HouseInfo[i][hOwner]);
		        SendClientMessage(playerid, COLOR_WHITE, strings);
			}
		}
  	}
	return 1;
}
CMD:unrentroom(playerid,params[])
{
	if(PlayerInfo[playerid][pHouse] == 255) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Chirie: {FFFFFF}Nu esti chirias!");
   	if(strfind(HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], PlayerName(playerid), true) != -1) return 1;
	PlayerInfo[playerid][pHouse] = 255;
    SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Chirie: {FFFFFF}Ai parasit chiria!");
    Update(playerid, pHousex);
    return 1;
}

CMD:opengate(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	cmd_hgate(playerid,params);
	if(IsACop(playerid))
	{
	   	if (IsPlayerInRangeOfPoint(playerid, 15,1589.053344,-1638.123168,14.122960) && IsPlayerInAnyVehicle(playerid))
		{
	  		MoveDynamicObject(pdgate1,1598.3816, -1637.9948, 14.8587, 2.8);
	      	SetTimer("Actiunea", 6000, 0);
	   		format(strings, sizeof(strings), "* %s deschide poarta.", PlayerName(playerid));
	   		ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   			PlayerPlaySound(playerid, 1153, 1589.053344,-1638.123168,14.122960);
			return 1;
		}
		else if (IsPlayerInRangeOfPoint(playerid, 15,1589.053344,-1638.123168,14.122960) && !IsPlayerInAnyVehicle(playerid))
		{
	  		MoveDynamicObject(pdgate3,1580.6570, -1638.1521, 13.9144, 3.8);
	      	SetTimer("Actiunea", 6000, 0);
	   		format(strings, sizeof(strings), "* %s deschide usa.", PlayerName(playerid));
	   		ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   			PlayerPlaySound(playerid, 1153, 1589.053344,-1638.123168,14.122960);
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4,1563.9534, -1680.7114, 16.3089))//inside lspd
		{
			MoveDynamicObject(pdgate133, 1562.76, -1690.9552, 15.0872, 4);
			SetTimer("Actiunea", 4500, 0);
			SendClientMessage(playerid, COLOR_BLUE,"Usa se va inchide in 4 secunde.");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1563.8341, -1680.0018, 16.3347))//inside lspd
		{
			MoveDynamicObject(pdgate16,1564.5737, -1679.9572, 11.8892, 4);
			SetTimerEx("Actiunea", 5000, 0, "i", playerid);
		}
	}
	return 1;
}

CMD:hgate(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(EditingObjectId[playerid] != -1) return 1;
	for(new i=0;i<=Total_HouseGate_Created;i++)
   	{
	 	if(IsPlayerInRangeOfPoint(playerid, 15.0,GateInfo[i][gPosX],GateInfo[i][gPosY],GateInfo[i][gPosZ]))
	  	{
	  	    if(GateInfo[i][gCheie] != -1 && GateInfo[i][gFaction] == -1)
	  	    {
				if(PlayerInfo[playerid][pHouse] == GateInfo[i][gCheie])
				{
      	    		SendClientMessage(playerid,COLOR_BLUE,"Ai deschis poarta pentru 5 secunde");
      	    		EditingObjectId[playerid] = i;
	   	    		MoveDynamicObject(GateInfo[i][gObiect], GateInfo[i][gPosX],GateInfo[i][gPosY],GateInfo[i][gPosZ]-10, 4.0);
        			SetTimerEx("HouseGate", 5000, 0, "i", playerid);
        			return 1;
 				}
 	  		}
 	  		if(GateInfo[i][gFaction] != -1 && GateInfo[i][gCheie] == -1)
	  	    {
	  	        if(PlayerInfo[playerid][pMember] == GateInfo[i][gFaction] || IsACop(playerid))
	  	        {
	  	            SendClientMessage(playerid,COLOR_BLUE,"Ai deschis poarta pentru 5 secunde");
      	    		EditingObjectId[playerid] = i;
	   	    		MoveDynamicObject(GateInfo[i][gObiect], GateInfo[i][gPosX],GateInfo[i][gPosY],GateInfo[i][gPosZ]-10, 4.0);
        			SetTimerEx("HouseGate", 5000, 0, "i", playerid);
        			return 1;
	  	        }
	  	    }
	  	    else return SendClientMessage(playerid,COLOR_RED,"Aceasta poarta este blocata!");
 		}
	}
	return 1;
}
CMD:gdestroy(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 8) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	for(new i=0;i<=Total_HouseGate_Created;i++)
   	{
	 	if(IsPlayerInRangeOfPoint(playerid, 5.0,GateInfo[i][gPosX],GateInfo[i][gPosY],GateInfo[i][gPosZ]))
	 	{
       		mysql_format(handle, query, 500, "DELETE FROM `housegates` WHERE `ID` = %d",GateInfo[i][gID]);
			mysql_tquery(handle, query);
			format(strings,sizeof(strings),"Ai distrus poarta %d",i);
			SendClientMessage(playerid,COLOR_LIGHTBLUE,strings);
		    for(new g=0;g<=Total_HouseGate_Created;g++)
			DestroyDynamicObject(GateInfo[g][gObiect]);
		    Total_HouseGate_Created = 0;
			SetTimer("LoadHouseGate", 500, 0);
			return 1;
		}
	}
	SCM(playerid,-1,"Nu esti langa o poarta");
	return 1;
}

CMD:gangle(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 8) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new Float:Angle,poarta;
    if(sscanf(params, "f", Angle)) return SendClientMessage(playerid, COLOR_WHITE,"/gangle [Flaot:Angle]");
 	for(new i=0;i<=Total_HouseGate_Created;i++)
   	{
	 	if(IsPlayerInRangeOfPoint(playerid, 15.0,GateInfo[i][gPosX],GateInfo[i][gPosY],GateInfo[i][gPosZ]))
	 	{
	 		format(strings,sizeof(strings),"Ai setat unghiul portii %d in %.2f",i,Angle);
        	poarta = i;
        	GateInfo[poarta][gRotZ] = Angle;
 			gUpdate(poarta,gRotZx);
			SendClientMessage(playerid,COLOR_LIGHTBLUE,strings);
			for(new g=0;g<=Total_HouseGate_Created;g++)
			DestroyDynamicObject(GateInfo[g][gObiect]);
	    	Total_HouseGate_Created = 0;
			SetTimer("LoadHouseGate", 500, 0);
			return 1;
		}
	}
	SCM(playerid,-1,"Nu esti langa o poarta");
	return 1;
}

CMD:gedit(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 8) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	for(new i=0;i<=Total_HouseGate_Created;i++)
   	{
	 	if(IsPlayerInRangeOfPoint(playerid, 6.0,GateInfo[i][gPosX],GateInfo[i][gPosY],GateInfo[i][gPosZ]))
	 	{
   			format(strings,sizeof(strings),"Editezi poarta %d",i);
			SendClientMessage(playerid,COLOR_LIGHTBLUE,strings);
   			EditingObjectId[playerid] =  i;
		    EditDynamicObject(playerid, GateInfo[EditingObjectId[playerid]][gObiect]);
		}
	}
	return 1;
}

CMD:gcreate(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 8) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new objectid,factiune,cheie;
	if(sscanf(params, "ddd", objectid,factiune,cheie)) return SendClientMessage(playerid, COLOR_WHITE,"/gcreate [objectid] [factiune] [HouseKey]");
    Total_HouseGate_Created++;


	new Float:x, Float:y, Float:z,Float:a;
	GetPlayerFacingAngle(playerid,a);
	GetPlayerPos(playerid, x, y, z);
    GateInfo[Total_HouseGate_Created][gID] = Total_HouseGate_Created;
    GateInfo[Total_HouseGate_Created][gPosX] = x;
    GateInfo[Total_HouseGate_Created][gPosY] = y;
    GateInfo[Total_HouseGate_Created][gPosZ] = z;
 	GateInfo[Total_HouseGate_Created][gRotX] = 0;
 	GateInfo[Total_HouseGate_Created][gRotY] = 0;
 	GateInfo[Total_HouseGate_Created][gRotZ] = a;
    GateInfo[Total_HouseGate_Created][gFaction] = factiune;
    GateInfo[Total_HouseGate_Created][gCheie] = cheie;
    GateInfo[Total_HouseGate_Created][gModel] = objectid;

    mysql_format(handle, query, 500,  "INSERT INTO `housegates` (`ID`, `PosX`, `PosY`, `PosZ`,`RotX`,`RotY`,`RotZ`,`Faction`,`Cheie`,`Model`) VALUES (%d,%f,%f,%f,%f,%f,%f,%d,%d,%d)",
   	Total_HouseGate_Created,
    GateInfo[Total_HouseGate_Created][gPosX],
    GateInfo[Total_HouseGate_Created][gPosY],
    GateInfo[Total_HouseGate_Created][gPosZ],
 	GateInfo[Total_HouseGate_Created][gRotX],
 	GateInfo[Total_HouseGate_Created][gRotY],
 	GateInfo[Total_HouseGate_Created][gRotZ],
    GateInfo[Total_HouseGate_Created][gFaction],
    GateInfo[Total_HouseGate_Created][gCheie],
    GateInfo[Total_HouseGate_Created][gModel]);
	mysql_tquery(handle, query);

    GateInfo[Total_HouseGate_Created][gObiect] = CreateDynamicObject(GateInfo[Total_HouseGate_Created][gModel],GateInfo[Total_HouseGate_Created][gPosX],GateInfo[Total_HouseGate_Created][gPosY],GateInfo[Total_HouseGate_Created][gPosZ],GateInfo[Total_HouseGate_Created][gRotX],GateInfo[Total_HouseGate_Created][gRotY],GateInfo[Total_HouseGate_Created][gRotZ]);
    EditingObjectId[playerid] =  GateInfo[Total_HouseGate_Created][gID];
    EditDynamicObject(playerid, GateInfo[Total_HouseGate_Created][gObiect]);
	format(strings, sizeof(strings), "%s a creat o poarta pentru Casa %d si Factiunea %d.",PlayerName(playerid),GateInfo[Total_HouseGate_Created][gCheie],GateInfo[Total_HouseGate_Created][gFaction]);
	AdminsBroadCast(-1,strings,5);
    return 1;
}

CMD:vcreate(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new model,color1,color2,price;
	if(sscanf(params, "dddd", model,color1,color2,price)) return SendClientMessage(playerid, COLOR_WHITE,"/vcreate [model] [color1] [color2] [pret]");
	if(color2 < 0 && color2 >= 126 && color2<=128 && color2 >= 255) return SendClientMessage(playerid, COLOR_GREY, "   Culoare invalida.");
	if(model < 400 || model > 611) SendClientMessage(playerid, COLOR_GREY, "   Modelul vehiculului trebuie sa fie cuprins intre 400 si 611 !");

	new Float:x, Float:y, Float:z,Float:a;
	GetPlayerFacingAngle(playerid,a);
	GetPlayerPos(playerid, x, y, z);
	++ Total_Veh_Dealer;
    dInfo[Total_Veh_Dealer][dCariD] = Total_Veh_Dealer;
    dInfo[Total_Veh_Dealer][dModel] = model;
    dInfo[Total_Veh_Dealer][dColor1] = color1;
    dInfo[Total_Veh_Dealer][dColor2] = color2;
    dInfo[Total_Veh_Dealer][dPrice] = price;
 	dInfo[Total_Veh_Dealer][dPosX] = x;
    dInfo[Total_Veh_Dealer][dPosY] = y;
    dInfo[Total_Veh_Dealer][dPosZ] = z;
    dInfo[Total_Veh_Dealer][dPosA] = a;

    mysql_format(handle, query, 500,  "INSERT INTO `dealership` (`CarID`, `Model`, `Color1`, `Color2`,`Price`,`PosX` ,`PosY`,`PosZ`,`PosA`) VALUES (%d,%d,%d,%d,%d,%f,%f,%f,%f)",
	Total_Veh_Dealer,
    dInfo[Total_Veh_Dealer][dModel],
    dInfo[Total_Veh_Dealer][dColor1],
    dInfo[Total_Veh_Dealer][dColor2],
    dInfo[Total_Veh_Dealer][dPrice],
 	dInfo[Total_Veh_Dealer][dPosX],
    dInfo[Total_Veh_Dealer][dPosY],
    dInfo[Total_Veh_Dealer][dPosZ],
    dInfo[Total_Veh_Dealer][dPosA]);
	mysql_tquery(handle, query);

	// CREATING VEHICLE  \====================================================================/
	new	vCarID = CreateVehicle(dInfo[Total_Veh_Dealer][dModel], dInfo[Total_Veh_Dealer][dPosX], dInfo[Total_Veh_Dealer][dPosY], dInfo[Total_Veh_Dealer][dPosZ], dInfo[Total_Veh_Dealer][dPosA], dInfo[Total_Veh_Dealer][dColor1], dInfo[Total_Veh_Dealer][dColor2], 500000);
 	DealerVeh(vCarID) = Total_Veh_Dealer;
 	SetVehicleNumberPlate(vCarID, ""#SERVERNAME" Dealer");
	ChangeVehiclePaintjob(vCarID, 0);
	VehiclePass[OwnedVeh(vCarID)] = 0;
	format(strings, sizeof(strings), "{00FF1A}De Vanzare\n{09DFF7}Marca: %s\n{FFFFFF}Pret: %d\n{00FF66}/BuyCar sau /LeasingBuy",GetVehicleName(model),dInfo[DealerVeh(vCarID)][dPrice]);
	vehiclet[vCarID] = Create3DTextLabel( strings, COLOR_WHITE, 0.0, 0.0, 0.0, 20.0, 0, 1);
	Attach3DTextLabelToVehicle(vehiclet[vCarID] , vCarID, 0.0, 0.0, 0.0);


//	Delete3DTextLabel(vehiclet[vCarID]);
 	return 1;
}

CMD:leasingbuy(playerid,params[])
{

    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(Total_Player_Vehicles[playerid] >= PlayerInfo[playerid][pSlots]) return SendClientMessage(playerid, -1, "{FFFFFF}Ai atins numarul maxim de vehicule pe care le poti detine!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti in masina!");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!DealerVeh(vehicleid)) return SendClientMessage(playerid, COLOR_RED, "Nu este o masina personala!");
    if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Iti trebuie Level 3!");
	if(GetPlayerCash(playerid) < 300000) return SendClientMessage(playerid, COLOR_RED, "{FFFFFF}Nu ai destui bani, ai nevoie de 300.000$");
	if(dInfo[DealerVeh(vehicleid)][dPrice] > 20000000) return SendClientMessage(playerid, COLOR_RED, "{FFFFFF}Pretul minim pentru leasing este de 20.000.000$");
	if(PlayerInfo[playerid][pLeasing] > 9000) return SendClientMessage(playerid, COLOR_RED, "{FFFFFF}Aveti deja o masina in Leasing");
	DestroyVehicle(CreatedCarsOn[TennIdCreated()]); //it's the vehicleid stored in CreatedCars, not "i".
	CreatedCars[CreatedCarsOn[TennIdCreated()]] = 2; //no more vehicleid stored
	new oldcar = TennIdCreated();
    ++ Total_Veh_Created;
    vInfo[Total_Veh_Created][vCariD]    = Total_Veh_Created;
	vInfo[Total_Veh_Created][vModel] 	= GetVehicleModel(vehicleid);
	vInfo[Total_Veh_Created][vColor1] 	= 1;
	vInfo[Total_Veh_Created][vColor2] 	= 1;
	vInfo[Total_Veh_Created][vPrice] 	= dInfo[DealerVeh(vehicleid)][dPrice];
	vInfo[Total_Veh_Created][vPosX] 	= -1589.2644;
	vInfo[Total_Veh_Created][vPosY] 	= 106.9119;
	vInfo[Total_Veh_Created][vPosZ] 	= 7.5495;
	vInfo[Total_Veh_Created][vPosA] 	= 3;
	strmid(vInfo[Total_Veh_Created][vOwner], PlayerName(playerid), 0, 20, 20);
	strmid(vInfo[Total_Veh_Created][vPlate], PlayerName(playerid), 0, 32, 32);
	vInfo[Total_Veh_Created][vPaintJ]   = 6;
	vInfo[Total_Veh_Created][vLocked]   = 0;
	vInfo[Total_Veh_Created][vTowed]   = 0;
	vInfo[Total_Veh_Created][vVodo]   = 0;
	new pass[64];
	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
    vInfo[Total_Veh_Created][vCarCode] = strval(pass);
	vInfo[Total_Veh_Created][vOre]   = 0;
	vInfo[Total_Veh_Created][trWeapon1] =  0;
	vInfo[Total_Veh_Created][trWeapon2] =  0;
	vInfo[Total_Veh_Created][trWeapon3] =  0;
	vInfo[Total_Veh_Created][trWeapon4] =  0;
	vInfo[Total_Veh_Created][trWeapon5] =  0;
	vInfo[Total_Veh_Created][trWeapon6] =  0;
	vInfo[Total_Veh_Created][trAmmo1] = 0;
	vInfo[Total_Veh_Created][trAmmo2] =  0;
	vInfo[Total_Veh_Created][trAmmo3] =  0;
	vInfo[Total_Veh_Created][trAmmo4] =  0;
	vInfo[Total_Veh_Created][trAmmo5] =  0;
	vInfo[Total_Veh_Created][trAmmo6] =  0;
	vInfo[Total_Veh_Created][tMedkit] = 0;
	vInfo[Total_Veh_Created][vVariabila] = 0;
	vInfo[Total_Veh_Created][vComponent0] = 0; //Wheels
	vInfo[Total_Veh_Created][vComponent1] = 0;//Nitro
	vInfo[Total_Veh_Created][vComponent2] = 0;//hydraulics
	vInfo[Total_Veh_Created][vComponent3] = 0;//Spoiler
	vInfo[Total_Veh_Created][vComponent4] = 0;//Hood
	vInfo[Total_Veh_Created][vComponent5] = 0;//Roof
	vInfo[Total_Veh_Created][vComponent6] = 0;//SideSkirts
	vInfo[Total_Veh_Created][vComponent7] = 0;//Lamps
	vInfo[Total_Veh_Created][vComponent8] = 0;//Exhaust
	vInfo[Total_Veh_Created][vComponent9] = 0;//Stereo
	vInfo[Total_Veh_Created][vComponent10] = 0;//FrontBumper
	vInfo[Total_Veh_Created][vComponent11] = 0;//RearBumper
	vInfo[Total_Veh_Created][vComponent12] = 0;//RightVent
	vInfo[Total_Veh_Created][vComponent13] = 0;//LeftVent
	vInfo[Total_Veh_Created][vNeon] = 0;
	vInfo[Total_Veh_Created][vLights] = 0;
		// intre towed si firstaid
	strdel(query, 0, strlen(query));
	strcat(query, "INSERT INTO `vehicles` (`CarID`, `Model`, `Color1`, `Color2`, `Price`, `Owner`, `vPosX`, `vPosY`, `vPosZ`, `vPosA`, `Plate`, `PaintJ`, `Locked`,`Carcode`,`Zile`,`KM`,`Towed`,`Weapon1`,");
	strcat(query, "`Weapon2`,`Weapon3`,`Weapon4`,`Weapon5`,`Weapon6`,`Ammo1`,`Ammo2`,`Ammo3`,`Ammo4`,`Ammo5`,`Ammo6`,`FirstAid`,`Variabila`,`Wheels`,`Nitro`,`hydraulics`,`Spoiler`,`Hood`,`Roof`,`SideSkirts`,`Lamps`,`Exhaust`,`Stereo`,`FrontBumper`,`RearBumper`,`RightVent`,`LeftVent`,`Neon`,`Lights`)");
	strcat(query, " VALUES (%d, %d, %d, %d, %d, '%s', %f, %f, %f, %f, '%s', %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d,%d,%d,%d)");
	mysql_format(handle, query, sizeof(query) ,
	query,
	Total_Veh_Created,
	vInfo[Total_Veh_Created][vModel],
	vInfo[Total_Veh_Created][vColor1],
	vInfo[Total_Veh_Created][vColor2],
	vInfo[Total_Veh_Created][vPrice],
	vInfo[Total_Veh_Created][vOwner],
	vInfo[Total_Veh_Created][vPosX],
	vInfo[Total_Veh_Created][vPosY],
	vInfo[Total_Veh_Created][vPosZ],
	vInfo[Total_Veh_Created][vPosA],
	vInfo[Total_Veh_Created][vPlate],
	vInfo[Total_Veh_Created][vPaintJ],
	vInfo[Total_Veh_Created][vLocked],
	vInfo[Total_Veh_Created][vCarCode],
	vInfo[Total_Veh_Created][vOre],
	vInfo[Total_Veh_Created][vVodo],
	vInfo[Total_Veh_Created][vTowed],
	vInfo[Total_Veh_Created][trWeapon1],
	vInfo[Total_Veh_Created][trWeapon2],
	vInfo[Total_Veh_Created][trWeapon3],
	vInfo[Total_Veh_Created][trWeapon4],
	vInfo[Total_Veh_Created][trWeapon5],
	vInfo[Total_Veh_Created][trWeapon6],
	vInfo[Total_Veh_Created][trAmmo1],
	vInfo[Total_Veh_Created][trAmmo2],
	vInfo[Total_Veh_Created][trAmmo3],
	vInfo[Total_Veh_Created][trAmmo4],
	vInfo[Total_Veh_Created][trAmmo5],
	vInfo[Total_Veh_Created][trAmmo6],
	vInfo[Total_Veh_Created][tMedkit],
	vInfo[Total_Veh_Created][vVariabila],
	vInfo[Total_Veh_Created][vComponent0],
	vInfo[Total_Veh_Created][vComponent1],
	vInfo[Total_Veh_Created][vComponent2],
	vInfo[Total_Veh_Created][vComponent3],
	vInfo[Total_Veh_Created][vComponent4],
	vInfo[Total_Veh_Created][vComponent5],
	vInfo[Total_Veh_Created][vComponent6],
	vInfo[Total_Veh_Created][vComponent7],
	vInfo[Total_Veh_Created][vComponent8],
	vInfo[Total_Veh_Created][vComponent9],
 	vInfo[Total_Veh_Created][vComponent10],
  	vInfo[Total_Veh_Created][vComponent11],
   	vInfo[Total_Veh_Created][vComponent12],
    vInfo[Total_Veh_Created][vComponent13],
    vInfo[Total_Veh_Created][vNeon],
    vInfo[Total_Veh_Created][vLights]);
	mysql_tquery(handle,query);
	VehiclePass[vehicleid] = strval(pass);
	new cCar = CreateVehicle(vInfo[Total_Veh_Created][vModel], vInfo[Total_Veh_Created][vPosX],vInfo[Total_Veh_Created][vPosY],	vInfo[Total_Veh_Created][vPosZ],vInfo[Total_Veh_Created][vPosA], 1,1, 500000);
	SetVehicleNumberPlate(cCar, vInfo[Total_Veh_Created][vPlate]);
	OwnedVeh(cCar) = Total_Veh_Created;
    GivePlayerCash(playerid, -300000);
 	PlayerInfo[playerid][pLeasing] = dInfo[DealerVeh(vehicleid)][dPrice]-300000;
	Update(playerid,pLeasingx);
    vInfo[Total_Veh_Created][vVariabila] = dInfo[DealerVeh(vehicleid)][dPrice]-300000;
    vUpdate(OwnedVeh(vehicleid), vVariabilax);
	SendClientMessage(playerid, -1, "{1580EA}Vehicul Personal: {FFFFFF}Multumim pentru noua achizitie. Pret: 300 000$");
	SendClientMessage(playerid, -1, "{1580EA}Vehicul Personal: {FFFFFF}Vehiculul ti-a fost inchis automat.");
	SendClientMessage(playerid, -1, "{1580EA}Vehicul Personal: {FFFFFF}Aceasta masina este in leasing, vei plati 10 000$ pe ora.");
	format(strings, sizeof(strings),"{1580EA}Vehicul Personal: {FFFFFF}Codul masinii este %d, scrie /carcode %d si apoi /engine sau apsa Tasta N",strval(pass),strval(pass));
    SendClientMessage(playerid, -1, strings);
	TogglePlayerControllable(playerid, true);
//	CheckSlots(playerid);
	if(PlayerInfo[playerid][pCar1] == 0)		PlayerInfo[playerid][pCar1] = cCar;
 	else if(PlayerInfo[playerid][pCar2] == 0)	PlayerInfo[playerid][pCar2] = cCar;
  	else if(PlayerInfo[playerid][pCar3] == 0)	PlayerInfo[playerid][pCar3] = cCar;
  	else if(PlayerInfo[playerid][pCar4] == 0)	PlayerInfo[playerid][pCar4] = cCar;
	else if(PlayerInfo[playerid][pCar5] == 0)	PlayerInfo[playerid][pCar5] = cCar;
	else if(PlayerInfo[playerid][pCar6] == 0)	PlayerInfo[playerid][pCar6] = cCar;
	else if(PlayerInfo[playerid][pCar7] == 0)	PlayerInfo[playerid][pCar7] = cCar;
	else if(PlayerInfo[playerid][pCar8] == 0)	PlayerInfo[playerid][pCar8] = cCar;
 	Total_Player_Vehicles[playerid] ++;
    RemovePlayerFromVehicle(playerid);
	CreatedCarsOn[oldcar] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	printf("=- Vehicle id: %i %d %s has been bought in leasing for %d and created by: %s -=", Total_Veh_Created ,GetVehicleModel(vehicleid),GetVehicleName(GetVehicleModel(vehicleid)),dInfo[DealerVeh(vehicleid)][dPrice], PlayerName(playerid));
	return 1;
}

CMD:buycar(playerid,params[])
{
   	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(Total_Player_Vehicles[playerid] >= PlayerInfo[playerid][pSlots]) return SendClientMessage(playerid, -1, "{FFFFFF}Ai atins numarul maxim de vehicule pe care le poti detine!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "Nu esti in masina!");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!DealerVeh(vehicleid)) return SendClientMessage(playerid, COLOR_RED, "Nu este o masina personala!");
    if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Iti trebuie Level 3!");
	if(GetDealerPrice(vehicleid) > GetPlayerCash(playerid)) return SendClientMessage(playerid, COLOR_RED, "{FFFFFF}Nu ai destui bani");


	DestroyVehicle(CreatedCarsOn[TennIdCreated()]); //it's the vehicleid stored in CreatedCars, not "i".
	CreatedCars[CreatedCarsOn[TennIdCreated()]] = 2; //no more vehicleid stored
	new oldcar = TennIdCreated();
	++ Total_Veh_Created;
    vInfo[Total_Veh_Created][vCariD]    = Total_Veh_Created;
	vInfo[Total_Veh_Created][vModel] 	= GetVehicleModel(vehicleid);
	vInfo[Total_Veh_Created][vColor1] 	= 1;
	vInfo[Total_Veh_Created][vColor2] 	= 1;
	vInfo[Total_Veh_Created][vPrice] 	= dInfo[DealerVeh(vehicleid)][dPrice];
	vInfo[Total_Veh_Created][vPosX] 	= -1589.2644;
	vInfo[Total_Veh_Created][vPosY] 	= 106.9119;
	vInfo[Total_Veh_Created][vPosZ] 	= 7.5495;
	vInfo[Total_Veh_Created][vPosA] 	= 3;
	strmid(vInfo[Total_Veh_Created][vOwner], PlayerName(playerid), 0, 20, 20);
	strmid(vInfo[Total_Veh_Created][vPlate], PlayerName(playerid), 0, 32, 32);
	vInfo[Total_Veh_Created][vPaintJ]   = 6;
	vInfo[Total_Veh_Created][vLocked]   = 1;
	vInfo[Total_Veh_Created][vTowed]   = 0;
	vInfo[Total_Veh_Created][vVodo]   = 0;
	new pass[64];
	format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
    vInfo[Total_Veh_Created][vCarCode] = strval(pass);
	vInfo[Total_Veh_Created][vOre]   = 0;
	vInfo[Total_Veh_Created][trWeapon1] =  0;
	vInfo[Total_Veh_Created][trWeapon2] =  0;
	vInfo[Total_Veh_Created][trWeapon3] =  0;
	vInfo[Total_Veh_Created][trWeapon4] =  0;
	vInfo[Total_Veh_Created][trWeapon5] =  0;
	vInfo[Total_Veh_Created][trWeapon6] =  0;
	vInfo[Total_Veh_Created][trAmmo1] = 0;
	vInfo[Total_Veh_Created][trAmmo2] =  0;
	vInfo[Total_Veh_Created][trAmmo3] =  0;
	vInfo[Total_Veh_Created][trAmmo4] =  0;
	vInfo[Total_Veh_Created][trAmmo5] =  0;
	vInfo[Total_Veh_Created][trAmmo6] =  0;
	vInfo[Total_Veh_Created][tMedkit] = 0;
	vInfo[Total_Veh_Created][vVariabila] = 0;
	vInfo[Total_Veh_Created][vComponent0] = 0; //Wheels
	vInfo[Total_Veh_Created][vComponent1] = 0;//Nitro
	vInfo[Total_Veh_Created][vComponent2] = 0;//hydraulics
	vInfo[Total_Veh_Created][vComponent3] = 0;//Spoiler
	vInfo[Total_Veh_Created][vComponent4] = 0;//Hood
	vInfo[Total_Veh_Created][vComponent5] = 0;//Roof
	vInfo[Total_Veh_Created][vComponent6] = 0;//SideSkirts
	vInfo[Total_Veh_Created][vComponent7] = 0;//Lamps
	vInfo[Total_Veh_Created][vComponent8] = 0;//Exhaust
	vInfo[Total_Veh_Created][vComponent9] = 0;//Stereo
	vInfo[Total_Veh_Created][vComponent10] = 0;//FrontBumper
	vInfo[Total_Veh_Created][vComponent11] = 0;//RearBumper
	vInfo[Total_Veh_Created][vComponent12] = 0;//RightVent
	vInfo[Total_Veh_Created][vComponent13] = 0;//LeftVent
	vInfo[Total_Veh_Created][vNeon] = 0;
	vInfo[Total_Veh_Created][vLights] = 0;
		// intre towed si firstaid
	strdel(query, 0, strlen(query));
	strcat(query, "INSERT INTO `vehicles` (`CarID`, `Model`, `Color1`, `Color2`, `Price`, `Owner`, `vPosX`, `vPosY`, `vPosZ`, `vPosA`, `Plate`, `PaintJ`, `Locked`,`Carcode`,`Zile`,`KM`,`Towed`,`Weapon1`,");
	strcat(query, "`Weapon2`,`Weapon3`,`Weapon4`,`Weapon5`,`Weapon6`,`Ammo1`,`Ammo2`,`Ammo3`,`Ammo4`,`Ammo5`,`Ammo6`,`FirstAid`,`Variabila`,`Wheels`,`Nitro`,`hydraulics`,`Spoiler`,`Hood`,`Roof`,`SideSkirts`,`Lamps`,`Exhaust`,`Stereo`,`FrontBumper`,`RearBumper`,`RightVent`,`LeftVent`,`Neon`,`Lights`)");
	strcat(query, " VALUES (%d, %d, %d, %d, %d, '%s', %f, %f, %f, %f, '%s', %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d,%d,%d,%d)");
	mysql_format(handle, query, sizeof(query),
	query,
	Total_Veh_Created,
	vInfo[Total_Veh_Created][vModel],
	vInfo[Total_Veh_Created][vColor1],
	vInfo[Total_Veh_Created][vColor2],
	vInfo[Total_Veh_Created][vPrice],
	vInfo[Total_Veh_Created][vOwner],
	vInfo[Total_Veh_Created][vPosX],
	vInfo[Total_Veh_Created][vPosY],
	vInfo[Total_Veh_Created][vPosZ],
	vInfo[Total_Veh_Created][vPosA],
	vInfo[Total_Veh_Created][vPlate],
	vInfo[Total_Veh_Created][vPaintJ],
	vInfo[Total_Veh_Created][vLocked],
	vInfo[Total_Veh_Created][vCarCode],
	vInfo[Total_Veh_Created][vOre],
	vInfo[Total_Veh_Created][vVodo],
	vInfo[Total_Veh_Created][vTowed],
	vInfo[Total_Veh_Created][trWeapon1],
	vInfo[Total_Veh_Created][trWeapon2],
	vInfo[Total_Veh_Created][trWeapon3],
	vInfo[Total_Veh_Created][trWeapon4],
	vInfo[Total_Veh_Created][trWeapon5],
	vInfo[Total_Veh_Created][trWeapon6],
	vInfo[Total_Veh_Created][trAmmo1],
	vInfo[Total_Veh_Created][trAmmo2],
	vInfo[Total_Veh_Created][trAmmo3],
	vInfo[Total_Veh_Created][trAmmo4],
	vInfo[Total_Veh_Created][trAmmo5],
	vInfo[Total_Veh_Created][trAmmo6],
	vInfo[Total_Veh_Created][tMedkit],
	vInfo[Total_Veh_Created][vVariabila],
	vInfo[Total_Veh_Created][vComponent0],
	vInfo[Total_Veh_Created][vComponent1],
	vInfo[Total_Veh_Created][vComponent2],
	vInfo[Total_Veh_Created][vComponent3],
	vInfo[Total_Veh_Created][vComponent4],
	vInfo[Total_Veh_Created][vComponent5],
	vInfo[Total_Veh_Created][vComponent6],
	vInfo[Total_Veh_Created][vComponent7],
	vInfo[Total_Veh_Created][vComponent8],
	vInfo[Total_Veh_Created][vComponent9],
 	vInfo[Total_Veh_Created][vComponent10],
  	vInfo[Total_Veh_Created][vComponent11],
   	vInfo[Total_Veh_Created][vComponent12],
    vInfo[Total_Veh_Created][vComponent13],
    vInfo[Total_Veh_Created][vNeon],
    vInfo[Total_Veh_Created][vLights]);
	mysql_tquery(handle,query);
	new cCar = CreateVehicle(vInfo[Total_Veh_Created][vModel], vInfo[Total_Veh_Created][vPosX],vInfo[Total_Veh_Created][vPosY],	vInfo[Total_Veh_Created][vPosZ],vInfo[Total_Veh_Created][vPosA], 1,1, 500000);
	SetVehicleNumberPlate(cCar, vInfo[Total_Veh_Created][vPlate]);
	OwnedVeh(cCar) = Total_Veh_Created;
    GivePlayerCash(playerid, -dInfo[DealerVeh(vehicleid)][dPrice]);
	format(strings, sizeof(strings),"{1580EA}Vehicul Personal: {FFFFFF}Multumim pentru noua achizitie. Pret: %s",dInfo[OwnedVeh(vehicleid)][dPrice]);    SendClientMessage(playerid, -1, strings);
	SendClientMessage(playerid, -1, "{1580EA}Vehicul Personal: {FFFFFF}Vehiculul ti-a fost inchis automat.");
	format(strings, sizeof(strings),"{1580EA}Vehicul Personal: {FFFFFF}Codul masinii e %d. Scrie /carcode [codul], scrie /carcode %d si apoi /engine sau apsa Tasta N",strval(pass),strval(pass));
    SendClientMessage(playerid, -1, strings);
	TogglePlayerControllable(playerid, true);
	VehiclePass[cCar] = strval(pass);
	//CheckSlots(playerid);
	if(PlayerInfo[playerid][pCar1] == 0)		PlayerInfo[playerid][pCar1] = cCar;
 	else if(PlayerInfo[playerid][pCar2] == 0)	PlayerInfo[playerid][pCar2] = cCar;
  	else if(PlayerInfo[playerid][pCar3] == 0)	PlayerInfo[playerid][pCar3] = cCar;
  	else if(PlayerInfo[playerid][pCar4] == 0)	PlayerInfo[playerid][pCar4] = cCar;
	else if(PlayerInfo[playerid][pCar5] == 0)	PlayerInfo[playerid][pCar5] = cCar;
	else if(PlayerInfo[playerid][pCar6] == 0)	PlayerInfo[playerid][pCar6] = cCar;
	else if(PlayerInfo[playerid][pCar7] == 0)	PlayerInfo[playerid][pCar7] = cCar;
	else if(PlayerInfo[playerid][pCar8] == 0)	PlayerInfo[playerid][pCar8] = cCar;
 	Total_Player_Vehicles[playerid] ++;
    RemovePlayerFromVehicle(playerid);
	CreatedCarsOn[oldcar] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	printf("=- Vehicle id: %i %d %s has been bought for %d and created by: %s -=", Total_Veh_Created ,GetVehicleModel(vehicleid),GetVehicleName(GetVehicleModel(vehicleid)),dInfo[DealerVeh(vehicleid)][dPrice], PlayerName(playerid));
	return 1;
}

CMD:report(playerid,params[])
{
   	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new message[128];
	if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_WHITE,"/report [message]");
 	if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(message) || FindIP(message))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe report: %s",PlayerName(playerid),playerid, message);
	    AdminsBroadCast(COLOR_RED,strings,1);
	   	SendClientMessage(playerid, COLOR_LIGHTRED, "{1169EE}["#SERVERNAME"]: {FFFFFF}Raportul tau a fost trimis administratorilor!");
	    HackLog(strings);
	    SCM(playerid,-1,strings);
	    return 1;
	}
	strmid(reports[playerid], message, 0, strlen(message), 255);
	if(ReportTime[playerid] != 0) return SendClientMessage(playerid,COLOR_RED,"Trebuie sa astepti 1 minut inainte de a da iar report");
	format(strings, sizeof(strings), "[REPORT] %s[%d]: %s{FF1A00}/ar sau /tr", PlayerName(playerid),playerid, message);
	AdminsBroadCast(COLOR_LIGHTBLUE, strings, 1);
	SendClientMessage(playerid, COLOR_LIGHTRED, "{1169EE}["#SERVERNAME"]: {FFFFFF}Raportul tau a fost trimis administratorilor!");
	ReportTime[playerid] = 1;
	SetTimerEx("ReportTimer", 60000, false, "i", playerid);
	return 1;
}
CMD:soss(playerid,params[])
{
   	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pHelper] < 1 && PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	foreach(Player,i)
	{
		if(SosTime[i] != 0)
 		{
			format(strings, sizeof(strings), "SOS %s[%d]: %s",PlayerName(i), i,soss[i]);
    		SendClientMessage(playerid,COLOR_YELLOW,strings);
   		}
 	}
	return 1;
}
CMD:reports(playerid,params[])
{
   	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	foreach(Player,i)
	{
		if(ReportTime[i] != 0)
 		{
			format(strings, sizeof(strings), "SOS %s[%d]: %s",PlayerName(i), i,reports[i]);
    		SendClientMessage(playerid,COLOR_YELLOW,strings);
   		}
 	}
	return 1;
}
CMD:sos(playerid,params[])
{
   	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new message[128];
	if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_WHITE,"/sos [message]");
	if(SosTime[playerid] != 0) return SendClientMessage(playerid,COLOR_RED,"Trebuie sa astepti 1 minut inainte de a da iar report");
 	if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(message) || FindIP(message))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe sos: %s",PlayerName(playerid),playerid, message);
	    AdminsBroadCast(COLOR_RED,strings,1);
	   	SendClientMessage(playerid, COLOR_LIGHTRED, "{1169EE}["#SERVERNAME"]: {FFFFFF}Sos-ul tau a fost trimis administratorilor!");
	    HackLog(strings);
	    return 1;
	}
	strmid(soss[playerid], message, 0, strlen(message), 255);
	SendClientMessage(playerid, COLOR_LIGHTRED, "{1169EE}["#SERVERNAME"]: {FFFFFF}S.O.S-ul tau a fost trimis administratorilor!");
	format(strings, sizeof(strings), "SOS de la %s(ID:%d): %s,{FF1A00}/as sau /ts",  PlayerName(playerid),playerid, message);
	HelpersBroadCast(COLOR_LIGHTBLUE, strings);
	SendClientMessage(playerid, COLOR_LIGHTRED, "{1169EE}["#SERVERNAME"]: {FFFFFF}Sos-ul tau a fost trimis administratorilor!");
	SosTime[playerid] = 1;
	SetTimerEx("SosTimer", 60000, false, "i", playerid);
	return 1;
}
CMD:as(playerid,params[])// as
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new playa;
	if(sscanf(params, "u", playa)) return SendClientMessage(playerid, COLOR_WHITE,"{00FF00}/acceptreport {FFFFFF}[playerid/PartOfName]");
    if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    if(SosTime[playa] == 0) return SendClientMessage(playerid, COLOR_RED, "Playerul nu are nevoie de ajutor");
	format(strings, sizeof(strings), "{09DFF7}%s(%d) a acceptat Sos-ul lui %s(%d)",  PlayerName(playerid),playerid,PlayerName(playa),playa);
	AdminsBroadCast(COLOR_LIGHTBLUE, strings, 1);
	SosTime[playa] = 0;
	format(strings, sizeof(strings), "~b~-"#SERVERNAME"-~n~~g~Helper ~w~ %s ~g~s-a oferit sa ~n~ raspunda la Sos-ul tau",PlayerName(playerid));
	GameTextForPlayer(playa, strings, 5500,3);
	return 1;
}

CMD:ts(playerid,params[])// ts
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pHelper] < 3) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new playa;
	if(sscanf(params, "u", playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /trashreport [playerid/numejucator]");
    if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    if(SosTime[playa] == 0) return SendClientMessage(playerid, COLOR_RED, "Playerul nu are nevoie de ajutor");
	format(strings, sizeof(strings), "{555555}%s(%d) a sters Sos-ul lui %s(%d)", PlayerName(playerid),playerid,PlayerName(playa),playa);
	AdminsBroadCast(COLOR_LIGHTBLUE, strings, 1);
	SosTime[playa] = 0;
	format(strings, sizeof(strings), "~r~-"#SERVERNAME"-~n~~g~Helper ~w~ %s ~r~~n~ti-a sters Sos-ul",PlayerName(playerid));
	GameTextForPlayer(playa, strings, 5500,3);
	return 1;
}
CMD:acceptsos(playerid,params[])// as
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new playa;
	if(sscanf(params, "u", playa)) return SendClientMessage(playerid, COLOR_WHITE,"{00FF00}/acceptreport {FFFFFF}[playerid/PartOfName]");
    if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    if(SosTime[playa] == 0) return SendClientMessage(playerid, COLOR_RED, "Playerul nu are nevoie de ajutor");
	format(strings, sizeof(strings), "{09DFF7}%s(%d) a acceptat Sos-ul lui %s(%d)",  PlayerName(playerid),playerid,PlayerName(playa),playa);
	AdminsBroadCast(COLOR_LIGHTBLUE, strings, 1);
	SosTime[playa] = 0;
	format(strings, sizeof(strings), "~b~-"#SERVERNAME"-~n~~g~Helper ~w~ %s ~g~s-a oferit sa ~n~ raspunda la Sos-ul tau",PlayerName(playerid));
	GameTextForPlayer(playa, strings, 5500,3);
	return 1;
}

CMD:trashsos(playerid,params[])// ts
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new playa;
	if(sscanf(params, "u", playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /trashreport [playerid/numejucator]");
    if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    if(SosTime[playa] == 0) return SendClientMessage(playerid, COLOR_RED, "Playerul nu are nevoie de ajutor");
	format(strings, sizeof(strings), "{555555}%s(%d) a sters Sos-ul lui %s(%d)", PlayerName(playerid),playerid,PlayerName(playa),playa);
	AdminsBroadCast(COLOR_LIGHTBLUE, strings, 1);
	SosTime[playa] = 0;
	format(strings, sizeof(strings), "~r~-"#SERVERNAME"-~n~~g~Helper ~w~ %s ~r~~n~ti-a sters Sos-ul",PlayerName(playerid));
	GameTextForPlayer(playa, strings, 5500,3);
	return 1;
}
CMD:ar(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new playa;
	if(sscanf(params, "u", playa)) return SendClientMessage(playerid, COLOR_WHITE,"/acceptreport [playerid/PartOfName]");
    if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    if(ReportTime[playa] == 0) return SendClientMessage(playerid, COLOR_RED, "Playerul nu are nevoie de ajutor");
    format(strings, sizeof(strings), "{5BD926}%s(%d) a acceptat raportul lui %s(%d)", PlayerName(playerid),playerid,PlayerName(playa),playa);
	AdminsBroadCast(COLOR_LIGHTBLUE, strings, 1);
	ReportTime[playa] = 0;
	format(strings, sizeof(strings), "~b~-"#SERVERNAME"-~n~~g~Admin ~w~ %s ~g~s-a oferit sa ~n~ raspunda la reportul tau",PlayerName(playerid));
	GameTextForPlayer(playa, strings, 5500,3);
	return 1;
}
CMD:acceptreport(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new playa;
	if(sscanf(params, "u", playa)) return SendClientMessage(playerid, COLOR_WHITE,"{00FF00}/acceptreport {FFFFFF}[playerid/PartOfName]");
    if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    if(ReportTime[playa] == 0) return SendClientMessage(playerid, COLOR_RED, "Playerul nu are nevoie de ajutor");
    format(strings, sizeof(strings), "{5BD926}%s(%d) a acceptat raportul lui %s(%d)", PlayerName(playerid),playerid,PlayerName(playa),playa);
	AdminsBroadCast(COLOR_LIGHTBLUE, strings, 1);
	ReportTime[playa] = 0;
	format(strings, sizeof(strings), "~b~-"#SERVERNAME"-~n~~g~Admin ~w~ %s ~g~s-a oferit sa ~n~ raspunda la reportul tau",PlayerName(playerid));
	GameTextForPlayer(playa, strings, 5500,3);
	return 1;
}

CMD:tr(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new playa;
	if(sscanf(params, "u", playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /trashreport [playerid/numejucator]");
    if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    if(ReportTime[playa] == 0) return SendClientMessage(playerid, COLOR_RED, "Playerul nu are nevoie de ajutor");
    format(strings, sizeof(strings), "{555555}%s(%d) a sters raportul lui %s(%d)", PlayerName(playerid),playerid,PlayerName(playa),playa);
	AdminsBroadCast(COLOR_LIGHTBLUE, strings, 1);
	ReportTime[playa] = 0;
	format(strings, sizeof(strings), "~r~-"#SERVERNAME"-~n~~g~Admin %s ~r~~n~ti-a sters reportul",PlayerName(playerid));
	GameTextForPlayer(playa, strings, 5500,3);
	return 1;
}
CMD:trashreport(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu ai acces la aceasta comanda");
	new playa;
	if(sscanf(params, "u", playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /trashreport [playerid/numejucator]");
    if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
    if(ReportTime[playa] == 0) return SendClientMessage(playerid, COLOR_RED, "Playerul nu are nevoie de ajutor");
    format(strings, sizeof(strings), "{555555}%s(%d) a sters raportul lui %s(%d)", PlayerName(playerid),playerid,PlayerName(playa),playa);
	AdminsBroadCast(COLOR_LIGHTBLUE, strings, 1);
	ReportTime[playa] = 0;
	format(strings, sizeof(strings), "~r~-"#SERVERNAME"-~n~~g~Admin %s ~r~~n~ti-a sters reportul",PlayerName(playerid));
	GameTextForPlayer(playa, strings, 5500,3);
	return 1;
}

CMD:moves(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid,COLOR_RED,"Nu ai rangul administrativ necesar");
	SendClientMessage(playerid, COLOR_NICERED, "To Move Up      Type /up    || To Move Down Type /down");
    SendClientMessage(playerid, COLOR_NICERED, "To Move Right   Type /right || To move Left type /left");
    SendClientMessage(playerid, COLOR_NICERED, "To Move Forward Type /forw  || To move Back type /back");
	return 1;
}

CMD:downn(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid,COLOR_RED,"Nu ai rangul administrativ necesar");
	new Float:slx, Float:sly, Float:slz;
	GetPlayerPos(playerid, slx, sly, slz);
	if(IsPlayerInAnyVehicle(playerid))
    SetVehiclePos(GetPlayerVehicleID(playerid),slx,sly,slz-2);
	else
	SetPlayerPos(playerid, slx, sly, slz-2);
	return 1;
}
CMD:upp(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid,COLOR_RED,"Nu ai rangul administrativ necesar");
    new Float:slx, Float:sly, Float:slz;
	GetPlayerPos(playerid, slx, sly, slz);
	if(IsPlayerInAnyVehicle(playerid))
    SetVehiclePos(GetPlayerVehicleID(playerid),slx,sly,slz+2);
	else
 	SetPlayerPos(playerid, slx, sly, slz+2);
 	return 1;
}

CMD:left(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid,COLOR_RED,"Nu ai rangul administrativ necesar");
	new Float:slx, Float:sly, Float:slz;
	GetPlayerPos(playerid, slx, sly, slz);
	if(IsPlayerInAnyVehicle(playerid))
    SetVehiclePos(GetPlayerVehicleID(playerid),slx,sly+2,slz);
	else
	SetPlayerPos(playerid, slx, sly+2, slz);
	return 1;
}
CMD:right(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid,COLOR_RED,"Nu ai rangul administrativ necesar");
	new Float:slx, Float:sly, Float:slz;
	GetPlayerPos(playerid, slx, sly, slz);
	if(IsPlayerInAnyVehicle(playerid))
    SetVehiclePos(GetPlayerVehicleID(playerid),slx,sly-2,slz);
	else
 	SetPlayerPos(playerid, slx, sly-2, slz);
	return 1;
}

CMD:forw(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid,COLOR_RED,"Nu ai rangul administrativ necesar");
	new Float:slx, Float:sly, Float:slz;
	GetPlayerPos(playerid, slx, sly, slz);
    if(IsPlayerInAnyVehicle(playerid))
    SetVehiclePos(GetPlayerVehicleID(playerid),slx+2,sly,slz);
 	else
 	SetPlayerPos(playerid, slx+2,sly, slz);
	return 1;
}

CMD:back(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid,COLOR_RED,"Nu ai rangul administrativ necesar");
	new Float:slx, Float:sly, Float:slz;
	GetPlayerPos(playerid, slx, sly, slz);
	if(IsPlayerInAnyVehicle(playerid))
    SetVehiclePos(GetPlayerVehicleID(playerid),slx-2,sly,slz);
	else
 	SetPlayerPos(playerid, slx-2, sly, slz);
 	return 1;
}

CMD:slap(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new plo,Float:shealth,Float:slx, Float:sly, Float:slz;
	if(sscanf(params,"u", plo)) return	SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /slap [playerid/numejucator]");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 2) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
    if(plo == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"Invalid PLAYER ID");
    if(gLogged[plo] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul Nu este logat");
   	new targetlevel = PlayerInfo[plo][pAdmin];
	new playerlevel = PlayerInfo[playerid][pAdmin];
	if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* Nu poti folosi comanda pe Admini mai mari ca tine!");

	GetPlayerHealth(plo, shealth);
	GameTextForPlayer(plo, "~r~Slapped!",5000,3);
	SetPlayerHealth(plo, shealth-5);
	GetPlayerPos(plo, slx, sly, slz);
	SetPlayerPos(plo, slx, sly, slz+5);
	PlayerPlaySound(plo, 1130, slx, sly, slz+5);
	format(strings, sizeof(strings), "%s[%d] i-a dat slap lui %s[%d]", PlayerName(playerid),playerid,PlayerName(plo),plo);
	if(PlayerInfo[playerid][pAdmin] > 0)
	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	if(PlayerInfo[playerid][pHelper] > 0)
 	AdminsBroadCast(-1, strings,1);
 	return 1;
}


CMD:sethp(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new health,plo;
	if(sscanf(params,"ud", plo,health)) return	SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /sethp [playerid/numejucator] [hp]");
	if (PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	if(gLogged[plo] != 1 && !IsPlayerConnected(plo)) return SendClientMessage(playerid,COLOR_RED,"Playerul Nu este logat");
    if(plo == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"Invalid PLAYER ID");
 	SetPlayerHealth(plo, health);
	format(strings, sizeof(strings), "%s[%d] o folosit sethp pe %s[%d] HP: %d", PlayerName(playerid),playerid,PlayerName(plo),plo,health);
	if(PlayerInfo[playerid][pAdmin] > 0)
	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	return 1;
}
CMD:setarmour(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new setarmour,plo;
	if(sscanf(params,"ud", plo,setarmour)) return	SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /setarmour [playerid/numejucator] [armour]");
	if (PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	if(gLogged[plo] != 1 && !IsPlayerConnected(plo)) return SendClientMessage(playerid,COLOR_RED,"Playerul Nu este logat");
    if(plo == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"Invalid PLAYER ID");
 	SetPlayerArmour(plo, setarmour);
	format(strings, sizeof(strings), "%s[%d] o folosit setarmour pe %s[%d] ARMOUR: %d", PlayerName(playerid),playerid,PlayerName(plo),plo,setarmour);
	if(PlayerInfo[playerid][pAdmin] > 0)
	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	return 1;
}

CMD:fuelcars(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
    for(new c=0;c<MAX_VEHICLES;c++)
	gGas[c] = 100;
	format(strings, sizeof(strings), "[ADMIN] %s[%d] a umplut toate masinile cu benzina", PlayerName(playerid),playerid);
	BroadCast(-1, strings);
    return 1;
}
CMD:gethere(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new plo;
	if(sscanf(params,"u", plo)) return	SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /gethere [playerid/numejucator]");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 2) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	new Float:plocx,Float:plocy,Float:plocz;
	if(!IsPlayerConnected(plo)) return SendClientMessage(playerid,COLOR_RED,"Player Deconectat");
    if(plo == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"Invalid player ID");
 	if (PlayerInfo[plo][pAdmin] > 7 && PlayerInfo[playerid][pAdmin] < 6)
   	{
		SendClientMessage(playerid, COLOR_GRAD1, "Intreaba adminul daca vrea sa dea goto la tine.");
		format(strings, sizeof(strings), "   %s vrea sa te aduca la el.", PlayerName(playerid));
		SendClientMessage(plo, COLOR_GREEN, strings);
		return 1;
	}
	GetPlayerPos(playerid, plocx, plocy, plocz);
	SetPlayerInterior(plo, GetPlayerInterior(playerid));
	SetPlayerVirtualWorld(plo, GetPlayerVirtualWorld(playerid));
	if (GetPlayerState(plo) == 2)
	{
	    SetVehiclePos(GetPlayerVehicleID(plo), plocx, plocy+4, plocz);
		SetVehicleVirtualWorld(GetPlayerVehicleID(plo), GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(GetPlayerVehicleID(plo), GetPlayerInterior(playerid));
	}
	else
 	SetPlayerPos(plo,plocx,plocy+2, plocz);
	SendClientMessage(playerid, COLOR_GRAD1, "Ai teleportat pe cineva la tine");
	SendClientMessage(plo, COLOR_GRAD1, "Ai fost teleportat de un admin");
	format(strings, sizeof(strings), "%s[%d] il teleporteaza pe %s[%d] la el", PlayerName(playerid),playerid,PlayerName(plo),plo);
	if(PlayerInfo[playerid][pAdmin] > 0)
	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	if(PlayerInfo[playerid][pHelper] > 0)
 	AdminsBroadCast(-1, strings,1);
	return 1;
}

CMD:pm(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new playa,message[128];
	if(sscanf(params,"us[128]", playa,message)) return	SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /pm [playerid/numejucator] [mesaj]");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /pm [playerid/PartOfName] [text]");
	if(!IsPlayerConnected(playa)) return SendClientMessage(playerid,COLOR_RED,"Player Deconectat");
    if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"Invalid player ID");
	format(strings, sizeof(strings), "* PM << %s[%d]: %s", PlayerName(playerid), playerid, message);
	SendClientMessage(playa, 0xE5C43EAA, strings);
	PlayerPlaySound(playa, 1055, PlayerPosX[playa],PlayerPosY[playa],PlayerPosZ[playa]);
	format(strings, sizeof(strings), "* PM >> %s (%d): %s", PlayerName(playa), playa, message);
	SendClientMessage(playerid, 0xBBA033AA, strings);
	return 1;
}


CMD:goto(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new plo;
	if(sscanf(params,"u", plo)) return	SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /goto [playerid/numejucator]");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	new Float:plocx,Float:plocy,Float:plocz;
	if(!IsPlayerConnected(plo)) return SendClientMessage(playerid,COLOR_RED,"Player Deconectat");
    if(plo == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"Invalid player ID");
 	if (PlayerInfo[plo][pAdmin] > 7 && PlayerInfo[playerid][pAdmin] < 7)
   	{
		SendClientMessage(playerid, COLOR_GRAD1, "Intreaba adminul daca vrea sa te aduca.");
		format(strings, sizeof(strings), "   %s vrea sa dea goto la tine.", PlayerName(playerid));
		SendClientMessage(plo, COLOR_GRAD1, strings);
		return 1;
	}
	GetPlayerPos(plo, plocx, plocy, plocz);
	SetPlayerInterior(playerid,GetPlayerInterior(plo));
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(plo));
	format(strings, sizeof(strings), "%s[%d] se teleporteaza la %s[%d]", PlayerName(playerid),playerid,PlayerName(plo),plo);
	if (GetPlayerState(playerid) == 2)
	{
		SetVehiclePos(GetPlayerVehicleID(playerid), plocx, plocy+4, plocz);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetPlayerVirtualWorld(plo));
		LinkVehicleToInterior(GetPlayerVehicleID(playerid), GetPlayerInterior(plo));
	}
	else
	SetPlayerPos(playerid,plocx,plocy+2, plocz);
	SendClientMessage(playerid, COLOR_GRAD1, "   Ai fost teleportat");
	if(PlayerInfo[playerid][pAdmin] > 0)
	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	if(PlayerInfo[playerid][pHelper] > 0)
	AdminsBroadCast(-1, strings,1);
	return 1;
}


CMD:tp(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new plo;
	if(sscanf(params,"u", plo)) return	SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /tp [playerid/numejucator]");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	new Float:plocx,Float:plocy,Float:plocz;
	if(!IsPlayerConnected(plo)) return SendClientMessage(playerid,COLOR_RED,"Player Deconectat");
    if(plo == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"Invalid player ID");
 	if (PlayerInfo[plo][pAdmin] > 7 && PlayerInfo[playerid][pAdmin] < 7)
   	{
		SendClientMessage(playerid, COLOR_GRAD1, "Intreaba adminul daca vrea sa te aduca.");
		format(strings, sizeof(strings), "   %s vrea sa dea goto la tine.", PlayerName(playerid));
		SendClientMessage(plo, COLOR_GRAD1, strings);
		return 1;
	}
	if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "   Nu ai rangul administrativ necesar!");
	{
		GetPlayerPos(plo, plocx, plocy, plocz);
		SetPlayerInterior(playerid,GetPlayerInterior(plo));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(plo));
		format(strings, sizeof(strings), "%s[%d] se teleporteaza la %s[%d]", PlayerName(playerid),playerid,PlayerName(plo),plo);
 		if (GetPlayerState(playerid) == 2)
		{
			SetVehiclePos(GetPlayerVehicleID(playerid), plocx, plocy+4, plocz);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetPlayerVirtualWorld(plo));
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), GetPlayerInterior(plo));
		}
		else
		SetPlayerPos(playerid,plocx,plocy+2, plocz);
		SendClientMessage(playerid, COLOR_GRAD1, "   Ai fost teleportat");
		if(PlayerInfo[playerid][pAdmin] > 0)
 		AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
		if(PlayerInfo[playerid][pHelper] > 0)
 		AdminsBroadCast(-1, strings,1);
	}
	return 1;
}

CMD:aparking(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	if (GetPlayerState(playerid) == 2)
	SetVehiclePos( GetPlayerVehicleID(playerid), 1079.1855,-349.2876,3002.5676);
	else
	SetPlayerPos(playerid,1079.1855,-349.2876,3002.5676);
	GameTextForPlayer(playerid, "~w~Admin Parking",5000,1);
 	SendClientMessage(playerid, COLOR_GRAD1, "	Ai fost teleportat !");
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	format(strings, sizeof(strings), "[ADMIN]: %s se teleporteaza la Admin Parking.", PlayerName(playerid));
	if(PlayerInfo[playerid][pAdmin] > 0)
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
 	return 1;
}
CMD:pentagon(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	if (GetPlayerState(playerid) == 2)
	SetVehiclePos( GetPlayerVehicleID(playerid), 2887.4844,-1100.4104,10.8750);
	else
	SetPlayerPos(playerid,2887.4844,-1100.4104,10.8750);
	GameTextForPlayer(playerid, "~r~Pentagonul",5000,1);
 	SendClientMessage(playerid, COLOR_GRAD1, "	Ai fost teleportat !");
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	format(strings, sizeof(strings), "[ADMIN]: %s se teleporteaza la Pentagon.", PlayerName(playerid));
	if(PlayerInfo[playerid][pAdmin] > 0)
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	if(PlayerInfo[playerid][pHelper] > 0)
 	AdminsBroadCast(-1, strings,1);
 	return 1;
}

CMD:ahouse(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	if (GetPlayerState(playerid) == 2)
	SetVehiclePos( GetPlayerVehicleID(playerid), 1058.8323,-651.6803,2292.7808);
	else
	SetPlayerPos(playerid,1058.8323,-651.6803,2292.7808);
	GameTextForPlayer(playerid, "~r~Admin House",5000,1);
 	SendClientMessage(playerid, COLOR_GRAD1, "	Ai fost teleportat !");
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	format(strings, sizeof(strings), "[ADMIN]: %s se teleporteaza la Admin House.", PlayerName(playerid));
	if(PlayerInfo[playerid][pAdmin] > 0)
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
 	return 1;
}

CMD:hhouse(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	if (GetPlayerState(playerid) == 2)
	SetVehiclePos( GetPlayerVehicleID(playerid), 1493.3094,-1758.2467,29.7559);
	else
	SetPlayerPos(playerid,1493.3094,-1758.2467,29.7559);
	GameTextForPlayer(playerid, "~p~Helper House",5000,1);
 	SendClientMessage(playerid, COLOR_GRAD1, "	Ai fost teleportat !");
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	format(strings, sizeof(strings), "[ADMIN]: %s se teleporteaza la HelperHouse.", PlayerName(playerid));
	if(PlayerInfo[playerid][pAdmin] > 0)
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	if(PlayerInfo[playerid][pHelper] > 0)
 	AdminsBroadCast(-1, strings,1);
 	return 1;
}

CMD:ng(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	if (GetPlayerState(playerid) == 2)
	SetVehiclePos( GetPlayerVehicleID(playerid), 127.4511, 1837.6464, 19.2327);
	else
	SetPlayerPos(playerid, 127.4511, 1837.6464, 19.2327);
	GameTextForPlayer(playerid, "~b~National Guard",5000,1);
 	SendClientMessage(playerid, COLOR_GRAD1, "	Ai fost teleportat !");
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	format(strings, sizeof(strings), "[ADMIN]: %s se teleporteaza la NG.", PlayerName(playerid));
	if(PlayerInfo[playerid][pAdmin] > 0)
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	if(PlayerInfo[playerid][pHelper] > 0)
 	AdminsBroadCast(-1, strings,1);
 	return 1;
}
CMD:lc(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(IsPlayerInRangeOfPoint(playerid, 10,366.4901,158.6410,1008.3828))//
   	{
		SetTimerEx("liberty", 60000, false, "i", playerid);
	 	SetPlayerPos(playerid,3.5784, 23.0159, 1199.9989);
  		SetPlayerInterior(playerid, 1);
   		SetTimerEx("freze", 1000, 0, "i", playerid);
   		TogglePlayerControllable(playerid, 0);
   		SendClientMessage(playerid,0x1EBAE1C8, "Zborul dureaza 1 minut pana in Liberty City");
   	}
   	else if(IsPlayerInRangeOfPoint(playerid, 10,-777.4677, 505.3211, 1376.9059))//
   	{
   	    SetTimerEx("liberty2", 60000, false, "i", playerid);
	 	SetPlayerPos(playerid,3.5784, 23.0159, 1199.9989);
   		SetPlayerInterior(playerid, 1);
   		SetTimerEx("freze", 1000, 0, "i", playerid);
   		TogglePlayerControllable(playerid, 0);
   		SendClientMessage(playerid,0x1EBAE1C8, "Zborul dureaza 1 minut pana in Los Santos");
   	}
   	else if(!IsPlayerInRangeOfPoint(playerid, 20,-777.4677, 505.3211, 1376.9059) && !IsPlayerInRangeOfPoint(playerid, 20,366.4901,158.6410,1008.3828))//)//
   	{
   		if(PlayerInfo[playerid][pAdmin] ==0 && PlayerInfo[playerid][pHelper] ==0) return SendClientMessage(playerid,COLOR_RED,"Nu esti in primarie");
 	    if (GetPlayerState(playerid) == 2)
		{
			SetVehiclePos( GetPlayerVehicleID(playerid),-777.3915,504.9686,1376.5896);
			LinkVehicleToInterior( GetPlayerVehicleID(playerid),1);
		}
		else
		{
			SetPlayerPos(playerid,-777.3915,504.9686,1376.5896);
			GameTextForPlayer(playerid, "~b~Liberty  City",5000,1);
		 	SendClientMessage(playerid, COLOR_GRAD1, "	Ai fost teleportat !");
			SetPlayerInterior(playerid,1);
			SetPlayerVirtualWorld(playerid,0);
			format(strings, sizeof(strings), "[ADMIN]: %s se teleporteaza in LC.", PlayerName(playerid));
			if(PlayerInfo[playerid][pAdmin] > 0)
		 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
			if(PlayerInfo[playerid][pHelper] > 0)
		 	AdminsBroadCast(-1, strings,1);
 		}
  	}
    return 1;
}


CMD:sf(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	if (GetPlayerState(playerid) == 2)
	SetVehiclePos( GetPlayerVehicleID(playerid),-1417.0,-295.8,14.1);
	else
	SetPlayerPos(playerid, -1417.0,-295.8,14.1);

	GameTextForPlayer(playerid, "~r~San  Fierro",5000,1);
 	SendClientMessage(playerid, COLOR_GRAD1, "	Ai fost teleportat !");
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	format(strings, sizeof(strings), "[ADMIN]: %s se teleporteaza in SF.", PlayerName(playerid));
	if(PlayerInfo[playerid][pAdmin] > 0)
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	if(PlayerInfo[playerid][pHelper] > 0)
 	AdminsBroadCast(-1, strings,1);
 	return 1;
}
CMD:lv(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	if (GetPlayerState(playerid) == 2)
	SetVehiclePos( GetPlayerVehicleID(playerid),1699.2,1435.1, 10.7);
	else
	SetPlayerPos(playerid, 1699.2,1435.1, 10.7);

	GameTextForPlayer(playerid, "~y~Las Venturas",5000,1);
 	SendClientMessage(playerid, COLOR_GRAD1, "	Ai fost teleportat !");
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	format(strings, sizeof(strings), "[ADMIN]: %s se teleporteaza in LV.", PlayerName(playerid));
	if(PlayerInfo[playerid][pAdmin] > 0)
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	if(PlayerInfo[playerid][pHelper] > 0)
 	AdminsBroadCast(-1, strings,1);
 	return 1;
}

CMD:ls(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	if (GetPlayerState(playerid) == 2)
	SetVehiclePos( GetPlayerVehicleID(playerid),1529.6,-1691.2,13.3);
	else
	SetPlayerPos(playerid, 1529.6,-1691.2,13.3);
	GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
 	SendClientMessage(playerid, COLOR_GRAD1, "	Ai fost teleportat !");
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	format(strings, sizeof(strings), "[ADMIN]: %s se teleporteaza in LS.", PlayerName(playerid));
	if(PlayerInfo[playerid][pAdmin] > 0)
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	if(PlayerInfo[playerid][pHelper] > 0)
 	AdminsBroadCast(-1, strings,1);
 	return 1;
}

CMD:mc(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	if (GetPlayerState(playerid) == 2)
	SetVehiclePos(GetPlayerVehicleID(playerid), -2317.8091,-1637.5575,483.7031);
	else
	SetPlayerPos(playerid, -2317.8091,-1637.5575,483.7031);
	GameTextForPlayer(playerid, "~w~Chilliad~n~Mount",5000,1);
 	SendClientMessage(playerid, COLOR_GRAD1, "	Ai fost teleportat !");
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	format(strings, sizeof(strings), "[ADMIN]: %s se teleporteaza pe Mountain Chilliad.", PlayerName(playerid));
	if(PlayerInfo[playerid][pAdmin] > 0)
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	if(PlayerInfo[playerid][pHelper] > 0)
 	AdminsBroadCast(-1, strings,1);
 	return 1;
}

CMD:banklv(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	if (GetPlayerState(playerid) == 2)
	SetVehiclePos(GetPlayerVehicleID(playerid), 1462.2821,-1014.6368,26.5002);
	else
	SetPlayerPos(playerid,  2196.0256,1677.0201,12.3672);
 	SendClientMessage(playerid, COLOR_GRAD1, "	Ai fost teleportat !");
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	format(strings, sizeof(strings), "[ADMIN]: %s se teleporteaza la Banca LS.", PlayerName(playerid));
	if(PlayerInfo[playerid][pAdmin] > 0)
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	if(PlayerInfo[playerid][pHelper] > 0)
 	AdminsBroadCast(-1, strings,1);
	return 1;
}

CMD:banksf(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	if (GetPlayerState(playerid) == 2)
	SetVehiclePos(GetPlayerVehicleID(playerid), 1462.2821,-1014.6368,26.5002);
	else
	SetPlayerPos(playerid,   -1749.3287,868.2448,25.0859);
 	SendClientMessage(playerid, COLOR_GRAD1, "	Ai fost teleportat !");
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	format(strings, sizeof(strings), "[ADMIN]: %s se teleporteaza la Banca LS.", PlayerName(playerid));
	if(PlayerInfo[playerid][pAdmin] > 0)
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	if(PlayerInfo[playerid][pHelper] > 0)
 	AdminsBroadCast(-1, strings,1);
	return 1;
}

CMD:bankls(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	if (GetPlayerState(playerid) == 2)
	SetVehiclePos(GetPlayerVehicleID(playerid), 1462.2821,-1014.6368,26.5002);
	else
	SetPlayerPos(playerid, 1462.2821,-1014.6368,26.5002);
 	SendClientMessage(playerid, COLOR_GRAD1, "	Ai fost teleportat !");
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	format(strings, sizeof(strings), "[ADMIN]: %s se teleporteaza la Banca LS.", PlayerName(playerid));
	if(PlayerInfo[playerid][pAdmin] > 0)
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	if(PlayerInfo[playerid][pHelper] > 0)
 	AdminsBroadCast(-1, strings,1);
	return 1;
}

CMD:rac(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	new bool:unwanted[MAX_VEHICLES];
	foreach(Player,i)
	{
      	if(IsPlayerInAnyVehicle(i)) unwanted[GetPlayerVehicleID(i)] = true;
	}
	for(new car=0; car<MAX_VEHICLES; car++)
	{
 		if(!OwnedVeh(car) && !unwanted[car])
     	SetVehicleToRespawn(car);
 	}
	format(strings, sizeof(strings), "SERVER: Toate masinile au fost respawnate de %s.", PlayerName(playerid));
	GameTextForAll("~w~Vehicles~n~~b~Respawned!",3000,1);
	if(PlayerInfo[playerid][pAdmin] > 0)
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	return 1;
}

CMD:prac(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
  	new bool:unwanted[MAX_VEHICLES];
 	foreach(Player,i)
	{
	 	if(IsPlayerInAnyVehicle(i)) unwanted[GetPlayerVehicleID(i)] = true;
	}
	for(new car=0; car<MAX_VEHICLES; car++)
	{
	   	if(OwnedVeh(car) && !unwanted[car])
		SetVehicleToRespawn(car);
	}
	format(strings, sizeof(strings), "SERVER: Toate masinile personale au fost respawnate de %s.", PlayerName(playerid));
	BroadCast(COLOR_WHITE,strings);
	GameTextForAll("~w~Vehicles~n~~r~Respawned!",3000,1);
	if(PlayerInfo[playerid][pAdmin] > 0)
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
 	return 1;
}

CMD:rtc(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] <2) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	if(IsPlayerInAnyVehicle(playerid))
	{
	    format(strings, 256, "[ADMIN]: %s a dat respawn vehiculului cu ID %d.",PlayerName(playerid),GetPlayerVehicleID(playerid));
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	   	RemovePlayerFromVehicle(playerid);
 		TogglePlayerControllable(playerid, 1);
		SendClientMessage(playerid, COLOR_GREY, "   Vehicul Respawnat !");
 	}
 	else
 	{
 		new testcar;
		if(sscanf(params,"d", testcar)) return	SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /rtc [carid]");
		format(strings, 256, "[ADMIN]: %s a dat respawn vehiculului cu ID %d.",PlayerName(playerid),testcar);
		SetVehicleToRespawn(testcar);
 		TogglePlayerControllable(playerid, 1);
		SendClientMessage(playerid, COLOR_GREY, "   Vehicul Respawnat !");
	}
	if(PlayerInfo[playerid][pAdmin] > 0)
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	if(PlayerInfo[playerid][pHelper] > 0)
 	AdminsBroadCast(-1, strings,1);
	return 1;
}
CMD:respawnthiscar(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] <2) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	if(IsPlayerInAnyVehicle(playerid))
	{
	    format(strings, 256, "[ADMIN]: %s a dat respawn vehiculului cu ID %d.",PlayerName(playerid),GetPlayerVehicleID(playerid));
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	   	RemovePlayerFromVehicle(playerid);
 		TogglePlayerControllable(playerid, 1);
		SendClientMessage(playerid, COLOR_GREY, "   Vehicul Respawnat !");
 	}
 	else
 	{
 		new testcar;
		if(sscanf(params,"d", testcar)) return	SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /rtc [carid]");
		format(strings, 256, "[ADMIN]: %s a dat respawn vehiculului cu ID %d.",PlayerName(playerid),testcar);
		SetVehicleToRespawn(testcar);
 		TogglePlayerControllable(playerid, 1);
		SendClientMessage(playerid, COLOR_GREY, "   Vehicul Respawnat !");
	}
	if(PlayerInfo[playerid][pAdmin] > 0)
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	if(PlayerInfo[playerid][pHelper] > 0)
 	AdminsBroadCast(-1, strings,1);
	return 1;
}

CMD:getincar(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new testcar;
	if(sscanf(params,"d", testcar)) return	SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /getincar [carid]");
	if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
  	new Float:cwx2,Float:cwy2,Float:cwz2;
	if(CreatedCars[testcar] == 2&& PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid,COLOR_RED,"Invalid vehicle");
	GetVehiclePos(testcar, cwx2, cwy2, cwz2);
	if(GetPlayerState(playerid) == 2)
	{
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		RemovePlayerFromVehicle(playerid);
		PutPlayerInVehicle(playerid, testcar, 0);
	    SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid,0);
	}
	else
	{
	    SetPlayerInterior(playerid,0);
		PutPlayerInVehicle(playerid, testcar, 0);
	    SetPlayerVirtualWorld(playerid,0);
	}
	SendClientMessage(playerid, -1, "** Ai fost teleportat");
	format(strings, sizeof(strings), "[ADMIN]: %s se teleporteaza in masina: [%d].", PlayerName(playerid), testcar);
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
 	return 1;
}

CMD:getcar(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	new vehicleget;
	if(sscanf(params,"d", vehicleget)) return	SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /getcar [carid]");
	new Float:plocx,Float:plocy,Float:plocz;
	if(CreatedCars[vehicleget] == 2&& PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid,COLOR_RED,"Invalid vehicle");
	GetPlayerPos(playerid, plocx, plocy, plocz);
	SetVehiclePos(vehicleget,plocx+3,plocy+3, plocz+1);
	SetVehicleVirtualWorld(vehicleget, GetPlayerVirtualWorld(playerid));
	LinkVehicleToInterior(vehicleget, GetPlayerInterior(playerid));
	format(strings, sizeof(strings), "[ADMIN]: %s teleporteaza masina [%d] la el.", PlayerName(playerid), vehicleget);
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	return 1;
}

CMD:gotocar(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new testcar;
	if(sscanf(params,"d", testcar)) return	SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /gotocar [carid]");
	if (PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	new Float:cwx2,Float:cwy2,Float:cwz2;
	GetVehiclePos(testcar, cwx2, cwy2, cwz2);
	if(CreatedCars[testcar] == 2 && PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid,COLOR_RED,"Invalid vehicle");
	if (GetPlayerState(playerid) == 2)
 	SetVehiclePos(GetPlayerVehicleID(playerid), cwx2+1, cwy2+1, cwz2+1);
 	else
	SetPlayerPos(playerid, cwx2+1, cwy2+1, cwz2+1);
 	SendClientMessage(playerid, COLOR_GRAD1, "   Ai fost teleportat");
	SetPlayerInterior(playerid,0);
    SetPlayerVirtualWorld(playerid,0);
    format(strings, sizeof(strings), "[ADMIN]: %s se teleporteaza la masina: [%d].", PlayerName(playerid), testcar);
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	return 1;
}
CMD:codel(playerid,params[])
{
	format(strings, sizeof(strings),"* %d codelul tau",Codel[playerid]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE,strings);
	return 1;
}

CMD:carcode(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_RED,"Nu esti sofer");
	new dammount,checking;
	if(sscanf(params,"d", dammount)) return SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /carcode [code]");
	if(OwnedVeh(GetPlayerVehicleID(playerid)))
	checking = vInfo[OwnedVeh(GetPlayerVehicleID(playerid))][vCarCode];
	else
	checking = VehiclePass[GetPlayerVehicleID(playerid)];
	if(checking < 0) return SendClientMessage(playerid, COLOR_GRAD2, "Invalid Code");
    if(dammount == checking)
    {
		Fails[playerid] = 0;
		SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Ai scris codul corect! Poti porni motorul acum!");
		format(strings, sizeof(strings),"* %s Scrie codul in panoul de control si deblocheaza masina",PlayerName(playerid));
		ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		Codel[playerid] = 1;
		return 1;
    }
    else
	{
		Fails[playerid] ++;
		if(Fails[playerid] < 5) return SendClientMessage(playerid, COLOR_GRAD2, "HINT: Ai gresit codul!");
 		if(Fails[playerid] >= 5)
	    {
	    	if(GetPlayerWantedLevel(playerid) < 7)
			{
		    	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid)+1);
				PlayerInfo[playerid][pWanted] = GetPlayerWantedLevel(playerid);
    			Update(playerid, pWantedx);
			}
			format(PlayerInfo[playerid][pCrima], 128, "Furt masina");
            Update(playerid,pCrimax);
			format(strings, sizeof(strings),"* %s Scrie codul in panoul de control si se electrocuteaza",PlayerName(playerid));
			ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			foreach(Player,i)
			{
			    if(IsACop(i))
				PlayCrimeReportForPlayer(playerid, i, 17);
			}
			new Float:Health;
			Fails[playerid] = 0;
			GetPlayerHealth(playerid, Health);
			SetPlayerHealth(playerid, Health-15);
			return 1;
   		}
	}
	return 1;
}
CMD:acheckcode(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if (PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_RED, "Nu sunteti autorizat sa folositi aceasta comanda");
 	new dammount;
	if(sscanf(params,"d", dammount) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(GetPlayerVehicleID(playerid))),GetPlayerVehicleID(playerid),VehiclePass[GetPlayerVehicleID(playerid)]);
    	SendClientMessage(playerid, -1,strings);
		return 1;
	}
	format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(dammount)),dammount,VehiclePass[dammount]);
    SendClientMessage(playerid, -1,strings);
	return 1;
}
CMD:checkcode(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Nu esti in masina");
	new carid = GetPlayerVehicleID(playerid);
	if(IsAParlamentCar(carid)  && (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12) )
 	{
	    format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(carid)),carid,VehiclePass[carid]);
	    SendClientMessage(playerid, -1,strings);
	}
	else if(IsANewsCar(carid) && (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) )
	{
	    format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(carid)),carid,VehiclePass[carid]);
	    SendClientMessage(playerid, -1,strings);
	}
	else if(IsAnTaxiCar(carid) && (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10))
	{
	    format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(carid)),carid,VehiclePass[carid]);
	    SendClientMessage(playerid, -1,strings);
	}
	else if(IsACopCar(carid) && IsACop(playerid) )
	{
	    format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(carid)),carid,VehiclePass[carid]);
	    SendClientMessage(playerid, -1,strings);
	}
	else if(IsAnFbiCar(carid) && IsACop(playerid) )
	{
	    format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(carid)),carid,VehiclePass[carid]);
	    SendClientMessage(playerid, -1,strings);
	}
	else if(IsNgCar(carid) && IsACop(playerid))
	{
	    format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(carid)),carid,VehiclePass[carid]);
	    SendClientMessage(playerid, -1,strings);
	}
 	else if(IsAnCiaCar(carid) && IsACop(playerid))
	{
	    format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(carid)),carid,VehiclePass[carid]);
	    SendClientMessage(playerid, -1,strings);
	}
 	else if(IsAnNavyCar(carid) && IsACop(playerid))
	{
	    format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(carid)),carid,VehiclePass[carid]);
	    SendClientMessage(playerid, -1,strings);
	}
 	else if(IsAHitCar(carid) && (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8))
	{
	    format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(carid)),carid,VehiclePass[carid]);
	    SendClientMessage(playerid, -1,strings);
	}
 	else if(IsAnPresident(carid) && (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4))
	{
	    format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(carid)),carid,VehiclePass[carid]);
	    SendClientMessage(playerid, -1,strings);
	}
 	else if(IsARifaCar(carid) && (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5))
	{
	    format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(carid)),carid,VehiclePass[carid]);
	    SendClientMessage(playerid, -1,strings);
	}
 	else if(IsATriadsCar(carid) && (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6))
	{
	    format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(carid)),carid,VehiclePass[carid]);
	    SendClientMessage(playerid, -1,strings);
	}
	else if(IsAGovernmentCar(carid) && (PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7))
	{
	    format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(carid)),carid,VehiclePass[carid]);
	    SendClientMessage(playerid, -1,strings);
	}
	else if(IsABratvaCar(carid) && (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13))
	{
	    format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(carid)),carid,VehiclePass[carid]);
	    SendClientMessage(playerid, -1,strings);
	}
 	else if(IsABallasCar(carid) && (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14))
	{
	    format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(carid)),carid,VehiclePass[carid]);
	    SendClientMessage(playerid, -1,strings);
	}
 	else if(IsASevileCar(carid) && (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15))
	{
	    format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(carid)),carid,VehiclePass[carid]);
	    SendClientMessage(playerid, -1,strings);
	}
 	else if(IsACrlCar(carid) && (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16))
	{
	    format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(carid)),carid,VehiclePass[carid]);
	    SendClientMessage(playerid, -1,strings);
	}
	else if(OwnedVeh(carid))
	{
	    if(strmatch(vInfo[OwnedVeh(carid)][vOwner], PlayerName(playerid)))
	    {
	    	format(strings, sizeof(strings),"%s (%d) Codul masinii este %d. Scrie /carcode [codul]",GetVehicleName(GetVehicleModel(carid)),carid,vInfo[OwnedVeh(GetPlayerVehicleID(playerid))][vCarCode]);
	    	SendClientMessage(playerid, -1,strings);
 		}
 	}
 	else return SendClientMessage(playerid,-1,"Nu faceti parte dintr-o factiune");
	return 1;
}


CMD:afklist(playerid, params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    SendClientMessage(playerid,COLOR_RED,"________ AFK Players ________");
    foreach(Player, i)
	{
		if(IsPlayerPaused(i))
		{
    		format(strings,sizeof(strings),"%s [%d]",PlayerName(i),i);
    		SendClientMessage(playerid,-1,strings);
    	}
    }
    return 1;
}
CMD:check(playerid, params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new targetid;
	if(sscanf(params,"u", targetid)) return SendClientMessage(playerid, COLOR_SYN, "Synthax: /check <playerid/PartOfName>");
	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu sunteti autorizat sa folositi aceasta comanda");
	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, COLOR_RED, "Player Offline");
	if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Invalid playerid");
   	ShowStats(playerid, targetid);
	if(PlayerInfo[playerid][pAdmin] > 0 || PlayerInfo[playerid][pHelper] > 0)
	format(strings,sizeof(strings),"%s se uita la statusul lui %s",PlayerName(playerid),PlayerName(targetid));
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	return 1;
}

CMD:stats(playerid, params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
   	ShowStats(playerid, playerid);
	return 1;
}
CMD:fill(playerid, params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_RED,"Nu esti sofer");
	new dammount;
	if(sscanf(params,"d", dammount)) return SendClientMessage(playerid, 0xFFFFFFF,"Usage: /fill <Litri>");
	if(VehicleEngine[GetPlayerVehicleID(playerid)] != 0) return GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~Opreste Motorul",1000,3);
	if(Refueling[playerid] != 0) return  GameTextForPlayer(playerid,"~y~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~Deja alimentezi...",1000,3);
    if(GetPlayerCash(playerid) < dammount*20) return GameTextForPlayer(playerid,"~b~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~Nu aveti Bani",1000,3);//SBizzInfo[3][sbEntrace]*dammount)
	if(dammount < 1) return	SendClientMessage(playerid,COLOR_WHITE,"Nu poti umple cu atat!");
	if(gGas[GetPlayerVehicleID(playerid)] + dammount > 100)
    {
        format(strings,sizeof(strings),"*Mai poti umple rezervorul cu  %d L",100 - gGas[GetPlayerVehicleID(playerid)]);
  		SendClientMessage(playerid,COLOR_WHITE,strings);
  		return 1;
    }
    if(IsPlayerInRangeOfPoint(playerid, 15,658.3221,-565.8550,16.0630) || IsPlayerInRangeOfPoint(playerid, 15,-82.4185,-1174.8540,1.8298) || IsPlayerInRangeOfPoint(playerid, 15,-1676.3669,411.8149,6.9068) || IsPlayerInRangeOfPoint(playerid, 15,-1324.8502,2684.8120,49.783) || IsPlayerInRangeOfPoint(playerid, 15,2115.5447,926.6559,10.5668) || IsPlayerInRangeOfPoint(playerid, 15,2638.3337,1105.4701,10.5559))
	{///gasoo
	    if(gGas[GetPlayerVehicleID(playerid)] > 99) return SendClientMessage(playerid,COLOR_WHITE,"Aveti rezervorul plin");
	    new price = SBizzInfo[3][sbEntrace];
		if(gaso  < dammount) return SendClientMessage(playerid,COLOR_WHITE,"Nu mai este Combustibil in benzinarie");
		Refueling[playerid] = 1;
	    gGas[GetPlayerVehicleID(playerid)] += dammount;
	    format(strings,sizeof(strings),"* Ai umplut rezervorul cu %d Litri pentru suma de %d",dammount,dammount*price);
    	SendClientMessage(playerid,COLOR_WHITE,strings);
    	GivePlayerCash(playerid, -dammount*20);
    	SetTimerEx("Fillup", 300*dammount,false, "i", playerid);
		GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Vehiculul se alimenteaza",2000,3);
		TogglePlayerControllable(playerid, 1);
		gaso -= dammount;
		format(strings, sizeof(strings), " Gaso Station \n %d Litri \n /fill <litri> \n Pret per litru: %d",gaso,price);
	    UpdateDynamic3DTextLabelText(gasoo, 0xFFFFFFFF, strings);
	  	UpdateDynamic3DTextLabelText(gasoo1, 0xFFFFFFFF, strings);
		UpdateDynamic3DTextLabelText(gasoo2, 0xFFFFFFFF, strings);
		UpdateDynamic3DTextLabelText(gasoo3, 0xFFFFFFFF, strings);
		UpdateDynamic3DTextLabelText(gasoo4, 0xFFFFFFFF, strings);
		UpdateDynamic3DTextLabelText(gasoo5, 0xFFFFFFFF, strings);
		SBizzInfo[3][sbTill] += price;
		sbUpdate(3,sbTillx);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 15,1006.1612,-939.0581,41.9067) || IsPlayerInRangeOfPoint(playerid, 15,-2407.4907,977.6917,45.0239) || IsPlayerInRangeOfPoint(playerid, 15,-1606.2218,-2714.0056,48.2661) ||  IsPlayerInRangeOfPoint(playerid, 15,2202.3484,2473.7263,10.5630) || IsPlayerInRangeOfPoint(playerid, 15, 609.9616,1697.2865,6.7201) || IsPlayerInRangeOfPoint(playerid, 15, 617.3918,1687.2714,6.7177))
	{////xomerr
		if(gGas[GetPlayerVehicleID(playerid)] > 99) return SendClientMessage(playerid,COLOR_WHITE,"Aveti rezervorul plin");
	    new price = SBizzInfo[15][sbEntrace];
		if(xommer  < dammount) return SendClientMessage(playerid,COLOR_WHITE,"Nu mai este Combustibil in benzinarie");
		Refueling[playerid] = 1;
	    gGas[GetPlayerVehicleID(playerid)] += dammount;
	    format(strings,sizeof(strings),"* Ai umplut rezervorul cu %d Litri pentru suma de %d",dammount,dammount*price);
    	SendClientMessage(playerid,COLOR_WHITE,strings);
    	GivePlayerCash(playerid, -dammount*price);
    	SetTimerEx("Fillup", 300*dammount,false, "i", playerid);
		GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Vehiculul se alimenteaza",2000,3);
		TogglePlayerControllable(playerid, 1);
		xommer -= dammount;
		format(strings, sizeof(strings), " Xommer Station \n %d Litri \n /fill <litri> \n Pret per litru: %d",xommer,price);
  		UpdateDynamic3DTextLabelText(xommerr, 0xFFFFFFFF, strings);
  		UpdateDynamic3DTextLabelText(xommerr1, 0xFFFFFFFF, strings);
  		UpdateDynamic3DTextLabelText(xommerr2, 0xFFFFFFFF, strings);
  		UpdateDynamic3DTextLabelText(xommerr3, 0xFFFFFFFF, strings);
  		UpdateDynamic3DTextLabelText(xommerr4, 0xFFFFFFFF, strings);
  		UpdateDynamic3DTextLabelText(xommerr5, 0xFFFFFFFF, strings);
		SBizzInfo[15][sbTill] += price;
		sbUpdate(15,sbTillx);
		return 1;
	}
    if(IsPlayerInRangeOfPoint(playerid, 15,1944.3397,-1771.5894,13.1224) || IsPlayerInRangeOfPoint(playerid, 15,-2027.7162,150.0180,27.4295) || IsPlayerInRangeOfPoint(playerid, 15,1597.1356,2196.5364,10.5538) || IsPlayerInRangeOfPoint(playerid, 15,-1479.9526,1867.0510,32.3627) || IsPlayerInRangeOfPoint(playerid, 15,1359.0516,474.3736,19.9037))
	{//going
	    if(gGas[GetPlayerVehicleID(playerid)] > 99) return SendClientMessage(playerid,COLOR_WHITE,"Aveti rezervorul plin");
	    new price = SBizzInfo[14][sbEntrace];
		if(going  < dammount) return SendClientMessage(playerid,COLOR_WHITE,"Nu mai este Combustibil in benzinarie");
		Refueling[playerid] = 1;
	    gGas[GetPlayerVehicleID(playerid)] += dammount;
	    format(strings,sizeof(strings),"* Ai umplut rezervorul cu %d Litri pentru suma de %d",dammount,dammount*price);
    	SendClientMessage(playerid,COLOR_WHITE,strings);
    	GivePlayerCash(playerid, -dammount*price);
    	SetTimerEx("Fillup", 300*dammount,false, "i", playerid);
		GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Vehiculul se alimenteaza",2000,3);
		TogglePlayerControllable(playerid, 1);
		going -= dammount;
		format(strings, sizeof(strings), " Going Station \n %d Litri \n /fill <litri> \n Pret per litru: %d",going,price);
  		UpdateDynamic3DTextLabelText(goingg, 0xFFFFFFFF, strings);
  		UpdateDynamic3DTextLabelText(goingg1, 0xFFFFFFFF, strings);
  		UpdateDynamic3DTextLabelText(goingg2, 0xFFFFFFFF, strings);
  		UpdateDynamic3DTextLabelText(goingg3, 0xFFFFFFFF, strings);
  		UpdateDynamic3DTextLabelText(goingg4, 0xFFFFFFFF, strings);
		SBizzInfo[14][sbTill] += price;
		sbUpdate(14,sbTillx);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 6,987.5231, -925.7289, 42.1580) ||	IsPlayerInRangeOfPoint(playerid, 15,1359.0516,474.3736,19.9037) || IsPlayerInRangeOfPoint(playerid, 15,-2035.6379, 127.3028, 27.4436) || IsPlayerInRangeOfPoint(playerid, 15,2125.0449, 2716.9360, 10.6713) || IsPlayerInRangeOfPoint(playerid, 15,-86.6248, -1153.3148, 1.6271))
	{//BENZINARIILE GPL CAR UPGRADE
	    if(switched[GetPlayerVehicleID(playerid)] == 0) return SendClientMessage(playerid,COLOR_RED,"Masina nu e pe GPL, scrie /switch");
        if(GasCar[GetPlayerVehicleID(playerid)] > 99) return SendClientMessage(playerid,COLOR_WHITE,"Aveti rezervorul plin");
 		Refueling[playerid] = 1;
	    GasCar[GetPlayerVehicleID(playerid)] += dammount;
	    format(strings,sizeof(strings),"* Ai umplut rezervorul cu %d Litri de Gaz pentru suma de %d",dammount,dammount*20);
    	SendClientMessage(playerid,COLOR_WHITE,strings);
    	GivePlayerCash(playerid, -dammount*20);
    	Fillup(playerid);
		GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Vehiculul se alimenteaza",2000,3);
		TogglePlayerControllable(playerid, 1);
		return 1;
	}
	return 1;
}

CMD:sal(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new adminlevel,targetid;
	if(sscanf(params,"ui", targetid, adminlevel)) return SendClientMessage(playerid, 0xFFFFFFF,"usage: /makeadmin [PlayerID] [Ammount]");
	if(adminlevel >= 0 && adminlevel <= 8) {} else return 1;
	if (PlayerInfo[playerid][pAdmin] < 7 && !IsPlayerAdmin(playerid)) return SendClientMessage(playerid, COLOR_RED,"Nu esti admin");
 	if(targetid == INVALID_PLAYER_ID)return SendClientMessage(playerid, COLOR_RED,"Player offline");
 	if(gLogged[targetid] == 0) return SendClientMessage(playerid, COLOR_RED,"Player nelogat");
	PlayerInfo[targetid][pAdmin] = adminlevel;
	Update(targetid, pAdminx);
	format(strings, sizeof(strings), "Ai fost promovat la admin level %d de %s", adminlevel, PlayerName(playerid));
	SendClientMessage(targetid, COLOR_LIGHTRED2, strings);
	format(strings, sizeof(strings), "L-ai promovat pe %s la admin level %d.", PlayerName(targetid), adminlevel);
	SendClientMessage(playerid, COLOR_LIGHTRED2, strings);
	format(strings, sizeof(strings), "%s l-a facut pe %s Admin level %d",PlayerName(playerid), PlayerName(targetid), adminlevel,CurrentTimeStamps());

 	AdminsBroadCast(-1, strings,1);
 	return 1;
}

CMD:makehelper(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new adminlevel,targetid;
	if(sscanf(params,"ui", targetid, adminlevel)) return SendClientMessage(playerid, 0xFFFFFFF,"usage: /makeadmin [PlayerID] [Ammount]");
	if(adminlevel >= 0 && adminlevel <= 8) {} else return 1;
	if (PlayerInfo[playerid][pAdmin] < 7 && !IsPlayerAdmin(playerid)) return SendClientMessage(playerid, COLOR_RED,"Nu ai acces la aceasta comanda");
 	if(targetid == INVALID_PLAYER_ID)return SendClientMessage(playerid, COLOR_RED,"Player offline");
 	if(gLogged[targetid] == 0) return SendClientMessage(playerid, COLOR_RED,"Player nelogat");
	PlayerInfo[targetid][pHelper] = adminlevel;
	Update(targetid, pHelperx);
	format(strings, sizeof(strings), "Ai fost promovat la Helper level %d de %s", adminlevel, PlayerName(playerid));
	SendClientMessage(targetid, COLOR_LIGHTRED2, strings);
	format(strings, sizeof(strings), "L-ai promovat pe %s la Helper level %d.", PlayerName(targetid), adminlevel);
	SendClientMessage(playerid, COLOR_LIGHTRED2, strings);
	format(strings, sizeof(strings), "%s l-a facut pe %s Helper level %d",PlayerName(playerid), PlayerName(targetid), adminlevel,CurrentTimeStamps());

 	AdminsBroadCast(-1, strings,1);
 	return 1;
}


CMD:makevip(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	new adminlevel,targetid;
	if(sscanf(params,"ui", targetid, adminlevel)) return SendClientMessage(playerid, 0xFFFFFFF,"usage: /makevip [PlayerID] [LEVEL]");
	if(adminlevel < 0 && adminlevel > 3) return SendClientMessage(playerid,COLOR_RED,"LEVEL intre 0-3");
	if (PlayerInfo[playerid][pAdmin] < 7 && !IsPlayerAdmin(playerid)) return SendClientMessage(playerid, COLOR_RED,"Nu ai acces la aceasta comanda");
 	if(targetid == INVALID_PLAYER_ID)return SendClientMessage(playerid, COLOR_RED,"Player offline");
 	if(gLogged[targetid] == 0) return SendClientMessage(playerid, COLOR_RED,"Player nelogat");
	PlayerInfo[targetid][pPremiumAccount] = adminlevel;
	Update(targetid, pPremiumAccountx);
	format(strings, sizeof(strings), "Ai fost promovat la VIP level %d de %s", adminlevel, PlayerName(playerid));
	SendClientMessage(targetid, COLOR_LIGHTRED2, strings);
	format(strings, sizeof(strings), "L-ai promovat pe %s la VIP level %d.", PlayerName(targetid), adminlevel);
	SendClientMessage(playerid, COLOR_LIGHTRED2, strings);
	format(strings, sizeof(strings), "%s l-a facut pe %s VIP level %d",PlayerName(playerid), PlayerName(targetid), adminlevel,CurrentTimeStamps());

 	AdminsBroadCast(COLOR_YELLOW, strings,1);
 	return 1;
}

CMD:givemoney(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    new targetid, ammount;
	if(sscanf(params,"ui", targetid, ammount)) return SendClientMessage(playerid, 0xFFFFFFF,"Syntax error.Correct usage: /givemoney [PlayerID] [Ammount]");
    if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
    if(gLogged[targetid] != 1) return 1;
    if(targetid != INVALID_PLAYER_ID)
   	GivePlayerCash(targetid, ammount);
   	format(strings, sizeof(strings), "%s ti-a dat suma de %d$", PlayerName(playerid), ammount);
	SendClientMessage(targetid, -1, strings);
   	format(strings, sizeof(strings), "%s i-a dat lui %s suma de %d$.",PlayerName(playerid), PlayerName(targetid), ammount);
	SendClientMessage(playerid, -1, strings);
	format(strings, sizeof(strings), "%s i-a dat lui %s suma de %d$.  %s",PlayerName(playerid), PlayerName(targetid), ammount,CurrentTimeStamps());

    return 1;
}
CMD:reward(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    new targetid, ammount;
	if(sscanf(params,"ui", targetid, ammount)) return SendClientMessage(playerid, 0xFFFFFFF,"Syntax error.Correct usage: /givemoney [PlayerID] [Ammount]");
    if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
    if(gLogged[targetid] != 1) return 1;
    if(targetid != INVALID_PLAYER_ID)
   	GivePlayerCash(targetid, ammount);
   	format(strings, sizeof(strings), "%s ti-a dat suma de %d$", PlayerName(playerid), ammount);
	SendClientMessage(targetid, -1, strings);
   	format(strings, sizeof(strings), "%s i-a dat lui %s suma de %d$.",PlayerName(playerid), PlayerName(targetid), ammount);
	SendClientMessage(playerid, -1, strings);
	format(strings, sizeof(strings), "%s i-a dat lui %s suma de %d$.  %s",PlayerName(playerid), PlayerName(targetid), ammount,CurrentTimeStamps());

    return 1;
}

CMD:money(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    new targetid, ammount;
	if(sscanf(params,"ui", targetid, ammount)) return SendClientMessage(playerid, 0xFFFFFFF,"Syntax error.Correct usage: /money [PlayerID] [Ammount]");
    if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
    if(gLogged[targetid] != 1) return 1;
    if(targetid != INVALID_PLAYER_ID)
    ResetPlayerCash(targetid);
   	SetPlayerCash(targetid, ammount);
   	format(strings, sizeof(strings), "i-ai dat lui %s suma de %d$.",PlayerName(targetid), ammount);
	SendClientMessage(playerid, -1, strings);
	format(strings, sizeof(strings), "%s i-a setat lui %s suma de %d$.  %s",PlayerName(playerid), PlayerName(targetid), ammount,CurrentTimeStamps());


    return 1;
}

CMD:spec(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_ERROR, "Nu ai acces");
	new userID;
	if(sscanf(params, "u", userID))  return SendClientMessage(playerid, COLOR_RED, "/spec [playerid]");
	if(userID==INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Player Deconectat");
	if(!IsPlayerConnected(userID)) return SendClientMessage(playerid, COLOR_RED, "Player Deconectat");
	if(gLogged[userID] != 1) return SendClientMessage(playerid, COLOR_RED, "Player Deconectat");
	format(strings, sizeof(strings), "%s sta spectator pe %s",PlayerName(playerid), PlayerName(userID));
    if(PlayerInfo[playerid][pAdmin] > 0)
 	AdminsBroadCast(-1, strings,PlayerInfo[playerid][pAdmin]);
	if(PlayerInfo[playerid][pHelper] > 0)
 	AdminsBroadCast(-1, strings,1);

	if(SpectatedID[playerid]==999)
	{
       	new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X, Y, Z);
		SpecPosx[playerid] = X;
		SpecPosy[playerid] = Y;
		SpecPosz[playerid] = Z;
		interiorplayer[playerid] = GetPlayerInterior(playerid);
		virtualworld[playerid] = GetPlayerVirtualWorld(playerid);
	}
	TogglePlayerSpectating(playerid, 1);
	SpectatedID[playerid] = userID;
	if(IsPlayerInAnyVehicle(userID))
	PlayerSpectateVehicle(playerid, GetPlayerVehicleID(userID));
	else
    PlayerSpectatePlayer(playerid, userID);
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(userID));
	SetPlayerInterior(playerid, GetPlayerInterior(userID));
    return 1;
}

CMD:specoff(playerid,params[])
return cmd_uncon(playerid,params);
CMD:endspec(playerid,params[])
return cmd_uncon(playerid,params);

CMD:uncon(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(SpectatedID[playerid] == 999) return 1;
	if(PlayerInfo[playerid][pAdmin] < 0 && PlayerInfo[playerid][pHelper] < 0) return SendClientMessage(playerid,COLOR_RED,"Nu esti Admin");
    TogglePlayerSpectating(playerid, 0);
	SetCameraBehindPlayer(playerid);
    return 1;
}

CMD:veh(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_RED,"Nu esti sofer");
	new actiune;
	if(sscanf(params, "d", actiune))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "HINT: /veh [NUMBER]");
	    SendClientMessage(playerid, COLOR_WHITE, "Available names: 1:lights, 2:alarm, 3:bonnet, 4:boot, 5:marker");
		return 1;
	}
	if(actiune == 1)
	{
		if(VehicleLights[GetPlayerVehicleID(playerid)] == 0)
		{
			VehicleLights[GetPlayerVehicleID(playerid)] = 1;
			SendClientMessage(playerid, COLOR_YELLOW, "Lights Turned On");
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, true, alarm, doors, bonnet, boot, objective);
		}
		else if(VehicleLights[GetPlayerVehicleID(playerid)] == 1)
		{
			VehicleLights[GetPlayerVehicleID(playerid)] = 0;
			SendClientMessage(playerid, COLOR_YELLOW, "Lights Turned Off");
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, false, alarm, doors, bonnet, boot, objective);
		}
		return 1;
	}
	if(actiune == 2)
	{
		if(VehicleAlarm[GetPlayerVehicleID(playerid)] == 0)
		{
			VehicleAlarm[GetPlayerVehicleID(playerid)] = 1;
			SendClientMessage(playerid, COLOR_YELLOW, "Alarm Turned On");
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, true, doors, bonnet, boot, objective);
		}
		else if(VehicleAlarm[GetPlayerVehicleID(playerid)] == 1)
		{
			VehicleAlarm[GetPlayerVehicleID(playerid)] = 0;
			SendClientMessage(playerid, COLOR_YELLOW, "Alarm Turned Off");
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, false, doors, bonnet, boot, objective);
		}
		return 1;
	}

	if(actiune == 3)
	{
		if(VehicleBonnet[GetPlayerVehicleID(playerid)] == 0)
		{
			VehicleBonnet[GetPlayerVehicleID(playerid)] = 1;
			SendClientMessage(playerid, COLOR_YELLOW, "Bonnet Turned On");
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, true, boot, objective);
		}
		else if(VehicleBonnet[GetPlayerVehicleID(playerid)] == 1)
		{
			VehicleBonnet[GetPlayerVehicleID(playerid)] = 0;
			SendClientMessage(playerid, COLOR_YELLOW, "Bonnet Turned Off");
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, false, boot, objective);
		}
		return 1;
	}
	if(actiune == 4)
	{
		if(VehicleBoot[GetPlayerVehicleID(playerid)] == 0)
		{
			VehicleBoot[GetPlayerVehicleID(playerid)] = 1;
			SendClientMessage(playerid, COLOR_YELLOW, "Boot Turned On");
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, true, objective);
		}
		else if(VehicleBoot[GetPlayerVehicleID(playerid)] == 1)
		{
			VehicleBoot[GetPlayerVehicleID(playerid)] = 0;
			SendClientMessage(playerid, COLOR_YELLOW, "Boot Turned Off");
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, false, objective);
		}
		return 1;
	}
	if(actiune == 5)
	{
		if(VehicleObjective[GetPlayerVehicleID(playerid)] == 0)
		{
			VehicleObjective[GetPlayerVehicleID(playerid)] = 1;
			SendClientMessage(playerid, COLOR_YELLOW, "Marker Turned On");
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, true);
		}
		else if(VehicleObjective[GetPlayerVehicleID(playerid)] == 1)
		{
			VehicleObjective[GetPlayerVehicleID(playerid)] = 0;
			SendClientMessage(playerid, COLOR_YELLOW, "Marker Turned Off");
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, false);
		}
		return 1;
	}
    return 1;
}
CMD:changespawn(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    new actiune;
	if(sscanf(params, "d", actiune))
 	{
        if(PlayerInfo[playerid][pPremiumAccount] == 0)
	   	SendClientMessage(playerid, COLOR_WHITE, "Available names: 0:  SpawnPlace, 1: Faction");
	   	else SendClientMessage(playerid, COLOR_WHITE, "Available names: 0:SpawnPlace, 1:Faction, 2:Casa, 3:locul de unde ai parasit serverul");
		return 1;
	}
	if(actiune <0 || actiune >3 && PlayerInfo[playerid][pPremiumAccount] != 0) return  SendClientMessage(playerid, COLOR_RED, "Doar intre 0-3");
	if(actiune <0 || actiune >1 && PlayerInfo[playerid][pPremiumAccount] == 0) return  SendClientMessage(playerid, COLOR_RED, "Doar intre 0-1");
	if(actiune == 0)
	{
	    PlayerInfo[playerid][pSpawn] = 0;
	    SendClientMessage(playerid, COLOR_WHITE, "Acum spawnul tau este la Locul de Spawn");
	    Update(playerid,pSpawnx);
	    return 1;
	}
	if(actiune == 1)
	{
	    PlayerInfo[playerid][pSpawn] = 1;
	    SendClientMessage(playerid, COLOR_WHITE, "Acum spawnul tau este la HQ/Factiune");
	    Update(playerid,pSpawnx);
	    return 1;
	}
	if(actiune == 2 && PlayerInfo[playerid][pPremiumAccount] != 0)
	{
		PlayerInfo[playerid][pSpawn] = 2;
	    SendClientMessage(playerid, COLOR_WHITE, "Acum spawnul tau este la Casa");
	    Update(playerid,pSpawnx);
	    return 1;
	}
	if(actiune == 3 && PlayerInfo[playerid][pPremiumAccount] != 0)
	{
		PlayerInfo[playerid][pSpawn] = 3;
	    SendClientMessage(playerid, COLOR_WHITE, "Acum spawnul tau este in Locul de unde ai parasit Serverul");
	    Update(playerid,pSpawnx);
		return 1;
	}
	return 1;
}
CMD:selectspawn(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    new actiune;
	if(sscanf(params, "d", actiune))
 	{
        if(PlayerInfo[playerid][pPremiumAccount] == 0)
	   	SendClientMessage(playerid, COLOR_WHITE, "Available names: 0:  SpawnPlace, 1: Faction");
	   	else SendClientMessage(playerid, COLOR_WHITE, "Available names: 0:SpawnPlace, 1:Faction, 2:Casa, 3:locul de unde ai parasit serverul");
		return 1;
	}
	if(actiune <0 || actiune >3 && PlayerInfo[playerid][pPremiumAccount] != 0) return  SendClientMessage(playerid, COLOR_RED, "Doar intre 0-3");
	if(actiune <0 || actiune >1 && PlayerInfo[playerid][pPremiumAccount] == 0) return  SendClientMessage(playerid, COLOR_RED, "Doar intre 0-1");
	if(actiune == 0)
	{
	    PlayerInfo[playerid][pSpawn] = 0;
	    SendClientMessage(playerid, COLOR_WHITE, "Acum spawnul tau este la Locul de Spawn");
	    Update(playerid,pSpawnx);
	    return 1;
	}
	if(actiune == 1)
	{
	    PlayerInfo[playerid][pSpawn] = 1;
	    SendClientMessage(playerid, COLOR_WHITE, "Acum spawnul tau este la HQ/Factiune");
	    Update(playerid,pSpawnx);
	    return 1;
	}
	if(actiune == 2 && PlayerInfo[playerid][pPremiumAccount] != 0)
	{
		PlayerInfo[playerid][pSpawn] = 2;
	    SendClientMessage(playerid, COLOR_WHITE, "Acum spawnul tau este la Casa");
	    Update(playerid,pSpawnx);
	    return 1;
	}
	if(actiune == 3 && PlayerInfo[playerid][pPremiumAccount] != 0)
	{
		PlayerInfo[playerid][pSpawn] = 3;
	    SendClientMessage(playerid, COLOR_WHITE, "Acum spawnul tau este in Locul de unde ai parasit Serverul");
	    Update(playerid,pSpawnx);
		return 1;
	}
	return 1;
}
CMD:spawnchange(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    new actiune;
	if(sscanf(params, "d", actiune))
 	{
        if(PlayerInfo[playerid][pPremiumAccount] == 0)
	   	SendClientMessage(playerid, COLOR_WHITE, "Available names: 0:  SpawnPlace, 1: Faction");
	   	else SendClientMessage(playerid, COLOR_WHITE, "Available names: 0:SpawnPlace, 1:Faction, 2:Casa, 3:locul de unde ai parasit serverul");
		return 1;
	}
	if(actiune <0 || actiune >3 && PlayerInfo[playerid][pPremiumAccount] != 0) return  SendClientMessage(playerid, COLOR_RED, "Doar intre 0-3");
	if(actiune <0 || actiune >1 && PlayerInfo[playerid][pPremiumAccount] == 0) return  SendClientMessage(playerid, COLOR_RED, "Doar intre 0-1, pentru VIP 0");
	if(actiune == 0)
	{
	    PlayerInfo[playerid][pSpawn] = 0;
	    SendClientMessage(playerid, COLOR_WHITE, "Acum spawnul tau este la Locul de Spawn");
	    Update(playerid,pSpawnx);
	    return 1;
	}
	if(actiune == 1)
	{
	    PlayerInfo[playerid][pSpawn] = 1;
	    SendClientMessage(playerid, COLOR_WHITE, "Acum spawnul tau este la HQ/Factiune");
	    Update(playerid,pSpawnx);
	    return 1;
	}
	if(actiune == 2)
	{
		PlayerInfo[playerid][pSpawn] = 2;
	    SendClientMessage(playerid, COLOR_WHITE, "Acum spawnul tau este la Casa");
	    Update(playerid,pSpawnx);
	    return 1;
	}
	if(actiune == 3)
	{
		PlayerInfo[playerid][pSpawn] = 3;
	    SendClientMessage(playerid, COLOR_WHITE, "Acum spawnul tau este in Locul de unde ai parasit Serverul");
	    Update(playerid,pSpawnx);
		return 1;
	}
	return 1;
}

CMD:handbrake(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_RED,"Nu esti sofer");
    if(IsABike(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"Bicicleta nu are motor");
 	if(VehicleEngine[GetPlayerVehicleID(playerid)] != 0) return GameTextForPlayer(playerid,"~r~Opreste motorul",2000,1);
    if(FrenodeMano[GetPlayerVehicleID(playerid)] == 1)
	{
	    if(OwnedVeh(GetPlayerVehicleID(playerid)))
  		{
		  	vInfo[OwnedVeh(GetPlayerVehicleID(playerid))][vVariabila] = 0;
		    vUpdate(OwnedVeh(GetPlayerVehicleID(playerid)), vVariabilax);
		}
		FrenodeMano[GetPlayerVehicleID(playerid)] = 0;
        format(strings, sizeof(strings), "* %s elibereaza frana de mana.", PlayerName(playerid));
	    ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	    SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
	    return 1;
 	}
	if(FrenodeMano[GetPlayerVehicleID(playerid)] == 0)
 	{
 	    if(OwnedVeh(GetPlayerVehicleID(playerid)))
  		{
		  	vInfo[OwnedVeh(GetPlayerVehicleID(playerid))][vVariabila] = 1;
		    vUpdate(OwnedVeh(GetPlayerVehicleID(playerid)), vVariabilax);
		}
		FrenodeMano[GetPlayerVehicleID(playerid)] = 1;
  		GetVehiclePos(GetPlayerVehicleID(playerid), VehFrenoPOS[GetPlayerVehicleID(playerid)][0], VehFrenoPOS[GetPlayerVehicleID(playerid)][1], VehFrenoPOS[GetPlayerVehicleID(playerid)][2]);
  		GetVehicleZAngle(GetPlayerVehicleID(playerid), VehFrenoPOS[GetPlayerVehicleID(playerid)][3]);
  		SetVehicleVelocity(GetPlayerVehicleID(playerid), 0, 0, 0);
  		format(strings, sizeof(strings), "* %s trage frana de mana.", PlayerName(playerid));
  		ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
  		SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
		return 1;
 	}
 	return 1;
}

CMD:engine(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_RED,"Nu esti sofer");
    if(IsABike(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"Bicicleta nu are motor");
	if(instart[playerid] == 1) return 1;
	if(Codel[playerid] == 0) return SendClientMessage(playerid,COLOR_LIGHTBLUE,"introduceti codul (/checkcode)");
    if(DealerVeh(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_LIGHTBLUE,"Nu poti porni aceasta masina");
	if(IsARentableAir(GetPlayerVehicleID(playerid)) && HireCar[playerid] != GetPlayerVehicleID(playerid)) return SendClientMessage(playerid,-1," Trebuie sa inchiriezi vehiculul inainte de a porni motorul /rentbike");
	if(FrenodeMano[GetPlayerVehicleID(playerid)] == 1) return SendClientMessage(playerid,0xFF444499," Nu poti porni masina cu frana de mana trasa!");
    if(Refueling[playerid] == 1) return SendClientMessage(playerid,COLOR_RED," Vehiculul se alimenteaza");
	if(VehicleEngine[GetPlayerVehicleID(playerid)] == 0)
	{
		SetTimerEx("StartingTheVehicle",2500,0,"i",playerid);
		instart[playerid] = 1;
		GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Incerci sa pornesti~n~ motorul",1500,3);
		return 1;
   	}
	else
	{
		new Float:health;
		GetVehicleHealth(GetPlayerVehicleID(playerid), health);
		if(health < 350) SetVehicleHealth(GetPlayerVehicleID(playerid), 350);
	 	instart[playerid] = 0;
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
		VehicleEngine[GetPlayerVehicleID(playerid)] = 0;
		VehicleLights[GetPlayerVehicleID(playerid)] = 0;
		format(strings, sizeof(strings), "* %s opreste motorul.", PlayerName(playerid));
		ProxDetector(30.0, playerid, strings, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
	}
	return 1;
}

CMD:st(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin]<4) return SendClientMessage(playerid,-1,"Nu ai acces la aceasta comanda");
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_RED,"Nu esti sofer");
    if(IsABike(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"Bicicleta nu are motor");
	SetTimerEx("StartingTheVehicle",100,0,"i",playerid);
	GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Ai Pornit Motorul",1500,3);
	format(strings, sizeof(strings), "* %s baga cheia in contact si porneste motorul", PlayerName(playerid));
	ProxDetector(30.0, playerid, strings, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
	return 1;
}
CMD:tn(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pAdmin]<4) return SendClientMessage(playerid,-1,"Nu ai acces la aceasta comanda");
    if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_RED,"Nu esti sofer");
    if(IsABike(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"Bicicleta nu are motor");
	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
	VehicleEngine[GetPlayerVehicleID(playerid)] = 0;
	VehicleLights[GetPlayerVehicleID(playerid)] = 0;
	format(strings, sizeof(strings), "* %s opreste motorul.", PlayerName(playerid));
	ProxDetector(30.0, playerid, strings, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
	return 1;
}

CMD:find(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pJob2] != 1 && PlayerInfo[playerid][pJob1] != 1 && !IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "  Nu esti detectiv!");
 	if(FindTimePoints[playerid] > 0 && PlayerInfo[playerid][pDetSkill] < 401) return SendClientMessage(playerid, COLOR_GREY, "   asteapta inainte sa mai cauti pe cineva!");
 	new playa;
	if(sscanf(params, "u", playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /find [playerid/numejucator]");
	if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, COLOR_RED, "Player Deconectat");
	if(gLogged[playa] != 1) return  SendClientMessage(playerid, COLOR_RED, "Player Deconectat");
	if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "nu te poti cauta singur");
 	new points;
	new level = PlayerInfo[playerid][pDetSkill];
	if(level >= 0 && level <= 50)
	points = 20;
	else if(level >= 51 && level <= 100)
	points = 25;
	else if(level >= 101 && level <= 200)
	points = 30;
	else if(level >= 201 && level <= 400)
	points = 40;
	else if(level >= 401)
	points = 60;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playa, X,Y,Z);
	if(Z>600)
    SetPlayerCheckpoint(playerid, InteriorPosx[playa],InteriorPosy[playa],InteriorPosz[playa], 6);
	else
	SetPlayerCheckpoint(playerid, X,Y,Z, 6);
	FindTime[playerid] = playa;
	FindTimePoints[playerid] = points;
	PlayerInfo[playerid][pDetSkill] ++;
	Update(playerid, pDetSkillx);
	UsedFind[playerid] = 1;
	CP[playerid] = 0;
	if(PlayerInfo[playerid][pDetSkill] == 50)
	SendClientMessage(playerid, COLOR_YELLOW, "* Skilul tau de Detectiv este acum Level 2, acum vei putea cauta mai repede.");
	else if(PlayerInfo[playerid][pDetSkill] == 100)
	SendClientMessage(playerid, COLOR_YELLOW, "* Skilul tau de Detectiv este acum Level 3, acum vei putea cauta mai repede.");
	else if(PlayerInfo[playerid][pDetSkill] == 200)
	SendClientMessage(playerid, COLOR_YELLOW, "* Skilul tau de Detectiv este acum Level 4, acum vei putea cauta mai repede.");
	else if(PlayerInfo[playerid][pDetSkill] == 400)
	SendClientMessage(playerid, COLOR_YELLOW, "* Skilul tau de Detectiv este acum Level 5, acum poti cauta pe cine vrei cand vrei.");
    return 1;
}

CMD:live(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerInfo[playerid][pMember] != 9 && PlayerInfo[playerid][pLeader] != 9) return SendClientMessage(playerid,COLOR_RED,"Nu esti news reporter");
    if(PlayerInfo[playerid][pRank] < 3) return  SendClientMessage(playerid, COLOR_GREY, "   Trebuie sa ai rank 3+ !");
    if(TalkingLive[playerid] != 999)
    {   SendClientMessage(playerid, COLOR_LIGHTBLUE, "* LIVE Incheiat.");
        SendClientMessage(TalkingLive[playerid], COLOR_LIGHTBLUE, "* LIVE Incheiat.");
        TogglePlayerControllable(playerid, 1);
        TogglePlayerControllable(TalkingLive[playerid], 1);
        TalkingLive[TalkingLive[playerid]] = 999;
        TalkingLive[playerid] = 999;
        return 1;
	}
    new playa;
   	if(sscanf(params, "u", playa)) return SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /live [playerid/numejucator]");
	if(gLogged[playa] != 1) return SendClientMessage(playerid,COLOR_RED,"Playerul nu este logat");
	if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"InvPlayerID");
	if (!ProxDetectorPlayer(5.0, playerid, playa)) return SendClientMessage(playerid,COLOR_RED,"Nu esit langa player");
	format(strings, sizeof(strings), "* I-ai oferit lui %s o Conversatie LIVE", PlayerName(playa));
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
	format(strings, sizeof(strings), "* %s ti-a oferit o Conversatie LIVE, scrie (/accept live).", PlayerName(playerid));
	SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
	LiveOffer[playa] = playerid;
	return 1;
}


CMD:news(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pMember] != 9 && PlayerInfo[playerid][pLeader] != 9) return SendClientMessage(playerid,COLOR_RED,"Nu faci parte din factiune");
    if(PlayerInfo[playerid][pMute] >= 1) return SendClientMessage(playerid, TEAM_CYAN_COLOR, " ai mute!");
	if (!IsPlayerInRangeOfPoint(playerid, 50.0,  1833.5199,-1273.9977,109.3594)) return SendClientMessage(playerid,COLOR_RED,"Nu esti in cladirea News Reporter. Etajul 17");
	new message[128];
	if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /news [newstext]");
    if(PlayerInfo[playerid][pAdmin] < 6 && GasesteReclama(message) || FindIP(message))
	{
	    format(strings, sizeof(strings), "%s[%d] a facut reclama pe news: %s",PlayerName(playerid),playerid, message);
	    AdminsBroadCast(COLOR_RED,strings,1);
	    HackLog(strings);
	    return 1;
	}
	new rtext[20];
	if(PlayerInfo[playerid][pRank] == 1) { rtext = "Salariat"; }
	else if(PlayerInfo[playerid][pRank] == 2) { rtext = "Jurnalist"; }
	else if(PlayerInfo[playerid][pRank] == 3) { rtext = "Jurnalist-Sef"; }
	else if(PlayerInfo[playerid][pRank] == 4) { rtext = "Secretar"; }
	else if(PlayerInfo[playerid][pRank] == 5) { rtext = "Editor"; }
    else if(PlayerInfo[playerid][pRank] == 6) { rtext = "Editor-Sef"; }
    else if(PlayerInfo[playerid][pRank] == 7) { rtext = "Manager"; }
    else if(PlayerInfo[playerid][pRank] == 8) { rtext = "Producator"; }
	else { rtext = "Intern Worker"; }
	format(strings, sizeof(strings), "{FB6704}[ABC News] {FF3300}%s %s{5FB748}: %s", rtext, PlayerName(playerid), message);
	OOCNews(COLOR_LIGHTRED,strings);
	PlayerInfo[playerid][pNewsSkill] ++;
	Update(playerid, pNewsSkillx);
	if(PlayerInfo[playerid][pNewsSkill] == 50)
	SendClientMessage(playerid, COLOR_YELLOW, "* Skilul tau de Reporter este acum Level 2, curand vei putea zbura cu Elicopter.");
	else if(PlayerInfo[playerid][pNewsSkill] == 100)
	SendClientMessage(playerid, COLOR_YELLOW, "* Skilul tau de Reporter este acum Level 3, curand vei putea da live.");
	else if(PlayerInfo[playerid][pNewsSkill] == 200)
	SendClientMessage(playerid, COLOR_YELLOW, "* Skilul tau de Reporter este acum Level 4, curand vei putea da live din Elicopter.");
	else if(PlayerInfo[playerid][pNewsSkill] == 400)
	SendClientMessage(playerid, COLOR_YELLOW, "* Skilul tau de Reporter este acum Level 5, Acum poti vorbi cu orice persona.");
	return 1;
}

CMD:repair(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pJob2] != 7 && PlayerInfo[playerid][pJob1] != 7) return SendClientMessage(playerid, COLOR_GREY, "   Nu esti mecanic!");
	new playa,price;
	if(sscanf(params, "ud", playa,price)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /repair [playerid/numejucator] [price]");
	new vehicleid = GetPlayerVehicleID(playerid);
    if(tcc1 == vehicleid || tcc2 == vehicleid || tcc3 == vehicleid || tcc5 == vehicleid || tcc4 == vehicleid || tcc6 == vehicleid || tcc7 == vehicleid)
	{
		if(price < 1 || price > 99999) return SendClientMessage(playerid, COLOR_GREY, "  Pretul trebuie sa fie intre 1 si 99999!");
		if(gLogged[playa] != 1) return  SendClientMessage(playerid, COLOR_RED, "Player Deconectat");
        if(!ProxDetectorPlayer(8.0, playerid, playa)) return SendClientMessage(playerid,COLOR_RED,"Nu te afli langa player");
		if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "   Nu poti face asta!");
 	    format(strings, sizeof(strings), "* I-ai oferit lui %s sa ii repari masina pentru $%d .",PlayerName(playa),price);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
		format(strings, sizeof(strings), "* Car Mechanic %s vrea sa iti repare masina pentru $%d, (scrie /accept repair) pentru a accepta.",PlayerName(playerid),price);
		SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
		RepairOffer[playa] = playerid;
		RepairPrice[playa] = price;
		format(strings,sizeof(strings), "%s %d [CMD] -> /repair lui %s %d bani %d",PlayerName(playerid),playerid,PlayerName(playa),playa,price);
		JobLog(strings);
		return 1;
	}
	return 1;
}


CMD:refill(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pJob2] != 7 && PlayerInfo[playerid][pJob1] != 7) return SendClientMessage(playerid, COLOR_GREY, "   Nu esti mecanic!");
    new vehicleid = GetPlayerVehicleID(playerid);
    if(tcc1 == vehicleid || tcc2 == vehicleid || tcc3 == vehicleid || tcc5 == vehicleid || tcc4 == vehicleid || tcc6 == vehicleid || tcc7 == vehicleid)
	{
	 	new playa,price,fuel;
		if(sscanf(params, "ud", playa,price)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /refill [playerid/numejucator] [price]");
		if(!IsPlayerConnected(playa)) return  SendClientMessage(playerid, COLOR_RED, "Player Deconectat");
     	if(!ProxDetectorPlayer(8.0, playerid, playa)) return SendClientMessage(playerid,COLOR_RED,"Nu te afli langa player");
		if(price < 1 || price > 99999) return SendClientMessage(playerid, COLOR_GREY, "  Pretul este intre 1 si 99999!");
		if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "   Nu poti face asta!");
		new level = PlayerInfo[playerid][pMechSkill];
		if(level >= 0 && level <= 50)
		fuel = 15;
		else if(level >= 51 && level <= 100)
		fuel = 40;
		else if(level >= 101 && level <= 200)
		fuel = 60;
		else if(level >= 201 && level <= 400)
		fuel = 80;
		else if(level >= 401)
		fuel = 100;
    	format(strings, sizeof(strings), "* I-ai oferit lui %s sa ii umpli rezervorul pentru $%d .",PlayerName(playa),price);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
		format(strings, sizeof(strings), "* Car Mechanic %s vrea sa iti faca plinul cu %d L pentru $%d, (scrie /accept refill) pentru a accepta.",PlayerName(playerid),fuel,price);
		SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
		RefillOffer[playa] = playerid;
		RefillPrice[playa] = price;
		format(strings,sizeof(strings), "%s %d [CMD] -> /refill lui %s %d bani %d",PlayerName(playerid),playerid,PlayerName(playa),playa,price);
		JobLog(strings);
 		return 1;
	}
	return 1;
}
CMD:sex(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pJob2] != 3 && PlayerInfo[playerid][pJob1] != 3) return SendClientMessage(playerid, COLOR_GREY, "   Nu esti Curva!");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "   You can only have Sex in a Car !");
	new Car = GetPlayerVehicleID(playerid);
	new playa,price;
	if(sscanf(params, "ud", playa,price)) return 	SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /sex [playerid/numejucator] [price]");
	if(!IsPlayerConnected(playa)) return  SendClientMessage(playerid, COLOR_RED, "Player Deconectat");
    if(!ProxDetectorPlayer(8.0, playerid, playa)) return SendClientMessage(playerid,COLOR_RED,"Nu te afli langa player");
	if(price < 1 || price > 99999) return SendClientMessage(playerid, COLOR_GREY, "  Pretul este intre 1 si 99999!");
	if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, " Foloseste un vibrator mai bine!");
 	if(SexTimer[playerid] > 0) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Asteapta 10 secunde inainte de a folosi iar comanda!");
    if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(playa, Car))
    {
  		format(strings, sizeof(strings), "* I-ai oferit lui %s sa faca sex cu tine pentru suma de %d$.", PlayerName(playa), price);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
		format(strings, sizeof(strings), "* Curva de %s ti-a oferit sa faci sex cu ea pentru %s$ (scrie /accept sex) sa accepti.", PlayerName(playerid), price);
		SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
        SexOffer[playa] = playerid;
        SexPrice[playa] = price;
	}
	return 1;
}

CMD:dropcar(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pJob2] != 5 && PlayerInfo[playerid][pJob1] != 5) return SendClientMessage(playerid, COLOR_GREY, "   Nu esti Curva!");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "  Nu esti in masina !");
    if(PlayerInfo[playerid][pCarTime] != 0) return SendClientMessage(playerid, COLOR_GREY, "  Ai furat recent deja o masina, asteapta!");
    GameTextForPlayer(playerid, "~b~Vanzare ~n~~y~Du masina la~ r ~ Checkpoint", 5000, 1);
    CP[playerid] = 1;
    SetPlayerCheckpoint(playerid, -1548.3618,123.6438,3.2966,8.0);
 	return 1;
}
CMD:guard(playerid,params[])
{
    if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
	if(PlayerInfo[playerid][pJob2] != 3 && PlayerInfo[playerid][pJob1] != 3) return SendClientMessage(playerid, COLOR_GREY, "   Nu esti BodyGuard!");
	new playa,price;
	if(sscanf(params, "ud", playa,price)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /refill [playerid/numejucator] [price]");
	if(!IsPlayerConnected(playa)) return  SendClientMessage(playerid, COLOR_RED, "Player Deconectat");
    if(!ProxDetectorPlayer(8.0, playerid, playa)) return SendClientMessage(playerid,COLOR_RED,"Nu te afli langa player");
	if(price < 1 || price > 99999)  return SendClientMessage(playerid, COLOR_GREY, "  Pret intre 1 si 99999!");
    if(BodyTimer[playerid] > 0) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Guard: {FFFFFF}Asteapta 30 secunde inainte de a oferi protectie!");
 	if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "   Nu poti face asta!");
   	format(strings, sizeof(strings), "* I-ai oferit lui %s protectie pentru $%d.", PlayerName(playa), price);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
	format(strings, sizeof(strings), "* Bodyguard %s vrea sa iti ofere protectie pentru $%d, (scrie /accept bodyguard).", PlayerName(playerid), price);
	SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
	GuardOffer[playa] = playerid;
	GuardPrice[playa] = price;
	BodyTimer[playerid] = 30;
	return 1;
}

CMD:boxstats(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
  	if(PlayerInfo[playerid][pJob2] != 6 && PlayerInfo[playerid][pJob1] != 6) return SendClientMessage(playerid, COLOR_GREY, "Nu esti boxeur!");
    new ttext[20];//Title
    new clevel = PlayerInfo[playerid][pBoxSkill];
 	if(clevel >= 0 && clevel <= 50)			ttext = "Beginner";
	else if(clevel >= 51 && clevel <= 200)  ttext = "Amateur";
	else if(clevel >= 201 && clevel <= 400) ttext = "Professional";
	new ntext[20];//NickName
	new level = PlayerInfo[playerid][pWin];
    if(level >= 0 && level <= 10) ntext = "Newcomer";
    else if(level >= 11 && level <= 20)  ntext = "Touchy Fist";
    else if(level >= 21 && level <= 30)  ntext = "Nut Cracker";
    else if(level >= 31 && level <= 40)  ntext = "Tommygun";
    else if(level >= 41 && level <= 50)  ntext = "Skull Breaker";
    else if(level >= 51 && level <= 60)  ntext = "Light Speed";
    else if(level >= 61 && level <= 70)  ntext = "Unbroken Warrior";
    else if(level >= 71)  				 ntext = "Itallion Stallion";
 	if(level > 0 && PlayerInfo[playerid][pLoses] == 0) ntext = "Undefeated";
    SendClientMessage(playerid, COLOR_WHITE, "|__________________ Boxing Records __________________|");
    format(strings, sizeof(strings), "| Current Champion: %s, with [%d] Winnings and [%d] Losses.", Titel[TitelName],Titel[TitelWins],Titel[TitelLoses]);
	SendClientMessage(playerid, COLOR_GREY, strings);
	format(strings, sizeof(strings), "| Current Title: %s.", ttext);
	SendClientMessage(playerid, COLOR_GREY, strings);
	format(strings, sizeof(strings), "| Current NickName: %s.", ntext);
	SendClientMessage(playerid, COLOR_GREY, strings);
	format(strings, sizeof(strings), "| Total Wins: %d.", PlayerInfo[playerid][pWin]);
	SendClientMessage(playerid, COLOR_GREY, strings);
	format(strings, sizeof(strings), "| Total Losses: %d.", PlayerInfo[playerid][pLoses]);
	SendClientMessage(playerid, COLOR_GREY, strings);
	SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________________|");
 	return 1;
}

CMD:fight(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
  	if(PlayerInfo[playerid][pJob2] != 6 && PlayerInfo[playerid][pJob1] != 6) return SendClientMessage(playerid, COLOR_GREY, "Nu esti boxeur!");
    if(InRing > 0) return SendClientMessage(playerid, COLOR_GREY, "   Este deja un meci in desfasurare ateapta!");
    if(PlayerBoxing[playerid] > 0) return  SendClientMessage(playerid, COLOR_GREY, "Deja te lupti !");
    if(!IsPlayerInRangeOfPoint(playerid,20.0,765.9343,0.2761,1000.7173)) return SendClientMessage(playerid, COLOR_GREY, "  Nu esti la sala de box");
	new playa;
	if(sscanf(params, "u", playa)) return SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /fight [playerid/numejucator]");
	if(!IsPlayerConnected(playa)) return  SendClientMessage(playerid, COLOR_RED, "Player Deconectat");
    if(!ProxDetectorPlayer(8.0, playerid, playa)) return SendClientMessage(playerid,COLOR_RED,"Nu te afli langa player");
    if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Nu poti face asta");
	format(strings, sizeof(strings), "* L-ai provocat pe %s la un meci de box.", PlayerName(playa));
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
	format(strings, sizeof(strings), "* Boxeur %s vrea sa faca box cu tine (scrie /accept box).", PlayerName(playerid));
	SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
 	BoxOffer[playa] = playerid;
    return 1;
}


CMD:heal(playerid,params[])
{
    if(PlayerInfo[playerid][pJob2] != 4 && PlayerInfo[playerid][pJob1] != 4) return SendClientMessage(playerid, COLOR_GREY, "   Nu esti Paramedic!");
	new playa;
	if(sscanf(params, "u", playa)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /heal [playerid/numejucator]");
	if(!IsAnAmbulance(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"Nu esti in ambulanta/elicopter");
	if(!IsPlayerConnected(playa)) return  SendClientMessage(playerid, COLOR_RED, "Player Deconectat");
    if(!ProxDetectorPlayer(12.0, playerid, playa)) return SendClientMessage(playerid,COLOR_RED,"Nu te afli langa player");
	if (playa == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "  Nu iti poti umple singur viata!");
	new Float:tempheal;
	GetPlayerHealth(playa,tempheal);
	if(tempheal >= 99.0) return SendClientMessage(playerid, COLOR_GREEN,"Acel jucator are deja viata plina.");
 	format(strings, sizeof(strings), "~y~L-ai vindecat pe ~n~~w~%s~n~~g~$%d", playa,5000);
	GameTextForPlayer(playerid, strings, 5000, 1);
	GivePlayerCash(playerid,5000);
	GivePlayerCash(playa,-100);
    SetPlayerHealth(playa,100);
	PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
	PlayerPlaySound(playa, 1150, 0.0, 0.0, 0.0);
    format(strings,sizeof(strings), "%s %d [CMD] -> /heal %d %s ",PlayerName(playerid),playerid,PlayerName(playa),playa);
	JobLog(strings);
	format(strings, sizeof(strings), "Ai fost vindecat pana la %d puncte de viata. -$%d",tempheal,100);
	SendClientMessage(playa, COLOR_GREEN,strings);
	if(STDPlayer[playa] > 0) {STDPlayer[playa] = 0; SendClientMessage(playa, COLOR_LIGHTBLUE, "* Nu mai ai STD datorita vindecarii medicului !");}
	return 1;
}

CMD:attachtrailertofarm(playerid,params[])
{
	new vehicleid = GetPlayerVehicleID(playerid);
  	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pJob1] == 11 || PlayerInfo[playerid][pJob2] == 11)
     	{
			if(OnJob[playerid] == 0)
			{
				SetPlayerCheckpoint(playerid,-381.52725, -1426.59070, 26.15115,3);
     	    	CP[playerid]  = 6977;
     	    	SendClientMessage(playerid,-1,"Du-te la siloz sa vezi unde trebuie sa ari!");
     	    	OnJob[playerid] = 11;
			}
 			if(vehicleid == farmer0)
			{
				if(IsTrailerAttachedToVehicle(vehicleid))
			    {
			    	DetachTrailerFromVehicle(vehicleid);
			        return 1;
       			}
		    	AttachTrailerToVehicle(trailerfarm0, vehicleid);
          	}
			if(vehicleid == farmer1)
			{
				if(IsTrailerAttachedToVehicle(vehicleid))
			    {
			    	DetachTrailerFromVehicle(vehicleid);
			        return 1;
       			}
		    	AttachTrailerToVehicle(trailerfarm1, vehicleid);
          	}
	   		if(vehicleid == farmer2)
			{
				if(IsTrailerAttachedToVehicle(vehicleid))
			    {
			    	DetachTrailerFromVehicle(vehicleid);
			        return 1;
       			}
		    	AttachTrailerToVehicle(trailerfarm2, vehicleid);
          	}
			if(vehicleid == farmer3)
   			{
				if(IsTrailerAttachedToVehicle(vehicleid))
			    {
			    	DetachTrailerFromVehicle(vehicleid);
			        return 1;
       			}
		    	AttachTrailerToVehicle(trailerfarm3, vehicleid);
          	}
		 	if(vehicleid == farmer4)
			{
				if(IsTrailerAttachedToVehicle(vehicleid))
			    {
			    	DetachTrailerFromVehicle(vehicleid);
			        return 1;
       			}
		    	AttachTrailerToVehicle(trailerfarm4, vehicleid);
          	}
      	}
   	}
	return 1;
}



CMD:joprtjhjhfghtr(playerid, params[])
{
    new Float: oX,Float: oY,Float: oZ;
 	GetObjectPos(PoolBall[0], oX, oY, oZ);
	SetPlayerLookAt(playerid,oX, oY);
    CanMove[playerid] = 2;
  	SetCameraBehindPlayer(playerid);
    AttachCameraToPlayerObject(playerid, PlayerCameraTac[playerid]);
	new Float:X,Float:Y,Float:Z;
  	TeleportedPlayerToObjectLeft(playerid,X,Y,Z);
  	SetPlayerPos(playerid,X,Y,Z);
    TogglePlayerControllable(playerid,0);
	return 1;
}

CMD:dasadsdasadsds(playerid, params[])
{
    new Float: oX,Float: oY,Float: oZ;
 	GetObjectPos(PoolBall[0], oX, oY, oZ);
	SetPlayerLookAt(playerid,oX, oY);
    CanMove[playerid] = 1;
    SetCameraBehindPlayer(playerid);
    AttachCameraToPlayerObject(playerid, PlayerCameraTac[playerid]);
    new Float:X,Float:Y,Float:Z;
	TeleportedPlayerToObjectRight(playerid,X,Y,Z);
 	SetPlayerPos(playerid,X,Y,Z);
    TogglePlayerControllable(playerid,0);
	return 1;
}

CMD:buyticket(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 3.0,-2094.2874,-1423.5042,1.1139))return 1;
 	if(SBizzInfo[4][sbProduse] == 0) return GameTextForPlayer(playerid, "~r~Stoc epuizat", 5000, 1);
    if(GetPlayerMoney(playerid) < BizzInfo[4][bEntranceCost]) return GameTextForPlayer(playerid, "~r~Nu ai bani", 5000, 1);
    if(ticket[playerid] == 1) return SendClientMessage(playerid,COLOR_RED, "Ai deja bilet la Spa");
    GivePlayerCash(playerid,-10000);
	BizzInfo[4][bTill] += 10000;
    bUpdate(4,bTillx);
	BizzInfo[4][bProducts] -= 1;
    bUpdate(4,bProductsx);
 	ticket[playerid] = 1;
 	SendClientMessage(playerid,COLOR_WHITE, "Ai cumparat bilet la Spa");
 	SendClientMessage(playerid,COLOR_GREEN, "Ai platit 10.000$");
  	return 1;
}

CMD:vestiarb(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 3.0,-2087.2097,-1432.7455,1.1139)) return SCM(playerid,-1,"Nu esti la vestiar!");
    if(ticket[playerid] == 0) return SendClientMessage(playerid,COLOR_RED, "Nu ai bilet la Spa");
    if(PlayerInfo[playerid][pSex] != 1) return SendClientMessage(playerid,COLOR_WHITE, "Aici este vestiarul pentru barbati");
    ShowPlayerDialog(playerid, 1111, DIALOG_STYLE_LIST, "Vestiar Barbati", "Skin 1\nSkin 2\nSkin 3\nSkin 4\nSkin 5\nSkin 6\nSkinul tau", "Alege", "Cancel");
   	ticket[playerid] = 2;
	SendClientMessage(playerid,COLOR_WHITE, "Alege skinul dorit");
    return 1;
}
CMD:vestiarf(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,  3.0,-2082.5615,-1433.5244,1.1139)) return SCM(playerid,-1,"Nu esti la vestiar!");
    if(ticket[playerid] == 0) return SendClientMessage(playerid,COLOR_RED, "Nu ai bilet la Spa");
    if(PlayerInfo[playerid][pSex] != 2) return SendClientMessage(playerid,COLOR_WHITE, "Aici este vestiarul pentru barbati");
    ShowPlayerDialog(playerid, 1112, DIALOG_STYLE_LIST, "Vestiar Femei", "Skin 1\nSkin 2\nSkin 3\nSkin 4\nSkin 5\nSkin 6\nSkinul tau", "Alege", "Cancel");
   	ticket[playerid] = 2;
	SendClientMessage(playerid,COLOR_WHITE, "Alege skinul dorit");
    return 1;
}
CMD:selldrugs(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
  	if(PlayerInfo[playerid][pJob2] != 25 && PlayerInfo[playerid][pJob1] != 25) return SendClientMessage(playerid, COLOR_GREY, "Nu esti Dealer!");
 	new playa,price,ammont;
	if(sscanf(params, "udd", playa,ammont,price)) return SendClientMessage(playerid, COLOR_GRAD2, "{00FF00}Folosire:{FFFFFF} /selldrugs [playerid/numejucator] [ammount] [price]");
	if(ammont < 1 || ammont > 99) return SendClientMessage(playerid, COLOR_GREY, "Nu poti vinde mai mult de 99 grame sau mai putin de 1 gram!");
	if(price < 1 || price > 9999) return SendClientMessage(playerid, COLOR_GREY, "  Pret intre 1 si 9999 $!");
	if(ammont > PlayerInfo[playerid][pDrugs]) return  SendClientMessage(playerid, COLOR_GREY, " Nu ai atatea droguri !");
	if(!IsPlayerConnected(playa))  return  SendClientMessage(playerid, COLOR_GREY, "player offline!");
    if(playa == INVALID_PLAYER_ID)  return  SendClientMessage(playerid, COLOR_GREY, "player nu e langa tine!");
 	if (ProxDetectorPlayer(8.0, playerid, playa)) return  SendClientMessage(playerid, COLOR_GREY, "player offline!");
  	if(DrugTimer[playerid] > 0) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Drugs: {FFFFFF}Trebuie sa astepti inainte de a mai da /selldrugs!");
	if(playa == playerid) return   SendClientMessage(playerid, COLOR_GREY, "  foloseste /usedrugs!");
    DrugTimer[playerid] = 30;
    format(strings, sizeof(strings), "*I-ai oferit lui %s sa cumpere %d grame pentru %d $ .", PlayerName(playa), ammont, price);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
	format(strings, sizeof(strings), "* Drug Dealer %s vrea sa iti vand %d grame pentru %d $ (scrie /accept drugs) sa cumperi.", PlayerName(playerid), ammont, price);
	SendClientMessage(playa, COLOR_LIGHTBLUE, strings);
	DrugOffer[playa] = playerid;
	DrugPrice[playa] = price;
	DrugGram[playa] = ammont;
 	return 1;
}
CMD:usedrugs(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if(PlayerBoxing[playerid] > 0) return        SendClientMessage(playerid, COLOR_GREY, "	Nu poti folosi droguri !");
	if(PlayerInfo[playerid][pDrugs] < 1) return        SendClientMessage(playerid, COLOR_GREY, "Nu ai droguri !");
	if(DrugTimer[playerid] > 0) return SendClientMessage(playerid, COLOR_WHITE, "{1580EA}Drugs: {FFFFFF}asteapta inainte sa folosesti iar");
    DrugTimer[playerid] = 30;
// 	PlayerStoned[playerid] += 1;
// 	if(PlayerStoned[playerid] >= 2)	GameTextForPlayer(playerid, "~w~You are~n~~p~STONED", 4000, 1);
    new Float:health;
    GetPlayerHealth(playerid, health);
    SetPlayerHealth(playerid, health + 50.0);
	if(health > 150) SetPlayerHealth(playerid, 150);
    SendClientMessage(playerid, COLOR_GREY, "Ai folosit 2 grame!");
 	PlayerInfo[playerid][pDrugs] -= 2;
    Update(playerid, pDrugsx);
	ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_01", 4.0, 1, 0, 0, 0, 0);
	ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_01", 4.0, 1, 0, 0, 0, 0);
	SetPlayerWeather(playerid, -68);
 	SetTimerEx("DrugEffectGone", 25000, false, "i", playerid);
   	GameTextForPlayer(playerid, "~r~Droguri~w~ folosite", 3000, 1);
    format(strings, sizeof(strings), "%s trage pe nas niste heroina", PlayerName(playerid));
	ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	if(STDPlayer[playerid]==1)
	{
		STDPlayer[playerid] = 0;
 		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Nu mai suferi de vre-o boala !");
	}
	else if(STDPlayer[playerid]==2)
	{
     STDPlayer[playerid] = 1;
     SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ai trecut de la STD la Chlamydia din cauza drogurilor!");
	}
	else if(STDPlayer[playerid]==3)
	{
	     STDPlayer[playerid] = 2;
	     SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Ai trecut de la  STD la Gonorrhea din cauza drogurilor!");
	}
 	return 1;
}
CMD:get(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if (PlayerInfo[playerid][pJob2] == 25 && PlayerInfo[playerid][pJob1] == 25)
    if(!IsPlayerInRangeOfPoint(playerid,4, 323.0342,1118.5804,1083.8828))  return SendClientMessage(playerid,COLOR_RED,"Nu esti la drug dealer");
	new ammount,price,level = PlayerInfo[playerid][pDrugsSkill],tel;
	if(sscanf(params, "d", ammount)) return	SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /get [drugs]");
    if(PlayerInfo[playerid][pDrugs] > 15 &&   PlayerInfo[playerid][pDrugsSkill]< 400) return  	SendClientMessage(playerid, COLOR_GREY, "Ai prea multe  droguri la tine");
	if(PlayerInfo[playerid][pDrugs] > 4000 && PlayerInfo[playerid][pDrugsSkill]>= 400) return  	SendClientMessage(playerid, COLOR_GREY, "Ai 4 kilograme la tine deja!");
	if(level >= 0 && level <= 50)
	{
		tel = 200;
		if(ammount < 1 || ammount > 6)
		{
			SendClientMessage(playerid, COLOR_GREY, "  Pentru skilul tau intre 1 si 6!");
			return 1;
		}
	}
	else if(level >= 51 && level <= 100)
	{
		tel = 150;
		if(ammount < 1 || ammount > 12)
		{
			SendClientMessage(playerid, COLOR_GREY, "  Pentru skilul tau intre 1 si 12!");
			return 1;
		}
	}
	else if(level >= 101 && level <= 200)
	{
		tel = 100;
		if(ammount < 1 || ammount > 20)
		{
			SendClientMessage(playerid, COLOR_GREY, "  Pentru skilul tau intre 1 si 20!");
			return 1;
		}
	}
	else if(level >= 201 && level <= 400)
	{
		tel = 50;
		if(ammount < 1 || ammount > 30)
		{
			SendClientMessage(playerid, COLOR_GREY, "  Pentru skilul tau intre 1 si 30!");
			return 1;
		}
	}
	else if(level >= 401)
	{
		tel = 10;
		if(ammount < 1 || ammount > 99)
		{
			SendClientMessage(playerid, COLOR_GREY, "  Pentru skilul tau intre 1 si 99!");
			return 1;
		}
	}
    price = ammount * tel;
    if(GetPlayerCash(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, "nu ai bani!");
   	format(strings, sizeof(strings), "* Ai cumparat %d grame epntru %d$", ammount, price);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
    GivePlayerCash(playerid, -price);
	PlayerInfo[playerid][pDrugs] += ammount;
	Update(playerid, pDrugsx);
	return 1;
}
/*
CMD:materials(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if (PlayerInfo[playerid][pJob2] == 28 && PlayerInfo[playerid][pJob1] == 28)
 	new message[128],ammount;
	if(sscanf(params, "s[128]d", message,ammount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "{00FF00}Folosire:{FFFFFF} /materials [name]");
		SendClientMessage(playerid, COLOR_WHITE, "Available names: Get, Deliver.");
		return 1;
	}
	if(strcmp(params, "get", true) == 0)
	{
	     if(IsPlayerInRangeOfPoint(playerid,4,597.1277,-1248.6479,18.273))
	     {
	     	if(MatsHolding[playerid] >= 10) return  SendClientMessage(playerid, COLOR_GREY, "   You can't hold any more Materials Packages !");

					new price = moneys * 100;
					if(GetPlayerCash(playerid) > price)
					{
					    format(string, sizeof(string), "* You bought %d materials packages for $%d.", moneys, price);
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					    format(string, sizeof(string), "* Delivers packages to the checkpoint on the map.");
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					    GivePlayerCash(playerid, - price);
					    MatsHolding[playerid] = moneys;
					    SetPlayerCheckpoint(playerid, 1712.9415,913.0924,10.8203, 2);
					    CP[playerid] = 80;
					}
					else
					{
					    format(string, sizeof(string), "   You can't afford the $%d !", price);
					    SendClientMessage(playerid, COLOR_GREY, string);
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   You are not at the Materials Package Building in Los Santos !");
			        return 1;
			    }
			}
			else if(strcmp(x_nr,"deliver",true) == 0)
			{
			    if(PlayerToPoint(3.0,playerid,1712.9415,913.0924,10.8203))
			    {
			        if(MatsHolding[playerid] > 0)
			        {
			            new payout;
			            if(PlayerInfo[playerid][pDonateRank] < 1) payout = (50)*(MatsHolding[playerid]);
			            else payout = (75)*(MatsHolding[playerid]);
			            format(string, sizeof(string), "* The company gave %d for the %d packages.", payout, MatsHolding[playerid]);
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			            PlayerInfo[playerid][pMats] += payout;
			            Update(playerid, pMaterialsx);
			            MatsHolding[playerid] = 0;
			        }
			        else
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   You don't have any Materials Packages !");
				        return 1;
			        }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   You're not at Las Venturas factory !");
			        return 1;
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Invalid Materials Name !");
			    return 1;
			}
		}
		return 1;
	}

    if(strcmp(cmd,"/sellgun",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pJob] != 9 && PlayerInfo[playerid][pJob1] != 9)
			{
			    SendClientMessage(playerid,COLOR_GREY,"   You are not a Arms Dealer !");
			    return 1;
			}
			new x_weapon[256],weapon[MAX_PLAYERS],ammo[MAX_PLAYERS],price[MAX_PLAYERS];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "{00FF00}Folosire:{FFFFFF} /sellgun [playerid/numejucator] [weaponname]");
				SendClientMessage(playerid, COLOR_GREY, "Weapons: flowers(25) sdpistol(100) eagle(150) mp5(200) shotgun(200)");
				SendClientMessage(playerid, COLOR_GREY, "Weapons: ak47(600) m4(600) rifle (600)");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					x_weapon = strtok(cmdtext, idx);
					if(!strlen(x_weapon))
					{
						SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
						SendClientMessage(playerid, COLOR_WHITE, "*** Sell Guns ***");
						SendClientMessage(playerid, COLOR_GREY, "{00FF00}Folosire:{FFFFFF} /sellgun [playerid/numejucator] [weaponname]");
						SendClientMessage(playerid, COLOR_GREY, "Weapons: flowers(25) sdpistol(100) eagle(200) mp5(200) shotgun(200)");
						SendClientMessage(playerid, COLOR_GREY, "Weapons: ak47(600) m4(600) rifle(600)");
						SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
						return 1;
					}
				}
				//if(strcmp(x_weapon,"knife",true) == 0) { if(PlayerInfo[playerid][pMats] > 99) { weapon[playerid] = 4; price[playerid] = 100; ammo[playerid] = 1; PlayerInfo[giveplayerid][pGun1] = 4; PlayerInfo[giveplayerid][] = 1; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
				if(strcmp(x_weapon,"sdpistol",true) == 0) { if(PlayerInfo[playerid][pMats] > 99) { weapon[playerid] = 23; price[playerid] = 100; ammo[playerid] = 50;  } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
				else if(strcmp(x_weapon,"flowers",true) == 0) { if(PlayerInfo[playerid][pMats] > 24) { weapon[playerid] = 14; price[playerid] = 25; ammo[playerid] = 1;  } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
				else if(strcmp(x_weapon,"eagle",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 24; price[playerid] = 150; ammo[playerid] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
				else if(strcmp(x_weapon,"mp5",true) == 0) {	if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 29; price[playerid] = 200; ammo[playerid] = 200; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
				else if(strcmp(x_weapon,"shotgun",true) == 0) {	if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 25; price[playerid] = 200; ammo[playerid] = 50;  } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
				else if(strcmp(x_weapon,"ak47",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 30; price[playerid] = 600; ammo[playerid] = 250; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
				else if(strcmp(x_weapon,"m4",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 31; price[playerid] = 600; ammo[playerid] = 250;  } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
				else if(strcmp(x_weapon,"rifle",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 33; price[playerid] = 600; ammo[playerid] = 50;  } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
				else { SendClientMessage(playerid,COLOR_GREY,"   Invalid Weapon name!"); return 1; }
				if (ProxDetectorS(5.0, playerid, giveplayerid))
				{
				    if(giveplayerid == playerid)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   You can not sell Guns to yourself!");
						return 1;
					}
					if(PlayerInfo[playerid][pMiserPerk] > 0)
					{
					    new skill = 2 * PlayerInfo[playerid][pMiserPerk];
					    new mats = price[playerid] / 100;
					    price[playerid] -= (mats)*(skill);
					}
					if(PlayerInfo[giveplayerid][pLevel] > 1)
					{
						ConsumingMoney[playerid] = 1;
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "   You have given %s, a %s with %d ammo, for %d Materials.", giveplayer,x_weapon, ammo[playerid], price[playerid]);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "   You have recieved a %s with %d ammo from %s.", x_weapon, ammo[playerid], sendername);
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
						PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "* %s created a Gun from Materials, and hands it to %s.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ServerWeapon(giveplayerid,weapon[playerid],ammo[playerid]);
						PlayerInfo[playerid][pMats] -= price[playerid];
						Update(playerid, pMaterialsx);
					}
					else
					{
					    SendClientMessage(giveplayerid, COLOR_GRAD2, "  The person who gets the weapon needs to be at least Level 2 !");
					    return 1;
		    		}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   You're too far.");
					return 1;
				}
			}
			else
			{
				format(string, sizeof(string), "   %d is not a name.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}*/


CMD:enter(playerid,params[])
{
   	if(gLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY," Nu esti logat.");
	if (IsPlayerInRangeOfPoint(playerid, 14,-2656.1921,1345.6344,7.0737))
	{
		if(!IsACop(playerid) && PlayerInfo[playerid][pMember] != 8 && PlayerInfo[playerid][pLeader] != 8) return 1;
		if(IsPlayerInAnyVehicle(playerid))
		SetVehiclePos(GetPlayerVehicleID(playerid), -2664.8660, 1348.3833, 17.1346);
   		else
   		SetPlayerPos(playerid,-2664.8660, 1348.3833, 17.1346);
		return 1;
	}
	else if (IsPlayerInRangeOfPoint(playerid, 18, 1417.7604,-1661.8816,13.5469))
	{
	    if(IsPlayerInArea(playerid,1386.2695,1415.3740,-1705.3744,-1655.6033))//inauntru
		{/// te da afara
			if(IsPlayerInAnyVehicle(playerid))
			SetVehiclePos(GetPlayerVehicleID(playerid), 1419.8674,-1662.2375,13.5469);
   			else
   			SetPlayerPos(playerid,1419.8674,-1662.2375,13.5469);
		}
		else// afara din parcare
		{/// esti inauntru
			if(IsPlayerInAnyVehicle(playerid))
			SetVehiclePos(GetPlayerVehicleID(playerid), 1410.5331,-1662.7806,13.5581);
   			else
   			SetPlayerPos(playerid,1410.5331,-1662.7806,13.5581);
 		}
	}
	return 1;
}
CMD:exit(playerid,params[])
{
	if(gLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY," Nu esti logat.");
	if (!IsPlayerInRangeOfPoint(playerid, 14,-2664.8660, 1348.3833, 17.134)) return 1;
	if(!IsACop(playerid) && PlayerInfo[playerid][pMember] != 8 && PlayerInfo[playerid][pLeader] != 8) return 1;
	if(IsPlayerInAnyVehicle(playerid))
   	SetVehiclePos(GetPlayerVehicleID(playerid),-2656.1921,1345.6344,7.0737 );
  	else
  	SetPlayerPos(playerid,-2656.1921,1345.6344,7.0737);
	return 1;
}
CMD:lockhq(playerid,params[])
{
	if(gLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY," Nu esti logat.");
  	if(PlayerInfo[playerid][pLeader] == 5)
    {
    	if(hqlock[rifalock] == 0)
	    {
	    	hqlock[rifalock] = 1;
	        SendClientMessage(playerid, COLOR_GREY, "Rifa HQ locked.");
    	}
	    else if(hqlock[rifalock] == 1)
	    {
	    	hqlock[rifalock] = 0;
        	SendClientMessage(playerid, COLOR_GREY, "Rifa HQ unlocked.");
		}
	}
	else if(PlayerInfo[playerid][pLeader] == 6)
	{
		if(hqlock[triadslock] == 0)
	 	{
	    	hqlock[triadslock] = 1;
			SendClientMessage(playerid, COLOR_GREY, "Triads HQ locked.");
	   	}
		else if(hqlock[triadslock] == 1)
		{
  			hqlock[triadslock] = 0;
            SendClientMessage(playerid, COLOR_GREY, "Triads HQ unlocked.");
        }
	}
	else if(PlayerInfo[playerid][pLeader] == 13)
	{
 		if(hqlock[bratvalock] == 0)
	    {
     		hqlock[bratvalock] = 1;
            SendClientMessage(playerid, COLOR_GREY, "Russian Bratva HQ locked.");
       	}
       	else if(hqlock[bratvalock] == 1)
       	{
       		hqlock[bratvalock] = 0;
			SendClientMessage(playerid, COLOR_GREY, "Russian Bratva HQ unlocked.");
		}
	}
	else if(PlayerInfo[playerid][pLeader] == 14)
	{
 		if(hqlock[ballaslock] == 0)
	    {
	    	hqlock[ballaslock] = 1;
            SendClientMessage(playerid, COLOR_GREY, "Ballas HQ locked.");
        }
        else if(hqlock[ballaslock] == 1)
        {
	        hqlock[ballaslock] = 0;
            SendClientMessage(playerid, COLOR_GREY, "Ballas HQ unlocked.");
        }
	}
	else if(PlayerInfo[playerid][pLeader] == 15)
	{
		if(hqlock[sevillelock] == 0)
	    {
	    	hqlock[sevillelock] = 1;
            SendClientMessage(playerid, COLOR_GREY, "Sevile HQ locked.");
        }
        else if(hqlock[sevillelock] == 1)
        {
	    	hqlock[sevillelock] = 0;
            SendClientMessage(playerid, COLOR_GREY, "Sevile HQ unlocked.");
      	}
 	}
	else if(PlayerInfo[playerid][pLeader] == 16)
 	{
  		if(hqlock[crllock] == 0)
    	{
     		hqlock[crllock] = 1;
			SendClientMessage(playerid, COLOR_GREY, "Corleone HQ locked.");
   		}
     	else if(hqlock[crllock] == 1)
      	{
       		hqlock[crllock] = 0;
            SendClientMessage(playerid, COLOR_GREY, "Corleone HQ unlocked.");
         }
	}
	else if(PlayerInfo[playerid][pLeader] == 8)
	{
 		if(hqlock[hitlock] == 0)
   		{
     		hqlock[hitlock] = 1;
            SendClientMessage(playerid, COLOR_GREY, "HitMan HQ locked.");
     	}
	    else if(hqlock[hitlock] == 1)
	    {
	    	hqlock[hitlock] = 0;
            SendClientMessage(playerid, COLOR_GREY, "HitMan HQ unlocked.");
        }
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Nu ai cheia de la nici-un HQ");
    return 1;
}


CMD:loadfuel(playerid,params[])
{
	if(gLogged[playerid] != 1) return SendClientMessage(playerid,COLOR_RED,"Nu esti logat");
    if (PlayerInfo[playerid][pJob2] == 18 && PlayerInfo[playerid][pJob1] == 18) return SCM(playerid,-1,"Nu esti fuel delivery");
 	new vehicleid = GetPlayerVehicleID(playerid);
	if(!IsTrailerAttachedToVehicle(vehicleid)) return SendClientMessage(playerid, COLOR_RED, "Nu ai remorca atasata");
    if(!IsPlayerInRangeOfPoint(playerid, 20,-997.8994,-690.3728,32.5904))
  	{
		SetPlayerCheckpoint(playerid, -1000.0764, -692.2291, 32.0407, 5);
		SendClientMessage(playerid, COLOR_RED, "Nu esti la punctul de incarcare");
		return 1;
   	}
    if(VehicleEngine[GetPlayerVehicleID(playerid)] != 0) return SCM(playerid,-1,"Opreste motorul");
	if(Refueling[playerid] != 0) return 	SendClientMessage(playerid, COLOR_RED, "Cisterna se incarca");
    if(fuel9 == vehicleid || fuel8 == vehicleid || fuel7 == vehicleid || fuel0 == vehicleid || fuel1 == vehicleid || fuel2 == vehicleid || fuel3 == vehicleid || fuel4 == vehicleid || fuel5 == vehicleid || fuel6 == vehicleid)
	{
		new rvehicle = GetVehicleTrailer(vehicleid);
        if(rvehicle == fuel0 || rvehicle == fuel2 || rvehicle == fuel4 || rvehicle == fuel8 || rvehicle == fuel9)
		{
	        format(strings, sizeof(strings), "Ai incarcat %d Litri.",250);
			capacitate[GetVehicleTrailer(vehicleid)] += 250;
			SendClientMessage(playerid, -1, strings);
          	format(strings, sizeof(strings), "Combustibil: %d/250.", capacitate[GetVehicleTrailer(vehicleid)]);
			SendClientMessage(playerid, TEAM_GROVE_COLOR, strings);
		  	SendClientMessage(playerid, -1, "Livreaza Combustibilul la o benzinarie");
			DisablePlayerCheckpoint(playerid);
			SetTimerEx("Fillup", 30*250,false, "i", playerid);
			Refueling[playerid] = 1;
           	format(strings,sizeof(strings), "%s %d [CMD] -> /loadfuel %d",PlayerName(playerid),playerid,250);
			JobLog(strings);
		}
		else return SendClientMessage(playerid, COLOR_RED, "Remorca nu este buna");
  	}
  	else return SCM(playerid,-1,"Nu esti in masina jobului");
	return 1;
}

CMD:sellfuel(playerid,params[])
{
	new vehicleid = GetPlayerVehicleID(playerid);
	if (PlayerInfo[playerid][pJob2] == 18 && PlayerInfo[playerid][pJob1] == 18) return SCM(playerid,-1,"Nu esti fuel delivery");
	if(!IsTrailerAttachedToVehicle(vehicleid)) return SCM(playerid,-1,"Nu ai remorca atasata");
	if(VehicleEngine[vehicleid] != 0) return SCM(playerid,-1,"Opreste motoru");
	if(Refueling[playerid] != 0) return SCM(playerid,-1,"in alimentare");
	if(fuel9 == vehicleid || fuel8 == vehicleid || fuel7 == vehicleid || fuel0 == vehicleid || fuel1 == vehicleid || fuel2 == vehicleid || fuel3 == vehicleid || fuel4 == vehicleid || fuel5 == vehicleid || fuel6 == vehicleid)
	{
	    new rvehicle = GetVehicleTrailer(vehicleid);
       	if(rvehicle == fuel0 || rvehicle == fuel2 || rvehicle == fuel4 || rvehicle == fuel8 || rvehicle == fuel9) {} else return SendClientMessage(playerid,COLOR_RED, "Nu ai reporca potrivita");

 		if(IsPlayerInRangeOfPoint(playerid, 15,658.3221,-565.8550,16.0630) || IsPlayerInRangeOfPoint(playerid, 15,-82.4185,-1174.8540,1.8298) || IsPlayerInRangeOfPoint(playerid, 15,-1676.3669,411.8149,6.9068) || IsPlayerInRangeOfPoint(playerid, 15,-1324.8502,2684.8120,49.783) || IsPlayerInRangeOfPoint(playerid, 15,2115.5447,926.6559,10.5668) || IsPlayerInRangeOfPoint(playerid, 15,2638.3337,1105.4701,10.5559))
		{//gasooo                   GASO SBIZZ 3
       	    if(capacitate[GetVehicleTrailer(vehicleid)] +gaso > 200250) return SendClientMessage(playerid, -1, "Benzinaria nu suporta  capacitate");
	        format(strings, sizeof(strings), "Ai descarcat %d Litri.",250);
			capacitate[GetVehicleTrailer(vehicleid)] -= 250;
			SendClientMessage(playerid, -1, strings);
			gaso += 250;
   			format(strings, sizeof(strings), "Combustibil ramas: %d/250.", capacitate[GetVehicleTrailer(vehicleid)]);
			SendClientMessage(playerid, TEAM_GROVE_COLOR, strings);
			DisablePlayerCheckpoint(playerid);
			GivePlayerCash(playerid,250*100);
   			format(strings, sizeof(strings), "Ai primit %d $.",250*100);
			SendClientMessage(playerid, -1, strings);
   			Refueling[playerid] = 0;
   			format(strings, sizeof(strings), " Gaso Station \n %d Litri \n /fill <litri>",gaso);
		    Update3DTextLabelText(gasoo, 0xFFFFFFFF, strings);
			Update3DTextLabelText(gasoo1, 0xFFFFFFFF, strings);
			Update3DTextLabelText(gasoo2, 0xFFFFFFFF, strings);
			Update3DTextLabelText(gasoo3, 0xFFFFFFFF, strings);
			Update3DTextLabelText(gasoo4, 0xFFFFFFFF, strings);
			Update3DTextLabelText(gasoo5, 0xFFFFFFFF, strings);

  			format(strings,sizeof(strings), "%s %d [CMD] -> /sellfuel %d",PlayerName(playerid),playerid,250);
			JobLog(strings);
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 15,1944.3397,-1771.5894,13.1224) || IsPlayerInRangeOfPoint(playerid, 15,-2027.7162,150.0180,27.4295) || IsPlayerInRangeOfPoint(playerid, 15,1597.1356,2196.5364,10.5538) || IsPlayerInRangeOfPoint(playerid, 15,-1479.9526,1867.0510,32.3627) || IsPlayerInRangeOfPoint(playerid, 15,1359.0516,474.3736,19.9037))
		{//going
		    if(capacitate[GetVehicleTrailer(vehicleid)] +going > 200250) return SendClientMessage(playerid, -1, "Benzinaria nu suporta  capacitate");
	        format(strings, sizeof(strings), "Ai descarcat %d Litri.",250);
			capacitate[GetVehicleTrailer(vehicleid)] -= 250;
			SendClientMessage(playerid, -1, strings);
			going += 250;
   			format(strings, sizeof(strings), "Combustibil ramas: %d/250.", capacitate[GetVehicleTrailer(vehicleid)]);
			SendClientMessage(playerid, TEAM_GROVE_COLOR, strings);
			DisablePlayerCheckpoint(playerid);
			GivePlayerCash(playerid,250*100);
   			format(strings, sizeof(strings), "Ai primit %d $.",250*100);
			SendClientMessage(playerid, -1, strings);
   			Refueling[playerid] = 0;
   			format(strings, sizeof(strings), " Going Station \n %d Litri \n /fill <litri>",going);
		    Update3DTextLabelText(goingg, 0xFFFFFFFF, strings);
			Update3DTextLabelText(goingg1, 0xFFFFFFFF, strings);
			Update3DTextLabelText(goingg2, 0xFFFFFFFF, strings);
			Update3DTextLabelText(goingg3, 0xFFFFFFFF, strings);
			Update3DTextLabelText(goingg4, 0xFFFFFFFF, strings);

  			format(strings,sizeof(strings), "%s %d [CMD] -> /sellfuel %d",PlayerName(playerid),playerid,250);
			JobLog(strings);
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 15,1006.1612,-939.0581,41.9067) || IsPlayerInRangeOfPoint(playerid, 15,-2407.4907,977.6917,45.0239) || IsPlayerInRangeOfPoint(playerid, 15,-1606.2218,-2714.0056,48.2661) ||  IsPlayerInRangeOfPoint(playerid, 15,2202.3484,2473.7263,10.5630) || IsPlayerInRangeOfPoint(playerid, 15, 609.9616,1697.2865,6.7201) || IsPlayerInRangeOfPoint(playerid, 15, 617.3918,1687.2714,6.7177))
		{//xomerr
    		if(capacitate[GetVehicleTrailer(vehicleid)] +xommer > 200250) return SendClientMessage(playerid, -1, "Benzinaria nu suporta  capacitate");
	        format(strings, sizeof(strings), "Ai descarcat %d Litri.",250);
			capacitate[GetVehicleTrailer(vehicleid)] -= 250;
			SendClientMessage(playerid, -1, strings);
			xommer += 250;
   			format(strings, sizeof(strings), "Combustibil ramas: %d/250.", capacitate[GetVehicleTrailer(vehicleid)]);
			SendClientMessage(playerid, TEAM_GROVE_COLOR, strings);
			DisablePlayerCheckpoint(playerid);
			GivePlayerCash(playerid,250*100);
   			format(strings, sizeof(strings), "Ai primit %d $.",250*100);
			SendClientMessage(playerid, -1, strings);
   			Refueling[playerid] = 0;
   			format(strings, sizeof(strings), " Xommer Station \n %d Litri \n /fill <litri>",xommer);
		    Update3DTextLabelText(xommerr, 0xFFFFFFFF, strings);
			Update3DTextLabelText(xommerr1, 0xFFFFFFFF, strings);
			Update3DTextLabelText(xommerr2, 0xFFFFFFFF, strings);
			Update3DTextLabelText(xommerr3, 0xFFFFFFFF, strings);
			Update3DTextLabelText(xommerr4, 0xFFFFFFFF, strings);

  			format(strings,sizeof(strings), "%s %d [CMD] -> /sellfuel %d",PlayerName(playerid),playerid,250);
			JobLog(strings);
			return 1;
		}
		else return SCM(playerid,-1,"Nu esti la o benzinarie");
	}
	else return SCM(playerid,-1,"Nu esti intr-o masina de job");
}

stock AttasLemneToVehicle(vehicleid)
{
	lemne[vehicleid] = CreateDynamicObject(18609, -0.01240, 1.73070, 12210.36200,   0.00000, 0.00000, 0.00000);
	lemns[vehicleid] = 1;
    AttachDynamicObjectToVehicle(lemne[vehicleid], vehicleid,0.15018, -4.54187, 0.79854, 0.00000, 0.00000, 3.66000);
}

stock DesAttachLemne(vehicleid)
{
    lemns[vehicleid] = 0;
	DestroyDynamicObject(lemne[vehicleid]);
    return 1;
}

CMD:loadwood(playerid,params[])
{
	new cars = GetPlayerVehicleID(playerid);
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
    if(PlayerInfo[playerid][pJob2] != 15 && PlayerInfo[playerid][pJob1] != 15) return SCM(playerid,-1,"Nu ai jobul");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 578) return SCM(playerid,-1,"Nu esti in masina de job");
 	if(lemns[GetPlayerVehicleID(playerid)] != 0) return SendClientMessage(playerid, COLOR_RED, "Masina are deja lemne");
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, -528.6440,-102.8151,63.8997)) 
	{
   		SendClientMessage(playerid, COLOR_RED, "Dute cu spatele in interiorul cladiri pentru a incarca");
		SetPlayerCheckpoint(playerid, -528.6440,-102.8151,63.8997, 5.0);
		return 1;
   	}
    TogglePlayerControllable(playerid,0);
 	SetTimerEx("freze", 10000, false, "i", playerid);
    OnJob[playerid] = 1;
	AttasLemneToVehicle(cars);
	SendClientMessage(playerid, 0x00FF00FF, "Asteapta pana se incarca lemnele!");
	SendClientMessage(playerid, 0x00FF00FF, "Livreaza lemnele la fabrica de cherestea din Angel Pine!");
	SetPlayerCheckpoint(playerid, -1992.1659,-2384.2834,31.2501, 5.0);
	format(strings,sizeof(strings), "%s %d [CMD] -> /loadwood %d",PlayerName(playerid),playerid,250);
	JobLog(strings);
	return 1;
}

CMD:sellwood(playerid,params[])
{
	new cars = GetPlayerVehicleID(playerid);
    if(PlayerInfo[playerid][pJob2] != 15 && PlayerInfo[playerid][pJob1] != 15) return SCM(playerid,-1,"Nu ai jobul");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 578) return SCM(playerid,-1,"Nu esti in masina de job");
 	if(lemns[cars] != 1) return 	SendClientMessage(playerid, COLOR_RED, "Nu ai lemne in masina!");
	if(!IsPlayerInRangeOfPoint(playerid, 5.0,  -1992.1659,-2384.2834,31.2501))
	{
  		SendClientMessage(playerid, COLOR_RED, "Nu esti in la locul de descarcare!");
   		SetPlayerCheckpoint(playerid, -1992.1659,-2384.2834,31.2501, 5.0);
		return 1;
   	}
	if(PlayerInfo[playerid][pPremiumAccount] > 0)
 	{
		GivePlayerCash(playerid, 3000);
		SendClientMessage(playerid, COLOR_GREY, "Conturile Vip primesc mai mult");
 	}
    TogglePlayerControllable(playerid,0);
    DesAttachLemne(cars);
    SetTimerEx("freze", 10000, false, "i", playerid);
	OnJob[playerid] = 0;
	GameTextForPlayer(playerid, "~g~Descarci Lemnele!", 2000, 5);
	SendClientMessage(playerid, 0x00FF00FF, "Ai primit 40000$ pentru munca depusa!");
	GivePlayerCash(playerid, 40000);
    DisablePlayerCheckpoint(playerid);
    format(strings,sizeof(strings), "%s %d [CMD] -> /sellwod ",PlayerName(playerid),playerid);
	JobLog(strings);
	return 1;
}

CMD:drinks(playerid,params[])
{
	if(!IsAtBar(playerid)) return SCM(playerid,-1,"Nu esti la bar");
    if(PlayerDrunk[playerid] >= 10) return SCM(playerid,-1,"Nu mai poti bea vei intra in coma alcolica");
    ShowPlayerDialog(playerid, 41, DIALOG_STYLE_LIST, "Ce doriti?", "Sprunk ($10)\nBeer ($20)\nWine ($25)\nRedBull ($30)\nBurn ($10)\nCotnari ($52)\nRom ($40)", "BUY", "CANCEL");
    return 1;
}
IsAtBar(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,4,-2091.9785,-1411.5203,-10.3071)  ||IsPlayerInRangeOfPoint(playerid,4,495.7801,  -76.0305,998.7578) ||
	   IsPlayerInRangeOfPoint(playerid,4,499.9654,-20.2515,1000.6797) 	  || IsPlayerInRangeOfPoint(playerid,4, 1400.3022,-3122.9741,9.6987) ||
	   IsPlayerInRangeOfPoint(playerid,4,1215.9480,-13.3519,1000.9219)    || IsPlayerInRangeOfPoint(playerid,4,-2658.9749,1407.4136,906.2734)||
	   IsPlayerInRangeOfPoint(playerid,4, 1438.6176,-3108.1194,8.1687)    || IsPlayerInRangeOfPoint(playerid,4, 1639.2485,-1458.2992,13.5623))
 	return 1;
	return 0;
}
CMD:icecream(playerid,params[])
{
	if(GetPlayerCash(playerid) < 15) return 1;
	if(!IsAtIcecreamPlace(playerid)) return SCM(playerid,-1,"Nu esti la inghetata");

 	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health >= 75)
	{
    	SetPlayerHealth(playerid, 100);
       	ApplyAnimation(playerid,"FOOD","EAT_Burger", 3.0, 0, 0, 0, 0, 0);
       	GivePlayerCash(playerid, -15);
       	GameTextForPlayer(playerid, "~r~-$15", 5000, 1);
    	format(strings, sizeof(strings), "	%s mananca o inghetata.", PlayerName(playerid));
		ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	else
 	{
		SetPlayerHealth (playerid, health+15);
		ApplyAnimation(playerid,"FOOD","EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		GivePlayerCash(playerid, -15);
		GameTextForPlayer(playerid, "~r~-$15", 5000, 1);
		format(strings, sizeof(strings), "	%s mananca o inghetata.", PlayerName(playerid));
		ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return 1;
}

CMD:hotdog(playerid,params[])
{
	if(GetPlayerCash(playerid) < 25) return 1;
	if(!IsAtHotdogPlace(playerid))  return SCM(playerid,-1,"Nu esti la HotDog");
 	new Float:health;
	GetPlayerHealth(playerid,health);
    if(health >= 75)
    {
	   	SetPlayerHealth(playerid, 100);
       	ApplyAnimation(playerid,"FOOD","EAT_Burger", 3.0, 0, 0, 0, 0, 0);
       	GivePlayerCash(playerid, -25);
      	GameTextForPlayer(playerid, "~r~-$25", 5000, 1);
    	format(strings, sizeof(strings), "	%s mananca un hotdog", PlayerName(playerid));
		ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
 	}
	else
	{
		SetPlayerHealth (playerid, health+15);
		ApplyAnimation(playerid,"FOOD","EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		GivePlayerCash(playerid, -25);
		GameTextForPlayer(playerid, "~r~-$25", 5000, 1);
    	format(strings, sizeof(strings), "	%s mananca un hotdog.", PlayerName(playerid));
		ProxDetector(30.0, playerid, strings, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  	}
  	return 1;
}

CMD:jump(playerid,params[])
return ApplyAnimation(playerid,"DAM_JUMP","DAM_LAUNCH",2,0,1,1,0,0);



	//
//find news repair refill sex dropcar
//
//
//
//===========================================================================/onplayercommandtext===================================
//=======================ANIM===========================
CMD:stopanim(playerid, params[])
{
    if(Tied[playerid] > 0) return SendClientMessage(playerid,-1,"Esti legat, nu poti folosi aceasta comanda!"); //unfreeze player
	if(GetPVarInt(playerid, "UsingAnim") != 1) return SendClientMessage(playerid,-1,"Nu esti intr-o animatie");
 	SendClientMessage(playerid, COLOR_WHITE, "Ai iesit din animatie!");
	ClearAnimations(playerid);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	DeletePVar(playerid,"UsingAnim");
	return 1;
}
CMD:teles(playerid, params[])
{
   	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	new str[444];
    strcat(str, "{09AFF7}/lc, /jpl, /jpi, /flyl, /sail, /sendls, /dealer, /primarie, /dmw,\n\
						/pentagon, /hhouse, /ng, /lc, /sf, /lv, /ls, /mc, /banklv, /bankls, /banksf");
    ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, "{FFFFFF}"#SERVERNAME" Teleport Commands", str, "Ok", "");
	return 1;
}
CMD:hh(playerid, params[])
{
   	if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	new str[524];
    strcat(str, "\n\n{E6BD1A}HELPER LVL 1 	/teles, /cc, /setint, /setvw, /ha, /soss, /pm, /check, /spec, /endspec, /n\n");
	strcat(str, "{E6BD1A}HELPER LVL 2    /kick, /slap, /rtc, /gethere\n");
	strcat(str, "{E6BD1A}HELPER LVL 3    /sound, /freeze, /ts, /countdown\n\n");
	ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, "{FFFFFF}"#SERVERNAME" Helper Commands", str, "Ok", "");
	return 1;
}

CMD:ah(playerid, params[])
{
   	if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_RED, "Nu esti autorizat sa folosesti aceasta comanda");
	new str[1424];
    if(PlayerInfo[playerid][pAdmin] >= 1)
    strcat(str, "\n\n\n\n{0480FB}ADMINS LVL 1 	/teles, /spec, /endspec, /check, /aparking, /rtc, /ahouse, /reports, /goto, /gethere, /ar, /tr, /pm /slap, /soss, /n, /spawn, /a, /ha, /countdown, /sound, /cwe, /kick, /freeze, /cc, /mute, /unarm, /aduty, /setint, /setvw\n");
    if(PlayerInfo[playerid][pAdmin] >= 2)
   	strcat(str, "{0480FB}ADMINS LVL 2    /resetpanou, /minus, /ballspawn, /freezeme, /unfreezeme, /o, /tpoff, /startevent, /sethp, /setarmour, /skydive, /bano, /unwarn, /warn, /wanted, /weather, /xgoto, /rac, /fly, /gotocar, /getcar, /getincar, /bigears, /cnn, /cnnn, /moves\n");
	if(PlayerInfo[playerid][pAdmin] >= 3)
   	strcat(str, "{0480FB}ADMINS LVL 3    /mark, /gotomark, gangedit, /vslap, /svl, /agl, /jail, /tod, /adv, /car, /jl, /rrball, /rub, /crb, /jetpack, /destroycar, /fuelcars, /prac, /checkhp, /cage, /uncage, /sendxtoy, /punch, /burn\n");
	if(PlayerInfo[playerid][pAdmin] >= 4)
   	strcat(str, "{0480FB}ADMINS LVL 4    /fine /setjob, /setjob2, /odometer, /st, /tn /event, /eo, /fuelstation, /healevent, /unarmevent, /unfrezeevent, /freezeevent, /armourevent, /checkbelt, /su, /changeweather, /apark, /explode\n");
	if(PlayerInfo[playerid][pAdmin] >= 5)
   	strcat(str, "{0480FB}ADMINS LVL 5    /aw, /uninvite, /makeleader,  /laser, /giverpall, /vr, /setskin, /we, /givegunallrange, /deagleevent, /rrballs, /house, /houseo, /biz, /sbiz, /weatherall\n");
	if(PlayerInfo[playerid][pAdmin] >= 6)
   	strcat(str, "{0480FB}ADMINS LVL 6    /setstat, /reward, /payday, /unban, /reloadt, /nooc,  /buybomb, /rewardall, /giverpall, /givelevelall, /crash, /game, /ungame, /unbanip\n");
	if(PlayerInfo[playerid][pAdmin] >= 7)
   	strcat(str, "{0480FB}ADMINS LVL 7    /snowall, /vcreate, /set, /asellcar, /aprove, /movebiz /movesbiz /movehouse /hcreate, /sal, /makehelper, /money, /makevip, /setcarhp, /ip, /hprice, /hint\n");
	if(PlayerInfo[playerid][pAdmin] >= 8)
   	strcat(str, "{0480FB}ADMINS LVL 8    /createo, /reg, /gravity /ivn, /editsb, /eiditb, /createatm, /deleteatm, /upload, /restart, /clearlog, /CheatTeles\n\n\n\n");
    ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, "{FFFFFF}"#SERVERNAME" Admin Commands", str, "Ok", "");
	return 1;
}

CMD:anim(playerid, params[])
return cmd_animlist(playerid,params);
CMD:anims(playerid, params[])
return cmd_animlist(playerid,params);
CMD:animlist(playerid, params[])
{
	new str[1024];
    strcat(str, "{00FF40}/handsup, /dance, /rap, /wank, /wankoff, /strip, /sexy, /bj, /cell, /lean, /piss, /robman\n");
    strcat(str, "{2FD03F}/greet, /injured, /hitch, /bitchslap, /cpr, /gsign, /gift, /getup, /follow /gro /hide \n");
    strcat(str, "{00FF40}/sit, /stand, /slapped, /slapass, /drunk, /gwalk, /walk, /celebrate, /win /checkout\n");
    strcat(str, "{2FD03F}/yes, /deal, /thankyou, /invite1, /scratch, /bomb, /getarrested, /laugh /fall /fallback\n");
    strcat(str, "{00FF40}/crossarms, /lay, /cover, /vomit, /eatf, /wave, /crack, /smokeanim,  /lookout /medic \n");
	strcat(str, "{2FD03F}/chat, /fucku, /taichi, /chairsit, /relax, /bat /nod, /cry /chant, /carsmoke, /aim\n");
    strcat(str, "{00FF40}/gang1, /bed, /carsit, /stretch, /angry, /kiss, /exhausted, /ghand, /benddown\n");
    strcat(str, "{2FD03F}/basket, /akick, /box, /cockgun, /bar, /lay, /liftup, /putdown, /die, /joint\n");
	ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, ""#SERVERNAME" Animation List", str, "Ok", "Cancel");
    return 1;
}
CMD:hide(playerid, params[])
{
	SetPVarInt(playerid, "UsingAnim", 1);
	ApplyAnimation(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:fall(playerid, params[])
{
	ApplyAnimation(playerid,"PED","KO_skid_front",4.1,0,1,1,1,0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}
CMD:fallback(playerid, params[])
{
	ApplyAnimation(playerid, "PED","FLOOR_hit_f", 4.0, 1, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:handsup(playerid, params[])
{
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:carry(playerid, params[])
{
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 2.0, 0, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
    return 1;
}

CMD:dance(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /dance [1-4]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "3", true) == 0)
	{
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "4", true) == 0)
	{
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
    return 1;
}

CMD:rap(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /rap [1-3]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"RAPPING","RAP_A_Loop",4.0,1,1,1,1,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"RAPPING","RAP_B_Loop",4.0,1,1,1,1,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "3", true) == 0)
	{
		ApplyAnimation(playerid,"RAPPING","RAP_C_Loop",4.0,1,1,1,1,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:wank(playerid, params[])
{
	ApplyAnimation(playerid,"PAULNMAC","wank_loop",4.0,1,1,1,1,0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}
CMD:wankoff(playerid, params[])
{
    ApplyAnimation(playerid,"PAULNMAC","wank_in",4.0,1,1,1,1,0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:strip(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /strip [1-7]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"STRIP","strip_A",4.0,1,1,1,1,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"STRIP","strip_B",4.0,1,1,1,1,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "3", true) == 0)
	{
		ApplyAnimation(playerid,"STRIP","strip_C",4.0,1,1,1,1,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "4", true) == 0)
	{
		ApplyAnimation(playerid,"STRIP","strip_D",4.0,1,1,1,1,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "5", true) == 0)
	{
		ApplyAnimation(playerid,"STRIP","strip_E",4.0,1,1,1,1,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "6", true) == 0)
	{
		ApplyAnimation(playerid,"STRIP","strip_F",4.0,1,1,1,1,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "7", true) == 0)
	{
		ApplyAnimation(playerid,"STRIP","strip_G",4.0,1,1,1,1,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}
CMD:sexy(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /strip [1-8]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"SNM","SPANKING_IDLEW",4.1,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"SNM","SPANKING_IDLEP",4.1,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "3", true) == 0)
	{
		ApplyAnimation(playerid,"SNM","SPANKINGW",4.1,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "4", true) == 0)
	{
		ApplyAnimation(playerid,"SNM","SPANKINGP",4.1,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "5", true) == 0)
	{
		ApplyAnimation(playerid,"SNM","SPANKEDW",4.1,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "6", true) == 0)
	{
		ApplyAnimation(playerid,"SNM","SPANKEDP",4.1,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "7", true) == 0)
	{
		ApplyAnimation(playerid,"SNM","SPANKING_ENDW",4.1,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "8", true) == 0)
	{
		ApplyAnimation(playerid,"SNM","SPANKING_ENDP",4.1,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:bj(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /bj [1-4]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_START_P",4.1,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_START_W",4.1,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "3", true) == 0)
	{
		ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_LOOP_P",4.1,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "4", true) == 0)
	{
		ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_LOOP_W",4.1,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:cell(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /cell [1-2]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:lean(playerid, params[])
{
	ApplyAnimation(playerid,"GANGS","leanIDLE", 4.0, 1, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}
CMD:pee(playerid, params[])
{
	SetPlayerSpecialAction(playerid, 68);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}
CMD:piss(playerid, params[])
{
	SetPlayerSpecialAction(playerid, 68);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:follow(playerid, params[])
{
	ApplyAnimation(playerid,"WUZI","Wuzi_follow",4.0,0,0,0,0,0);
	SetPVarInt(playerid, "UsingAnim", 1);
    return 1;
}

CMD:greet(playerid, params[])
{
	ApplyAnimation(playerid,"WUZI","Wuzi_Greet_Wuzi",4.0,0,0,0,0,0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:stand(playerid, params[])
{
	ApplyAnimation(playerid,"WUZI","Wuzi_stand_loop", 4.0, 1, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:hitch(playerid, params[])
{
	ApplyAnimation(playerid,"MISC","Hiker_Pose", 4.0, 1, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
    return 1;
}

CMD:bitchslap(playerid, params[])
{
	ApplyAnimation(playerid,"MISC","bitchslap",4.0,0,0,0,0,0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:cpr(playerid, params[])
{
	ApplyAnimation(playerid,"MEDIC","CPR", 4.0, 1, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}
CMD:medic(playerid, params[])
{
	ApplyAnimation(playerid,"MEDIC","CPR", 4.0, 1, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:gsign(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /gsign [1-5]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"GHANDS","gsign1",4.0,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"GHANDS","gsign2",4.0,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "3", true) == 0)
	{
		ApplyAnimation(playerid,"GHANDS","gsign3",4.0,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "4", true) == 0)
	{
		ApplyAnimation(playerid,"GHANDS","gsign4",4.0,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "5", true) == 0)
	{
		ApplyAnimation(playerid,"GHANDS","gsign5",4.0,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:gift(playerid, params[])
{
	ApplyAnimation(playerid,"KISSING","gift_give",4.0,0,0,0,0,0);
	SetPVarInt(playerid, "UsingAnim", 1);
    return 1;
}

CMD:chairsit(playerid, params[])
{
	ApplyAnimation(playerid,"PED","SEAT_idle", 4.0, 1, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
    return 1;
}

CMD:injured(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /injured [1-2]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"SWEET","Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"SWAT","gnstwall_injurd", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:slapped(playerid, params[])
{
	ApplyAnimation(playerid,"SWEET","ho_ass_slapped",4.0,0,0,0,0,0);
	SetPVarInt(playerid, "UsingAnim", 1);
    return 1;
}

CMD:slapass(playerid, params[])
{
	ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.0,0,0,0,0,0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:drunk(playerid, params[])
{
	ApplyAnimation(playerid,"PED","WALK_DRUNK",4.1,1,1,1,1,1);
	SetPVarInt(playerid, "UsingAnim", 1);
    return 1;
}

CMD:skate(playerid, params[])
{
	ApplyAnimation(playerid,"SKATE","skate_run",4.1,1,1,1,1,1);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:gwalk(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /gwalk [1-2]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:limp(playerid, params[])
{
	ApplyAnimation(playerid,"PED","WALK_old",4.1,1,1,1,1,1);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:eatsit(playerid, params[])
{
    ApplyAnimation(playerid,"FOOD","FF_Sit_Loop", 4.0, 1, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:win(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /win [1-2]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"CASINO","cards_win", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"CASINO","Roulette_win", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:celebrate(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /celebrate [1-2]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"benchpress","gym_bp_celebrate", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"GYMNASIUM","gym_tread_celebrate", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:yes(playerid, params[])
{
	ApplyAnimation(playerid,"CLOTHES","CLO_Buy", 4.0, 1, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:deal(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /deal [1-2]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 3.0, 0, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:thankyou(playerid, params[])
{
	ApplyAnimation(playerid,"FOOD","SHP_Thank", 4.0, 1, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:invite1(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /invite1 [1-2]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"GANGS","Invite_Yes",4.1,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"GANGS","Invite_No",4.1,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:scratch(playerid, params[])
{
	ApplyAnimation(playerid,"MISC","Scratchballs_01", 4.0, 1, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
    return 1;
}

CMD:bomb(playerid, params[])
{
	ClearAnimations(playerid);
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0); // Place Bomb
	SetPVarInt(playerid, "UsingAnim", 1);
    return 1;
}

CMD:getarrested(playerid, params[])
{
	ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1, -1); // Gun Arrest
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:laugh(playerid,params[])
{
	ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0); // Laugh
	SetPVarInt(playerid, "UsingAnim", 1);
    return 1;
}

CMD:lookout(playerid, params[])
{
	ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); // Rob Lookout
	SetPVarInt(playerid, "UsingAnim", 1);
    return 1;
}

CMD:robman(playerid, params[])
{
	ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0); // Rob
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:crossarms(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /crossarms [1-2]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid, "DEALER", "DEALER_IDLE", 4.0, 0, 1, 1, 1, -1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "3", true) == 0)
	{
		ApplyAnimation(playerid, "DEALER", "DEALER_IDLE", 4.0, 0, 1, 1, 1, -1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "4", true) == 0)
	{
		ApplyAnimation(playerid, "DEALER", "DEALER_IDLE_01", 4.0, 0, 1, 1, 1, -1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:vomit(playerid, params[])
{
	ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0); // Vomit
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:eatf(playerid, params[])
{
	ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:wave(playerid, params[])
{
	ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0); // Wave
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:smokeanim(playerid, params[])
{
 	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /smokeanim [1-2]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid, "SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:sit(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /sit [1-4]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Type_Loop", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "3", true) == 0)
	{
		ApplyAnimation(playerid,"BEACH", "ParkSit_W_loop", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "4", true) == 0)
	{
		ApplyAnimation(playerid,"BAR","dnk_stndF_loop", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:gro(playerid, params[])
{
	SetPVarInt(playerid, "UsingAnim", 1);
	ApplyAnimation(playerid,"BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0);
    return 1;
}

CMD:chat(playerid, params[])
{
	ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,1,1,1,1,1);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:fucku(playerid, params[])
{
	ApplyAnimation(playerid,"PED","fucku",4.0,0,0,0,0,0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:taichi(playerid, params[])
{
	ApplyAnimation(playerid,"PARK","Tai_Chi_Loop", 4.0, 1, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:relax(playerid, params[])
{
	ApplyAnimation(playerid,"BEACH","Lay_Bac_Loop", 4.0, 1, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:bat(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /bat [1-5]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"BASEBALL","Bat_IDLE", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"BASEBALL","Bat_M", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "3", true) == 0)
	{
		ApplyAnimation(playerid,"BASEBALL","BAT_PART", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "4", true) == 0)
	{
		ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_01", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "5", true) == 0)
	{
		ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_02", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:nod(playerid, params[])
{
	ApplyAnimation(playerid,"COP_AMBIENT","Coplook_nod",4.0,0,0,0,0,0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:gang(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /gang [1-7]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"GANGS","hndshkaa",4.0,0,0,0,0,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"GANGS","hndshkba",4.0,0,0,0,0,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "3", true) == 0)
	{
		ApplyAnimation(playerid,"GANGS","hndshkca",4.0,0,0,0,0,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "4", true) == 0)
	{
		ApplyAnimation(playerid,"GANGS","hndshkcb",4.0,0,0,0,0,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "5", true) == 0)
	{
		ApplyAnimation(playerid,"GANGS","hndshkda",4.0,0,0,0,0,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "6", true) == 0)
	{
		ApplyAnimation(playerid,"GANGS","hndshkda",4.0,0,0,0,0,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "7", true) == 0)
	{
		ApplyAnimation(playerid,"GANGS","hndshkfa",4.0,0,0,0,0,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}
CMD:cry(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /cry [1-2]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"GRAVEYARD","mrnM_loop", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}
CMD:bed(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /bed [1-4]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"INT_HOUSE","BED_In_L",4.1,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "3", true) == 0)
	{
		ApplyAnimation(playerid,"INT_HOUSE","BED_Loop_L", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "4", true) == 0)
	{
		ApplyAnimation(playerid,"INT_HOUSE","BED_Loop_R", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}
CMD:kiss(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /kiss [1-6]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_01",4.0,0,0,0,0,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_02",4.0,0,0,0,0,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "3", true) == 0)
	{
		ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_03",4.0,0,0,0,0,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "4", true) == 0)
	{
		ApplyAnimation(playerid,"KISSING","Playa_Kiss_01",4.0,0,0,0,0,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "5", true) == 0)
	{
		ApplyAnimation(playerid,"KISSING","Playa_Kiss_02",4.0,0,0,0,0,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "6", true) == 0)
	{
		ApplyAnimation(playerid,"KISSING","Playa_Kiss_03",4.0,0,0,0,0,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:carsit(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /carsit [1-2]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"CAR","Tap_hand", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"LOWRIDER","Sit_relaxed", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:walk(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /walk [1-2]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"ped","WOMAN_walksexy",4.1,1,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"ped","WALK_player",4.1,1,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:stretch(playerid, params[])
{
	ApplyAnimation(playerid,"PLAYIDLES","stretch",4.0,0,0,0,0,0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:chant(playerid, params[])
{
	ApplyAnimation(playerid,"RIOT","RIOT_CHANT", 4.0, 1, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:angry(playerid, params[])
{
	ApplyAnimation(playerid,"RIOT","RIOT_ANGRY",4.0,0,0,0,0,0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:crack(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /crack [1-2]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid, "CRACK", "crckidle2", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:ghand(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /ghand [1-6]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"GHANDS","gsign2LH",4.0,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "3", true) == 0)
	{
		ApplyAnimation(playerid,"GHANDS","gsign2LH",4.0,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "4", true) == 0)
	{
		ApplyAnimation(playerid,"GHANDS","gsign3LH",4.0,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "5", true) == 0)
	{
		ApplyAnimation(playerid,"GHANDS","gsign4LH",4.0,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "6", true) == 0)
	{
		ApplyAnimation(playerid,"GHANDS","gsign5LH",4.0,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:exhausted(playerid, params[])
{
	ApplyAnimation(playerid,"FAT","IDLE_tired", 4.0, 1, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:carsmoke(playerid, params[])
{
	ApplyAnimation(playerid,"PED","Smoke_in_car", 4.0, 1, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:getup(playerid, params[])
{
	ApplyAnimation(playerid,"PED","getup",4.0,0,0,0,0,0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:basket(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /basket [1-6]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"BSKTBALL","BBALL_def_loop", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"GHANDS","gsign2LH",4.0,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"BSKTBALL","BBALL_idleloop", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "3", true) == 0)
	{
		ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.0,0,0,0,0,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "4", true) == 0)
	{
		ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "5", true) == 0)
	{
		ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk",4.1,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "6", true) == 0)
	{
		ApplyAnimation(playerid,"BSKTBALL","BBALL_run",4.1,1,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:akick(playerid, params[])
{
	ApplyAnimation(playerid,"FIGHT_E","FightKick",4.0,0,0,0,0,0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:box(playerid, params[])
{
	ApplyAnimation(playerid,"GYMNASIUM","gym_shadowbox",4.1,1,1,1,1,1);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:cockgun(playerid, params[])
{
	ApplyAnimation(playerid, "SILENCED", "Silence_reload", 3.0, 0, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:bar(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /bar [1-4]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid, "BAR", "Barcustom_get", 3.0, 0, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"GHANDS","gsign2LH",4.0,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid, "BAR", "Barcustom_order", 3.0, 0, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "3", true) == 0)
	{
		ApplyAnimation(playerid, "BAR", "Barserve_give", 3.0, 0, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "4", true) == 0)
	{
		ApplyAnimation(playerid, "BAR", "Barserve_glass", 3.0, 0, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:lay(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /lay [1-2]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"BEACH", "bather", 4.0, 1, 0, 0, 0, 0); // Lay down
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid,"BEACH", "SitnWait_loop_W", 4.0, 1, 0, 0, 0, 0); // Lay down
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}
CMD:liftup(playerid, params[])
{
	ApplyAnimation(playerid, "CARRY", "liftup", 3.0, 0, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:putdown(playerid, params[])
{
	ApplyAnimation(playerid, "CARRY", "putdwn", 3.0, 0, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:joint(playerid, params[])
{
	ApplyAnimation(playerid,"GANGS","smkcig_prtl",4.0,0,1,1,1,1);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}
CMD:die(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /die [1-2]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"KNIFE","KILL_Knife_Ped_Die",4.1,0,1,1,1,1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid, "PARACHUTE", "FALL_skyDive_DIE", 4.0, 0, 1, 1, 1, -1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}
CMD:benddown(playerid, params[])
{
	ApplyAnimation(playerid, "BAR", "Barserve_bottle", 4.0, 0, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}
CMD:shakehead(playerid, params[])
{
	ApplyAnimation(playerid, "MISC", "plyr_shkhead", 3.0, 0, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}

CMD:aim(playerid, params[])
{
	new choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "USAGE: /aim [1-2]");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		ApplyAnimation(playerid,"PED","gang_gunstand", 4.0, 1, 0, 0, 0, 0);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	if(strcmp(choice, "2", true) == 0)
	{
		ApplyAnimation(playerid, "SHOP", "SHP_Gun_Aim", 4.0, 0, 1, 1, 1, -1);
		SetPVarInt(playerid, "UsingAnim", 1);
	}
	return 1;
}

CMD:checkout(playerid, params[])
{
	ApplyAnimation(playerid, "GRAFFITI", "graffiti_Chkout", 4.0, 0, 0, 0, 0, 0);
	SetPVarInt(playerid, "UsingAnim", 1);
	return 1;
}


//=======================ANIM===========================
public Float:GetDistanceBetweenPoints(Float:x21,Float:y21,Float:z21,Float:x22,Float:y22,Float:z22)
{
	return floatsqroot(floatpower(floatabs(floatsub(x22,x21)),2)+floatpower(floatabs(floatsub(y22,y21)),2)+floatpower(floatabs(floatsub(z22,z21)),2));
}
public kiked(playerid)
{
    Kick(playerid);
	return 1;
}

UpdateSBizzText(bizid)
{
	new string[512];
	if(SBizzInfo[bizid][sbOwned] == 0)
	{
	    format(string,sizeof(string),"{00BC00}De Vanzare!\nNume: {F6F6F6} %s \n{00BC00}Detinator: {F6F6F6}%s\n{00BC00}Pret: {F6F6F6}$%d\n{00BC00}Level: {F6F6F6}%d\n{00BC00}ID-ul afacerii: {F6F6F6}%d",
		SBizzInfo[bizid][sbName], SBizzInfo[bizid][sbOwner],SBizzInfo[bizid][sbPrice], SBizzInfo[bizid][sbLevelNeeded], bizid);
		UpdateDynamic3DTextLabelText(SBizzLabel[bizid], COLOR_GRAD4, string);
	}
	if(SBizzInfo[bizid][sbOwned] == 1)
	{
		format(string, sizeof(string), "{00BC00}Nume: {F6F6F6}%s\n{00BC00}Detinator: {F6F6F6} %s \n{00BC00}Intrare: {F6F6F6}$%d\n{00BC00}ID-ul afacerii: {F6F6F6}%d",
		SBizzInfo[bizid][sbName], SBizzInfo[bizid][sbOwner],SBizzInfo[bizid][sbEntrace], bizid);
		UpdateDynamic3DTextLabelText(SBizzLabel[bizid], COLOR_GRAD4, string);
	}
	return 1;
}
ServerWeapon(playerid, weaponid, ammo)
{
	if(weaponid >= 1 && weaponid <= 15)
    {
	    Weapons[playerid][Melee] = weaponid;
	    GivePlayerWeapon(playerid, weaponid, ammo);
	    return 1;
    }
	if( weaponid >= 16 && weaponid <= 18 || weaponid == 39 ) // Checking Thrown
    {
	    Weapons[playerid][Thrown] = weaponid;
	    GivePlayerWeapon(playerid, weaponid, ammo);
	    return 1;
    }
    if( weaponid >= 22 && weaponid <= 24 ) // Checking Pistols
    {
	    Weapons[playerid][Pistols] = weaponid;
	    GivePlayerWeapon(playerid, weaponid, ammo);
	    return 1;
    }

    if( weaponid >= 25 && weaponid <= 27 ) // Checking Shotguns
    {
	    Weapons[playerid][Shotguns] = weaponid;
	    GivePlayerWeapon(playerid, weaponid, ammo);
	    return 1;
    }
    if( weaponid == 28 || weaponid == 29 || weaponid == 32 ) // Checking Sub Machine Guns
    {
	    Weapons[playerid][SubMachine] = weaponid;
	    GivePlayerWeapon(playerid, weaponid, ammo);
	    return 1;
    }

    if( weaponid == 30 || weaponid == 31 ) // Checking Assault
    {
	    Weapons[playerid][Assault] = weaponid;
	    GivePlayerWeapon(playerid, weaponid, ammo);
	    return 1;
    }

    if( weaponid == 33 || weaponid == 34 ) // Checking Rifles
    {
	    Weapons[playerid][Rifles] = weaponid;
	    GivePlayerWeapon(playerid, weaponid, ammo);
	    return 1;
    }
    if( weaponid >= 35 && weaponid <= 38 ) // Checking Heavy
    {
	    Weapons[playerid][Heavy] = weaponid;
	    GivePlayerWeapon(playerid, weaponid, ammo);
	    return 1;
    }
    if(weaponid == 43 || weaponid == 42 || weaponid == 41 || weaponid == 46)
	{
		GivePlayerWeapon(playerid, weaponid, ammo);
		return 1;
	}
	return 1;
}

CreateRoadblock(Object,Float:xx,Float:yy,Float:zz,Float:Anglee,mod)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(Roadblocks[i][sCreated] == 0)
  	    {
			Roadblocks[i][sMod] = mod;
            Roadblocks[i][sCreated] = 1;
            Roadblocks[i][sXx] = xx;
            Roadblocks[i][sYy] = yy;
            Roadblocks[i][sZz] = zz-0.7;
            Roadblocks[i][sObject] = CreateDynamicObject(Object, xx, yy, zz-0.9, 0, 0, Anglee);
            i++;
	        return 1;
  	    }
  	}
  	return 0;
}
DeleteAllRoadblocks()
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(Roadblocks[i][sCreated] == 1)
  	    {
  	        Roadblocks[i][sMod] = 0;
  	        Roadblocks[i][sCreated] = 0;
            Roadblocks[i][sXx] = 0.0;
            Roadblocks[i][sYy] = 0.0;
            Roadblocks[i][sZz] = 0.0;
            DestroyDynamicObject(Roadblocks[i][sObject]);
            i=0;
  	    }
	}
    return 0;
}
DeleteAllClosedRoadblocks(playerid)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(IsPlayerInRangeOfPoint(playerid, 100, Roadblocks[i][sXx], Roadblocks[i][sYy], Roadblocks[i][sZz]))
        {
	  	    if(Roadblocks[i][sCreated] == 1)
	  	    {
	  	        Roadblocks[i][sMod] = 0;
	  	        Roadblocks[i][sCreated] = 0;
	            Roadblocks[i][sXx] = 0.0;
	            Roadblocks[i][sYy] = 0.0;
	            Roadblocks[i][sZz] = 0.0;
	            DestroyDynamicObject(Roadblocks[i][sObject]);
	            i=0;
	  	    }
  	    }
	}
    return 0;
}
IsModelABike(carid)
{
    new modelid = GetVehicleModel(carid);
	if(modelid == 448 || modelid == 461 || modelid == 462 || modelid == 463 || modelid == 468 || modelid == 471 || modelid == 481 || modelid == 509 || modelid == 510 || modelid == 521 || modelid == 522 || modelid == 523 || modelid == 581 || modelid == 586)
	return 1;
	return 0;
}

DeleteClosestRoadblock(playerid)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(IsPlayerInRangeOfPoint(playerid, 5.0, Roadblocks[i][sXx], Roadblocks[i][sYy], Roadblocks[i][sZz]))
        {
  	        if(Roadblocks[i][sCreated] == 1)
            {
                Roadblocks[i][sMod] = 0;
                Roadblocks[i][sCreated] = 0;
                Roadblocks[i][sXx] = 0.0;
                Roadblocks[i][sYy] = 0.0;
                Roadblocks[i][sZz] = 0.0;
                DestroyDynamicObject(Roadblocks[i][sObject]);
                i--;
                return 1;
  	        }
  	    }
  	}
    return 0;
}
GetVehiclePrice(vehicleid)
{
	return vInfo[OwnedVeh(vehicleid)][vPrice];
}
GetDealerPrice(vehicleid)
{
	return dInfo[DealerVeh(vehicleid)][dPrice];
}

LoadDealerShip()
{

	new string[155];
    new Cache:result3 = mysql_query(handle,"SELECT * FROM `dealership` ORDER BY `dealership`.`CarID` ASC");
	new x = 0;
 	for(new i,j=cache_get_row_count();i!=j;++i)
	{
	    x++;
        cache_get_field_content(i,"CarID", temp);			dInfo[x][dCariD] = strval(temp);
        cache_get_field_content(i,"Model", temp);			dInfo[x][dModel] =strval(temp);
        cache_get_field_content(i,"Color1", temp);			dInfo[x][dColor1] =strval(temp);
        cache_get_field_content(i,"Color2", temp);			dInfo[x][dColor2] =strval(temp);
        cache_get_field_content(i,"Price", temp);			dInfo[x][dPrice] =strval(temp);
        cache_get_field_content(i,"PosX", temp);			dInfo[x][dPosX] = floatstr(temp);
        cache_get_field_content(i,"PosY", temp);			dInfo[x][dPosY] = floatstr(temp);
        cache_get_field_content(i,"PosZ", temp);			dInfo[x][dPosZ] = floatstr(temp);
        cache_get_field_content(i,"PosA", temp);			dInfo[x][dPosA] = floatstr(temp);
		// CREATING VEHICLE  \====================================================================/
   		new	dCarID = CreateVehicle(dInfo[x][dModel], dInfo[x][dPosX], dInfo[x][dPosY], dInfo[x][dPosZ], dInfo[x][dPosA], dInfo[x][dColor1], dInfo[x][dColor2], 500000);
        DealerVeh(dCarID) = x;
     	SetVehicleNumberPlate(dCarID, ""#SERVERNAME" Dealer");
		ChangeVehiclePaintjob(dCarID, 0);
		VehiclePass[DealerVeh(dCarID)] = 0;
		Total_Veh_Dealer = dInfo[x][dCariD];
        format(string, sizeof(string), "{00FF1A}De Vanzare\n{09DFF7}Marca: %s\n{FFFFFF}Pret: %d\n{00FF66}/BuyCar sau /LeasingBuy",GetVehicleName(GetVehicleModel(dCarID)),dInfo[DealerVeh(dCarID)][dPrice]);
		vehiclet[dCarID] = Create3DTextLabel( string, COLOR_WHITE, 0.0, 0.0, 0.0, 20.0, 0, 1);
		Attach3DTextLabelToVehicle(vehiclet[dCarID] , dCarID, 0.0, 0.0, 0.0);
	}
	print("=============================================================");
	printf("		Dealer Ship Loaded %d Cars", Total_Veh_Dealer);
	print("=============================================================\n");
	cache_delete(result3);
   	return 1;
}

GetCreatedId(carid)
{
	for(new i = 0; i < 21; i++)
	if(carid == CreatedCarsOn[i])	return i;
	return 0;
}


LoadCreatedCars()
{
	for(new created;created<50;created++)
	{
		CreatedCars[CreatedCarsOn[created]] = 0;
		DestroyVehicle(CreatedCarsOn[created]);
	}
	CreatedCarsOn[0] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[1] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[2] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[3] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[4] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[5] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[6] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[7] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[8] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[9] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[10] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[11] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[12] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[13] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[14] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[15] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[16] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[17] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[18] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[19] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[20] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[21] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[22] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[23] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[24] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[25] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[26] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[27] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[28] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[29] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[30] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[31] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[32] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[33] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[34] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[35] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[36] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[37] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[38] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[39] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[40] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[41] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[42] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[43] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[44] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[45] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[46] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[47] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[48] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	CreatedCarsOn[49] = CreateVehicle(400,-11000,-10000,10,0,1,1,3600);
	for(new created;created<50;created++)
	CreatedCars[CreatedCarsOn[created]] = 2;
	return 1;
}
LoadPVehicles()
{

    new Cache:result3 = mysql_query(handle,"SELECT * FROM `vehicles` ORDER BY `vehicles`.`CarID` ASC");
	new x = 0;
 	for(new i,j=cache_get_row_count();i!=j;++i)
	{
	    x++;
        cache_get_field_content(i,"CarID", temp);			vInfo[x][vCariD] = strval(temp);
        cache_get_field_content(i,"Model", temp);			vInfo[x][vModel] = strval(temp);
        cache_get_field_content(i,"Color1", temp);			vInfo[x][vColor1] =strval(temp);
        cache_get_field_content(i,"Color2", temp);			vInfo[x][vColor2] =strval(temp);
        cache_get_field_content(i,"Price", temp);			vInfo[x][vPrice] = strval(temp);
        cache_get_field_content(i,"Owner", temp);           format(vInfo[x][vOwner], 128, temp);
        cache_get_field_content(i,"vPosX", temp);			vInfo[x][vPosX] = floatstr(temp);
        cache_get_field_content(i,"vPosY", temp);			vInfo[x][vPosY] = floatstr(temp);
        cache_get_field_content(i,"vPosZ", temp);			vInfo[x][vPosZ] = floatstr(temp);
        cache_get_field_content(i,"vPosA", temp);			vInfo[x][vPosA] = floatstr(temp);
        cache_get_field_content(i,"Plate", temp);			format(vInfo[x][vPlate], 128, temp);
        cache_get_field_content(i,"PaintJ", temp);			vInfo[x][vPaintJ] =strval(temp);
        cache_get_field_content(i,"Locked", temp);			vInfo[x][vLocked] =strval(temp);
        cache_get_field_content(i,"Towed", temp);			vInfo[x][vTowed] = strval(temp);
        cache_get_field_content(i,"Carcode", temp);			vInfo[x][vCarCode] =strval(temp);
        cache_get_field_content(i,"Zile", temp);			vInfo[x][vOre] =    strval(temp);
        cache_get_field_content(i,"KM", temp);				vInfo[x][vVodo] =   floatstr(temp);
		cache_get_field_content(i,"Weapon1", temp);        	vInfo[x][trWeapon1] =strval(temp);
		cache_get_field_content(i,"Weapon2", temp);        	vInfo[x][trWeapon2] =strval(temp);
		cache_get_field_content(i,"Weapon3", temp);        	vInfo[x][trWeapon3] =strval(temp);
		cache_get_field_content(i,"Weapon4", temp);        	vInfo[x][trWeapon4] =strval(temp);
		cache_get_field_content(i,"Weapon5", temp);        	vInfo[x][trWeapon5] =strval(temp);
		cache_get_field_content(i,"Weapon6", temp);        	vInfo[x][trWeapon6] =strval(temp);
		cache_get_field_content(i,"Ammo1", temp);        	vInfo[x][trAmmo1] =strval(temp);
		cache_get_field_content(i,"Ammo2", temp);        	vInfo[x][trAmmo2] =strval(temp);
		cache_get_field_content(i,"Ammo3", temp);        	vInfo[x][trAmmo3] =strval(temp);
		cache_get_field_content(i,"Ammo4", temp);    	    vInfo[x][trAmmo4] =strval(temp);
		cache_get_field_content(i,"Ammo5", temp);     	   	vInfo[x][trAmmo5] =strval(temp);
		cache_get_field_content(i,"Ammo6", temp);     	  	vInfo[x][trAmmo6] =strval(temp);
		cache_get_field_content(i,"FirstAid", temp);	    vInfo[x][tMedkit] =strval(temp);
		cache_get_field_content(i,"Variabila", temp);	    vInfo[x][vVariabila] =strval(temp);
        cache_get_field_content(i,"Wheels", temp); 			vInfo[x][vComponent0] = strval(temp); //Wheels
	    cache_get_field_content(i,"Nitro", temp);			vInfo[x][vComponent1] = strval(temp);//Nitro
	    cache_get_field_content(i,"hydraulics",temp); 		vInfo[x][vComponent2] = strval(temp);//hydraulics
	    cache_get_field_content(i,"Spoiler",temp);			vInfo[x][vComponent3] = strval(temp);//Spoiler
	    cache_get_field_content(i,"Hood", temp); 			vInfo[x][vComponent4] = strval(temp);//Hood
	    cache_get_field_content(i,"Roof",temp); 			vInfo[x][vComponent5] = strval(temp);//Roof
	    cache_get_field_content(i,"SideSkirts",temp); 		vInfo[x][vComponent6] = strval(temp);//SideSkirts
	    cache_get_field_content(i,"Lamps",temp);			vInfo[x][vComponent7] = strval(temp);//Lamps
	    cache_get_field_content(i,"Exhaust",temp);			vInfo[x][vComponent8] = strval(temp);//Exhaust
	    cache_get_field_content(i,"Stereo", temp);			vInfo[x][vComponent9] = strval(temp);//Stereo
	    cache_get_field_content(i,"FrontBumper", temp); 	vInfo[x][vComponent10] = strval(temp);//FrontBumper
	    cache_get_field_content(i,"RearBumper", temp); 		vInfo[x][vComponent11] = strval(temp);//RearBumper
	    cache_get_field_content(i,"RightVent", temp);		vInfo[x][vComponent12] = strval(temp);//RightVent
	    cache_get_field_content(i,"LeftVent", temp); 		vInfo[x][vComponent13] = strval(temp);//LeftVent
	    cache_get_field_content(i,"Neon", temp); 			vInfo[x][vNeon] = strval(temp);//neon
	    cache_get_field_content(i,"Lights", temp);			vInfo[x][vLights] = strval(temp);//Lights
		// CREATING VEHICLE  \====================================================================/
  		if(vInfo[x][vPosX] == 0.0 && vInfo[x][vPosY] == 0.0 && vInfo[x][vPosZ] == 0.0) { ++ Total_Veh_Created; /*INI_Close();*/ continue; }
		new	vCarID = CreateVehicle(vInfo[x][vModel], vInfo[x][vPosX], vInfo[x][vPosY], vInfo[x][vPosZ], vInfo[x][vPosA], vInfo[x][vColor1], vInfo[x][vColor2], 500000);
	    OwnedVeh(vCarID) = x;
  		Total_Veh_Created = vInfo[x][vCariD];
	    GetVehicleParamsEx(vCarID, engine, lights, alarm, doors, bonnet,boot,objective);
  		if(vInfo[x][vLocked] == 1)
		SetVehicleParamsEx(vCarID, engine, lights, alarm, VEHICLE_PARAMS_ON, bonnet, boot, objective);
		else
		SetVehicleParamsEx(vCarID, engine, lights, alarm, VEHICLE_PARAMS_OFF, bonnet, boot, objective);
		if(vInfo[x][vVariabila] == 1)
		FrenodeMano[vCarID] = 1;
		else
		FrenodeMano[vCarID] = 0;
 		SetVehicleNumberPlate(vCarID, vInfo[x][vPlate]);
		ChangeVehiclePaintjob(vCarID, vInfo[x][vPaintJ]);
		VehiclePass[vCarID] = vInfo[x][vCarCode];
	   	VehicleKM[vCarID] =	vInfo[x][vVodo];
	   	AddVehicleComponent(vCarID, vInfo[x][vComponent0]);
	    AddVehicleComponent(vCarID, vInfo[x][vComponent1]);
	    AddVehicleComponent(vCarID, vInfo[x][vComponent2]);
	    AddVehicleComponent(vCarID, vInfo[x][vComponent3]);
	    AddVehicleComponent(vCarID, vInfo[x][vComponent4]);
	    AddVehicleComponent(vCarID, vInfo[x][vComponent5]);
	    AddVehicleComponent(vCarID, vInfo[x][vComponent6]);
	    AddVehicleComponent(vCarID, vInfo[x][vComponent7]);
	    AddVehicleComponent(vCarID, vInfo[x][vComponent8]);
	    AddVehicleComponent(vCarID, vInfo[x][vComponent9]);
	    AddVehicleComponent(vCarID, vInfo[x][vComponent10]);
	    AddVehicleComponent(vCarID, vInfo[x][vComponent11]);
	    AddVehicleComponent(vCarID, vInfo[x][vComponent12]);
	    AddVehicleComponent(vCarID, vInfo[x][vComponent13]);
	}
	print("=============================================================");
	printf("		Vehicle Sistem Loaded %d Cars", Total_Veh_Created);
	print("=============================================================\n");
	cache_delete(result3);
   	return 1;
}

SavePHouse(houseid)
{
	new locktext[10], string[512];

   	if(HouseInfo[houseid][hLock] == 0) locktext = "Nu";
    else if(HouseInfo[houseid][hLock] != 0) locktext = "Da";

 	if(HouseInfo[houseid][hDog] == 0)
	{
 		if(strmatch("Unbought", HouseInfo[houseid][hOwner]))
		{
			if(HouseInfo[houseid][hUpgradeLock] != 13) { format(string, sizeof(string), "{00BC00}De Vanzare!\n{00BC00}Detinator: {F6F6F6}-\n{00BC00}Pret: {F6F6F6}$%d\n{00BC00}Nivel: {F6F6F6}%d\n{00BC00}ID casa: {F6F6F6}%d", HouseInfo[houseid][hValue], HouseInfo[houseid][hLevel], houseid); HouseInfo[houseid][hOwned] = 0; }
		  	else { format(string, sizeof(string), "{00BC00}De inchiriat!\n{00BC00}Detinator: {F6F6F6}-\n{00BC00}Pret: {F6F6F6}$%d\n{00BC00}Nivel: {F6F6F6}%d\n{00BC00}ID casa: {F6F6F6}%d", HouseInfo[houseid][hValue], HouseInfo[houseid][hLevel], houseid); HouseInfo[houseid][hOwned] = 0; }
		}
		else if(!strmatch("Unbought", HouseInfo[houseid][hOwner]) && HouseInfo[houseid][hPrice] != 0) { format(string, sizeof(string), "{00BC00}Nume: {F6F6F6}%s\n{00BC00}Detinator: {F6F6F6}%s\n{00BC00}Pret: {F6F6F6}$%d\n{00BC00}Nivel: {F6F6F6}%d\n{00BC00}Inchisa: {F6F6F6}%s\n{00BC00}ID casa: {F6F6F6}%d", HouseInfo[houseid][hName], HouseInfo[houseid][hOwner], HouseInfo[houseid][hPrice], HouseInfo[houseid][hLevel], locktext, houseid); HouseInfo[houseid][hOwned] = 1; }
	    else if(!strmatch("Unbought", HouseInfo[houseid][hOwner]) && HouseInfo[houseid][hPrice] == 0) { format(string, sizeof(string), "{00BC00}Nume: {F6F6F6}%s\n{00BC00}Detinator: {F6F6F6}%s\n{00BC00}Nivel: {F6F6F6}%d\n{00BC00}Inchisa: {F6F6F6}%s\n{00BC00}ID casa: {F6F6F6}%d", HouseInfo[houseid][hName], HouseInfo[houseid][hOwner], HouseInfo[houseid][hLevel], locktext, houseid); HouseInfo[houseid][hOwned] = 1; }
	}
 	if(HouseInfo[houseid][hDog] == 1)
	{
    if(strmatch("Unbought", HouseInfo[houseid][hOwner]))
  	{
		if(HouseInfo[houseid][hUpgradeLock] != 13) { format(string, sizeof(string), "{00BC00}De Vanzare!\n{00BC00}Detinator: {F6F6F6}-\n{00BC00}Pret: {F6F6F6}$%d\n{00BC00}Nivel: {F6F6F6}%d\n{00BC00}ID casa: {F6F6F6}%d", HouseInfo[houseid][hValue], HouseInfo[houseid][hLevel], houseid); HouseInfo[houseid][hOwned] = 0; }
	  	else { format(string, sizeof(string), "{00BC00}De inchiriat!\n{00BC00}Detinator: {F6F6F6}-\n{00BC00}Pret: {F6F6F6}$%d\n{00BC00}Nivel: {F6F6F6}%d\n{00BC00}ID casa: {F6F6F6}%d", HouseInfo[houseid][hValue], HouseInfo[houseid][hLevel], houseid); HouseInfo[houseid][hOwned] = 0; }
		}
		else if(!strmatch("Unbought", HouseInfo[houseid][hOwner]) && HouseInfo[houseid][hPrice] != 0) {
		format(string, sizeof(string), "{00BC00}Nume: {F6F6F6}%s\n{00BC00}Detinator: {F6F6F6}%s\n{00BC00}Pret: {F6F6F6}$%d\n{00BC00}Nivel: {F6F6F6}%d\n{00BC00}Inchisa: {F6F6F6}%s\n{00BC00}ID casa: {F6F6F6}%d\nScrie {00BC00}/rentroom {F6F6F6} pentru a inchiria o casa\n{00BC00}Pretul chiriei: {F6F6F6}$%d",
		HouseInfo[houseid][hName], HouseInfo[houseid][hOwner], HouseInfo[houseid][hPrice], HouseInfo[houseid][hLevel], locktext, houseid, HouseInfo[houseid][hPrivacy]); HouseInfo[houseid][hOwned] = 1; }
	    else if(!strmatch("Unbought", HouseInfo[houseid][hOwner]) && HouseInfo[houseid][hPrice] == 0) {
		format(string, sizeof(string), "{00BC00}Nume: {F6F6F6}%s\n{00BC00}Detinator: {F6F6F6}%s\n{00BC00}Nivel: {F6F6F6}%d\n{00BC00}Inchisa: {F6F6F6}%s\n{00BC00}ID casa: {F6F6F6}%d\nScrie {00BC00}/rentroom {F6F6F6} pentru a inchiria o camera\n{00BC00}Pretul chiriei: {F6F6F6}$%d",
		HouseInfo[houseid][hName], HouseInfo[houseid][hOwner], HouseInfo[houseid][hLevel], locktext, houseid, HouseInfo[houseid][hPrivacy]); HouseInfo[houseid][hOwned] = 1; }
	}
	DestroyDynamic3DTextLabel(HouseLabel[houseid]);
	DestroyDynamicPickup(HousePickup[houseid]);
	DestroyDynamicPickup(HousePickup1[houseid]);
	DestroyDynamicMapIcon(HouseIcon[houseid]);
	HouseLabel[houseid] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, HouseInfo[houseid][hPosX], HouseInfo[houseid][hPosY], HouseInfo[houseid][hPosZ]+0.2, 20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
    HousePickup[houseid] = CreateDynamicPickup(1273, 1, HouseInfo[houseid][hPosX], HouseInfo[houseid][hPosY], HouseInfo[houseid][hPosZ], HouseInfo[houseid][hWorld]);
    HousePickup1[houseid] = CreateDynamicPickup(1273, 1, HouseInfo[houseid][hPosX1], HouseInfo[houseid][hPosY1], HouseInfo[houseid][hPosZ1], Total_House_Created);
	if(HouseInfo[houseid][hOwned] == 0) 	HouseIcon[houseid] = CreateDynamicMapIcon(HouseInfo[houseid][hPosX], HouseInfo[houseid][hPosY], HouseInfo[houseid][hPosZ], 31, -1, 0, 0, -1, 250.0);
    else 									HouseIcon[houseid] = CreateDynamicMapIcon(HouseInfo[houseid][hPosX], HouseInfo[houseid][hPosY], HouseInfo[houseid][hPosZ], 32, -1, 0, 0, -1, 250.0);
	return 1;
}

public LoadHouseGate()
{
    new Cache:result3 = mysql_query(handle,"SELECT * FROM `housegates` ORDER BY `housegates`.`ID` ASC");
	new x = -1;
	for(new i = 0; i < cache_get_row_count(); i++)
    {
   			// LOADING DATA     \====================================================================/
 		x++;
		cache_get_field_content(x,"ID", temp);			GateInfo[x][gID] = strval(temp);
	    cache_get_field_content(x,"PosX", temp);		GateInfo[x][gPosX] = floatstr(temp);
	    cache_get_field_content(x,"PosY", temp);		GateInfo[x][gPosY] = floatstr(temp);
	    cache_get_field_content(x,"PosZ", temp);		GateInfo[x][gPosZ] = floatstr(temp);
	    cache_get_field_content(x,"RotX", temp);		GateInfo[x][gRotX] = floatstr(temp);
	    cache_get_field_content(x,"RotY", temp);		GateInfo[x][gRotY] = floatstr(temp);
	    cache_get_field_content(x,"RotZ", temp);		GateInfo[x][gRotZ] = floatstr(temp);
	    cache_get_field_content(x,"Faction", temp);		GateInfo[x][gFaction] = strval(temp);
	    cache_get_field_content(x,"Cheie", temp);		GateInfo[x][gCheie] = strval(temp);
	    cache_get_field_content(x,"Model", temp);		GateInfo[x][gModel] = strval(temp);

        GateInfo[x][gObiect] = CreateDynamicObject(GateInfo[x][gModel],GateInfo[x][gPosX],GateInfo[x][gPosY],GateInfo[x][gPosZ],GateInfo[x][gRotX],GateInfo[x][gRotY],GateInfo[x][gRotZ]);
		++Total_HouseGate_Created;
   	}
	cache_delete(result3);
	print("=============================================================");
	printf("		HouseGate Sistem Loaded %i Gate's", Total_HouseGate_Created);
	print("=============================================================\n");
	return 1;
}

LoadsBiz()
{
    new Cache:result3 = mysql_query(handle,"SELECT * FROM `sbiz` ORDER BY `sbiz`.`sbID` ASC");
	new result[100], x = -1;
	for(new i = 0; i < cache_get_row_count(); i++)
    {
   			// LOADING DATA     \====================================================================/
 		x++;
		cache_get_field_content(x,"sbID", temp);			SBizzInfo[x][sbID] = strval(temp);
	    cache_get_field_content(x,"Owned", temp);			SBizzInfo[x][sbOwned] = strval(result);
        cache_get_field_content(x,"Owner", temp);			format(SBizzInfo[x][sbOwner], 128, temp);
	    cache_get_field_content(x,"Name", temp);			format(SBizzInfo[x][sbName], 128, temp);
	    cache_get_field_content(x,"CoOwner", temp);			format(SBizzInfo[x][sbCoOwner], 128, temp);
		cache_get_field_content(x,"PosX", temp);            SBizzInfo[x][sbPosX] = floatstr(temp);
	    cache_get_field_content(x,"PosY", temp);			SBizzInfo[x][sbPosY] = floatstr(temp);
	    cache_get_field_content(x,"PosZ", temp);			SBizzInfo[x][sbPosZ] = floatstr(temp);
	    cache_get_field_content(x,"LevelNeeded", temp);		SBizzInfo[x][sbLevelNeeded] = strval(temp);
	    cache_get_field_content(x,"Price", temp);			SBizzInfo[x][sbPrice] = strval(temp);
	    cache_get_field_content(x,"Entrace", temp);			SBizzInfo[x][sbEntrace] = strval(temp);
	    cache_get_field_content(x,"Till", temp);			SBizzInfo[x][sbTill] = strval(temp);
	    cache_get_field_content(x,"Locked", temp);			SBizzInfo[x][sbLocked] = strval(temp);
	    cache_get_field_content(x,"Interior", temp);		SBizzInfo[x][sbInterior] = strval(temp);
	    cache_get_field_content(x,"Produse", temp);			SBizzInfo[x][sbProduse] = strval(temp);
	    cache_get_field_content(x,"MaxProd", temp);			SBizzInfo[x][sbMaxProd] = strval(temp);
	    cache_get_field_content(x,"PriceProd", temp);		SBizzInfo[x][sbPriceProd] = strval(temp);

	    new string3[512];
 	    if(SBizzInfo[x][sbOwned] == 0)
  		{
			PickupSbiz[x] = CreateDynamicPickup(1274, 1, SBizzInfo[x][sbPosX], SBizzInfo[x][sbPosY], SBizzInfo[x][sbPosZ]);
            format(string3, sizeof(string3), "{00BC00}De Vanzare!\nNume: {F6F6F6} %s \n{00BC00}Detinator: {F6F6F6}%s\n{00BC00}Pret: {F6F6F6}$%d\n{00BC00}Level: {F6F6F6}%d\n{00BC00}ID-ul afacerii: {F6F6F6}%d",SBizzInfo[x][sbName], SBizzInfo[x][sbOwner], SBizzInfo[x][sbPrice], SBizzInfo[x][sbLevelNeeded], x);
			SBizzLabel[x] = CreateDynamic3DTextLabel(string3,COLOR_GRAD4,SBizzInfo[x][sbPosX], SBizzInfo[x][sbPosY], SBizzInfo[x][sbPosZ]+0.2,10.0);
			sbizzicon[x] = CreateDynamicMapIcon(SBizzInfo[x][sbPosX], SBizzInfo[x][sbPosY], SBizzInfo[x][sbPosZ], 52, -1, 0, 0, -1, 250.0);
		}
		if(SBizzInfo[x][sbOwned] == 1)
		{
   		    PickupSbiz[x] = CreateDynamicPickup(1274, 1, SBizzInfo[x][sbPosX], SBizzInfo[x][sbPosY], SBizzInfo[x][sbPosZ]);
			format(string3, sizeof(string3), "Nume: {F6F6F6}%s\n{00BC00}Detinator: {F6F6F6} %s \n{00BC00}Intrare: {F6F6F6}$%d\n{00BC00}ID-ul afacerii: {F6F6F6}%d", SBizzInfo[x][sbName], SBizzInfo[x][sbOwner], SBizzInfo[x][sbEntrace], x);
			SBizzLabel[x] = CreateDynamic3DTextLabel(string3,COLOR_GRAD4,SBizzInfo[x][sbPosX], SBizzInfo[x][sbPosY], SBizzInfo[x][sbPosZ]+0.2,10.0);
			sbizzicon[x] = CreateDynamicMapIcon(SBizzInfo[x][sbPosX], SBizzInfo[x][sbPosY], SBizzInfo[x][sbPosZ], 36, -1, 0, 0, -1, 250.0);
		}
	}
	cache_delete(result3);
	print("=============================================================");
	printf("		Sbiz Sistem Loaded %i Sbiz's", x);
	print("=============================================================\n");
	return 1;
}

LoadStuff()
{
	new x = 0, Cache:result3 = mysql_query(handle,"SELECT * FROM `stuff` ORDER BY `stufid` ASC");
    for(new i,j=cache_get_row_count();i!=j;++i)
	{
        cache_get_field_content(x,"RecordPlayers", temp);			RecordPlayers = strval(temp);
		cache_get_field_content(x,"JackpotCaligula", temp);			JackpotCaligula = strval(temp);
		cache_get_field_content(x,"JackpotFour", temp);				JackpotFourDragon = strval(temp);
        cache_get_field_content(x,"JackpotCh", temp);				JackpotChina = strval(temp);
        cache_get_field_content(x,"JackpotCas", temp);				JackpotCasino = strval(temp);
       	cache_get_field_content(x,"BoxWin", temp);					Titel[TitelWins] = strval(temp);
        cache_get_field_content(x,"BoxName", temp);					format(Titel[TitelName], 128, temp);
        cache_get_field_content(x,"Boxloss", temp);					Titel[TitelLoses] = strval(temp);
        cache_get_field_content(x,"Version", temp);					format(SCRIPT_VERSION, 128, temp);
		cache_get_field_content(x,"Charity", temp);					ServerCharity = strval(temp);
        x++;
  		// CREATING ====================================================================/
	}
	cache_delete(result3);
	print("=============================================================");
	print( "		Stuff Loaded Succesfull");
	print("=============================================================\n");
	return 1;
}
LoadFactionSpawn()
{
    new i, x = 0, Cache:result3 = mysql_query(handle,"SELECT * FROM `factionspawn` ORDER BY `factionspawn`.`ID` ASC");
 	for(i = 0; i < cache_get_row_count(); i++)
    {
 		cache_get_field_content(i, "ID",temp); 			SpawnInfo[x][sID]   = strval(temp);
		cache_get_field_content(i, "PosX",temp); 		SpawnInfo[x][sPosX] = floatstr(temp);
		cache_get_field_content(i, "PosY", temp); 		SpawnInfo[x][sPosY] = floatstr(temp);
		cache_get_field_content(i, "PosZ", temp); 		SpawnInfo[x][sPosZ] = floatstr(temp);
		cache_get_field_content(i, "RotZ",temp); 		SpawnInfo[x][sRotZ] = floatstr(temp);
		cache_get_field_content(i, "YNT",temp); 		SpawnInfo[x][sYNT]  = strval(temp);
		cache_get_field_content(i, "VW",temp); 			SpawnInfo[x][sVW]   = strval(temp);
		x++;
	}
	cache_delete(result3);
	print("=============================================================");
	printf("		Spawn System Loaded %d Factions", x);
	print("=============================================================\n");
	return 1;
}


LoadGangs()
{
    new i, x = 0, Cache:result3 = mysql_query(handle,"SELECT * FROM `gangzone` ORDER BY `gangzone`.`ID` ASC");
 	for(i = 0; i < cache_get_row_count(); i++)
    {
 		cache_get_field_content(i, "ID",temp); 			GangInfo[x][zID] = strval(temp);
		cache_get_field_content(i, "Owner",temp); 		GangInfo[x][zOwner] = strval(temp);
		cache_get_field_content(i, "Hour", temp); 		GangInfo[x][zHour] = strval(temp);
		cache_get_field_content(i, "Color", temp); 		GangInfo[x][zColor] = strval(temp);
		cache_get_field_content(i, "MinX",temp); 		GangInfo[x][zMinX] = floatstr(temp);
		cache_get_field_content(i, "MinY",temp); 		GangInfo[x][zMinY] = floatstr(temp);
		cache_get_field_content(i, "MaxX",temp); 		GangInfo[x][zMaxX] = floatstr(temp);
 		cache_get_field_content(i, "MaxY",temp); 		GangInfo[x][zMaxY] = floatstr(temp);
 		Gangzone[x] = GangZoneCreate(GangInfo[x][zMinX],GangInfo[x][zMinY],GangInfo[x][zMaxX],GangInfo[x][zMaxY]);
		++ Total_Gang_Created;
		x++;
	}
	cache_delete(result3);
	print("=============================================================");
	printf("		GangZone System Loaded %d Zone", x);
	print("=============================================================\n");
	return 1;
}

ATMLoad()
{
    new Cache:result3 = mysql_query(handle,"SELECT * FROM `atms` ORDER BY `atms`.`atmid` ASC");
	new x = 0;
	new string[155];
 	for(new i,j=cache_get_row_count();i!=j;++i)
	{
		x++;
 		cache_get_field_content(i, "atmId",temp); 			atmVariables[x][atmid] = strval(temp);
		cache_get_field_content(i, "atmPosX",temp); 		atmVariables[x][ATMPosX] = floatstr(temp);
		cache_get_field_content(i, "atmPosY", temp); 		atmVariables[x][ATMPosY] = floatstr(temp);
		cache_get_field_content(i, "atmPosZ", temp); 		atmVariables[x][ATMPosZ] = floatstr(temp);
		cache_get_field_content(i, "atmPosRotZ",temp); 		atmVariables[x][ATMPosRot] = floatstr(temp);
		atmVariables[x][ObjectId] = CreateDynamicObject(2618, atmVariables[x][ATMPosX], atmVariables[x][ATMPosY], atmVariables[x][ATMPosZ], 0,0, atmVariables[x][ATMPosRot], -1, -1, -1, 500.0);
        format(string, sizeof(string), "{00BC00}ATM {F6F6F6}%d\n {00BC00}Aici puteti extrage{F6F6F6} banii\n{00BC00}/atmhelp {F6F6F6}pentru ajutor",atmVariables[x][atmid]);
		atmVariables[x][TextLabel] = CreateDynamic3DTextLabel(string, COLOR_YELLOW, atmVariables[x][ATMPosX], atmVariables[x][ATMPosY], atmVariables[x][ATMPosZ], 50.0);
        atmicon[x] = CreateDynamicMapIcon(atmVariables[x][ATMPosX], atmVariables[x][ATMPosY], atmVariables[x][ATMPosZ], 38, -1, 0, 0, -1, 250.0);
		++ Total_ATM;
	}
	cache_delete(result3);
	print("=============================================================");
	printf("		AtmScript Loaded %d Bancomate", x);
	print("=============================================================\n");
	return 1;
	/*38
	for(new x = 0; x < MAX_ATMS; x++) {
		    if(IsPlayerInRangeOfPoint(playerid, 2.0, atmVariables[x][fATMPos][0], atmVariables[x][fATMPos][1], atmVariables[x][fATMPos][2])) {
				ShowPlayerDialog(playerid, DIALOG_ATM_MENU, DIALOG_STYLE_LIST, "SERVER: Automated Teller Machine", "Check Balance\nWithdraw", "OK", "Cancel");
			}
		}*/
}



LoadFactionSafe()
{
	new x = 0;
	new Cache:result3 = mysql_query(handle,"SELECT * FROM `factionsafe` ORDER BY `factionsafe`.`factiune` ASC");
 	for(new i,j=cache_get_row_count();i!=j;++i)
	{
		x++;
		cache_get_field_content(i,"Factiune", temp);				DynamicFactions[x][fID] = strval(temp);
        cache_get_field_content(i,"NameFaction", temp);				format(DynamicFactions[x][fName], 128, temp);
        cache_get_field_content(i,"CoordX", temp);					DynamicFactions[x][fcX] = floatstr(temp);
        cache_get_field_content(i,"CoordY", temp);					DynamicFactions[x][fcY] = floatstr(temp);
        cache_get_field_content(i,"CoordZ", temp);					DynamicFactions[x][fcZ] = floatstr(temp);
        cache_get_field_content(i,"Materiale", temp);				DynamicFactions[x][fMats] = strval(temp);
        cache_get_field_content(i,"Droguri", temp);					DynamicFactions[x][fDrugs] = strval(temp);
        cache_get_field_content(i,"BankFaction", temp);				DynamicFactions[x][fBank] = strval(temp);
        safepickup[x] = CreateDynamicPickup(19523, 1, DynamicFactions[x][fcX],DynamicFactions[x][fcY],DynamicFactions[x][fcZ]);
	}
	CreateDynamic3DTextLabel("[L.S.P.D] SAFE\n/safeinfo]",COLOR_GRAD4, DynamicFactions[1][fcX],DynamicFactions[1][fcY],DynamicFactions[1][fcZ], 15);//
	CreateDynamic3DTextLabel("[F.B.I. SAFE\n/safeinfo]",COLOR_GRAD4, DynamicFactions[2][fcX],DynamicFactions[2][fcY],DynamicFactions[2][fcZ], 15);//
	CreateDynamic3DTextLabel("[N.G.] SAFE\n/safeinfo]",COLOR_GRAD4, DynamicFactions[3][fcX],DynamicFactions[3][fcY],DynamicFactions[3][fcZ], 15);//
	CreateDynamic3DTextLabel("[A.P.] SAFE\n/safeinfo]",COLOR_GRAD4, DynamicFactions[4][fcX],DynamicFactions[4][fcY],DynamicFactions[4][fcZ], 15);//
	CreateDynamic3DTextLabel("[Rifa] SAFE\n/safeinfo]",COLOR_GRAD4, DynamicFactions[5][fcX],DynamicFactions[5][fcY],DynamicFactions[5][fcZ], 15);//
	CreateDynamic3DTextLabel("[Triads] SAFE\n/safeinfo]",COLOR_GRAD4, DynamicFactions[6][fcX],DynamicFactions[6][fcY],DynamicFactions[6][fcZ], 15);//
	CreateDynamic3DTextLabel("[Gov] SAFE\n/safeinfo]",COLOR_GRAD4, DynamicFactions[7][fcX],DynamicFactions[7][fcY],DynamicFactions[7][fcZ], 15);//
	CreateDynamic3DTextLabel("[Hit Man] SAFE\n/safeinfo]",COLOR_GRAD4, DynamicFactions[8][fcX],DynamicFactions[8][fcY],DynamicFactions[8][fcZ], 15);//
	CreateDynamic3DTextLabel("[N.R.] SAFE\n/safeinfo]",COLOR_GRAD4, DynamicFactions[9][fcX],DynamicFactions[9][fcY],DynamicFactions[9][fcZ], 15);//
	CreateDynamic3DTextLabel("[Taxi] SAFE\n/safeinfo]",COLOR_GRAD4, DynamicFactions[10][fcX],DynamicFactions[10][fcY],DynamicFactions[10][fcZ], 15);//
	CreateDynamic3DTextLabel("[Navy] SAFE\n/safeinfo]",COLOR_GRAD4, DynamicFactions[11][fcX],DynamicFactions[11][fcY],DynamicFactions[11][fcZ], 15);//
	CreateDynamic3DTextLabel("[Parlament] SAFE\n/safeinfo]",COLOR_GRAD4, DynamicFactions[12][fcX],DynamicFactions[12][fcY],DynamicFactions[12][fcZ], 15);//
	CreateDynamic3DTextLabel("[Bratva] SAFE\n/safeinfo]",COLOR_GRAD4, DynamicFactions[13][fcX],DynamicFactions[13][fcY],DynamicFactions[13][fcZ], 15);//
	CreateDynamic3DTextLabel("[Ballas] SAFE\n/safeinfo]",COLOR_GRAD4, DynamicFactions[14][fcX],DynamicFactions[14][fcY],DynamicFactions[14][fcZ], 15);//
	CreateDynamic3DTextLabel("[Sevile] SAFE\n/safeinfo]",COLOR_GRAD4, DynamicFactions[15][fcX],DynamicFactions[15][fcY],DynamicFactions[15][fcZ], 15);//
	CreateDynamic3DTextLabel("[CRL] SAFE\n/safeinfo]",COLOR_GRAD4, DynamicFactions[16][fcX],DynamicFactions[16][fcY],DynamicFactions[16][fcZ], 15);//
	CreateDynamic3DTextLabel("[C.I.A.] SAFE\n/safeinfo]",COLOR_GRAD4, DynamicFactions[17][fcX],DynamicFactions[17][fcY],DynamicFactions[17][fcZ], 15);//
	cache_delete(result3);
	print("=============================================================");
	printf("		Safe Sistem Loaded %i Safe's", x);
	print("=============================================================\n");
	return 1;
}


LoadRoom()
{
	new x = -1,string[150];
	new Cache:result3 = mysql_query(handle,"SELECT * FROM `roomhotel` ORDER BY `roomhotel`.`ID` ASC");
 	for(new i,j=cache_get_row_count();i!=j;++i)
	{
		x++;
		cache_get_field_content(i,"ID", temp);						CamInfo[x][rID] = strval(temp);
        cache_get_field_content(i,"Owner", temp);					format(CamInfo[x][rOwner], 128, temp);
        cache_get_field_content(i,"Owned", temp);					CamInfo[x][rOwned] = strval(temp);
        cache_get_field_content(i,"Locked", temp);					CamInfo[x][rLocked] = strval(temp);
        cache_get_field_content(i,"PosX", temp);					CamInfo[x][rPosX] = floatstr(temp);
        cache_get_field_content(i,"PosY", temp);					CamInfo[x][rPosY] = floatstr(temp);
        cache_get_field_content(i,"PosZ", temp);					CamInfo[x][rPosZ] = floatstr(temp);
        cache_get_field_content(i,"IntX", temp);					CamInfo[x][rIntX] = floatstr(temp);
        cache_get_field_content(i,"IntY", temp);					CamInfo[x][rIntY] = floatstr(temp);
        cache_get_field_content(i,"IntZ", temp);					CamInfo[x][rIntZ] = floatstr(temp);
        cache_get_field_content(i,"Interior", temp);				CamInfo[x][rInterior] = strval(temp);
        if(CamInfo[i][rOwned] == 0)	format(string, sizeof(string), "{00BC00}Camera {F6F6F6}%d\n{F6F6F6} %s\n{00BC00}Locked:{F6F6F6} %d\n{00BC00}/BuyRoom {F6F6F6}pentru a inchiria",CamInfo[i][rID],CamInfo[i][rOwner],CamInfo[i][rLocked]);
		else                        format(string, sizeof(string), "{00BC00}Camera {F6F6F6}%d\n{00BC00}Chirias: {F6F6F6}%s\n{00BC00}Locked:{F6F6F6} %d",CamInfo[i][rID],CamInfo[i][rOwner],CamInfo[i][rLocked]);
		Camera[i] = Create3DTextLabel(string,COLOR_GRAD4,CamInfo[i][rPosX],CamInfo[i][rPosY],CamInfo[i][rPosZ],6.0,0);
   		Camerepick[i] = CreateDynamicPickup(19132,1,CamInfo[i][rPosX],CamInfo[i][rPosY],CamInfo[i][rPosZ],0);
	}
	cache_delete(result3);
	print("=============================================================");
	printf("		Motel Sistem Loaded %i Room's", x);
	print("=============================================================\n");
	return 1;
}


LoadBiz()
{
    new Cache:result3 = mysql_query(handle,"SELECT * FROM `biz` ORDER BY `biz`.`ID` ASC");
	new result[100], x = -1;
	for(new i = 0; i < cache_get_row_count(); i++)
    {
   		// LOADING DATA     \====================================================================/
 		x++;
		cache_get_field_content(x,"ID", temp);					BizzInfo[x][bID] = strval(temp);
	    cache_get_field_content(x,"Owned", temp);				BizzInfo[x][bOwned] = strval(result);
        cache_get_field_content(x,"Owner", temp);				format(BizzInfo[x][bOwner], 128, temp);
	    cache_get_field_content(x,"Message", temp);				format(BizzInfo[x][bMessage], 128, temp);
	    cache_get_field_content(x,"Extortion", temp);			format(BizzInfo[x][bExtortion], 128, temp);
		cache_get_field_content(x,"EntranceX", temp);           BizzInfo[x][bEntranceX] = floatstr(temp);
	    cache_get_field_content(x,"EntranceY", temp);			BizzInfo[x][bEntranceY] = floatstr(temp);
	    cache_get_field_content(x,"EntranceZ", temp);			BizzInfo[x][bEntranceZ] = floatstr(temp);
		cache_get_field_content(x,"ExitX", temp);           	BizzInfo[x][bExitX] = floatstr(temp);
	    cache_get_field_content(x,"ExitY", temp);				BizzInfo[x][bExitY] = floatstr(temp);
	    cache_get_field_content(x,"ExitZ", temp);				BizzInfo[x][bExitZ] = floatstr(temp);
	    cache_get_field_content(x,"LevelNeeded", temp);			BizzInfo[x][bLevelNeeded] = strval(temp);
	    cache_get_field_content(x,"BuyPrice", temp);			BizzInfo[x][bBuyPrice] = strval(temp);
	    cache_get_field_content(x,"EntranceCost", temp);		BizzInfo[x][bEntranceCost] = strval(temp);
	    cache_get_field_content(x,"Till", temp);				BizzInfo[x][bTill] = strval(temp);
	    cache_get_field_content(x,"Locked", temp);				BizzInfo[x][bLocked] = strval(temp);
	    cache_get_field_content(x,"Interior", temp);			BizzInfo[x][bInterior] = strval(temp);
	    cache_get_field_content(x,"Products", temp);			BizzInfo[x][bProducts] = strval(temp);
	    cache_get_field_content(x,"MaxProducts", temp);			BizzInfo[x][bMaxProducts] = strval(temp);
	    cache_get_field_content(x,"PriceProd", temp);			BizzInfo[x][bPriceProd] = strval(temp);
	    cache_get_field_content(x,"Icon", temp);				BizzInfo[x][bIcon] = strval(temp);
	    new string3[512];
 	    if(BizzInfo[x][bOwned] == 0)
  		{
  			Pickupbiz[x] =  CreateDynamicPickup(1274, 1, BizzInfo[x][bEntranceX], BizzInfo[x][bEntranceY], BizzInfo[x][bEntranceZ]);
            format(string3, sizeof(string3), "{00BC00}De Vanzare!\nNume: {F6F6F6}%s\n{00BC00}Detinator: {F6F6F6}-\n{00BC00}Pret: {F6F6F6}$%d\n{00BC00}Level: {F6F6F6}%d\n{00BC00}ID-ul afacerii: {F6F6F6}%d", BizzInfo[x][bMessage], BizzInfo[x][bBuyPrice], BizzInfo[x][bLevelNeeded], BizzInfo[x][bID]);
    		BizzLabel[x] = CreateDynamic3DTextLabel(string3,COLOR_GRAD4,BizzInfo[x][bEntranceX], BizzInfo[x][bEntranceY], BizzInfo[x][bEntranceZ]+0.2,10.0);
			bizzicon[x] = CreateDynamicMapIcon(BizzInfo[x][bEntranceX], BizzInfo[x][bEntranceY], BizzInfo[x][bEntranceZ], BizzInfo[x][bIcon], -1, 0, 0, -1, 250.0);
		}
		if(BizzInfo[x][bOwned] == 1)
		{
   		    Pickupbiz[x] = CreateDynamicPickup(1274, 1, BizzInfo[x][bEntranceX], BizzInfo[x][bEntranceY], BizzInfo[x][bEntranceZ]);
			format(string3, sizeof(string3), "{00BC00}Nume: {F6F6F6}%s\n{00BC00}Detinator: {F6F6F6}%s\n{00BC00}Extortion: {F6F6F6}%s\n{00BC00}Intrare: {F6F6F6}$%d\n{00BC00}ID-ul afacerii: {F6F6F6}%d", BizzInfo[x][bMessage], BizzInfo[x][bOwner], BizzInfo[x][bExtortion], BizzInfo[x][bEntranceCost], BizzInfo[x][bID]);
			BizzLabel[x] = CreateDynamic3DTextLabel(string3,COLOR_GRAD4,BizzInfo[x][bEntranceX], BizzInfo[x][bEntranceY], BizzInfo[x][bEntranceZ]+0.2,10.0);
			bizzicon[x] = CreateDynamicMapIcon(BizzInfo[x][bEntranceX], BizzInfo[x][bEntranceY], BizzInfo[x][bEntranceZ], BizzInfo[x][bIcon], -1, 0, 0, -1, 250.0);
		}
		Pickupbiz2[x] = CreateDynamicPickup(1318, 1, BizzInfo[x][bExitX], BizzInfo[x][bExitY], BizzInfo[x][bExitZ]);
 	}
	cache_delete(result3);
	print("=============================================================");
	printf("		Biz Sistem Loaded %i Bbiz's", x);
	print("=============================================================\n");
	return 1;
}

LoadPHouses()
{
    new Cache:result3 = mysql_query(handle,"SELECT * FROM `houses` ORDER BY `houses`.`hID` ASC");
	new x = 0,locktext[20];
//	for(new i = 0; i < cache_get_row_count(); i++)
 	for(new i,j=cache_get_row_count();i!=j;++i)
	{
   			//LOADING DATA====================================================================/
			cache_get_field_content(x,"hID", temp);					HouseInfo[x][hID] = strval(temp);
	        cache_get_field_content(x,"PosX", temp);				HouseInfo[x][hPosX] = floatstr(temp);
	        cache_get_field_content(x,"PosY", temp);				HouseInfo[x][hPosY] = floatstr(temp);
	        cache_get_field_content(x,"PosZ", temp);				HouseInfo[x][hPosZ] = floatstr(temp);
	        cache_get_field_content(x,"PosX1", temp);				HouseInfo[x][hPosX1] = floatstr(temp);
	        cache_get_field_content(x,"PosY1", temp);				HouseInfo[x][hPosY1] = floatstr(temp);
	        cache_get_field_content(x,"PosZ1", temp);				HouseInfo[x][hPosZ1] = floatstr(temp);
	        cache_get_field_content(x,"Name", temp);			    format(HouseInfo[x][hName], 128, temp);
	        cache_get_field_content(x,"Owner", temp);				format(HouseInfo[x][hOwner], 128, temp);
 	        cache_get_field_content(x,"Owned", temp);				HouseInfo[x][hOwned] = strval(temp);
        	cache_get_field_content(x,"Password", temp);	      	format(HouseInfo[x][hPassword], 128, temp);
	        cache_get_field_content(x,"Value", temp);				HouseInfo[x][hValue] = strval(temp);
	        cache_get_field_content(x,"Storage", temp);				HouseInfo[x][hStorage] = strval(temp);
	        cache_get_field_content(x,"World", temp);				HouseInfo[x][hWorld] = strval(temp);
	        cache_get_field_content(x,"Interior", temp);			HouseInfo[x][hInt] = strval(temp);
	        cache_get_field_content(x,"Dog", temp);					HouseInfo[x][hDog] = strval(temp);
	        cache_get_field_content(x,"Privacy", temp);				HouseInfo[x][hPrivacy] = strval(temp);
	        cache_get_field_content(x,"UpgradeLock", temp);			HouseInfo[x][hUpgradeLock] = strval(temp);
	        cache_get_field_content(x,"ForSale", temp);				HouseInfo[x][hForSale] = strval(temp);
	        cache_get_field_content(x,"Lock", temp);				HouseInfo[x][hLock] = strval(temp);
	        cache_get_field_content(x,"Level", temp);				HouseInfo[x][hLevel] = strval(temp);
	        cache_get_field_content(x,"Alarma", temp);				HouseInfo[x][hProtection1] = strval(temp);
	        cache_get_field_content(x,"Camera", temp);				HouseInfo[x][hProtection2] = strval(temp);
	        cache_get_field_content(x,"Caine", temp);				HouseInfo[x][hProtection3] = strval(temp);
			//CREATING HOUSE====================================================================/
	       	Total_House_Created ++;
	        //if(HouseInfo[i][hPosX] == 0.0 && HouseInfo[i][hPosY] == 0.0 && HouseInfo[i][hPosY] == 0.0) { INI_Close(); continue; }
	        if(HouseInfo[x][hLock] == 0) locktext = "Nu";
	        else if(HouseInfo[x][hLock] != 0) locktext = "Da";
			if(HouseInfo[x][hOwned] == 0) 	HouseIcon[x] = CreateDynamicMapIcon(HouseInfo[x][hPosX], HouseInfo[x][hPosY], HouseInfo[x][hPosZ], 31, -1, 0, 0, -1, 250.0);
	        else 							HouseIcon[x] = CreateDynamicMapIcon(HouseInfo[x][hPosX], HouseInfo[x][hPosY], HouseInfo[x][hPosZ], 32, -1, 0, 0, -1, 250.0);
	       	new string[512], houseid = x;
          	if(HouseInfo[houseid][hDog] == 0)
			{
			    if(strmatch("Unbought", HouseInfo[houseid][hOwner]))
				{
					if(HouseInfo[houseid][hUpgradeLock] != 13) { format(string, sizeof(string), "{00BC00}De Vanzare!\n{00BC00}Detinator: {F6F6F6}-\n{00BC00}Pret: {F6F6F6}$%d\n{00BC00}Nivel: {F6F6F6}%d\n{00BC00}ID casa: {F6F6F6}%d", HouseInfo[houseid][hValue], HouseInfo[houseid][hLevel], houseid); HouseInfo[houseid][hOwned] = 0; }
					else { format(string, sizeof(string), "{00BC00}De inchiriat!\n{00BC00}Detinator: {F6F6F6}-\n{00BC00}Pret: {F6F6F6}$%d\n{00BC00}Nivel: {F6F6F6}%d\n{00BC00}ID casa: {F6F6F6}%d", HouseInfo[houseid][hValue], HouseInfo[houseid][hLevel], houseid); HouseInfo[houseid][hOwned] = 0; }
				}
				else if(!strmatch("Unbought", HouseInfo[houseid][hOwner]) && HouseInfo[houseid][hPrice] != 0) { format(string, sizeof(string), "{00BC00}Nume: {F6F6F6}%s\n{00BC00}Detinator: {F6F6F6}%s\n{00BC00}Pret: {F6F6F6}$%d\n{00BC00}Nivel: {F6F6F6}%d\n{00BC00}Inchisa: {F6F6F6}%s\n{00BC00}ID casa: {F6F6F6}%d", HouseInfo[houseid][hName], HouseInfo[houseid][hOwner], HouseInfo[houseid][hPrice], HouseInfo[houseid][hLevel], locktext, houseid); HouseInfo[houseid][hOwned] = 1; }
			    else if(!strmatch("Unbought", HouseInfo[houseid][hOwner]) && HouseInfo[houseid][hPrice] == 0) { format(string, sizeof(string), "{00BC00}Nume: {F6F6F6}%s\n{00BC00}Detinator: {F6F6F6}%s\n{00BC00}Nivel: {F6F6F6}%d\n{00BC00}Inchisa: {F6F6F6}%s\n{00BC00}ID casa: {F6F6F6}%d", HouseInfo[houseid][hName], HouseInfo[houseid][hOwner], HouseInfo[houseid][hLevel], locktext, houseid); HouseInfo[houseid][hOwned] = 1; }
			}
		 	if(HouseInfo[houseid][hDog] == 1)
			{
			    if(strmatch("Unbought", HouseInfo[houseid][hOwner]))
				{
					if(HouseInfo[houseid][hUpgradeLock] != 13) { format(string, sizeof(string), "{00BC00}De Vanzare!\n{00BC00}Detinator: {F6F6F6}-\n{00BC00}Pret: {F6F6F6}$%d\n{00BC00}Nivel: {F6F6F6}%d\n{00BC00}ID casa: {F6F6F6}%d", HouseInfo[houseid][hValue], HouseInfo[houseid][hLevel], houseid); HouseInfo[houseid][hOwned] = 0; }
					else { format(string, sizeof(string), "{00BC00}De inchiriat!\n{00BC00}Detinator: {F6F6F6}-\n{00BC00}Pret: {F6F6F6}$%d\n{00BC00}Nivel: {F6F6F6}%d\n{00BC00}ID casa: {F6F6F6}%d", HouseInfo[houseid][hValue], HouseInfo[houseid][hLevel], houseid); HouseInfo[houseid][hOwned] = 0; }
				}
				else if(!strmatch("Unbought", HouseInfo[houseid][hOwner]) && HouseInfo[houseid][hPrice] != 0) {
				format(string, sizeof(string), "{00BC00}Nume: {F6F6F6}%s\n{00BC00}Detinator: {F6F6F6}%s\n{00BC00}Pret: {F6F6F6}$%d\n{00BC00}Nivel: {F6F6F6}%d\n{00BC00}Inchisa: {F6F6F6}%s\n{00BC00}ID casa: {F6F6F6}%d\nScrie {00BC00}/rentroom {F6F6F6} pentru a inchiria o casa\n{00BC00}Pretul chiriei: {F6F6F6}$%d",
				HouseInfo[houseid][hName], HouseInfo[houseid][hOwner], HouseInfo[houseid][hPrice], HouseInfo[houseid][hLevel], locktext, houseid, HouseInfo[houseid][hPrivacy]); HouseInfo[houseid][hOwned] = 1; }
			    else if(!strmatch("Unbought", HouseInfo[houseid][hOwner]) && HouseInfo[houseid][hPrice] == 0) {
				format(string, sizeof(string), "{00BC00}Nume: {F6F6F6}%s\n{00BC00}Detinator: {F6F6F6}%s\n{00BC00}Nivel: {F6F6F6}%d\n{00BC00}Inchisa: {F6F6F6}%s\n{00BC00}ID casa: {F6F6F6}%d\nScrie {00BC00}/rentroom {F6F6F6} pentru a inchiria o camera\n{00BC00}Pretul chiriei: {F6F6F6}$%d",
				HouseInfo[houseid][hName], HouseInfo[houseid][hOwner], HouseInfo[houseid][hLevel], locktext, houseid, HouseInfo[houseid][hPrivacy]); HouseInfo[houseid][hOwned] = 1; }
			}
	        HouseLabel[x] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, HouseInfo[x][hPosX], HouseInfo[x][hPosY], HouseInfo[x][hPosZ]+0.2, 20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
            HousePickup[x] = CreateDynamicPickup(1273, 1, HouseInfo[x][hPosX], HouseInfo[x][hPosY], HouseInfo[x][hPosZ], HouseInfo[x][hWorld]);
            HousePickup1[x] = CreateDynamicPickup(1273, 1, HouseInfo[x][hPosX1], HouseInfo[x][hPosY1], HouseInfo[x][hPosZ1], Total_House_Created);
			x++;
	}
	cache_delete(result3);
	print("=============================================================");
	printf("		House Sistem Loaded %i Houses", Total_House_Created);
	print("=============================================================\n");
	return 1;
}

public Fillup(playerid)
{
	if(Refueling[playerid] == 1)
	{
    	SendClientMessage(playerid, COLOR_WHITE, "*Vehiculul a fost alimentat.");
   		Refueling[playerid] = 0;
   		TogglePlayerControllable(playerid, 1);
	}
	return 1;
}
GetPlayer2DRadarZone(playerid, zone[], len)
{
	new Float:x22, Float:y22, Float:z22;
	GetPlayerPos(playerid, x22, y22, z22);
 	for(new i = 0; i != sizeof(gSAZones); i++ )
 	{
		if(x22 >= gSAZones[i][SAZONE_AREA][0] && x22 <= gSAZones[i][SAZONE_AREA][3] && y22 >= gSAZones[i][SAZONE_AREA][1] && y22 <= gSAZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}
Get2DRadarZone(Float:Xull,Float:Yull, zone[], len)
{
 	for(new i = 0; i != sizeof(gSAZones); i++ )
 	{
		if(Xull >= gSAZones[i][SAZONE_AREA][0] && Xull <= gSAZones[i][SAZONE_AREA][3] && Yull >= gSAZones[i][SAZONE_AREA][1] && Yull <= gSAZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}
GetVehicleSpeed(vehicleid)
{
        if(vehicleid != INVALID_VEHICLE_ID)
        {
                new Float:Pos[3],Float:VS ;
                GetVehicleVelocity(vehicleid, Pos[0], Pos[1], Pos[2]);
                VS = floatsqroot(Pos[0]*Pos[0] + Pos[1]*Pos[1] + Pos[2]*Pos[2])*200;
                return floatround(VS,floatround_round);
        }
        return INVALID_VEHICLE_ID;
}

IsOnline(szName[])
{
	new szState[40];
    if( IsPlayerConnected(ReturnUser(szName)))
    {
        if(IsPlayerPaused(ReturnUser(szName)))
		format(szState,40,"{FFFF00} AFK {FFFFFF}");
		else
		format(szState,40,"{04FB1D} Online {FFFFFF}");
 	}
	else
		format(szState,40,"{FF0000} Offline {FFFFFF}");
	return szState;
}
IsOnlinePlayer(szName[])
{
	new szState[40];
    if( IsPlayerConnected(ReturnUser(szName)))
    {
        if(IsPlayerPaused(ReturnUser(szName)))
		format(szState,40,"{FFFF00} AFK\t {FFFFFF}");
		else
		format(szState,40,"{04FB1D} Online {FFFFFF}");
 	}
	else
		format(szState,40,"{FF0000} Offline {FFFFFF}");
	return szState;
}


PlayerName(playerid)
{
        new pname[MAX_PLAYER_NAME];
        GetPlayerName(playerid,pname,MAX_PLAYER_NAME);
        return pname;
}
PlayerIP(playerid)
{
  	new plrIP[16];
    GetPlayerIp(playerid, plrIP, sizeof(plrIP));
    return plrIP;
}
strtok(string[],&idx,seperator = ' ')
{
	new ret[128], i = 0, len = strlen(string);
	while(string[idx] == seperator && idx < len) idx++;
	while(string[idx] != seperator && idx < len)
	{
	    ret[i] = string[idx];
	    i++;
		idx++;
	}
	while(string[idx] == seperator && idx < len) idx++;
	return ret;
}

public KickWithMessage(playerid, color, message[])
{
    SendClientMessage(playerid, color, message);
    SetTimerEx("KickPublic", 1000, 0, "d", playerid);
}

GivePlayerCash(playerid, money)
{
    Cash[playerid] += money;
    ResetMoneyBar(playerid);
    UpdateMoneyBar(playerid, Cash[playerid]);
    PlayerInfo[playerid][pCash] = Cash[playerid];
	Update(playerid, pCashx);
    return Cash[playerid];
}

SetPlayerCash(playerid, money)
{
    Cash[playerid] = money;
    ResetMoneyBar(playerid);
    UpdateMoneyBar(playerid, Cash[playerid]);
    PlayerInfo[playerid][pCash] = Cash[playerid];
	Update(playerid, pCashx);

	return Cash[playerid];
}

ResetPlayerCash(playerid)
{
    Cash[playerid] = 0;
    ResetMoneyBar(playerid);
    UpdateMoneyBar(playerid, Cash[playerid]);
    PlayerInfo[playerid][pCash] = Cash[playerid];
	Update(playerid, pCashx);

	return Cash[playerid];
}

GetPlayerCash(playerid)
{
    return Cash[playerid];
}
stock strvalEx( const string[] )
{
	if( strlen( string ) >= 50 ) return 0;
	return strval(string);
}
/*
SetVehiclePosEX(vehicleid,Float:X,Float:Y,Float:Z)
{
	foreach(Player,playerid)
	{
	    if(GetPlayerVehicleID(playerid) == vehicleid)
	    {
	        Tele[playerid] = 1;
		    PlayerPosX[playerid] = OldPlayerPosX[playerid]+0.2;
			PlayerPosY[playerid] = OldPlayerPosY[playerid]+0.2;
			PlayerPosZ[playerid] = OldPlayerPosZ[playerid]+0.2;
			SetTimerEx("UpdatePlayerPos", 1000, false, "i", playerid);
	    }
	}
	SetVehiclePos(vehicleid,X,Y,Z);
}
SetPlayerPosEX(playerid,Float:X,Float:Y,Float:Z)
{
    Tele[playerid] = 1;
    if(X == 1382.2604 && Y == -1622.6512 && Z == 14.2860)   {SetPlayerFacingAngle(playerid,-90); SetCameraBehindPlayer(playerid);}
    PlayerPosX[playerid] = OldPlayerPosX[playerid]+0.2;
	PlayerPosY[playerid] = OldPlayerPosY[playerid]+0.2;
	PlayerPosZ[playerid] = OldPlayerPosZ[playerid]+0.2;
	SetPlayerPos(playerid,X,Y,Z);
	SetTimerEx("UpdatePlayerPos", 1000, false, "i", playerid);
	return 1;
}*/
public RespawnCars()
{
    for(new car=0; car<MAX_VEHICLES; car++)
    {
    	if(!OwnedVeh(car))
    	{
   			if(IsVehicleOccupied(car) == 0)
		   	SetVehicleToRespawn(car);
		}
	}
	GameTextForAll("~w~Vehicles~n~~b~Respawned!",3000,1);
	return 1;
}
/*public PreUpdatePlayerPos(playerid)
{
    PlayerPosX[playerid] = OldPlayerPosX[playerid]+0.2;
	PlayerPosY[playerid] = OldPlayerPosY[playerid]+0.2;
	PlayerPosZ[playerid] = OldPlayerPosZ[playerid]+0.2;
	SetTimerEx("UpdatePlayerPos", 1000, false, "i", playerid);
	return 1;
}
public UpdatePlayerPos(playerid)
{
	if(Tele[playerid] != 2)
	Tele[playerid] = 0;
	return 1;
}*/
new strang[155];
CurrentTimeStamps()
{
 	new hour, minute, second,Year, Month, Day;
    gettime(hour, minute, second);
    getdate(Year, Month, Day);
    format(strang, sizeof(strang), "[%02d/%02d/%d] %d:%d:%d-", Day, Month, Year, hour, minute, second);
    return strang;
}


public PlayerPlayMusic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	}
}

public freze(playerid)
{
    TogglePlayerControllable(playerid,1); //unfreeze player
	return 1;
}

public frezePlane(playerid)
{
    TogglePlayerControllable(playerid,1); //unfreeze player
	GameTextForPlayer(playerid, "~n~~y~Ai umplut 5 rezervoare~n~Poti ierbicida campul!",2000,5);
	return 1;
}

public OnPlayerGiveDamageActor(playerid, damaged_actorid, Float: amount, weaponid, bodypart)
{
/*    new string[128], attacker[MAX_PLAYER_NAME];
    new weaponname[24];
    GetPlayerName(playerid, attacker, sizeof (attacker));
    GetWeaponName(weaponid, weaponname, sizeof (weaponname));

    format(string, sizeof(string), "%s has made %.0f damage to actor id %d, weapon: %s", attacker, amount, damaged_actorid, weaponname);
    SendClientMessageToAll(0xFFFFFFFF, string);*/
    return 1;
}
stock GetWeaponModel(weaponid)
{
	switch(weaponid)
	{
     case 1:
	        return 331;

		case 2..8:
		    return weaponid+331;

        case 9:
		    return 341;

		case 10..15:
			return weaponid+311;

		case 16..18:
		    return weaponid+326;

		case 22..29:
		    return weaponid+324;

		case 30,31:
		    return weaponid+325;

		case 32:
		    return 372;

		case 33..45:
		    return weaponid+324;

		case 46:
		    return 371;
	}
	return 0;
}

public PrintSBizInfo(playerid,targetid)
{
	new coordsstring[256];
	SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	format(coordsstring, sizeof(coordsstring),"*** %s ***",SBizzInfo[targetid][sbName]);
	SendClientMessage(playerid, COLOR_WHITE,coordsstring);
	format(coordsstring, sizeof(coordsstring), "Locked: %d Intrare: $%d Bani: $%d", SBizzInfo[targetid][sbLocked], SBizzInfo[targetid][sbEntrace], SBizzInfo[targetid][sbTill]);
	SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
	format(coordsstring, sizeof(coordsstring), "Produse: %d/%d Pret: %d", SBizzInfo[targetid][sbProduse],SBizzInfo[targetid][sbMaxProd],SBizzInfo[targetid][sbPrice]);
	SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
	SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
}

public PrintBizInfo(playerid,targetid)
{
	new coordsstring[256];
	SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	format(coordsstring, sizeof(coordsstring),"*** %s ***",BizzInfo[targetid][bMessage]);
	SendClientMessage(playerid, COLOR_WHITE,coordsstring);
	format(coordsstring, sizeof(coordsstring), "Locked: %d Intrare: $%d Bani: $%d", BizzInfo[targetid][bLocked], BizzInfo[targetid][bEntranceCost], BizzInfo[targetid][bTill]);
	SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
	format(coordsstring, sizeof(coordsstring), "Produse: %d/%d Pret: %s", BizzInfo[targetid][bProducts],BizzInfo[targetid][bMaxProducts],BizzInfo[targetid][bBuyPrice]);
	SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
	SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
}

public StopMusic()
{
	foreach(Player,i)
	PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
}

GetClosestATM(playerid)
{
    new
    Float:objPos[ 3 ],
    Float:prevDistance = 999999.9,
    closestObject = -1;
    for( new i = 0; i < MAX_ATMS; i ++ )
    {
        GetDynamicObjectPos(atmVariables[i][ObjectId] , objPos[ 0 ], objPos[ 1 ], objPos[ 2 ] );
        new
        Float:distance = GetPlayerDistanceFromPoint( playerid, objPos[ 0 ], objPos[ 1 ], objPos[ 2 ] );
        if( distance < prevDistance )
        {
            prevDistance = distance;
            closestObject = i;
        }
    }
    return closestObject;
}
stock GetClosestCoordinate(playerid)
{
	new Float:dist, whichone;
	if(dist < GetPlayerDistanceFromPoint(playerid, 0.0,0.0,0.0))
	{
		dist = GetPlayerDistanceFromPoint(playerid,  0.0,0.0,0.0);
		whichone = 1;
	}
	if(dist < GetPlayerDistanceFromPoint(playerid, 1833.11,-1842.56,13.578))
	{
		dist = GetPlayerDistanceFromPoint(playerid, 1833.11,-1842.56,13.578);
		whichone = 2;
	}
	if(dist < GetPlayerDistanceFromPoint(playerid,1833.11,-1842.56,13.578))
	{
		dist = GetPlayerDistanceFromPoint(playerid,1833.11,-1842.56,13.578);
		whichone = 3;
	}
	if(dist < GetPlayerDistanceFromPoint(playerid,1533.11,-842.56,3.578))
	{
		dist = GetPlayerDistanceFromPoint(playerid,1533.11,-842.56,3.578);
		whichone = 4;
	}
	if(dist < GetPlayerDistanceFromPoint(playerid,-53.11,-12.56,6.578))
	{
		dist = GetPlayerDistanceFromPoint(playerid,-53.11,-12.56,6.578);
		whichone = 5;
	}

}


GetTeamZoneColor(teamid)
{
	switch(teamid)
	{
		case 0: return color_0;
	    case 1: return color_1;
		case 2: return color_2;
		case 3: return color_3;
		case 4: return color_4;
		case 5: return color_5;
		case 6: return color_6;
		case 7: return color_7;
		case 8: return color_8;
		case 9: return color_9;
		case 10: return color_10;
		case 11: return color_11;
		case 12: return color_12;
		case 13: return color_13;
		case 14: return color_14;
		case 15: return color_15;
		case 16: return color_16;
		case 17: return color_17;
  		default: return color_0;
    }
    return -1;
}


SearchingHit(playerid)
{
	new searchhit = 0;
	foreach(Player,i)
	{
	    if(searchhit == 0)
	    {
		    if(PlayerInfo[i][pHeadValue] > 0 && GotHit[i] == 0 && PlayerInfo[i][pMember] != 8)
		    {
      			searchhit = 1;
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Hitman Agency News __________________|");
				SendClientMessage(playerid, COLOR_DBLUE, "*** Mesaj Primit. O noua tina este disponibila ***");
				format(strings, sizeof(strings), "Nume: %s   ID: %d   Value: $%d", PlayerName(i), i, PlayerInfo[i][pHeadValue]);
				SendClientMessage(playerid, COLOR_DBLUE, strings);
				SendClientMessage(playerid, COLOR_YELLOW, "Foloseste Givehit pentru a lua contractul si a ucide tinta.");
				SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________________|");
       			return 0;
    		}
		}
	}
	if(searchhit == 0)
    SendClientMessage(playerid, COLOR_GREY, "   No Contracts available !");
	return 0;
}

GetLasSeen(szName[])
{
	new Data[60];
	mysql_format(handle, query, 500, "SELECT * FROM `players` WHERE `username` = '%s' LIMIT 1", szName);//
	new Cache:Result = mysql_query(handle,query);
    cache_get_field_content(0,"LastLogin", temp);
	format(Data, 128, temp);
    cache_delete(Result);
	return Data;
}

GetFactionLeader(FactionID)
{
	new Cache:Result, Get[2],Numele[40];
	format(strings, sizeof(strings), "SELECT `username` FROM `players` WHERE `Leader` = %d LIMIT 1", FactionID);//
    Result = mysql_query(handle, strings);
    cache_get_data(Get[0], Get[1], handle);
    if(!Get[0]) Numele = "NO-ONE";
 	else cache_get_field_content(0, "username", Numele, handle, sizeof(Numele));
    cache_delete(Result);
	return (Numele);
}

GetFactionLeaders(FactionID)
{
	mysql_format(handle, query, 500, "SELECT * FROM `players` WHERE `Leader` = '%d'", FactionID);
	new Cache:Result = mysql_query(handle,query);
	mysql_query(handle,query);
    cache_delete(Result);
 	return cache_num_rows();
}

GetFactionMembers(FactionID)
{
	new Cache:Result,Get[2];
	format(strings, sizeof(strings), "SELECT `Member` FROM `players` WHERE `Member` = %d", FactionID);//
    Result = mysql_query(handle,strings);
    cache_get_data(Get[0], Get[1], handle);
    cache_delete(Result);
	return Get[0];
}
IsAFishPlace(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 2, -2420.219, 984.578, 44.297)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 403.6053,-2087.8020,7.8359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 398.7160,-2088.0918,7.8359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 396.1177,-2088.5332,7.8359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 390.9220,-2088.3879,7.8359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 383.1126,-2088.3806,7.8359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 374.6383,-2088.5723,7.8359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 369.6053,-2088.7966,7.8359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 367.0844,-2088.7083,7.8359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 362.4612,-2088.4573,7.8359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 354.1800,-2088.7957,7.8359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 349.9597,-2072.8298,7.8359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 349.9372,-2066.8074,7.8359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 349.9196,-2064.3003,7.8359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 349.8978,-2059.5981,7.8359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 349.8598,-2051.3994,7.8359)) return 1;
	else return 0;
}
IsPlayerNearWater(playerid)
{
	new Float:x, Float:y, Float:z, Float:checkx, Float:checky, Float:checkz, Float:angle;
	GetPlayerPos(playerid, x, y, z);
	new Float:X,Float:Y,Float:Z;
	GetObjectPos(BoatPirateObject,X,Y,Z);
	if(IsPlayerInRangeOfPoint(playerid,30,X,Y,Z)) return 1;
	if(IsAFishPlace(playerid)) return 1;
	if(z > 0.0 && z < MAX_Z_FISH_THRESHOLD)
	{
		for(new i = 0; i < 4; i++)
		{
	        checkx = x + (WATER_CHECK_RADIUS * floatsin(-angle, degrees));
		    checky = y + (WATER_CHECK_RADIUS * floatcos(-angle, degrees));
			angle += 90.0;
            MapAndreas_FindZ_For2DCoord(checkx, checky, checkz);
			if(checkz == 0.0) return 1;
		}
	}
	return 0;
}
stock CreateGolfBall()
{
	if(GolfBall != -1)
	    return;
	GolfBall = CreateObject(1974, 1395.8582, 2808.4587, 9.8785, 0, 0, 0, 100.0);
	PHY_InitObject(GolfBall, 1974);
	PHY_RollObject(GolfBall);
	PHY_SetObjectFriction(GolfBall, 1.0);
	PHY_SetObjectAirResistance(GolfBall, 0.2);
	PHY_SetObjectGravity(GolfBall, 10.0);
	PHY_UseColAndreas(GolfBall,1);
	PHY_ToggleObjectPlayerColls(GolfBall, 1, 0.2);
}
stock ReCreateGolfBall()
{
	PHY_DeleteObject(GolfBall);
	DestroyObject(GolfBall);
	GolfBall = -1;
	CreateGolfBall();
}

stock CreateBall()
{
	if(Ball != -1)
	    return;
	Ball = CreateObject(2114, BallSpawn[0], BallSpawn[1], BallSpawn[2] - 0.875, 0, 0, 0,200);
	SetObjectMaterial(Ball, 0, 8391, "ballys01", "ws_floortiles4", 0xFFFFFFFF);
	PHY_InitObject(Ball, 2114);
	PHY_RollObject(Ball);
	PHY_SetObjectFriction(Ball, 7.0);
	PHY_SetObjectAirResistance(Ball, 0.2);
	PHY_SetObjectGravity(Ball, 10.0);
	PHY_SetObjectZBound(Ball, _, _, 0.5);
	PHY_ToggleObjectPlayerColls(Ball, 1, 0.6);
}

stock DestroyBall()
{
	PHY_DeleteObject(Ball);
	DestroyObject(Ball);
	Ball = -1;
}

stock GetBallPos(&Float:x, &Float:y, &Float:z)
{
	if(BallHolder != -1)
	{
	    new Float:angle;
	    GetPlayerPos(BallHolder, x, y, z);
		GetPlayerFacingAngle(BallHolder, angle);
		x += 0.6 * floatsin(-angle, degrees);
		y += 0.6 * floatcos(-angle, degrees);
		z -= 0.875;
	}
	else
	GetObjectPos(Ball, x, y, z);
}

stock RecreateBall()
{
    DestroyBall();
	CreateBall();
	BallHolder = -1;
}
stock OaspetiOnline()
{
	new Counth=0;
	foreach(Player,i)
	{
	    if(TeamBall[i] == 2)
	    Counth++;
	}
	return Counth;
}

stock RedTeamON()
{
    new Counth=0;
	foreach(Player,i)
	{
	    if(PaintBallPlaying[i] == 2)
	    Counth++;
	}
	return Counth;
}
TennIdCreated()
{
    new smallid = 1000;
	for(new i = 0; i < 21; i++)
	{
		if(CreatedCarsOn[i] < smallid)
 	    	smallid = i; //and set the string if the textdraw to topkills
 	}
    return smallid;
}

stock BlueTeamON()
{
    new Counth=0;
	foreach(Player,i)
	{
	    if(PaintBallPlaying[i] == 1)
	    Counth++;
	}
	return Counth;
}

stock GazdeOnline()
{
	new Counth=0;
	foreach(Player,i)
	{
	    if(TeamBall[i] == 1)
	    Counth++;
	}
	return Counth;
}
stock SpecOnline()
{
	new Counth=0;
	foreach(Player,i)
	{
	    if(TeamBall[i] == 3)
	    Counth++;
	}
	return Counth;
}

stock TDShow(playerid)
{
        new Year, Month, Day;
		getdate(Year, Month, Day);
		new str2[64];
		format(str2,sizeof(str2),"%02d/%s/20%s",Day,GetMonth(Month),GetYearFormat00(Year));
		PlayerTextDrawSetString(playerid,Textdsraws20[playerid],str2);
		new Hour, Minute, Second;
		gettime(Hour, Minute, Second);
		new str[64];
		format(str,sizeof(str),"%02d:%02d",Hour,Minute);
		PlayerTextDrawSetString(playerid,Textdsraws19[playerid],str);

		if(PlayerInfo[playerid][pBaterie]>15)		format(str,sizeof(str),"~g~%d%",PlayerInfo[playerid][pBaterie]);
		else format(str,sizeof(str),"~r~%d%",PlayerInfo[playerid][pBaterie]);
		PlayerTextDrawSetString(playerid,Textdsraws16[playerid],str);


		PlayerTextDrawShow(playerid,Textdsraws16[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws0[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws1[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws2[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws3[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws4[playerid]);
		PlayerTextDrawShow(playerid,Textdsraws16[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws5[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws6[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws7[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws8[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws9[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws10[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws11[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws12[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws13[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws14[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws15[playerid]);
  		PlayerTextDrawShow(playerid,Textdsraws17[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws18[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws19[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws20[playerid]);
		PlayerTextDrawShow(playerid,Textdsraws21[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws22[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws23[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws24[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws25[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws26[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws27[playerid]);
        PlayerTextDrawShow(playerid,Textdsraws28[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws2228[playerid]);
        return 1;
}

stock TDHide(playerid)
{
   	    PlayerTextDrawHide(playerid,Textdsraws16666666[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws0[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws1[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws2[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws3[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws4[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws5[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws6[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws7[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws8[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws9[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws10[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws11[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws12[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws13[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws14[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws15[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws16[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws17[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws18[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws19[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws20[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws21[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws22[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws23[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws24[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws25[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws26[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws27[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws28[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws2229[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws2228[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10222[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10223[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10224[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10225[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10226[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10227[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10228[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10229[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10230[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10231[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10232[playerid]);
   	    PlayerTextDrawHide(playerid,Textdsraws10233[playerid]);
        PlayerTextDrawHide(playerid,Textdsraws20000[playerid]);//lista fac
  		PlayerTextDrawHide(playerid,Galaxy3Gallery);
		PlayerTextDrawHide(playerid,Galaxy3Gallery2);
		PlayerTextDrawHide(playerid,Galaxy3Gallery3);
		PlayerTextDrawHide(playerid,Galaxy3Gallery4);
		PlayerTextDrawHide(playerid,Galaxy3Gallery5);
		PlayerTextDrawHide(playerid,Galaxy3Gallery6);
        return 1;
}
stock GetYearFormat00(Year)
{
    new YearStr[3];
    switch(Year)
    {
        case 2033:  YearStr = "33";
        case 2032:  YearStr = "32";
        case 2031:  YearStr = "31";
        case 2015:  YearStr = "15";
        case 2016:  YearStr = "16";
        case 2017:  YearStr = "17";
        case 2018:  YearStr = "18";
        case 2019:  YearStr = "19";
        case 2020:  YearStr = "20";
        case 2021: 	YearStr = "21";
        case 2022: 	YearStr = "22";
        case 2023: 	YearStr = "23";
        case 2024: 	YearStr = "24";
        case 2025: 	YearStr = "25";
        case 2026: 	YearStr = "26";
        case 2027: 	YearStr = "27";
        case 2028: 	YearStr = "28";
        case 2029: 	YearStr = "29";
        case 2030: 	YearStr = "30";
    }
    return YearStr;
}

stock GetMonth(Month)
{
    new MonthStr[15];
    switch(Month)
    {
        case 1:  MonthStr = "IAN";
        case 2:  MonthStr = "FEB";
        case 3:  MonthStr = "MAR";
        case 4:  MonthStr = "APR";
        case 5:  MonthStr = "MAI";
        case 6:  MonthStr = "IUN";
        case 7:  MonthStr = "IUL";
        case 8:  MonthStr = "AUG";
        case 9:  MonthStr = "SEP";
        case 10: MonthStr = "OCT";
        case 11: MonthStr = "NOV";
        case 12: MonthStr = "DEC";
    }
    return MonthStr;
}



stock strmatch(const String1[], const String2[])
{
	if ((strcmp(String1, String2, true, strlen(String2)) == 0) && (strlen(String2) == strlen(String1)))
	return true;
	else
	return false;
}
GetPlayerSped(playerid)
{
    new Float:Coord[4];
    GetPlayerVelocity(playerid, Coord[0], Coord[1], Coord[2]);
    Coord[3] = floatsqroot(floatpower(floatabs(Coord[0]), 2.0) + floatpower(floatabs(Coord[1]), 2.0) + floatpower(floatabs(Coord[2]), 2.0)) * 213.3;
    return floatround(Coord[3]);
}
ClearChatbox(playerid, lines)
{
	for(new i=0; i<lines; i++)
 	SendClientMessage(playerid, -1, " ");
	return 1;
}
SetPlayerToTeamColor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PaintBallPlaying[playerid]>0) return 1;
		if (PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pLeader] == 0)
        SetPlayerColor(playerid,color_8);
	    if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
        SetPlayerColor(playerid,color_8);
	    if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
        SetPlayerColor(playerid,color_8);
        if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
        SetPlayerColor(playerid,color_8);
        if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
        SetPlayerColor(playerid,color_4);
        if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
        SetPlayerColor(playerid,color_5);
        if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
        SetPlayerColor(playerid,color_6);
        if (PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
        SetPlayerColor(playerid,color_7);
        if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
        SetPlayerColor(playerid,color_8);
        if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
        SetPlayerColor(playerid,color_9);
        if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
        SetPlayerColor(playerid,color_10);
        if (PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
        SetPlayerColor(playerid,color_8);
        if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
        SetPlayerColor(playerid,color_12);
        if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
        SetPlayerColor(playerid,color_13);
        if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
        SetPlayerColor(playerid,color_14);
       	if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
        SetPlayerColor(playerid,color_15);
	    if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
        SetPlayerColor(playerid,color_16);
	    if (PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
        SetPlayerColor(playerid,color_8);
		if(TesterDuty[playerid] == 1) SetPlayerColor(playerid, 0x9ACD32FF);
        if(AdminDuty[playerid] == 1) SetPlayerColor(playerid, 0xFF6600C8);
	}
	return 1;
}
FindIP(StrToChk[])
{
	new IpLevel = 0;
   	for(new a = 0; a < strlen(StrToChk); a++)
   	{
		switch(IpLevel)
      	{
        	case 0:
         	{
            	if(IsNum(StrToChk[a])) IpLevel++;
         	}
         	case 1, 2:
         	{
         		if(IsNum(StrToChk[a])) IpLevel++;
                else if(StrToChk[a] == '.') IpLevel = 4;
                else IpLevel = 0;
         	}
         	case 3:
         	{
             	if(StrToChk[a] == '.') IpLevel++;
             	else IpLevel = 0;
         	}
         	case 4:
         	{
             	if(IsNum(StrToChk[a])) IpLevel++;
             	else IpLevel = 0;
         	}
         	case 5, 6:
         	{
                	if(IsNum(StrToChk[a])) IpLevel++;
                	else if(StrToChk[a] == '.') IpLevel = 8;
                	else IpLevel = 0;
         	}
         	case 7:
         	{
             	if(StrToChk[a] == '.') IpLevel++;
             	else IpLevel = 0;
         	}
         	case 8:
         	{
             	if(IsNum(StrToChk[a])) IpLevel++;
             	else IpLevel = 0;
         	}
         	case 9, 10:{
                	if(IsNum(StrToChk[a])) IpLevel++;
                	else if(StrToChk[a] == '.') IpLevel = 12;
                	else IpLevel = 0;
         	}
         	case 11:
         	{
             	if(StrToChk[a] == '.') IpLevel++;
            	else IpLevel = 0;
         	}
         	case 12:
         	{
             	if(IsNum(StrToChk[a])) return 1;
                else IpLevel = 0;
   			}
  		}
   	}
   	return 0;
}
GasesteReclama(Text[])
{
   	new i;
   	new Puncte,Cifre,DPuncte;
	if(strfind(Text, ""#SERVERNAME"", true) != -1 || strfind(Text, ""#SERVERNAME"", true) != -1) return 0;
	for(i = 0; i < strlen(Text); i ++)
	{
	    if(Text[i] == '.') Puncte ++;
	    if(Text[i] == '0' || Text[i] == '1' || Text[i] == '2' || Text[i] == '3' || Text[i] == '4' || Text[i] == '5' || Text[i] == '6' || Text[i] == '7' || Text[i] == '8' || Text[i] == '9') Cifre ++;
//	    if(Text[i] == 'w' || Text[i] == 'W') DubluV ++;
	}
	if(Puncte >= 3 && Cifre >= 4) return 1;
//	if(DubluV >= 3) return 1;
	if(strfind(Text, ".com", true) != -1 || strfind(Text, ".org", true) != -1 || strfind(Text, ".net", true) != -1 || strfind(Text, ".tk", true) != -1) return 1;
	if(strfind(Text, ".ro", true) != -1 || strfind(Text, ":7777", true) != -1 || strfind(Text, "bzone", true) != -1 || strfind(Text, "b-zone", true) != -1  || strfind(Text, "redz", true) != -1) return 1;
	if(strfind(Text, "Pro-Gaming", true) != -1 || strfind(Text, "BloWn", true) != -1 || strfind(Text, "Ruleplay", true) != -1 || strfind(Text, "Skitter", true) != -1 || strfind(Text, "sNikers", true) != -1) return 1;
	if(strfind(Text, "Saints-Net", true) != -1 || strfind(Text, "Saints-Network", true) != -1 || strfind(Text, "bugged", true) != -1 || strfind(Text, "aGaming", true) != -1 || strfind(Text, "rGaming", true) != -1 || strfind(Text, "GFZONE", true) != -1) return 1;
	if(strfind(Text, "QuitZone", true) != -1 || strfind(Text, "Pronion", true) != -1 || strfind(Text, "Skitter", true) != -1 || strfind(Text, "booter", true) != -1) return 1;
	if(strfind(Text, "blown", true) != -1 || strfind(Text, "prounion", true) != -1 || strfind(Text, "best", true) != -1 || strfind(Text, "zone", true) != -1) return 1;
	if(DPuncte >= 1 && Cifre >= 4) return 1;
	return 0;
}

IsNum(textchar)
{
	if(textchar == '0') return 1;
	if(textchar == '1') return 1;
	if(textchar == '2') return 1;
	if(textchar == '3') return 1;
	if(textchar == '4') return 1;
	if(textchar == '5') return 1;
	if(textchar == '6') return 1;
	if(textchar == '7') return 1;
	if(textchar == '8') return 1;
	if(textchar == '9') return 1;
	return 0;
}
RandomPizzaCP(playerid)
{
	new randomCP = random(10);
	CP[playerid] = 21;
	if(randomCP == 1)
	SetPlayerCheckpoint(playerid,1379.8195,-1758.1541,13.546,3);
	if(randomCP == 2)
	SetPlayerCheckpoint(playerid,1422.9352,-1650.9591,13.3438,3);
	if(randomCP == 3)
	SetPlayerCheckpoint(playerid,1535.9493,-1730.0906,13.3828,3);
	if(randomCP == 4)
	SetPlayerCheckpoint(playerid,1328.9849,-1392.2810,13.3908,3);
	if(randomCP == 5)
	SetPlayerCheckpoint(playerid,1045.5781,-1741.8156,13.5469,3);
	if(randomCP == 6)
	SetPlayerCheckpoint(playerid,1222.5122,-1832.1132,13.396,3);
	if(randomCP == 7)
	SetPlayerCheckpoint(playerid,2346.8215,-1657.9352,13.3779,3);
	if(randomCP == 8)
	SetPlayerCheckpoint(playerid,2294.0146,-2078.8958,13.5391,3);
	if(randomCP == 9)
	SetPlayerCheckpoint(playerid,1376.0206,-1585.0269,13.3725,3);
	if(randomCP == 0)
	SetPlayerCheckpoint(playerid,1158.0741,-957.6629,42.7090,3);
	return 1;
}

stock Elevator_Initialize()
{
	// Initializes the elevator.

	Obj_Elevator 			= CreateDynamicObject(18755, 1786.678100, -1303.459472, GROUND_Z_COORD + ELEVATOR_OFFSET, 0.000000, 0.000000, 270.000000);
	Obj_ElevatorDoors[0] 	= CreateDynamicObject(18757, X_DOOR_CLOSED, -1303.459472, GROUND_Z_COORD, 0.000000, 0.000000, 270.000000);
	Obj_ElevatorDoors[1] 	= CreateDynamicObject(18756, X_DOOR_CLOSED, -1303.459472, GROUND_Z_COORD, 0.000000, 0.000000, 270.000000);
	Label_Elevator          = Create3DTextLabel("{CCCCCC}Press '{FFFFFF}~k~~CONVERSATION_YES~{CCCCCC}' to use the elevator.", 0xCCCCCCAA, 1784.9822, -1302.0426, 13.6491, 4.0, 0, 1);

	new string[128],
		Float:z;

	for(new i; i < sizeof(Obj_FloorDoors); i ++)
	{
	    Obj_FloorDoors[i][0] 	= CreateDynamicObject(18757, X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(i), 0.000000, 0.000000, 270.000000);
		Obj_FloorDoors[i][1] 	= CreateDynamicObject(18756, X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(i), 0.000000, 0.000000, 270.000000);

		format(string, sizeof(string), "{CCCCCC}[%s]\n{CCCCCC}Press '{FFFFFF}~k~~CONVERSATION_YES~{CCCCCC}' to use the elevator.", FloorNames[i]);

		if(i == 0)
		    z = 13.4713;
		else
		    z = 13.4713 + 8.7396 + ((i-1) * 5.45155);

		Label_Floors[i]         = Create3DTextLabel(string, 0xCCCCCCAA, 1783.9799, -1300.7660, z, 10.5, 0, 1);
		// Label_Elevator, Text3D:Label_Floors[21];
	}

	// Open ground floor doors:
	Floor_OpenDoors(0);
	Elevator_OpenDoors();

	return 1;
}

stock Elevator_Destroy()
{
	// Destroys the elevator.

	DestroyDynamicObject(Obj_Elevator);
	DestroyDynamicObject(Obj_ElevatorDoors[0]);
	DestroyDynamicObject(Obj_ElevatorDoors[1]);
	Delete3DTextLabel(Label_Elevator);

	for(new i; i < sizeof(Obj_FloorDoors); i ++)
	{
	    DestroyDynamicObject(Obj_FloorDoors[i][0]);
		DestroyDynamicObject(Obj_FloorDoors[i][1]);
		Delete3DTextLabel(Label_Floors[i]);
	}

	return 1;
}

stock Elevator_OpenDoors()
{
	// Opens the elevator's doors.

	new Float:x, Float:y, Float:z;

	GetDynamicObjectPos(Obj_ElevatorDoors[0], x, y, z);
	MoveDynamicObject(Obj_ElevatorDoors[0], X_DOOR_L_OPENED, y, z, DOORS_SPEED);
	MoveDynamicObject(Obj_ElevatorDoors[1], X_DOOR_R_OPENED, y, z, DOORS_SPEED);

	return 1;
}

stock Elevator_CloseDoors()
{
    // Closes the elevator's doors.

    if(ElevatorState == ELEVATOR_STATE_MOVING)
	    return 0;

    new Float:x, Float:y, Float:z;

	GetDynamicObjectPos(Obj_ElevatorDoors[0], x, y, z);
	MoveDynamicObject(Obj_ElevatorDoors[0], X_DOOR_CLOSED, y, z, DOORS_SPEED);
	MoveDynamicObject(Obj_ElevatorDoors[1], X_DOOR_CLOSED, y, z, DOORS_SPEED);

	return 1;
}

stock Floor_OpenDoors(floorid)
{
    // Opens the doors at the specified floor.

    MoveDynamicObject(Obj_FloorDoors[floorid][0], X_DOOR_L_OPENED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);
	MoveDynamicObject(Obj_FloorDoors[floorid][1], X_DOOR_R_OPENED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);

	PlaySoundForPlayersInRange(6401, 50.0, X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(floorid) + 5.0);

	return 1;
}

stock Floor_CloseDoors(floorid)
{
    // Closes the doors at the specified floor.

    MoveDynamicObject(Obj_FloorDoors[floorid][0], X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);
	MoveDynamicObject(Obj_FloorDoors[floorid][1], X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);

	PlaySoundForPlayersInRange(6401, 50.0, X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(floorid) + 5.0);

	return 1;
}

stock Elevator_MoveToFloor(floorid)
{
	// Moves the elevator to specified floor (doors are meant to be already closed).

	ElevatorState = ELEVATOR_STATE_MOVING;
	ElevatorFloor = floorid;

	// Move the elevator slowly, to give time to clients to sync the object surfing. Then, boost it up:
	MoveDynamicObject(Obj_Elevator, 1786.678100, -1303.459472, GetElevatorZCoordForFloor(floorid), 0.25);
    MoveDynamicObject(Obj_ElevatorDoors[0], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), 0.25);
    MoveDynamicObject(Obj_ElevatorDoors[1], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), 0.25);
    Delete3DTextLabel(Label_Elevator);

	ElevatorBoostTimer = SetTimerEx("Elevator_Boost", 2000, 0, "i", floorid);

	return 1;
}

public Elevator_Boost(floorid)
{
	// Increases the elevator's speed until it  'floorid'
	StopDynamicObject(Obj_Elevator);
	StopDynamicObject(Obj_ElevatorDoors[0]);
	StopDynamicObject(Obj_ElevatorDoors[1]);
	MoveDynamicObject(Obj_Elevator, 1786.678100, -1303.459472, GetElevatorZCoordForFloor(floorid), ELEVATOR_SPEED);
    MoveDynamicObject(Obj_ElevatorDoors[0], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), ELEVATOR_SPEED);
    MoveDynamicObject(Obj_ElevatorDoors[1], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), ELEVATOR_SPEED);
	return 1;
}

public Elevator_TurnToIdle()
{
	ElevatorState = ELEVATOR_STATE_IDLE;
	ReadNextFloorInQueue();
	return 1;
}

stock RemoveFirstQueueFloor()
{
	// Removes the data in ElevatorQueue[0], and reorders the queue accordingly.

	for(new i; i < sizeof(ElevatorQueue) - 1; i ++)
	    ElevatorQueue[i] = ElevatorQueue[i + 1];

	ElevatorQueue[sizeof(ElevatorQueue) - 1] = INVALID_FLOOR;

	return 1;
}

stock AddFloorToQueue(floorid)
{
 	// Adds 'floorid' at the end of the queue.

	// Scan for the first empty space:
	new slot = -1;
	for(new i; i < sizeof(ElevatorQueue); i ++)
	{
	    if(ElevatorQueue[i] == INVALID_FLOOR)
	    {
	        slot = i;
	        break;
	    }
	}
	if(slot != -1)
	{
	    ElevatorQueue[slot] = floorid;

     	// If needed, move the elevator.
	    if(ElevatorState == ELEVATOR_STATE_IDLE)
	        ReadNextFloorInQueue();

	    return 1;
	}
	return 0;
}

stock ResetElevatorQueue()
{
	// Resets the queue.

	for(new i; i < sizeof(ElevatorQueue); i ++)
	{
	    ElevatorQueue[i] 	= INVALID_FLOOR;
	    FloorRequestedBy[i] = INVALID_PLAYER_ID;
	}

	return 1;
}

stock IsFloorInQueue(floorid)
{
	// Checks if the specified floor is currently part of the queue.

	for(new i; i < sizeof(ElevatorQueue); i ++)
	    if(ElevatorQueue[i] == floorid)
	        return 1;

	return 0;
}

stock ReadNextFloorInQueue()
{
	// Reads the next floor in the queue, closes doors, and goes to it.

	if(ElevatorState != ELEVATOR_STATE_IDLE || ElevatorQueue[0] == INVALID_FLOOR)
	    return 0;

	Elevator_CloseDoors();
	Floor_CloseDoors(ElevatorFloor);

	return 1;
}

stock DidPlayerRequestElevator(playerid)
{
	for(new i; i < sizeof(FloorRequestedBy); i ++)
	    if(FloorRequestedBy[i] == playerid)
	        return 1;

	return 0;
}

stock ShowElevatorDialog(playerid)
{
	new string[512];
	for(new i; i < sizeof(ElevatorQueue); i ++)
	{
	    if(FloorRequestedBy[i] != INVALID_PLAYER_ID)
	        strcat(string, "{FF0000}");

	    strcat(string, FloorNames[i]);
	    strcat(string, "\n");
	}

	ShowPlayerDialog(playerid, DIALOG_ID, DIALOG_STYLE_LIST, "Elevator", string, "Accept", "Cancel");

	return 1;
}

stock CallElevator(playerid, floorid)
{
	// Calls the elevator (also used with the elevator dialog).

	if(FloorRequestedBy[floorid] != INVALID_PLAYER_ID || IsFloorInQueue(floorid))
	    return 0;

	FloorRequestedBy[floorid] = playerid;
	AddFloorToQueue(floorid);

	return 1;
}

stock Float:GetElevatorZCoordForFloor(floorid)
    return (GROUND_Z_COORD + FloorZOffsets[floorid] + ELEVATOR_OFFSET); // A small offset for the elevator object itself.

stock Float:GetDoorsZCoordForFloor(floorid)
	return (GROUND_Z_COORD + FloorZOffsets[floorid]);



public OnDynamicObjectMoved(objectid)
{
	new Float:x, Float:y, Float:z;
    for(new i; i < sizeof(Obj_FloorDoors); i ++)
	{
		if(objectid == Obj_FloorDoors[i][0])
		{
		    GetDynamicObjectPos(Obj_FloorDoors[i][0], x, y, z);

		    if(x < X_DOOR_L_OPENED - 0.5)   // Some floor doors have shut, move the elevator to next floor in queue:
		    {
				Elevator_MoveToFloor(ElevatorQueue[0]);
				RemoveFirstQueueFloor();
			}
		}
	}
	if(objectid == Obj_Elevator)   // The elevator reached the specified floor.
	{
	    KillTimer(ElevatorBoostTimer);  // Kills the timer, in case the elevator reached the floor before boost.

	    FloorRequestedBy[ElevatorFloor] = INVALID_PLAYER_ID;

	    Elevator_OpenDoors();
	    Floor_OpenDoors(ElevatorFloor);

	    GetDynamicObjectPos(Obj_Elevator, x, y, z);
	    Label_Elevator	= Create3DTextLabel("{CCCCCC}Apasa '{FFFFFF}~k~~CONVERSATION_YES~{CCCCCC}' pentru a folosi liftul", 0xCCCCCCAA, 1784.9822, -1302.0426, z - 0.9, 4.0, 0, 1);

	    ElevatorState 	= ELEVATOR_STATE_WAITING;
	    SetTimer("Elevator_TurnToIdle", ELEVATOR_WAIT_TIME, 0);
	}
	for(new i; i < sizeof(Obj_FloorsDoors); i ++)
	{
		if(objectid == Obj_FloorsDoors[i][0])
		{
		    GetDynamicObjectPos(Obj_FloorsDoors[i][0], x, y, z);
		    if (x == X_DOOR_CCLOSED)
		    {
				Elevator_MoveToFloors(ElevatorQueues[0]);
				RemoveFirstQueuesFloor();
			}
		}
	}

	if(objectid == telegondola1)   // The elevator reached the specified floor.
	{
	    MoveDynamicObject(telegondola1,	TelegondolaPositii[ruta2][0],	TelegondolaPositii[ruta2][1],	TelegondolaPositii[ruta2][2],	TelegondolaPositii[ruta2][3],TelegondolaPositii[ruta2][4],TelegondolaPositii[ruta2][5],TelegondolaPositii[ruta2][6]);
		if(ruta2 >= 21)
	    ruta2 = 0;
 		else
 		ruta2 ++;
 	}

	if(objectid == telegondola2)   // The elevator reached the specified floor.
	{
	    MoveDynamicObject(telegondola2,	TelegondolaPositii2[ruta3][0],	TelegondolaPositii2[ruta3][1],	TelegondolaPositii2[ruta3][2],	TelegondolaPositii2[ruta3][3],TelegondolaPositii2[ruta3][4],TelegondolaPositii2[ruta3][5],TelegondolaPositii2[ruta3][6]);
		if(ruta3 == 21)
	    ruta3 = 0;
 		else
 		ruta3 ++;
  	}
	if(objectid == Obj_sElevator)   // The elevator reached the specified floor.
	{
	    KillTimer(ElevatorBoostTimers);  // Kills the timer, in case the elevator reached the floor before boost.
	    FloorRequestedBys[ElevatorsFloor] = INVALID_PLAYER_ID;
	    Elevator_OpensDoors();
	    Floors_OpenDoors(ElevatorsFloor);
	    GetDynamicObjectPos(Obj_sElevator, x, y, z);
	    Labels_Elevator	= Create3DTextLabel("{CCCCCC}Apasati '{FFFFFF}~k~~CONVERSATION_YES~{CCCCCC}' pentru ~n~a folosi liftul", 0xCCCCCCAA, X_ELEVATOR_POS - 1.8, Y_ELEVATOR_POS + 1.6, z - 0.6, 4.0, 0, 1);
	    ElevatorsState 	= ELEVATOR_STATE_WAITING;
	    SetTimer("Elevators_TurnToIdle", ELEVATOR_WAIT_TIME, 0);
	}

}
//============
stock Elevators_Initialize()
{
	// Initializes the elevator.

	Obj_sElevator 			= CreateDynamicObject(18755, X_ELEVATOR_POS, Y_ELEVATOR_POS, GROUNDD_Z_COORD, 0.000000, 0.000000, 270.000000);
	Obj_sElevatorDoors[0] 	= CreateDynamicObject(18757, X_ELEVATOR_POS, Y_ELEVATOR_POS, GROUNDD_Z_COORD, 0.000000, 0.000000, 270.000000);
	Obj_sElevatorDoors[1] 	= CreateDynamicObject(18756, X_ELEVATOR_POS, Y_ELEVATOR_POS, GROUNDD_Z_COORD, 0.000000, 0.000000, 270.000000);
	Labels_Elevator          = Create3DTextLabel("{CCCCCC}Apasa '{FFFFFF}~k~~CONVERSATION_YES~{CCCCCC}' pentru~n~A folosi liftul", 0xCCCCCCAA, X_ELEVATOR_POS - 1.8, Y_ELEVATOR_POS + 1.6, GROUNDD_Z_COORD - 0.6, 4.0, 0, 1);

	new string[128],
		Float:z;

	for(new i; i < sizeof(Obj_FloorsDoors); i ++)
	{
	    Obj_FloorsDoors[i][0] 	= CreateDynamicObject(18757, X_ELEVATOR_POS, Y_ELEVATOR_POS + 0.245, GetDoorsZCoordsForFloor(i), 0.000000, 0.000000, 270.000000);
		Obj_FloorsDoors[i][1] 	= CreateDynamicObject(18756, X_ELEVATOR_POS, Y_ELEVATOR_POS + 0.245, GetDoorsZCoordsForFloor(i), 0.000000, 0.000000, 270.000000);
		format(string, sizeof(string), "{CCCCCC}[%s]\n{CCCCCC}Apasa '{FFFFFF}~k~~CONVERSATION_YES~{CCCCCC}' pentru a chema", FloorsNames[i]);
		if(i == 0)
		    z = 47.460277;
		else
		    z = 25.820274;
		Labels_Floors[i]         = Create3DTextLabel(string, 0xCCCCCCAA, X_ELEVATOR_POS - 2.5, Y_ELEVATOR_POS + 2.5, z - 0.2, 10.5, 0, 1);
	}

	// Open ground floor doors:
	Floors_OpenDoors(0);
	Elevator_OpensDoors();

	return 1;
}

stock Elevators_Destroy()
{
	DestroyDynamicObject(Obj_sElevator);
	DestroyDynamicObject(Obj_sElevatorDoors[0]);
	DestroyDynamicObject(Obj_sElevatorDoors[1]);
	Delete3DTextLabel(Labels_Elevator);
	for(new i; i < sizeof(Obj_FloorsDoors); i ++)
	{
	    // Destroy the elevator floor doors and the floor 3D text labels
	    DestroyDynamicObject(Obj_FloorsDoors[i][0]);
		DestroyDynamicObject(Obj_FloorsDoors[i][1]);
		Delete3DTextLabel(Labels_Floors[i]);
	}

	return 1;
}

stock Elevator_OpensDoors()
{
	new Float:x, Float:y, Float:z;

	GetDynamicObjectPos(Obj_sElevatorDoors[0], x, y, z);
	MoveDynamicObject(Obj_sElevatorDoors[0], X_DDOOR_CCLOSED, y, z, DOORS_SPEED);
	MoveDynamicObject(Obj_sElevatorDoors[1], X_DDOOR_R_OPENED, y, z, DOORS_SPEED);

	return 1;
}

stock Elevators_CloseDoors()
{
    if(ElevatorsState == ELEVATOR_STATE_MOVING)
	    return 0;

    new Float:x, Float:y, Float:z;

	GetDynamicObjectPos(Obj_sElevatorDoors[0], x, y, z);
	MoveDynamicObject(Obj_sElevatorDoors[0], X_DOOR_CCLOSED, y, z, DOORS_SPEED);
	MoveDynamicObject(Obj_sElevatorDoors[1], X_DOOR_CCLOSED, y, z, DOORS_SPEED);

	return 1;
}

stock Floors_OpenDoors(floorid)
{
    MoveDynamicObject(Obj_FloorsDoors[floorid][0], X_DDOOR_CCLOSED, Y_ELEVATOR_POS + 0.245, GetDoorsZCoordsForFloor(floorid), DOORS_SPEED);
	MoveDynamicObject(Obj_FloorsDoors[floorid][1], X_DDOOR_R_OPENED, Y_ELEVATOR_POS + 0.245, GetDoorsZCoordsForFloor(floorid), DOORS_SPEED);

	PlaySoundForPlayersInRange(6401, 50.0, X_ELEVATOR_POS, Y_ELEVATOR_POS, GetDoorsZCoordsForFloor(floorid) + 5.0);

	return 1;
}

stock Floors_CloseDoors(floorid)
{
    MoveDynamicObject(Obj_FloorsDoors[floorid][0], X_ELEVATOR_POS, Y_ELEVATOR_POS + 0.245, GetDoorsZCoordsForFloor(floorid), DOORS_SPEED);
	MoveDynamicObject(Obj_FloorsDoors[floorid][1], X_ELEVATOR_POS, Y_ELEVATOR_POS + 0.245, GetDoorsZCoordsForFloor(floorid), DOORS_SPEED);

	PlaySoundForPlayersInRange(6401, 50.0, X_ELEVATOR_POS, Y_ELEVATOR_POS, GetDoorsZCoordsForFloor(floorid) + 5.0);

	return 1;
}

stock Elevator_MoveToFloors(floorid)
{
	ElevatorsState = ELEVATOR_STATE_MOVING;
	ElevatorsFloor = floorid;
	MoveDynamicObject(Obj_sElevator, X_ELEVATOR_POS, Y_ELEVATOR_POS, GetElevatorZCoordSForFloor(floorid), 0.25);
    MoveDynamicObject(Obj_sElevatorDoors[0], X_ELEVATOR_POS, Y_ELEVATOR_POS, GetDoorsZCoordsForFloor(floorid), 0.25);
    MoveDynamicObject(Obj_sElevatorDoors[1], X_ELEVATOR_POS, Y_ELEVATOR_POS, GetDoorsZCoordsForFloor(floorid), 0.25);
    Delete3DTextLabel(Labels_Elevator);
	ElevatorBoostTimers = SetTimerEx("Elevators_Boost", 2000, 0, "i", floorid);
	return 1;
}

public Elevators_Boost(floorid)
{
	StopDynamicObject(Obj_sElevator);
	StopDynamicObject(Obj_sElevatorDoors[0]);
	StopDynamicObject(Obj_sElevatorDoors[1]);
	MoveDynamicObject(Obj_sElevator, X_ELEVATOR_POS, Y_ELEVATOR_POS, GetElevatorZCoordSForFloor(floorid), ELEVATOR_SPEED);
    MoveDynamicObject(Obj_sElevatorDoors[0], X_ELEVATOR_POS, Y_ELEVATOR_POS, GetDoorsZCoordsForFloor(floorid), ELEVATOR_SPEED);
    MoveDynamicObject(Obj_sElevatorDoors[1], X_ELEVATOR_POS, Y_ELEVATOR_POS, GetDoorsZCoordsForFloor(floorid), ELEVATOR_SPEED);

	return 1;
}

public Elevators_TurnToIdle()
{
	ElevatorsState = ELEVATOR_STATE_IDLE;
	ReadNextFloorInsQueue();
	return 1;
}

stock RemoveFirstQueuesFloor()
{
	for(new i; i < sizeof(ElevatorQueues) - 1; i ++)
	    ElevatorQueues[i] = ElevatorQueues[i + 1];

	ElevatorQueues[sizeof(ElevatorQueues) - 1] = INVALID_FLOOR;

	return 1;
}

stock AddFloorTosQueue(floorid)
{
 	new slot = -1;
	for(new i; i < sizeof(ElevatorQueues); i ++)
	{
	    if(ElevatorQueues[i] == INVALID_FLOOR)
	    {
	        slot = i;
	        break;
	    }
	}

	if(slot != -1)
	{
	    ElevatorQueues[slot] = floorid;

     	// If needed, move the elevator.
	    if(ElevatorsState == ELEVATOR_STATE_IDLE)
	        ReadNextFloorInsQueue();

	    return 1;
	}

	return 0;
}

stock ResetElevatorsQueue()
{
	for(new i; i < sizeof(ElevatorQueues); i ++)
	{
	    ElevatorQueues[i] 	= INVALID_FLOOR;
	    FloorRequestedBys[i] = INVALID_PLAYER_ID;
	}

	return 1;
}

/*stock GetPlayerAcceleration(playerid) //By Sacky
{
return acc[playerid];
}*/

stock IsFloorInsQueue(floorid)
{
	for(new i; i < sizeof(ElevatorQueues); i ++)
	    if(ElevatorQueues[i] == floorid)
	        return 1;

	return 0;
}

stock ReadNextFloorInsQueue()
{
	if(ElevatorsState != ELEVATOR_STATE_IDLE || ElevatorQueues[0] == INVALID_FLOOR)
	    return 0;

	Elevators_CloseDoors();
	Floors_CloseDoors(ElevatorsFloor);

	return 1;
}

stock DidPlayerSRequestElevator(playerid)
{
	for(new i; i < sizeof(FloorRequestedBys); i ++)
	    if(FloorRequestedBys[i] == playerid)
	        return 1;

	return 0;
}

stock ShowElevatorsDialog(playerid)
{
	new string[512];
	for(new i; i < sizeof(ElevatorQueues); i ++)
	{
	    if(FloorRequestedBys[i] != INVALID_PLAYER_ID)
	        strcat(string, "{FF0000}");

	    strcat(string, FloorsNames[i]);
	    strcat(string, "\n");
	}

	ShowPlayerDialog(playerid, DIALOG_IDD, DIALOG_STYLE_LIST, "ZomboTech Elevator...", string, "Accept", "Cancel");

	return 1;
}

stock CallElevators(playerid, floorid)
{
	if(FloorRequestedBys[floorid] != INVALID_PLAYER_ID || IsFloorInsQueue(floorid))
	    return 0;

	FloorRequestedBys[floorid] = playerid;
	AddFloorTosQueue(floorid);

	return 1;
}

stock Float:GetElevatorZCoordSForFloor(floorid)
    return (GROUNDD_Z_COORD + FloorsZOffsets[floorid]);

stock Float:GetDoorsZCoordsForFloor(floorid)
	return (GROUNDD_Z_COORD + FloorsZOffsets[floorid]);





IsPlayerOnline(username[])
{
    new ppName[MAX_PLAYER_NAME];
    for(new i=0; i < MAX_PLAYERS; i++)
    {
        GetPlayerName(i,ppName, sizeof(ppName));
        if(!strcmp(ppName,username,true)) return 1;//player online
    }
    return 0;//player offline
}
IsWall(waled)
{
	if(waled == wall1 || waled == wall2||waled == wall3||waled == wall4)
	return 1;
	return 0;
}
IsAPoolBall(bBall)
{
	if(bBall == PoolBall[0] || bBall == PoolBall[1] || bBall == PoolBall[2] || bBall == PoolBall[3] ||
	bBall == PoolBall[4] || bBall == PoolBall[5] || bBall == PoolBall[6] || bBall == PoolBall[7] ||
	bBall == PoolBall[8] || bBall == PoolBall[9] || bBall == PoolBall[10] || bBall == PoolBall[11] ||
	bBall == PoolBall[12] || bBall == PoolBall[13] || bBall == PoolBall[14] || bBall == PoolBall[15])
	return 1;
	return 0;
}

IsAFullBall(bBall)
{
	if(bBall == PoolBall[1] || bBall == PoolBall[2] || bBall == PoolBall[6] || bBall == PoolBall[7] ||
	bBall == PoolBall[9] || bBall == PoolBall[12] || bBall == PoolBall[15])	return 1;
	return 0;
}
IsABrokeBall(bBall)
{
	if(bBall == PoolBall[3] || bBall == PoolBall[4] || bBall == PoolBall[8] || bBall == PoolBall[10] ||
	bBall == PoolBall[11] || bBall == PoolBall[13] || bBall == PoolBall[14])	return 1;
	return 0;
}
stock IsMovingBall()
{
    new Float:AXx,Float:AYx,Float:AZx;
	if(IsValidObject(PoolBall[0]))
	{
		PHY_GetObjectVelocity(PoolBall[0], AXx, AYx, AZx);
		if( AXx!=0||AYx!=0||AZx!=0) return 1;
	}
	if(IsValidObject(PoolBall[1]))
	{
		PHY_GetObjectVelocity(PoolBall[1], AXx, AYx, AZx);
		if( AXx!=0||AYx!=0||AZx!=0) return 1;
	}
	if(IsValidObject(PoolBall[2]))
	{
 		PHY_GetObjectVelocity(PoolBall[2], AXx, AYx, AZx);
		if( AXx!=0||AYx!=0||AZx!=0) return 1;
	}
	if(IsValidObject(PoolBall[3]))
	{
		PHY_GetObjectVelocity(PoolBall[3], AXx, AYx, AZx);
		if( AXx!=0||AYx!=0||AZx!=0) return 1;
	}
	if(IsValidObject(PoolBall[4]))
	{
		PHY_GetObjectVelocity(PoolBall[4], AXx, AYx, AZx);
		if( AXx!=0||AYx!=0||AZx!=0) return 1;
	}
	if(IsValidObject(PoolBall[5]))
	{
		PHY_GetObjectVelocity(PoolBall[5], AXx, AYx, AZx);
		if( AXx!=0||AYx!=0||AZx!=0) return 1;
	}
	if(IsValidObject(PoolBall[6]))
	{
		PHY_GetObjectVelocity(PoolBall[6], AXx, AYx, AZx);
		if( AXx!=0||AYx!=0||AZx!=0) return 1;
	}
	if(IsValidObject(PoolBall[7]))
	{
		PHY_GetObjectVelocity(PoolBall[7], AXx, AYx, AZx);
		if( AXx!=0||AYx!=0||AZx!=0) return 1;
	}
	if(IsValidObject(PoolBall[8]))
	{
		PHY_GetObjectVelocity(PoolBall[8], AXx, AYx, AZx);
		if( AXx!=0||AYx!=0||AZx!=0) return 1;
	}
	if(IsValidObject(PoolBall[9]))
	{
		PHY_GetObjectVelocity(PoolBall[9], AXx, AYx, AZx);
		if( AXx!=0||AYx!=0||AZx!=0) return 1;
	}
	if(IsValidObject(PoolBall[10]))
	{
		PHY_GetObjectVelocity(PoolBall[10], AXx, AYx, AZx);
		if( AXx!=0||AYx!=0||AZx!=0) return 1;
	}
	if(IsValidObject(PoolBall[11]))
	{
		PHY_GetObjectVelocity(PoolBall[11], AXx, AYx, AZx);
		if( AXx!=0||AYx!=0||AZx!=0) return 1;
	}
	if(IsValidObject(PoolBall[12]))
	{
		PHY_GetObjectVelocity(PoolBall[12], AXx, AYx, AZx);
		if( AXx!=0||AYx!=0||AZx!=0) return 1;
	}
	if(IsValidObject(PoolBall[13]))
	{
		PHY_GetObjectVelocity(PoolBall[13], AXx, AYx, AZx);
		if( AXx!=0||AYx!=0||AZx!=0) return 1;
	}
	if(IsValidObject(PoolBall[14]))
	{
		PHY_GetObjectVelocity(PoolBall[14], AXx, AYx, AZx);
		if( AXx!=0||AYx!=0||AZx!=0) return 1;
	}
	if(IsValidObject(PoolBall[15]))
	{
		PHY_GetObjectVelocity(PoolBall[15], AXx, AYx, AZx);
		if( AXx!=0||AYx!=0||AZx!=0) return 1;
	}
	return 0;
}

FirstCreateSet()
{
	PoolBall[0] =  CreateObject(3003, 510.11218261719, -84.407714843750, 998.86785888672, 0, 0, 0);//alba
    PoolBall[1] =  CreateObject(3002, 510.10882568359, -85.166389465332, 998.86749267578, 0, 0, 0);
    PoolBall[2] =  CreateObject(3101, 510.14270019531, -85.232612609863, 998.86749267578, 0, 0, 0);
    PoolBall[3] =  CreateObject(2995, 510.06765747070, -85.232200622559, 998.86749267578, 0, 0, 0);
    PoolBall[4] =  CreateObject(2996, 510.18600463867, -85.295257568359, 998.86749267578, 0, 0, 0);
    PoolBall[5] =  CreateObject(3106, 510.11242675781, -85.297294616699, 998.86749267578, 0, 0, 0);//bila neagra
    PoolBall[6] =  CreateObject(3105, 510.03665161133, -85.299163818359, 998.86749267578, 0, 0, 0);
    PoolBall[7] =  CreateObject(3103, 510.22308349609, -85.362342834473, 998.86749267578, 0, 0, 0);
    PoolBall[8] =  CreateObject(3001, 510.14828491211, -85.365989685059, 998.86749267578, 0, 0, 0);
    PoolBall[9] =  CreateObject(3100, 510.07455444336, -85.365234375000, 998.86749267578, 0, 0, 0);
    PoolBall[10] = CreateObject(2997, 510.00054931641, -85.363563537598, 998.86749267578, 0, 0, 0);
    PoolBall[11] = CreateObject(3000, 510.25915527344, -85.431137084961, 998.86749267578, 0, 0, 0);
    PoolBall[12] = CreateObject(3102, 510.18399047852, -85.430549621582, 998.86749267578, 0, 0, 0);
    PoolBall[13] = CreateObject(2999, 510.10900878906, -85.431961059570, 998.86749267578, 0, 0, 0);
    PoolBall[14] = CreateObject(2998, 510.03570556641, -85.432624816895, 998.86749267578, 0, 0, 0);
    PoolBall[15] = CreateObject(3104, 509.96197509766, -85.427406311035, 998.86749267578, 0, 0, 0);

    for(new i=0; i < 16; i++)
    {
        PHY_InitObject(PoolBall[i], 3003, _, _, PHY_MODE_2D); // Notice that I typed modelid 3003 because all the balls are equal.
        PHY_SetObjectFriction(PoolBall[i], 0.9);
        PHY_RollObject(PoolBall[i]);
	}
	BallOnTables=16;
	FirstBall=0;
	foreach(Player,i)
    BallType[i] = 0;
    Gamble[0] = 999;
    Gamble[1] = 999;
	PlayerRound=999;
	PlayerOnTable=999;
	return 1;
}

CreateSet()
{
	for(new i=0; i < 16; i++)	PHY_SetObjectVelocity(PoolBall[i],0.0,0.0);
	SetObjectPos(PoolBall[0]   , 510.11218261719, -84.407714843750, 998.86785888672);//alba
    SetObjectPos(PoolBall[1]   , 510.10882568359, -85.166389465332, 998.86749267578);
    SetObjectPos(PoolBall[2]   , 510.14270019531, -85.232612609863, 998.86749267578);
    SetObjectPos(PoolBall[3]   , 510.06765747070, -85.232200622559, 998.86749267578);
    SetObjectPos(PoolBall[4]   , 510.18600463867, -85.295257568359, 998.86749267578);
    SetObjectPos(PoolBall[5]   , 510.11242675781, -85.297294616699, 998.86749267578);//bila neagra
    SetObjectPos(PoolBall[6]   , 510.03665161133, -85.299163818359, 998.86749267578);
    SetObjectPos(PoolBall[7]   , 510.22308349609, -85.362342834473, 998.86749267578);
    SetObjectPos(PoolBall[8]   , 510.14828491211, -85.365989685059, 998.86749267578);
    SetObjectPos(PoolBall[9]   , 510.07455444336, -85.365234375000, 998.86749267578);
    SetObjectPos(PoolBall[10]  , 510.00054931641, -85.363563537598, 998.86749267578);
    SetObjectPos(PoolBall[11]  , 510.25915527344, -85.431137084961, 998.86749267578);
    SetObjectPos(PoolBall[12]  , 510.18399047852, -85.430549621582, 998.86749267578);
    SetObjectPos(PoolBall[13]  , 510.10900878906, -85.431961059570, 998.86749267578);
    SetObjectPos(PoolBall[14]  , 510.03570556641, -85.432624816895, 998.86749267578);
    SetObjectPos(PoolBall[15]  , 509.96197509766, -85.427406311035, 998.86749267578);
    BallOnTables=16;
	FirstBall=0;
	foreach(Player,i)
    BallType[i] = 0;
    Gamble[0] = 999;
    Gamble[1] = 999;
	PlayerRound=999;
	PlayerOnTable=999;
	return 1;
}

IsPlayerInCircle(playerid,Float:x23,Float:y23,Float:radius23)
{
	if (GetPlayerDistanceToPoint(playerid,x23,y23) < radius23) return 1;
	return 0;
}

IsObjectInSphere(objectid,Float:x,Float:y,Float:z,Float:radius2)
{
    new Float:x11,Float:y11,Float:z11,Float:tmpdis;
    GetObjectPos(objectid,x11,y11,z11);
    tmpdis = floatsqroot(floatpower(floatabs(floatsub(x,x11)),2)+ floatpower(floatabs(floatsub(y,y11)),2)+ floatpower(floatabs(floatsub(z,z11)),2));
    if(tmpdis < radius2) return 1;
    return 0;
}
SetPlayerLookAt(playerid, Float:X, Float:Y)
{
	new Float:Px, Float:Py, Float: Pa;
	GetPlayerPos(playerid, Px, Py, Pa);
	Pa = floatabs(atan((Y-Py)/(X-Px)));
	if (X <= Px && Y >= Py) Pa = floatsub(180, Pa);
	else if (X < Px && Y < Py) Pa = floatadd(Pa, 180);
	else if (X >= Px && Y <= Py) Pa = floatsub(360.0, Pa);
	Pa = floatsub(Pa, 90.0);
	if (Pa >= 360.0) Pa = floatsub(Pa, 360.0);
	SetPlayerFacingAngle(playerid, Pa);
}



IsAreaInArea(Float:x, Float:y, Float:minx, Float:maxx, Float:miny, Float:maxy)
{
    if (x > minx && x < maxx && y > miny && y < maxy) return 1;
    return 0;
}

public TacPlayer(playerid)
{
	SetPlayerArmedWeapon(playerid, 7);
	RemovePlayerAttachedObject(playerid,9);
	return 1;
}

IsPlayerAtPool(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    if(GetPlayerVirtualWorld(playerid) == 1)
   		{
 	    	if(GetPlayerInterior(playerid) == 11)
 	    	{
   	   			new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
   		    	if(IsPlayerInRangeOfPoint(playerid, 300, 509.0, -82.0, 999))
		  		{
					if(z < 1000.0 && z > 998.0)
					return 1;
   		    	}
	    		else return 0;
    		}
	   		else return 0;
	    }
	    else return 0;
	}
	return 0;
}


public GetPlayerDistanceToPoint(playerid,Float:x,Float:y)
{
	new Float:x21,Float:y21,Float:z21;
	new Float:tmpdis;
	GetPlayerPos(playerid,x21,y21,z21);
	tmpdis = floatsqroot(floatpower(floatabs(floatsub(x,x21)),2) +floatpower(floatabs(floatsub(y,y21)),2));
	return floatround(tmpdis);
}


GetTeleportObjectRight(&playerid,&Float:oX, &Float:oY, &Float:tZ)//cauta daca te impinge in masa cand apesi F
{
	new Float: pXx,Float: pYx,Float: tZx;
    GetPlayerPos(playerid, pXx, pYx, tZx);
    GetObjectPos(PoolBall[0], oX, oY, tZ);
    new Float:angle = 0.2;
    angle -= atan2(pXx - oX, pYx - oY);
 	oX -= floatsin(angle, degrees) * 1.7;
	oY += floatcos(angle, degrees) * 1.7;
	tZ = tZx;
}

forward OnPlayerFinishOnArmedBandit(playerid,correct);
PutPlayerInSlotMachine(playerid, firstBet=MIN_Bet,  startBalance=0)
{
        Gambling[playerid] = G_STATE_READY;
        TextDrawShowForPlayer(playerid,BetText[playerid]);

        Slots[playerid][0] = random(5);
        Slots[playerid][1] = random(5);
        Slots[playerid][2] = random(5);

        ShowPlayerSlots(playerid,Slots[playerid][0],Slots[playerid][1],Slots[playerid][2]);

        Bet[playerid] = firstBet;
        GivePlayerCash(playerid,-startBalance);
        Balance[playerid] = startBalance;

        UpdateBetText(playerid);
        SetPlayerCameraPos(playerid, 2240.7195, 1607.1822, 1018.7165);
        SetPlayerCameraLookAt(playerid,2240.7195, 1606.9622, 1018.6965);

        TogglePlayerControllable(playerid,0);
        TextDrawShowForPlayer(playerid,BetText[playerid]);
        TextDrawShowForPlayer(playerid,TextAddcoin);
    	TextDrawShowForPlayer(playerid,TextDealcoin);
    //	SelectTextDraw(playerid,0xAAAAAAC8 );
        return 1;
}

ExitPlayerFromSlotMachine(playerid)
{
    if(Gambling[playerid] == G_STATE_NOT_GAMBLING) return 0;
    HideSlotsForPlayer(playerid);
    Gambling[playerid] = G_STATE_NOT_GAMBLING;

    TextDrawHideForPlayer(playerid,TextDealcoin);
    TextDrawHideForPlayer(playerid,TextAddcoin);
	CancelSelectTextDraw(playerid);

    TogglePlayerControllable(playerid,1);
    SetCameraBehindPlayer(playerid);

	TextDrawHideForPlayer(playerid,BetText[playerid]);

    new str[128];
    if(Balance[playerid] > 0) format(str,sizeof(str),"~n~~n~~n~~g~Banii: %d$",Balance[playerid]);
    else format(str,sizeof(str),"~r~~n~~n~~n~Ti-ai pierdut banii, %d",Balance[playerid]);
    GameTextForPlayer(playerid,str,5000,3);
    GivePlayerCash(playerid,Balance[playerid]);
    CancelSelectTextDraw(playerid);
    return 1;
}

TeleportedPlayerToObjectRight(&playerid,&Float:oX, &Float:oY, &Float:tZ)//corect
{
  	new Float: pXx,Float: pYx,Float: tZx;
    GetPlayerPos(playerid, pXx, pYx, tZx);
    GetObjectPos(PoolBall[0], oX, oY, tZ);
    new Float:angle = 0.2;
    angle -= atan2(pXx - oX, pYx - oY);
 	oX -= floatsin(angle, degrees) * 1.7;
	oY += floatcos(angle, degrees) * 1.7;
	tZ = tZx;
}

TeleportedPlayerToObjectLeft(&playerid,&Float:oX, &Float:oY, &Float:tZ)//invers corect
{
    new Float: pXx,Float: pYx,Float: tZx;
    GetPlayerPos(playerid, pXx, pYx, tZx);
    GetObjectPos(PoolBall[0], oX, oY, tZ);
    new Float:angle=360-0.2;
    angle -= atan2(pXx - oX, pYx - oY);
 	oX -= floatsin(angle, degrees) * 1.7;
	oY += floatcos(angle, degrees) * 1.7;
	tZ = tZx;
}


forward StopOnArmedBanditForPlayer(playerid);
public StopOnArmedBanditForPlayer(playerid)
{
	TextDrawHideForPlayer(playerid, _OAB_TD_SLOT_1[playerid]);
	TextDrawHideForPlayer(playerid, _OAB_TD_SLOT_2[playerid]);
	TextDrawHideForPlayer(playerid, _OAB_TD_SLOT_3[playerid]);
	_OAB_PlayerPlays[playerid]=false;
	return true;
}

//______________________________________________________________

forward _OAB_PLAYER_FINISH_TURN(playerid);
public _OAB_PLAYER_FINISH_TURN(playerid)
{
	if(_OAB_CURRENT_TD_SLOT_1[playerid]==_OAB_CURRENT_TD_SLOT_2[playerid]&&_OAB_CURRENT_TD_SLOT_1[playerid]!=_OAB_CURRENT_TD_SLOT_3[playerid])return CallRemoteFunction("OnPlayerFinishOnArmedBandit","dd",playerid,2);
	else if(_OAB_CURRENT_TD_SLOT_2[playerid]==_OAB_CURRENT_TD_SLOT_3[playerid]&&_OAB_CURRENT_TD_SLOT_2[playerid]!=_OAB_CURRENT_TD_SLOT_1[playerid])return CallRemoteFunction("OnPlayerFinishOnArmedBandit","dd",playerid,2);
	else if(_OAB_CURRENT_TD_SLOT_1[playerid]==_OAB_CURRENT_TD_SLOT_3[playerid]&&_OAB_CURRENT_TD_SLOT_1[playerid]!=_OAB_CURRENT_TD_SLOT_2[playerid])return CallRemoteFunction("OnPlayerFinishOnArmedBandit","dd",playerid,2);
	else if(_OAB_CURRENT_TD_SLOT_1[playerid]==_OAB_CURRENT_TD_SLOT_2[playerid]&&_OAB_CURRENT_TD_SLOT_1[playerid]==_OAB_CURRENT_TD_SLOT_3[playerid])return CallRemoteFunction("OnPlayerFinishOnArmedBandit","dd",playerid,3);
	else if(_OAB_CURRENT_TD_SLOT_1[playerid]!=_OAB_CURRENT_TD_SLOT_2[playerid]&&_OAB_CURRENT_TD_SLOT_1[playerid]!=_OAB_CURRENT_TD_SLOT_3[playerid])return CallRemoteFunction("OnPlayerFinishOnArmedBandit","dd",playerid,0);
	else return CallRemoteFunction("OnPlayerFinishOnArmedBandit","dd",playerid,1);
}

forward _OAB_PLAYER_TIMER(playerid);
public _OAB_PLAYER_TIMER(playerid)
{
    _OAB_CURRENT_TD_SLOT_1[playerid]++;
    _OAB_CURRENT_TD_SLOT_2[playerid]--;
    _OAB_CURRENT_TD_SLOT_3[playerid]++;
    if(_OAB_CURRENT_TD_SLOT_1[playerid]>6)_OAB_CURRENT_TD_SLOT_1[playerid]=1;
    if(_OAB_CURRENT_TD_SLOT_2[playerid]<1)_OAB_CURRENT_TD_SLOT_2[playerid]=6;
    if(_OAB_CURRENT_TD_SLOT_3[playerid]>6)_OAB_CURRENT_TD_SLOT_3[playerid]=1;
	TextDrawSetString(_OAB_TD_SLOT_1[playerid],_OAB_GET_TEXTURE(_OAB_CURRENT_TD_SLOT_1[playerid]));
	TextDrawSetString(_OAB_TD_SLOT_2[playerid],_OAB_GET_TEXTURE(_OAB_CURRENT_TD_SLOT_2[playerid]));
	TextDrawSetString(_OAB_TD_SLOT_3[playerid],_OAB_GET_TEXTURE(_OAB_CURRENT_TD_SLOT_3[playerid]));
    TextDrawShowForPlayer(playerid,_OAB_TD_SLOT_1[playerid]);
    TextDrawShowForPlayer(playerid,_OAB_TD_SLOT_2[playerid]);
    TextDrawShowForPlayer(playerid,_OAB_TD_SLOT_3[playerid]);
    _OAB_TICKS[playerid]--;
    StartOABForPlayer(playerid);
	return true;
}

stock _OAB_GET_TEXTURE(ID)
{
	new TextureName[20];
	if(ID==1)TextureName="LD_SLOT:r_69";
	if(ID==2)TextureName="LD_SLOT:grapes";
	if(ID==3)TextureName="LD_SLOT:cherry";
	if(ID==4)TextureName="LD_SLOT:bell";
	if(ID==5)TextureName="LD_SLOT:bar2_o";
	if(ID==6)TextureName="LD_SLOT:bar1_o";
	return TextureName;
}


forward StartOABForPlayer(playerid);
public StartOABForPlayer(playerid)
{
	if(_OAB_PlayerPlays[playerid]==false)return true;
	if(_OAB_TICKS[playerid]>=30)return SetTimerEx("_OAB_PLAYER_TIMER",50,false,"d",playerid);
	else if(_OAB_TICKS[playerid]>=20)return SetTimerEx("_OAB_PLAYER_TIMER",60,false,"d",playerid);
	else if(_OAB_TICKS[playerid]>=10)return SetTimerEx("_OAB_PLAYER_TIMER",70,false,"d",playerid);
	else if(_OAB_TICKS[playerid]==9)return SetTimerEx("_OAB_PLAYER_TIMER",80,false,"d",playerid);
	if(_OAB_TICKS[playerid]==8)return SetTimerEx("_OAB_PLAYER_TIMER",90,false,"d",playerid);
	else if(_OAB_TICKS[playerid]==7)return SetTimerEx("_OAB_PLAYER_TIMER",100,false,"d",playerid);
	else if(_OAB_TICKS[playerid]==6)return SetTimerEx("_OAB_PLAYER_TIMER",110,false,"d",playerid);
	else if(_OAB_TICKS[playerid]==5)return SetTimerEx("_OAB_PLAYER_TIMER",120,false,"d",playerid);
	else if(_OAB_TICKS[playerid]==4)return SetTimerEx("_OAB_PLAYER_TIMER",130,false,"d",playerid);
	else if(_OAB_TICKS[playerid]==3)return SetTimerEx("_OAB_PLAYER_TIMER",140,false,"d",playerid);
	else if(_OAB_TICKS[playerid]==2)return SetTimerEx("_OAB_PLAYER_TIMER",150,false,"d",playerid);
	else if(_OAB_TICKS[playerid]==1)return SetTimerEx("_OAB_PLAYER_TIMER",160,false,"d",playerid);
	else if(_OAB_TICKS[playerid]==0)
	{
		SetTimerEx("StopOnArmedBanditForPlayer",2500,false,"d",playerid);
		_OAB_PLAYER_FINISH_TURN(playerid);
	}
	return true;
}
IsAtHotdogPlace(playerid)
{
 	if(IsPlayerInRangeOfPoint(playerid,4, 1544.699,   -1681.8,     13.61)     || IsPlayerInRangeOfPoint(playerid,4, 388.89,   	-2072.89,	7.80) 		||
	IsPlayerInRangeOfPoint(playerid,4,    1435.19,    -2292.19,    13.51)     || IsPlayerInRangeOfPoint(playerid,4, 2764.39, 	-2398.3, 	13.6) 		||
	IsPlayerInRangeOfPoint(playerid,4,    1000.2,     -1850.3,     12.81)     || IsPlayerInRangeOfPoint(playerid,4, 1466.09, 	-858.29, 	55.2) 		||
	IsPlayerInRangeOfPoint(playerid,4,    1733.3496,  -1903.0206,  13.51)     || IsPlayerInRangeOfPoint(playerid,4, -2315.9680,	-1625.1486,	483.7068) 	||
	IsPlayerInRangeOfPoint(playerid,4,    -2319.7969, -1614.3176,  483.5)     || IsPlayerInRangeOfPoint(playerid,4, -2239.6484,	-1713.2061,	480.8380)	||
	IsPlayerInRangeOfPoint(playerid,4,    -2675.4116, -2435.8391,  4.402)     || IsPlayerInRangeOfPoint(playerid,4, -2701.1233,	-2448.4922,	3.7961) 	||
	IsPlayerInRangeOfPoint(playerid,4,    -2723.2813, -2462.9678,  2.939)     || IsPlayerInRangeOfPoint(playerid,4, -2745.7490,	-2479.4299,	4.3459) 	||
	IsPlayerInRangeOfPoint(playerid,4,    -2769.4736, -2494.4043,  4.080))
    return 1;
  	return 0;
}
IsAtIcecreamPlace(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid,4, 1046.5294,-1131.6930,23.8281) || IsPlayerInRangeOfPoint(playerid,4, 1467.09, -1748.4, 15.39) || IsPlayerInRangeOfPoint(playerid,4, 388.2, -1522.199, 32.29) || IsPlayerInRangeOfPoint(playerid,4, 617.5, -1349.8, 13.6) || IsPlayerInRangeOfPoint(playerid,4, 1525.09, -1026.09, 23.89) || IsPlayerInRangeOfPoint(playerid,4, 999.7, -925.29, 42.2))
	return 1;
	return 0;
}

forward StartOnArmedBanditForPlayer(playerid);
public StartOnArmedBanditForPlayer(playerid)
{
	if(_OAB_PlayerPlays[playerid]==true)return true;
	_OAB_PlayerPlays[playerid]=true;
	_OAB_TICKS[playerid]=30;
	_OAB_CURRENT_TD_SLOT_1[playerid]=random(5-2)+2;
	_OAB_CURRENT_TD_SLOT_2[playerid]=random(5-2)+2;
	_OAB_CURRENT_TD_SLOT_3[playerid]=random(5-2)+2;
    TextDrawFont(_OAB_TD_SLOT_1[playerid],4);
    TextDrawFont(_OAB_TD_SLOT_2[playerid],4);
    TextDrawFont(_OAB_TD_SLOT_3[playerid],4);
    TextDrawColor(_OAB_TD_SLOT_1[playerid],0xFFFFFFFF);
    TextDrawColor(_OAB_TD_SLOT_2[playerid],0xFFFFFFFF);
    TextDrawColor(_OAB_TD_SLOT_3[playerid],0xFFFFFFFF);
    TextDrawTextSize(_OAB_TD_SLOT_1[playerid],75,75);
    TextDrawTextSize(_OAB_TD_SLOT_2[playerid],75,75);
    TextDrawTextSize(_OAB_TD_SLOT_3[playerid],75,75);
    TextDrawShowForPlayer(playerid,_OAB_TD_SLOT_1[playerid]);
    TextDrawShowForPlayer(playerid,_OAB_TD_SLOT_2[playerid]);
    TextDrawShowForPlayer(playerid,_OAB_TD_SLOT_3[playerid]);
    StartOABForPlayer(playerid);
	return true;
}


new legalmods[48][22] = {
		{400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
		{404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
		{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
		{439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
		{477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
		{491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
		{492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
		{500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
		{517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
		{518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
		{527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
		{534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
		{535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
		{536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
		{540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
		{542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
		{547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
		{550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
		{551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
		{558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
		{559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
		{560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
		{561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
		{562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
		{565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
		{567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
		{575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
		{600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
		{603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
	};

IllegalCarNitroIde(carmodel)
{

	new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };

	for(new i;i<sizeof(illegalvehs);i++)
	{
		if (carmodel == illegalvehs[i])
			return true;
	}
	return false;
}

stock illegal_nos_vehicle(PlayerID)
{

	new carid = GetPlayerVehicleID(PlayerID);
	new playercarmodel = GetVehicleModel(carid);
	return IllegalCarNitroIde(playercarmodel);

}
iswheelmodel(modelid) {

	new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};

	for(new I;I<sizeof(wheelmodels); I++)
	{
		if (modelid == wheelmodels[I])
			return true;
	}

	return false;
}



ShowPlayerSlots(playerid,slot1,slot2,slot3)
{
    TextDrawShowForPlayer(playerid,Box);
    TextDrawHideForPlayer(playerid,Digit1[0]);
    TextDrawHideForPlayer(playerid,Digit2[0]);
    TextDrawHideForPlayer(playerid,Digit3[0]);

    TextDrawHideForPlayer(playerid,Digit1[1]);
    TextDrawHideForPlayer(playerid,Digit2[1]);
    TextDrawHideForPlayer(playerid,Digit3[1]);

    TextDrawHideForPlayer(playerid,Digit1[2]);
    TextDrawHideForPlayer(playerid,Digit2[2]);
    TextDrawHideForPlayer(playerid,Digit3[2]);

    TextDrawHideForPlayer(playerid,Digit1[3]);
    TextDrawHideForPlayer(playerid,Digit2[3]);
    TextDrawHideForPlayer(playerid,Digit3[3]);

    TextDrawHideForPlayer(playerid,Digit1[4]);
    TextDrawHideForPlayer(playerid,Digit2[4]);
    TextDrawHideForPlayer(playerid,Digit3[4]);

    TextDrawHideForPlayer(playerid,Digit1[5]);
    TextDrawHideForPlayer(playerid,Digit2[5]);
    TextDrawHideForPlayer(playerid,Digit3[5]);

    TextDrawShowForPlayer(playerid,Digit1[slot1]);
    TextDrawShowForPlayer(playerid,Digit2[slot2]);
    TextDrawShowForPlayer(playerid,Digit3[slot3]);

}

HideSlotsForPlayer(playerid)
{
    TextDrawHideForPlayer(playerid,Digit1[0]);
    TextDrawHideForPlayer(playerid,Digit2[0]);
    TextDrawHideForPlayer(playerid,Digit3[0]);

    TextDrawHideForPlayer(playerid,Digit1[1]);
    TextDrawHideForPlayer(playerid,Digit2[1]);
    TextDrawHideForPlayer(playerid,Digit3[1]);

    TextDrawHideForPlayer(playerid,Digit1[2]);
    TextDrawHideForPlayer(playerid,Digit2[2]);
    TextDrawHideForPlayer(playerid,Digit3[2]);

    TextDrawHideForPlayer(playerid,Digit1[3]);
    TextDrawHideForPlayer(playerid,Digit2[3]);
    TextDrawHideForPlayer(playerid,Digit3[3]);

    TextDrawHideForPlayer(playerid,Digit1[4]);
    TextDrawHideForPlayer(playerid,Digit2[4]);
    TextDrawHideForPlayer(playerid,Digit3[4]);

    TextDrawHideForPlayer(playerid,Digit1[5]);
    TextDrawHideForPlayer(playerid,Digit2[5]);
    TextDrawHideForPlayer(playerid,Digit3[5]);
    TextDrawHideForPlayer(playerid,Box);
}
stock AttasSirentToVehicle(vehicleid,modelid,playerid)
{
        switch(modelid)
        {
            case 400:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4147, 0.0990, 0.8681, 0.0, 0.0, 0.0);
                }
                case 401:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4147, 0.0990, 0.8081, 0.0, 0.0, 0.0);
                }
                case 402:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4147, -0.2410, 0.8081, 0.0, 0.0, 0.0);
                }
                case 403:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.0932, 1.8436, 1.5601, 0.0, 0.0, 0.0);
                }
                case 404:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5120, -0.0382, 0.9849, 0.0, 0.0, 0.0);
                }
                case 405:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5120, -0.0382, 0.7849, 0.0, 0.0, 0.0);
                }
                case 408:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.7238, 2.8859, 1.0459, 0.0, 0.0, 0.0);
                }
                case 409:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5549, 0.7971, 0.8659, 0.0, 0.0, 0.0);
                }
                case 410:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4375, -0.0936, 0.9259, 0.0, 0.0, 0.0);
                }
                case 411:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4744, 0.1759, 0.7259, 0.0, 0.0, 0.0);
                }
                case 412:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4744, 0.1759, 0.7259, 0.0, 0.0, 0.0);
                }
                case 413:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5546, 0.6755, 1.1299, 0.0, 0.0, 0.0);
                }
                case 414:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.7952, 1.3693, 2.2926, 0.0, 0.0, 0.0);
                }
                case 415:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.3888, -0.2079, 0.6559, 0.0, 0.0, 0.0);
                }
                case 416:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6836, 0.8615, 1.0312, 0.0, 0.0, 0.0);
                }
                case 419:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6163, -0.0042, 0.7112, 0.0, 0.0, 0.0);
                }
                case 420:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6163, -0.0042, 0.8712, 0.0, 0.0, 0.0);
                }
                case 421:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4949, 0.2178, 0.7312, 0.0, 0.0, 0.0);
                }
                case 422:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4949, 0.2178, 0.8512, 0.0, 0.0, 0.0);
                }
                case 423:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.7235, 1.3159, 1.5603, 0.0, 0.0, 0.0);
                }
                case 424:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6307, 0.1408, 0.9128, 0.0, 0.0, 0.0);
                }
                case 426:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5938, 0.0518, 0.8728, 0.0, 0.0, 0.0);
                }
                case 428:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4782, 1.0236, 1.4214, 0.0, 0.0, 0.0);
                }
                case 429:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4923, 0.4988, 0.3395, 0.0, 0.0, 0.0);
                }
                case 431:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.9708, 5.1313, 2.1750, 0.0, 0.0, 0.0);
                }
                case 432:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -1.5384, 3.5223, 0.6564, 0.0, 0.0, 0.0);
                }
                case 433:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.7835, 1.2368, 1.7235, 0.0, 0.0, 0.0);
                }
                case 434:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4648, -0.2705, 0.8130, 0.0, 0.0, 0.0);
                }
                case 436:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.3819, -0.0713, 0.8730, 0.0, 0.0, 0.0);
                }
                case 437:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.9365, 4.1546, 2.0845, 0.0, 0.0, 0.0);
                }
                case 438:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.7054, 0.4750, 0.8016, 0.0, 0.0, 0.0);
                }
                case 439:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4431, -0.1388, 0.7616, 0.0, 0.0, 0.0);
                }
                case 440:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6530, 0.5919, 1.2547, 0.0, 0.0, 0.0);
                }
                case 442:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6659, 0.4026, 0.9347, 0.0, 0.0, 0.0);
                }
                case 443:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5091, 3.3719, 1.5562, 0.0, 0.0, 0.0);
                }
                case 444:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5325, 0.5250, 1.7362, 0.0, 0.0, 0.0);
                }
                case 445:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4795, -0.0762, 0.8738, 0.0, 0.0, 0.0);
                }
                case 448:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, 0.0093, 0.4107, 0.6678, 0.0, 0.0, 0.0);
                }
                case 451:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.3036, -0.3181, 0.6278, 0.0, 0.0, 0.0);
                }
                case 455:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6282, 1.4207, 1.7250, 0.0, 0.0, 0.0);
                }
                case 456:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.2490, 1.5572, 1.3010, 0.0, 0.0, 0.0);
                }
                case 457:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.2736, 0.3653, 1.3610, 0.0, 0.0, 0.0);
                }
                case 458:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5326, 0.0974, 0.7414, 0.0, 0.0, 0.0);
                }
                case 459:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5856, 0.6675, 1.1434, 0.0, 0.0, 0.0);
                }
                case 461:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.0056, -1.0960, 0.5283, 0.0, 0.0, 0.0);
                }
                case 462:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.0084, 0.4067, 0.6883, 0.0, 0.0, 0.0);
                }
                case 463:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.0178, 0.7080, 0.5273, 0.0, 0.0, 0.0);
                }
                case 466:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4467, 0.0155, 0.9103, 0.0, 0.0, 0.0);
                }
                case 467:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4467, 0.0155, 0.8703, 0.0, 0.0, 0.0);
                }
                case 468:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, 0.0357, 0.3913, 0.6643, 0.0, 0.0, 0.0);
                }
                case 470:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.7842, -0.0447, 1.1273, 0.0, 0.0, 0.0);
                }
                case 471:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.0080, 0.1867, 0.7233, 0.0, 0.0, 0.0);
                }
                case 474:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5898, -0.1819, 0.8233, 0.0, 0.0, 0.0);
                }
                case 475:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5898, -0.1819, 0.7433, 0.0, 0.0, 0.0);
                }
                case 477:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5110, -0.2192, 0.7633, 0.0, 0.0, 0.0);
                }
                case 478:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4810, 0.5532, 0.9233, 0.0, 0.0, 0.0);
                }
                case 479:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4669, -0.1329, 1.0033, 0.0, 0.0, 0.0);
                }
                case 480:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4701, -0.9806, 0.7173, 0.0, 0.0, 0.0);
                }
                case 482:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.3282, 0.6971, 0.9603, 0.0, 0.0, 0.0);
                }
                case 483:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.3503, 1.7129, 1.0599, 0.0, 0.0, 0.0);
                }
                case 485:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.1891, 0.9130, 0.7399, 0.0, 0.0, 0.0);
                }
                case 486:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4968, 0.1311, 2.2492, 0.0, 0.0, 0.0);
                }
                case 489:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6457, 0.0172, 1.1341, 0.0, 0.0, 0.0);
                }
                case 490:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5489, 0.4506, 1.1341, 0.0, 0.0, 0.0);
                }
                case 491:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4914, -0.3402, 0.7541, 0.0, 0.0, 0.0);
                }
                case 492:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4926, 0.0016, 0.9141, 0.0, 0.0, 0.0);
                }
                case 494:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4936, -0.3327, 0.7741, 0.0, 0.0, 0.0);
                }
                case 495:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6534, 0.0466, 1.0951, 0.0, 0.0, 0.0);
                }
                case 496:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5821, -0.2785, 0.8551, 0.0, 0.0, 0.0);
                }
                case 498:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.8779, 1.2311, 2.1814, 0.0, 0.0, 0.0);
                }
                case 499:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.9359, -0.0823, 1.9814, 0.0, 0.0, 0.0);
                }
                case 500:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5138, 0.1216, 0.9914, 0.0, 0.0, 0.0);
                }
                case 502:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4290, -0.0606, 0.8114, 0.0, 0.0, 0.0);
                }
                case 503:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4436, -0.2320, 0.8514, 0.0, 0.0, 0.0);
                }
                case 505:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6738, 0.0430, 1.1314, 0.0, 0.0, 0.0);
                }
                case 506:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5094, -0.3479, 0.6304, 0.0, 0.0, 0.0);
                }
                case 507:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4717, -0.1347, 0.8524, 0.0, 0.0, 0.0);
                }
                case 508:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -1.0030, 1.1855, 1.7215, 0.0, 0.0, 0.0);
                }
                case 514:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6450, 1.5226, 1.3704, 0.0, 0.0, 0.0);
                }
                case 515:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6450, 1.5226, 1.3304, 0.0, 0.0, 0.0);
                }
                case 516:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6219, 0.0517, 0.8603, 0.0, 0.0, 0.0);
                }
                case 517:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6219, 0.0517, 0.8403, 0.0, 0.0, 0.0);
                }
                case 518:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6219, 0.0517, 0.7203, 0.0, 0.0, 0.0);
                }
                case 521:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, 0.0026, -0.9083, 0.5753, 0.0, 0.0, 0.0);
                }
                case 522:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, 0.0026, -0.9083, 0.6353, 0.0, 0.0, 0.0);
                }
                case 523:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, 0.0026, -0.9083, 0.6953, 0.0, 0.0, 0.0);
                }
                case 524:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.8189, 1.5349, 0.9153, 0.0, 0.0, 0.0);
                }
                case 525:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5849, 0.4409, 1.4163, 0.0, 0.0, 0.0);
                }
                case 526:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5474, -0.0856, 0.6812, 0.0, 0.0, 0.0);
                }
                case 527:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4702, -0.0893, 0.9012, 0.0, 0.0, 0.0);
                }
                case 528:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5842, 0.2196, 1.1012, 0.0, 0.0, 0.0);
                }
                case 529:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5227, -0.1638, 0.9382, 0.0, 0.0, 0.0);
                }
                case 530:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4472, 0.1529, 1.5222, 0.0, 0.0, 0.0);
                }
                case 533:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.7750, 1.0846, 0.3748, 0.0, 0.0, 0.0);
                }
                case 534:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5241, 0.2835, 0.6778, 0.0, 0.0, 0.0);
                }
                case 535:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6577, 0.2718, 0.8378, 0.0, 0.0, 0.0);
                }
                case 536:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.8394, 1.1995, 0.2487, 0.0, 0.0, 0.0);
                }
                case 540:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5288, 0.1756, 0.7327, 0.0, 0.0, 0.0);
                }
                case 541:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4786, 0.0404, 0.6527, 0.0, 0.0, 0.0);
                }
                case 542:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4832, 0.0209, 0.8527, 0.0, 0.0, 0.0);
                }
                case 543:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6476, 0.3682, 0.9327, 0.0, 0.0, 0.0);
                }
                case 545:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4056, -0.1463, 0.7927, 0.0, 0.0, 0.0);
                }
                case 546:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4056, -0.1463, 0.8727, 0.0, 0.0, 0.0);
                }
                case 547:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4056, -0.1463, 0.9327, 0.0, 0.0, 0.0);
                }
                case 549:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5082, 0.2406, 0.7727, 0.0, 0.0, 0.0);
                }
                case 550:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5080, 0.1176, 0.7327, 0.0, 0.0, 0.0);
                }
                case 551:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4076, -0.1853, 0.9327, 0.0, 0.0, 0.0);
                }
                case 552:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.7122, 0.9196, 1.3557, 0.0, 0.0, 0.0);
                }
                case 554:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.7110, 0.1214, 1.0557, 0.0, 0.0, 0.0);
                }
                case 555:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.3050, 0.1220, 0.6507, 0.0, 0.0, 0.0);
                }
                case 556:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5851, 0.2216, 1.6916, 0.0, 0.0, 0.0);
                }
                case 557:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5848, 0.0206, 1.6916, 0.0, 0.0, 0.0);
                }
                case 558:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4845, -0.1823, 0.8934, 0.0, 0.0, 0.0);
                }
                case 559:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4845, -0.1823, 0.7534, 0.0, 0.0, 0.0);
                }
                case 560:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4851, 0.2187, 0.8734, 0.0, 0.0, 0.0);
                }
                case 561:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4649, 0.0587, 0.8534, 0.0, 0.0, 0.0);
                }
                case 562:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4247, -0.0812, 0.8134, 0.0, 0.0, 0.0);
                }
                case 565:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4644, -0.0952, 0.7324, 0.0, 0.0, 0.0);
                }
                case 566:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6046, 0.0646, 0.8724, 0.0, 0.0, 0.0);
                }
                case 567:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.8701, 1.7224, 0.1993, 0.0, 0.0, 0.0);
                }
                case 568:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, 0.2746, 0.1421, 0.7593, 0.0, 0.0, 0.0);
                }
                case 573:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6781, 2.2043, 1.5484, 0.0, 0.0, 0.0);
                }
                case 574:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.0000, 0.6507, 1.2844, 0.0, 0.0, 0.0);
                }
                case 575:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.7301, 1.1772, 0.5374, 0.0, 0.0, 0.0);
                }
                case 578:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.8932, 3.1397, 1.4214, 0.0, 0.0, 0.0);
                }
                case 579:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5579, 0.0036, 1.2604, 0.0, 0.0, 0.0);
                }
                case 580:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6475, 0.1824, 1.0804, 0.0, 0.0, 0.0);
                }
                case 581:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.0152, -0.9385, 0.5784, 0.0, 0.0, 0.0);
                }
                case 582:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.6088, 0.9868, 1.1824, 0.0, 0.0, 0.0);
                }
                case 583:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.3747, -0.4229, 1.6024, 0.0, 0.0, 0.0);
                }
                case 585:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5207, -0.0115, 1.0374, 0.0, 0.0, 0.0);
                }
                case 586:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.0176, -1.2010, 0.6544, 0.0, 0.0, 0.0);
                }
                case 587:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.4892, -0.4590, 0.7944, 0.0, 0.0, 0.0);
                }
                case 589:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5847, 0.0632, 1.0954, 0.0, 0.0, 0.0);
                }
                case 602:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5579, -0.1570, 0.7124, 0.0, 0.0, 0.0);
                }
                case 603:
                {
                        objecta[vehicleid] = CreateObject(18646, 0.00, 0.00, 0.00,   0.00, 0.00, 0.00); attas[vehicleid] = 1;
                        AttachObjectToVehicle(objecta[vehicleid], vehicleid, -0.5579, -0.1570, 0.6924, 0.0, 0.0, 0.0);
                }
        		default:
                {
                        SendClientMessage(playerid, 0xFFFFFFFF, "Aceast vehicul nu poate avea sirena!");
                }
        }
        return 1;
}

stock DesAttachSirena(vehicleid)
{
    attas[vehicleid] = 0;
	DestroyObject(objecta[vehicleid]);
    return 1;
}

stock islegalcarmod(vehicleide, componentid) {

	new modok = false;
	if ( (iswheelmodel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010)))
	{
		new nosblocker = IllegalCarNitroIde(vehicleide);
		if (!nosblocker)
		modok = true;
	}
	else
	{
	    for(new I;I<sizeof(legalmods);I++)
		{
			if (legalmods[I][0] == vehicleide)
			{ // first is car IDE
				for(new J = 1; J < 22; J++)
				{ // start with 1
					if (legalmods[I][J] == componentid)
					modok = true;
				}
			}
		}
	}
	return modok;
}

GetClosestPlayer(playerid)
{
	new Float:dis,Float:dis2,player;
	new pteam[MAX_PLAYERS];
	player = -1;
	dis = 99999.99;
	foreach(Player,xzczxc)
	{
		if (xzczxc != playerid)
		{
			dis2 = GetDistanceBetweenPlayers(xzczxc,playerid);
			if (dis2 < dis && dis2 != -1.00 && pteam[xzczxc] == pteam[playerid])
			{
				dis = dis2;
				player = xzczxc;
			}
		}
	}
	return player;
}
GetDistanceBetweenPlayers(playerid,playerid2) //By Slick (Edited by Sacky)
{
	new Float:xasd1,Float:yasd1,Float:zdsa1,Float:xsssss2,Float:ysssss2,Float:zssss2;
	new Float:tmpdis;
	GetPlayerPos(playerid,xasd1,yasd1,zdsa1);
	GetPlayerPos(playerid2,xsssss2,ysssss2,zssss2);
	tmpdis = floatsqroot(floatpower(floatabs(floatsub(xsssss2,xasd1)),2)+floatpower(floatabs(floatsub(ysssss2,yasd1)),2)+floatpower(floatabs(floatsub(zssss2,zdsa1)),2));
	return floatround(tmpdis);
}

/*
artificii lumini
// 18728fum rosu in sus
//18724//explozie stelara
//19295 alb
//19296 rosu
//19297 verde
//19298 albastru
*/

/*   	SetPlayerAttachedObject(playerid, 1, 19036, 2, 0, -90.0, 0.0, 0,0, 0, 1, 1, 1, 0xFF00FF00);


 // slot 1 deagle pistol glock
 // slot 5 m4a1 ak47
  // slot 2 tec9 mp5 uzzy

joburi

Detectiv 1
Avocat 2
Bodyguard 3
Paramedic 4
Sweeper 5
Boxeur 6
Mecanic 7
Transportator 8
Paper Boy 9
Pizza boy 10
Fermier 11
Taietor de iarba 12
Pompier 13
Barvcgiu 14
Lumberjack 15
Sofer de autobuz 16
Vanzator 17
Fuel Delivery 18
Gas Collector 19
Pescar 20
Petrol Delivery 21
Garbage 22
DumperMan23
Trucker29



Tarfa\n2. 24
Dealer de droguri\n3. 25
Spargator de masini\n4. 26
Fermier de droguri\n5. 27
Dealer de arme 28


//functii nefolosite

TeleportPlayerToObject(playerid, objectid, Float: distance)
{
    new Float: pX,Float: pY,Float: pZ;
 	GetPlayerPos(playerid, pX, pY, pZ);

        new Float: oX,Float: oY,Float: oZ;
 		GetObjectPos(objectid, oX, oY, oZ);

            pX -= oX;
            pY -= oY;
            pZ -= oZ;
            distance /= VectorSize(pX, pY, pZ);
            SetPlayerPos(playerid,pX+1, pY+1, pZ);
            return SetPlayerPos(playerid, oX + pX * distance, oY + pY * distance,oZ);


    return false;
}




GetClosestCar(playerid) /
{
	if (!IsPlayerConnected(playerid)) {
	    return -1;
	}
	new Float:prevdist = 100000.000;
	new prevcar;
	for (new carid = 0; carid < MAX_VEHICLES; carid++) {
                 new Float:dist = GetDistanceToCar(playerid,carid);
	    if ((dist < prevdist)) {
	         prevdist = dist;
	         prevcar = carid;
                 }
	}
	return prevcar;
}



*/
